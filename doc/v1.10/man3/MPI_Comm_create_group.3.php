<?php
$topdir = "../../..";
$title = "MPI_Comm_create_group(3) man page (version 1.10.1)";
$meta_desc = "Open MPI v1.10.1 man page: MPI_COMM_CREATE_GROUP(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
      <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<b>MPI_Comm_create_group</b> - Creates a new communicator.
<p>
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h2><a name='sect2' href='#toc2'>C Syntax</a></h2>
<br>
<pre>#include &lt;mpi.h&gt;
int MPI_Comm_create_group(MPI_Comm comm, MPI_Group group, int tag, MPI_Comm
*newcomm)
</pre>
<h2><a name='sect3' href='#toc3'>Fortran Syntax</a></h2>
<br>
<pre>INCLUDE &rsquo;mpif.h&rsquo;
MPI_COMM_CREATE_GROUP(COMM, GROUP, TAG, NEWCOMM, IERROR)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER<tt> </tt>&nbsp;<tt> </tt>&nbsp;COMM, GROUP, TAG, NEWCOMM, IERROR
</pre>
<h2><a name='sect4' href='#toc4'>Input Parameters</a></h2>

<dl>

<dt>comm </dt>
<dd>Communicator (handle). </dd>

<dt>group </dt>
<dd>Group, which is a subset
of the group of comm (handle). </dd>

<dt>tag </dt>
<dd>Tag (integer).
<p> </dd>
</dl>

<h2><a name='sect5' href='#toc5'>Output Parameters</a></h2>

<dl>

<dt>newcomm
</dt>
<dd>New communicator (handle). </dd>

<dt>IERROR </dt>
<dd>Fortran only: Error status (integer).
<p>
</dd>
</dl>

<h2><a name='sect6' href='#toc6'>Description</a></h2>
MPI_Comm_create_group is similar to <a href="../man3/MPI_Comm_create.3.php">MPI_Comm_create</a>; however,
<a href="../man3/MPI_Comm_create.3.php">MPI_Comm_create</a> must be called by all processes in the group of comm, whereas
MPI_Comm_create_group must be called by all processes in group, which is
a subgroup of the group of <i>comm</i>. In addition, MPI_Comm_create_group requires
that <i>comm</i> is an intracommunicator. MPI_Comm_create_group returns a new intracommunicator,
<i>newcomm</i>, for which the group argument defines the communication group. No
cached information propagates from <i>comm</i> to <i>newcomm</i>.
<p> Each process must provide
a group argument that is a subgroup of the group associated with <i>comm</i>;
this could be MPI_GROUP_EMPTY. If a non-empty group is specified, then all
processes in that group must call the function, and each of these processes
must provide the same arguments, including a group that contains the same
members with the same ordering. Otherwise the call is erroneous. If the calling
process is a member of the group given as the <i>group</i> argument, then newcomm
is a communicator with group as its associated group. If the calling process
is not a member of group, e.g., <i>group</i> is MPI_GROUP_EMPTY, then the call is
a local operation and MPI_COMM_NULL is returned as <i>newcomm</i>.
<p> <p>
<p>

<p>
<h2><a name='sect7' href='#toc7'>Notes</a></h2>
MPI_Comm_create_group
provides a means of making a subset of processes for the purpose of separate
MIMD computation, with separate communication space. <i>newcomm</i>, which is created
by MPI_Comm_create_group, can be used in subsequent calls to MPI_Comm_create_group
(or other communicator constructors) to further subdivide a computation
into parallel sub-computations. A more general service is provided by <a href="../man3/MPI_Comm_split.3.php">MPI_Comm_split</a>.

<p>
<h2><a name='sect8' href='#toc8'>Errors</a></h2>
Almost all MPI routines return an error value; C routines as the
value of the function and Fortran routines in the last argument. <p>
Before
the error value is returned, the current MPI error handler is called. By
default, this error handler aborts the MPI job, except for I/O function
errors. The error handler may be changed with <a href="../man3/MPI_Comm_set_errhandler.3.php">MPI_Comm_set_errhandler</a>; the
predefined error handler MPI_ERRORS_RETURN may be used to cause error values
to be returned. Note that MPI does not guarantee that an MPI program can
continue past an error.
<p>
<h2><a name='sect9' href='#toc9'>See Also</a></h2>
<a href="../man3/MPI_Comm_create.3.php">MPI_Comm_create</a>
<p> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>Input Parameters</a></li>
<li><a name='toc5' href='#sect5'>Output Parameters</a></li>
<li><a name='toc6' href='#sect6'>Description</a></li>
<li><a name='toc7' href='#sect7'>Notes</a></li>
<li><a name='toc8' href='#sect8'>Errors</a></li>
<li><a name='toc9' href='#sect9'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
