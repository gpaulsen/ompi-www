<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";
include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.8.9.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="annotated.php"><span>Data&#160;Structures</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Components and Plugins: Discovery backends</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.php">hwloc_backend</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga21513209613570877b6bfa9898106f2a"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00101.php#ga21513209613570877b6bfa9898106f2a">hwloc_backend_flag_e</a> { <a class="el" href="a00101.php#gga21513209613570877b6bfa9898106f2aadc96f2cf3bdd5d41e102dfa1e1976b24">HWLOC_BACKEND_FLAG_NEED_LEVELS</a>
 }</td></tr>
<tr class="separator:ga21513209613570877b6bfa9898106f2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga330a0b581de4817d0cf1e7401db22436"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="a00031.php">hwloc_backend</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00101.php#ga330a0b581de4817d0cf1e7401db22436">hwloc_backend_alloc</a> (struct <a class="el" href="a00035.php">hwloc_disc_component</a> *component)</td></tr>
<tr class="separator:ga330a0b581de4817d0cf1e7401db22436"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa4edf46c5d88eef53b3b8f572d88b9c5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00101.php#gaa4edf46c5d88eef53b3b8f572d88b9c5">hwloc_backend_enable</a> (struct hwloc_topology *topology, struct <a class="el" href="a00031.php">hwloc_backend</a> *backend)</td></tr>
<tr class="separator:gaa4edf46c5d88eef53b3b8f572d88b9c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga505a5470745bf0b601f4d25a69601411"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00101.php#ga505a5470745bf0b601f4d25a69601411">hwloc_backends_get_obj_cpuset</a> (struct <a class="el" href="a00031.php">hwloc_backend</a> *caller, struct <a class="el" href="a00038.php">hwloc_obj</a> *obj, <a class="el" href="a00098.php#gaa3c2bf4c776d603dcebbb61b0c923d84">hwloc_bitmap_t</a> cpuset)</td></tr>
<tr class="separator:ga505a5470745bf0b601f4d25a69601411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8ac8bba9ab6b9af423baba0c8337c6b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00101.php#gad8ac8bba9ab6b9af423baba0c8337c6b">hwloc_backends_notify_new_object</a> (struct <a class="el" href="a00031.php">hwloc_backend</a> *caller, struct <a class="el" href="a00038.php">hwloc_obj</a> *obj)</td></tr>
<tr class="separator:gad8ac8bba9ab6b9af423baba0c8337c6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="ga21513209613570877b6bfa9898106f2a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00101.php#ga21513209613570877b6bfa9898106f2a">hwloc_backend_flag_e</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Backend flags. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="gga21513209613570877b6bfa9898106f2aadc96f2cf3bdd5d41e102dfa1e1976b24"></a>HWLOC_BACKEND_FLAG_NEED_LEVELS&#160;</td><td class="fielddoc">
<p>Levels should be reconnected before this backend discover() is used. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga330a0b581de4817d0cf1e7401db22436"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="a00031.php">hwloc_backend</a>* hwloc_backend_alloc </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="a00035.php">hwloc_disc_component</a> *&#160;</td>
          <td class="paramname"><em>component</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate a backend structure, set good default values, initialize backend-&gt;component and topology, etc. The caller will then modify whatever needed, and call <a class="el" href="a00101.php#gaa4edf46c5d88eef53b3b8f572d88b9c5" title="Enable a previously allocated and setup backend. ">hwloc_backend_enable()</a>. </p>

</div>
</div>
<a class="anchor" id="gaa4edf46c5d88eef53b3b8f572d88b9c5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_backend_enable </td>
          <td>(</td>
          <td class="paramtype">struct hwloc_topology *&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="a00031.php">hwloc_backend</a> *&#160;</td>
          <td class="paramname"><em>backend</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable a previously allocated and setup backend. </p>

</div>
</div>
<a class="anchor" id="ga505a5470745bf0b601f4d25a69601411"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_backends_get_obj_cpuset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="a00031.php">hwloc_backend</a> *&#160;</td>
          <td class="paramname"><em>caller</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="a00038.php">hwloc_obj</a> *&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00098.php#gaa3c2bf4c776d603dcebbb61b0c923d84">hwloc_bitmap_t</a>&#160;</td>
          <td class="paramname"><em>cpuset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Used by backends discovery callbacks to request locality information from others. </p>
<p>Traverse the list of enabled backends until one has a get_obj_cpuset() method, and call it. </p>

</div>
</div>
<a class="anchor" id="gad8ac8bba9ab6b9af423baba0c8337c6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_backends_notify_new_object </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="a00031.php">hwloc_backend</a> *&#160;</td>
          <td class="paramname"><em>caller</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="a00038.php">hwloc_obj</a> *&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Used by backends discovery callbacks to notify other backends of new objects. </p>
<p>Traverse the list of enabled backends (all but caller) and invoke their notify_new_object() method to notify them that a new object just got added to the topology.</p>
<p>Currently only used for notifying of new PCI device objects. </p>

</div>
</div>
</div><!-- contents -->
<?php
include_once("$topdir/includes/footer.inc");
