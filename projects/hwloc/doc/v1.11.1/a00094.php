<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";
include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.8.9.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="annotated.php"><span>Data&#160;Structures</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">CPU and node sets of entire topologies</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga69fbad44c685e46d80ecf51a714ba9ce"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00075.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00094.php#ga69fbad44c685e46d80ecf51a714ba9ce">hwloc_topology_get_complete_cpuset</a> (<a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr class="separator:ga69fbad44c685e46d80ecf51a714ba9ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5c3ddcb2d19bc0b58042c9fc974f0fa5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00075.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00094.php#ga5c3ddcb2d19bc0b58042c9fc974f0fa5">hwloc_topology_get_topology_cpuset</a> (<a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr class="separator:ga5c3ddcb2d19bc0b58042c9fc974f0fa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacec35bb7656c1944c514044ca4ce9c6f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00075.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00094.php#gacec35bb7656c1944c514044ca4ce9c6f">hwloc_topology_get_online_cpuset</a> (<a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr class="separator:gacec35bb7656c1944c514044ca4ce9c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8cb598b3bce8d67cbdfc1f29caad28f6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00075.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00094.php#ga8cb598b3bce8d67cbdfc1f29caad28f6">hwloc_topology_get_allowed_cpuset</a> (<a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr class="separator:ga8cb598b3bce8d67cbdfc1f29caad28f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22002d6fc14a25a3947c42cba0a70134"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00075.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00094.php#ga22002d6fc14a25a3947c42cba0a70134">hwloc_topology_get_complete_nodeset</a> (<a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr class="separator:ga22002d6fc14a25a3947c42cba0a70134"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f1cb5bc87dabb252b691c5c15555d21"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00075.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00094.php#ga2f1cb5bc87dabb252b691c5c15555d21">hwloc_topology_get_topology_nodeset</a> (<a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr class="separator:ga2f1cb5bc87dabb252b691c5c15555d21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga706182498ac92528e274e9b8d944273d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00075.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00094.php#ga706182498ac92528e274e9b8d944273d">hwloc_topology_get_allowed_nodeset</a> (<a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr class="separator:ga706182498ac92528e274e9b8d944273d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga8cb598b3bce8d67cbdfc1f29caad28f6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00075.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> hwloc_topology_get_allowed_cpuset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get allowed CPU set. </p>
<dl class="section return"><dt>Returns</dt><dd>the CPU set of allowed logical processors of the system. If the topology is the result of a combination of several systems, NULL is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The returned cpuset is not newly allocated and should thus not be changed or freed, <a class="el" href="a00098.php#gae679434c1a5f41d3560a8a7e2c1b0dee" title="Duplicate bitmap bitmap by allocating a new bitmap and copying bitmap contents. ">hwloc_bitmap_dup()</a> must be used to obtain a local copy. </dd></dl>

</div>
</div>
<a class="anchor" id="ga706182498ac92528e274e9b8d944273d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00075.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> hwloc_topology_get_allowed_nodeset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get allowed node set. </p>
<dl class="section return"><dt>Returns</dt><dd>the node set of allowed memory of the system. If the topology is the result of a combination of several systems, NULL is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The returned nodeset is not newly allocated and should thus not be changed or freed, <a class="el" href="a00098.php#gae679434c1a5f41d3560a8a7e2c1b0dee" title="Duplicate bitmap bitmap by allocating a new bitmap and copying bitmap contents. ">hwloc_bitmap_dup()</a> must be used to obtain a local copy. </dd></dl>

</div>
</div>
<a class="anchor" id="ga69fbad44c685e46d80ecf51a714ba9ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00075.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> hwloc_topology_get_complete_cpuset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get complete CPU set. </p>
<dl class="section return"><dt>Returns</dt><dd>the complete CPU set of logical processors of the system. If the topology is the result of a combination of several systems, NULL is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The returned cpuset is not newly allocated and should thus not be changed or freed; <a class="el" href="a00098.php#gae679434c1a5f41d3560a8a7e2c1b0dee" title="Duplicate bitmap bitmap by allocating a new bitmap and copying bitmap contents. ">hwloc_bitmap_dup()</a> must be used to obtain a local copy. </dd></dl>

</div>
</div>
<a class="anchor" id="ga22002d6fc14a25a3947c42cba0a70134"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00075.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> hwloc_topology_get_complete_nodeset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get complete node set. </p>
<dl class="section return"><dt>Returns</dt><dd>the complete node set of memory of the system. If the topology is the result of a combination of several systems, NULL is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The returned nodeset is not newly allocated and should thus not be changed or freed; <a class="el" href="a00098.php#gae679434c1a5f41d3560a8a7e2c1b0dee" title="Duplicate bitmap bitmap by allocating a new bitmap and copying bitmap contents. ">hwloc_bitmap_dup()</a> must be used to obtain a local copy. </dd></dl>

</div>
</div>
<a class="anchor" id="gacec35bb7656c1944c514044ca4ce9c6f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00075.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> hwloc_topology_get_online_cpuset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get online CPU set. </p>
<dl class="section return"><dt>Returns</dt><dd>the CPU set of online logical processors of the system. If the topology is the result of a combination of several systems, NULL is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The returned cpuset is not newly allocated and should thus not be changed or freed; <a class="el" href="a00098.php#gae679434c1a5f41d3560a8a7e2c1b0dee" title="Duplicate bitmap bitmap by allocating a new bitmap and copying bitmap contents. ">hwloc_bitmap_dup()</a> must be used to obtain a local copy. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5c3ddcb2d19bc0b58042c9fc974f0fa5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00075.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> hwloc_topology_get_topology_cpuset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get topology CPU set. </p>
<dl class="section return"><dt>Returns</dt><dd>the CPU set of logical processors of the system for which hwloc provides topology information. This is equivalent to the cpuset of the system object. If the topology is the result of a combination of several systems, NULL is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The returned cpuset is not newly allocated and should thus not be changed or freed; <a class="el" href="a00098.php#gae679434c1a5f41d3560a8a7e2c1b0dee" title="Duplicate bitmap bitmap by allocating a new bitmap and copying bitmap contents. ">hwloc_bitmap_dup()</a> must be used to obtain a local copy. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2f1cb5bc87dabb252b691c5c15555d21"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00075.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> hwloc_topology_get_topology_nodeset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00078.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get topology node set. </p>
<dl class="section return"><dt>Returns</dt><dd>the node set of memory of the system for which hwloc provides topology information. This is equivalent to the nodeset of the system object. If the topology is the result of a combination of several systems, NULL is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The returned nodeset is not newly allocated and should thus not be changed or freed; <a class="el" href="a00098.php#gae679434c1a5f41d3560a8a7e2c1b0dee" title="Duplicate bitmap bitmap by allocating a new bitmap and copying bitmap contents. ">hwloc_bitmap_dup()</a> must be used to obtain a local copy. </dd></dl>

</div>
</div>
</div><!-- contents -->
<?php
include_once("$topdir/includes/footer.inc");
