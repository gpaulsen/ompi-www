<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";
include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Components and Plugins: finding PCI objects during other discoveries</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaca16b7b2b5f49661f6325fb976587053"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="a00199.php">hwloc_obj</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00194.php#gaca16b7b2b5f49661f6325fb976587053">hwloc_pcidisc_find_by_busid</a> (struct hwloc_topology *topology, unsigned domain, unsigned bus, unsigned dev, unsigned func)</td></tr>
<tr class="separator:gaca16b7b2b5f49661f6325fb976587053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae7bdb4e2edf12e206191c7e95b2fce4a"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="a00199.php">hwloc_obj</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00194.php#gae7bdb4e2edf12e206191c7e95b2fce4a">hwloc_pcidisc_find_busid_parent</a> (struct hwloc_topology *topology, unsigned domain, unsigned bus, unsigned dev, unsigned func)</td></tr>
<tr class="separator:gae7bdb4e2edf12e206191c7e95b2fce4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a id="gae7bdb4e2edf12e206191c7e95b2fce4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae7bdb4e2edf12e206191c7e95b2fce4a">&#9670;&nbsp;</a></span>hwloc_pcidisc_find_busid_parent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="a00199.php">hwloc_obj</a>* hwloc_pcidisc_find_busid_parent </td>
          <td>(</td>
          <td class="paramtype">struct hwloc_topology *&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>domain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bus</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>dev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Find the normal parent of a PCI bus ID. </p>
<p>Look at PCI affinity to find out where the given PCI bus ID should be attached.</p>
<p>This function should be used to attach an I/O device directly under a normal (non-I/O) object, instead of below a PCI object. It is usually used by backends when <a class="el" href="a00194.php#gaca16b7b2b5f49661f6325fb976587053" title="Find the PCI object that matches the bus ID. ">hwloc_pcidisc_find_by_busid()</a> failed to find the hwloc object corresponding to this bus ID, for instance because PCI discovery is not supported on this platform. </p>

</div>
</div>
<a id="gaca16b7b2b5f49661f6325fb976587053"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaca16b7b2b5f49661f6325fb976587053">&#9670;&nbsp;</a></span>hwloc_pcidisc_find_by_busid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="a00199.php">hwloc_obj</a>* hwloc_pcidisc_find_by_busid </td>
          <td>(</td>
          <td class="paramtype">struct hwloc_topology *&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>domain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bus</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>dev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Find the PCI object that matches the bus ID. </p>
<p>To be used after a PCI backend added PCI devices with <a class="el" href="a00193.php#gabda1d6c1799e50b9226f8a4da9bd29ea" title="Add some hostbridges on top of the given tree of PCI objects and attach them to the topology...">hwloc_pcidisc_tree_attach()</a> and before the core moves them to their actual location with hwloc_pci_belowroot_apply_locality().</p>
<p>If no exactly matching object is found, return the container bridge if any, or NULL.</p>
<p>On failure, it may be possible to find the PCI locality (instead of the PCI device) by calling <a class="el" href="a00194.php#gae7bdb4e2edf12e206191c7e95b2fce4a" title="Find the normal parent of a PCI bus ID. ">hwloc_pcidisc_find_busid_parent()</a>.</p>
<dl class="section note"><dt>Note</dt><dd>This is semantically identical to <a class="el" href="a00168.php#gacdbaf0db98872e224b7883a84bfb0455" title="Find the PCI device object matching the PCI bus id given domain, bus device and function PCI bus id...">hwloc_get_pcidev_by_busid()</a> which only works after the topology is fully loaded. </dd></dl>

</div>
</div>
</div><!-- contents -->
<?php
include_once("$topdir/includes/footer.inc");
