<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";
include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Hardware Locality </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><h1 class="sub">Portable abstraction of parallel architectures for high-performance computing</h1>
<hr/>
<p> 
<div class="section" id="common_introduction">
 </p>
<h1><a class="anchor" id="common_introduction"></a>
Introduction</h1>
<p>The Hardware Locality (hwloc) software project aims at easing the process of discovering hardware resources in parallel architectures. It offers command-line tools and a C API for consulting these resources, their locality, attributes, and interconnection. hwloc primarily aims at helping high-performance computing (HPC) applications, but is also applicable to any project seeking to exploit code and/or data locality on modern computing platforms.</p>
<p>hwloc is actually made of two subprojects distributed together: </p><ul>
<li>
The original hwloc project for describing the internals of computing nodes. It is described in details between sections <a class="el" href="a00312.php">Hardware Locality (hwloc) Introduction</a> and <a class="el" href="a00328.php">Network Locality (netloc)</a>.  </li>
<li>
<p class="startli">The network-oriented companion called netloc (Network Locality), described in details starting at section <a class="el" href="a00328.php">Network Locality (netloc)</a>. Netloc may be disabled, but the original hwloc cannot.  Both hwloc and netloc APIs are documented after these sections.</p>
<p class="endli"> 
</div><div class="section" id="common_installation">
 </p>
</li>
</ul>
<h1><a class="anchor" id="common_installation"></a>
Installation</h1>
<p>hwloc (<a href="http://www.open-mpi.org/projects/hwloc/">http://www.open-mpi.org/projects/hwloc/</a>) is available under the BSD license. It is hosted as a sub-project of the overall Open MPI project (<a href="http://www.open-mpi.org/">http://www.open-mpi.org/</a>). Note that hwloc does not require any functionality from Open MPI &ndash; it is a wholly separate (and much smaller!) project and code base. It just happens to be hosted as part of the overall Open MPI project.</p>
<p>Nightly development snapshots are available on the web site. Additionally, the code can be directly cloned from Git:</p>
<pre class="fragment">shell$ git clone https://github.com/open-mpi/hwloc.git
shell$ cd hwloc
shell$ ./autogen.sh
</pre><p>Note that GNU Autoconf &gt;=2.63, Automake &gt;=1.11 and Libtool &gt;=2.2.6 are required when building from a Git clone.</p>
<p>Installation by itself is the fairly common GNU-based process:</p>
<pre class="fragment">shell$ ./configure --prefix=...
shell$ make
shell$ make install
</pre><p>hwloc- and netloc-specific configure options and requirements are documented in sections <a class="el" href="a00312.php#hwloc_installation">hwloc Installation</a> and <a class="el" href="a00328.php#netloc_installation">Netloc Installation</a> respectively.</p>
<p>Also note that if you install supplemental libraries in non-standard locations, hwloc's configure script may not be able to find them without some help. You may need to specify additional CPPFLAGS, LDFLAGS, or PKG_CONFIG_PATH values on the configure command line.</p>
<p>For example, if libpciaccess was installed into /opt/pciaccess, hwloc's configure script may not find it be default. Try adding PKG_CONFIG_PATH to the ./configure command line, like this:</p>
<pre class="fragment">./configure PKG_CONFIG_PATH=/opt/pciaccess/lib/pkgconfig ...
</pre><p>Running the "lstopo" tool is a good way to check as a graphical output whether hwloc properly detected the architecture of your node. Netloc command-line tools can be used to display the network topology interconnecting your nodes. </p>
</div></div><!-- contents -->
<?php
include_once("$topdir/includes/footer.inc");
