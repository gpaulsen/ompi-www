<div dir="ltr">On Thu, Feb 4, 2016 at 12:28 PM, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>&gt;<br>&gt; On Feb 4, 2016, at 12:02 PM, Brian Taylor &lt;<a href="mailto:spam.brian.taylor@gmail.com">spam.brian.taylor@gmail.com</a>&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; I have a question about the standards compliance of OpenMPI.  Is the following program valid according to the MPI standard?<br>&gt; &gt;<br>&gt; &gt; #include &lt;stdio.h&gt;<br>&gt; &gt; #include &lt;mpi.h&gt;<br>&gt; &gt;<br>&gt; &gt; int main(int argc, char **argv)<br>&gt; &gt; {<br>&gt; &gt;   int rank;<br>&gt; &gt;   double in[2], out[2];<br>&gt; &gt;<br>&gt; &gt;   MPI_Init(&amp;argc, &amp;argv);<br>&gt; &gt;   MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);<br>&gt; &gt;<br>&gt; &gt;   in[1] = in[0] = (double) rank;<br>&gt; &gt;<br>&gt; &gt;   MPI_Reduce(in, out, 1, MPI_2DOUBLE_PRECISION, MPI_MAXLOC, 0, MPI_COMM_WORLD);<br>&gt;<br>&gt; Technically, this isn&#39;t correct.<br>&gt;<br>&gt; The MPI_2DOUBLE_PRECISION type is for Fortran data, not C data.  And there is no guarantee that the size and representation of C &quot;double&quot; is equivalent to that of Fortran &quot;double precision&quot;.  So while it may work in some cases, it may not work in all cases.<br>&gt;<br>&gt; Sidenote: the reason that you can use MPI_2DOUBLE_PRECISION (and there&#39;s no corresponding MPI_2DOUBLE for C datatypes) with MINLOC/MAXLOC is because until &quot;recently&quot;, you couldn&#39;t easily have a fortran equivalent of<br>&gt;<br>&gt; struct {<br>&gt;     double a;<br>&gt;     int b;<br>&gt; };<br>&gt;<br>&gt; Instead, all you could do was pass in arrays that were homogeneous in type -- e.g., a pair of doubles, or a pair of integers, or reals.  Since half the output of MINLOC/MAXLOC is to give an (integer) array index, in C, it makes sense to have that value actually be of type &quot;int&quot;.  But in Fortran, it was simple to just have a pair of homogeneous types (integer, real, double).<br>&gt;<br>&gt; This is not true in modern fortran, however.  FWIW, tere&#39;s a low-priority proposal cooking in the MPI Forum to add Fortran equivalents for the C MPI_FLOAT_INT, MPI_DOUBLE_INT, MPI_LONG_INT, ...etc. types for MINLOC/MAXLOC.<br>&gt;<br>&gt; &gt;   if (rank == 0) printf(&quot;out = %f %f\n&quot;, out[0], out[1]);<br>&gt; &gt;<br>&gt; &gt;   MPI_Finalize();<br>&gt; &gt;<br>&gt; &gt;   return 0;<br>&gt; &gt; }<br>&gt; &gt;<br>&gt; &gt; Specifically, I am wondering if MPI_2DOUBLE_PRECISION can be used with MPI_MAXLOC (or MPI_MINLOC) in a C program.  MPI_2DOUBLE_PRECISION is not included in the list of datatypes for reduction functions in C in Appendix A.1 of the MPI 3.1 standard, although it is included in the list of reduction functions for Fortran.  What exactly does that mean?<br>&gt; &gt;<br>&gt; &gt; The program above runs with OpenMPI 1.10.2 and gives the output one would expect for an equivalent program written in Fortran.  Can I rely on this being portable to other MPI implementations?<br>&gt; &gt;<br>&gt; &gt; Thanks,<br>&gt; &gt; Brian<br>&gt; &gt; _______________________________________________<br>&gt; &gt; users mailing list<br>&gt; &gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt; &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt; &gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28448.php">http://www.open-mpi.org/community/lists/users/2016/02/28448.php</a><br>&gt;<br>&gt;<br>&gt; --<br>&gt; Jeff Squyres<br>&gt; <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>&gt; For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>&gt;<br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28449.php">http://www.open-mpi.org/community/lists/users/2016/02/28449.php</a><br><br><br>Thanks for the explanation, Jeff.  I&#39;m not surprised to hear that using a Fortran type from C in this manner is potentially buggy and not portable.  However, assuming that the C and Fortran types are interoperable, is there any guarantee that the call to MPI_Reduce in the program above will execute successfully?<br><br>If OpenMPI 1.10.2 is built with Fortran support, the program above runs and gives the expected output.  If OpenMPI 1.10.2 is built without Fortran support, the program exits with the following error:<br><br>taylor@host $ mpirun -np 1 ./bug<br>[host:49234] *** An error occurred in MPI_Reduce: the reduction operation MPI_MAXLOC is not defined on the MPI_2DBLPREC datatype<br>[host:49234] *** reported by process [3133079553,0]<br>[host:49234] *** on communicator MPI_COMM_WORLD<br>[host:49234] *** MPI_ERR_OP: invalid reduce operation<br>[host:49234] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,<br>[host:49234] ***    and potentially your MPI job)<div><br></div><div>It seems that the MPI_MAXLOC operator for MPI_2DOUBLE_PRECISION is not available if OpenMPI is built without Fortran support; thus, the call to MPI_Reduce fails.  Is this the expected behavior?  Is the MPI_MAXLOC operator for MPI_2DOUBLE_PRECISION required to be available from C for compliance with the MPI standard, or is its availability from C in OpenMPI (when built with Fortran support) an implementation-dependent &quot;extension&quot;?</div><div><br></div><div>Thanks,</div><div>Brian</div><div><br></div></div>

