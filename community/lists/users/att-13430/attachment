Dear E. Loh.<br><b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);"></span></b><br><div class="gmail_quote"><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<div bgcolor="#ffffff" text="#000000"><br>
<br>
Another is whether you can overlap communications and computation. 
This does not require persistent channels, but only nonblocking
communications (MPI_Isend/MPI_Irecv).  Again, there are no MPI
guarantees here, so you may have to break your computation up and
insert MPI_Test calls.<br>
<br>
You may want to get the basic functionality working first and then run
performance experiments to decide whether these really are areas that
warrant such optimizations.<br></div></blockquote></div><br><b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);">         CALL MPI_STARTALL</span><br style="color: rgb(255, 0, 0);">
  <span style="color: rgb(255, 0, 0);"></span><span style="color: rgb(255, 0, 0);">         -------perform work that could
be done with local data ---------------- (A)</span><br style="color: rgb(255, 0, 0);">
  <span style="color: rgb(255, 0, 0);">         CALL MPI_WAITALL( )</span><br style="color: rgb(255, 0, 0);">
  <span style="color: rgb(255, 0, 0);">         -------perform work
using the received data  --------------- (B)</span></b><br>
<br>
In the above I have broken up the computation. In (A) I perform the work that could be done with local data. When the recevied data is must for remaining computations I put WAITALL  to ensure that data data from the neighbouring processes has received. I am fine with MPI_IRECV and ISEND, i.e.,<br>
<br><b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);">         CALL MPI_IRECV()<br></span></b><b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);">         CALL MPI_ISEND()</span></b><br style="color: rgb(255, 0, 0);">
<b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);"></span>
  <span style="color: rgb(255, 0, 0);"></span><span style="color: rgb(255, 0, 0);">         -------perform work that could
be done with local data ---------------- (A)</span><br style="color: rgb(255, 0, 0);">
  <span style="color: rgb(255, 0, 0);">         CALL MPI_WAITALL( )</span><br style="color: rgb(255, 0, 0);">
  <span style="color: rgb(255, 0, 0);">         -------perform work
using the received data  --------------- (B)</span></b><br>

<br><br>But I am doubtful whether I am getting computation-communication overlap to save time.or I am getting the the same performance as could be obtained by, <br><br><b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);">         CALL MPI_IRECV()<br>
</span></b><b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);">         CALL MPI_ISEND()</span></b><br><b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);">         CALL MPI_WAITALL( )</span></b><br style="color: rgb(255, 0, 0);">
<b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);"></span>
  <span style="color: rgb(255, 0, 0);"></span><span style="color: rgb(255, 0, 0);">         -------perform work that could
be done with local data ---------------- (A)</span><br style="color: rgb(255, 0, 0);">
  <span style="color: rgb(255, 0, 0);"></span><span style="color: rgb(255, 0, 0);">         -------perform work
using the received data  --------------- (B)</span></b><br>

<br>In this case (equivalent to blocking communication), I observed that only around 5% more time it takes.<br><br>And the SECOND desire is to use Persistent communication for even better speedup.<br><br><br>best regards,<br>
AA.<br><br>

