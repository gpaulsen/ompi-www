<div dir="ltr"><div><div>Hi Ralph<br><br></div><div>I have a motherboard with 2 X6580 chips, each with 6 cores 2 way hyperthreading, so /proc/cpuinfo reports 24 cores<br></div></div><div><br>Doing a pure compute OpenMP loop where I&#39;d expect the number of iterations in 10s to rise with number of threads<br><div></div>with gnu and mpich<br>OMP_NUM_THREADS=1 -n 1 : 112 iterations<br>OMP_NUM_THREADS=2 -n 1 : 224 iterations<br>OMP_NUM_THREADS=6 -n 1 : 644 iterations<br>OMP_NUM_THREADS=12 -n 1 : 1287 iterations<br>OMP_NUM_THREADS=22 -n 1 : 1182 iterations<br>OMP_NUM_THREADS=24 -n 1 : 454 iterations<br><br>which shows that mpich is spreading across the cores, but hyperthreading is not useful, and using the whole node counterproductive<br><br>with gnu and openmpi 1.8.3<br>OMP_NUM_THREADS=1 mpiexec -n 1 : 112<br>OMP_NUM_THREADS=2 mpiexec -n 1 : 113<br>which suggests you aren&#39;t allowing the threads to spread across cores<br><br></div><div>adding --cpus-per-node I gain access to the resources on one chip<br></div><div><br>OMP_NUM_THREADS=1 mpiexec --cpus-per-proc 1 -n 1 : 112<br>OMP_NUM_THREADS=2 mpiexec --cpus-per-proc 2 -n 1 : 224<br><div>OMP_NUM_THREADS=6 mpiexec --cpus-per-proc 2 -n 1 : 644<br><div>then<br>OMP_NUM_THREADS=12 mpiexec --cpus-per-proc 12 -n 1<br><br>A request for multiple cpus-per-proc was given, but a directive<br>was also give to map to an object level that has less cpus than<br>requested ones:<br><br>  #cpus-per-proc:  12<br>  number of cpus:  6<br>  map-by:          BYNUMA<br><br></div><div>So you aren&#39;t happy using both chips for one process<br><br>OMP_NUM_THREADS=1 mpiexec -n 1 --cpus-per-proc 1 --use-hwthread-cpus : 112<br>OMP_NUM_THREADS=2 mpiexec -n 1 --cpus-per-proc 2 --use-hwthread-cpus : 112<br>OMP_NUM_THREADS=4 mpiexec -n 1 --cpus-per-proc 4 --use-hwthread-cpus : 224<br>OMP_NUM_THREADS=6 mpiexec -n 1 --cpus-per-proc 6 --use-hwthread-cpus : 324<br>OMP_NUM_THREADS=6 mpiexec -n 1 --cpus-per-proc 12 --use-hwthread-cpus : 631<br>OMP_NUM_THREADS=12 mpiexec -n 1 --cpus-per-proc 12 --use-hwthread-cpus : 647<br><br>OMP_NUM_THREADS=24 mpiexec -n 1 --cpus-per-proc 12 --use-hwthread-cpus <br><br>A request for multiple cpus-per-proc was given, but a directive<br>was also give to map to an object level that has less cpus than<br>requested ones:<br><br>  #cpus-per-proc:  24<br>  number of cpus:  12<br>  map-by:          BYNUMA<br><br>OMP_NUM_THREADS=1 mpiexec -n 1 --cpus-per-proc 2 --use-hwthread-cpus : 112<br>OMP_NUM_THREADS=2 mpiexec -n 1 --cpus-per-proc 4 --use-hwthread-cpus : 224<br>OMP_NUM_THREADS=6 mpiexec -n 1 --cpus-per-proc 12 --use-hwthread-cpus :: 644<br><br>OMP_NUM_THREADS=12 mpiexec -n 1 --cpus-per-proc 24 --use-hwthread-cpus :: 644<br><br>A request for multiple cpus-per-proc was given, but a directive<br>was also give to map to an object level that has less cpus than<br>requested ones:<br><br>  #cpus-per-proc:  24<br>  number of cpus:  12<br>  map-by:          BYNUMA<br><br></div><div>So it seems that --use-hwthread-cpus means that --cpus-per-proc changes from physical cores to hyperthreaded cores, but I can&#39;t get both chips working on the problem in way mpich can<br><br></div><div>John<br></div><div><br><br><br><br></div><br><br></div></div></div>

