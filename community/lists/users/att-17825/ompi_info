markus@linux-6wa6:/media/808CCB178CCB069E/MD Simulations/Test Simu1> ompi_info --all
                 Package: Open MPI abuild@build08 Distribution
                Open MPI: 1.4.3
   Open MPI SVN revision: r23834
   Open MPI release date: Oct 05, 2010
                Open RTE: 1.4.3
   Open RTE SVN revision: r23834
   Open RTE release date: Oct 05, 2010
                    OPAL: 1.4.3
       OPAL SVN revision: r23834
       OPAL release date: Oct 05, 2010
            Ident string: 1.4.3
           MCA backtrace: execinfo (MCA v2.0, API v2.0, Component v1.4.3)
              MCA memory: ptmalloc2 (MCA v2.0, API v2.0, Component v1.4.3)
               MCA timer: linux (MCA v2.0, API v2.0, Component v1.4.3)
         MCA installdirs: env (MCA v2.0, API v2.0, Component v1.4.3)
         MCA installdirs: config (MCA v2.0, API v2.0, Component v1.4.3)
                  Prefix: /usr/lib64/mpi/gcc/openmpi
             Exec_prefix: /usr/lib64/mpi/gcc/openmpi
                  Bindir: /usr/lib64/mpi/gcc/openmpi/bin
                 Sbindir: /usr/lib64/mpi/gcc/openmpi/sbin
                  Libdir: /usr/lib64/mpi/gcc/openmpi/lib64
                  Incdir: /usr/lib64/mpi/gcc/openmpi/include
                  Mandir: /usr/lib64/mpi/gcc/openmpi/share/man
               Pkglibdir: /usr/lib64/mpi/gcc/openmpi/lib64/openmpi
              Libexecdir: /usr/lib64/mpi/gcc/openmpi/lib
             Datarootdir: /usr/lib64/mpi/gcc/openmpi/share
                 Datadir: /usr/lib64/mpi/gcc/openmpi/share
              Sysconfdir: /etc
          Sharedstatedir: /usr/lib64/mpi/gcc/openmpi/com
           Localstatedir: /var
                 Infodir: /usr/lib64/mpi/gcc/openmpi/share/info
              Pkgdatadir: /usr/lib64/mpi/gcc/openmpi/share/openmpi
               Pkglibdir: /usr/lib64/mpi/gcc/openmpi/lib64/openmpi
           Pkgincludedir: /usr/lib64/mpi/gcc/openmpi/include/openmpi
 Configured architecture: x86_64-suse-linux-gnu
          Configure host: build08
           Configured by: abuild
           Configured on: Sat Oct 29 15:50:22 UTC 2011
          Configure host: build08
                Built by: abuild
                Built on: Sat Oct 29 16:04:18 UTC 2011
              Built host: build08
              C bindings: yes
            C++ bindings: yes
      Fortran77 bindings: yes (all)
      Fortran90 bindings: yes
 Fortran90 bindings size: small
              C compiler: gcc
     C compiler absolute: /usr/bin/gcc
             C char size: 1
             C bool size: 1
            C short size: 2
              C int size: 4
             C long size: 8
            C float size: 4
           C double size: 8
          C pointer size: 8
            C char align: 1
            C bool align: 1
             C int align: 4
           C float align: 4
          C double align: 8
            C++ compiler: g++
   C++ compiler absolute: /usr/bin/g++
      Fortran77 compiler: gfortran
  Fortran77 compiler abs: /usr/bin/gfortran
      Fortran90 compiler: gfortran
  Fortran90 compiler abs: /usr/bin/gfortran
       Fort integer size: 4
       Fort logical size: 4
 Fort logical value true: 1
      Fort have integer1: yes
      Fort have integer2: yes
      Fort have integer4: yes
      Fort have integer8: yes
     Fort have integer16: no
         Fort have real4: yes
         Fort have real8: yes
        Fort have real16: no
      Fort have complex8: yes
     Fort have complex16: yes
     Fort have complex32: no
      Fort integer1 size: 1
      Fort integer2 size: 2
      Fort integer4 size: 4
      Fort integer8 size: 8
     Fort integer16 size: -1
          Fort real size: 4
         Fort real4 size: 4
         Fort real8 size: 8
        Fort real16 size: 16
      Fort dbl prec size: 4
          Fort cplx size: 4
      Fort dbl cplx size: 4
         Fort cplx8 size: 8
        Fort cplx16 size: 16
        Fort cplx32 size: 32
      Fort integer align: 4
     Fort integer1 align: 1
     Fort integer2 align: 2
     Fort integer4 align: 4
     Fort integer8 align: 8
    Fort integer16 align: -1
         Fort real align: 4
        Fort real4 align: 4
        Fort real8 align: 8
       Fort real16 align: 16
     Fort dbl prec align: 4
         Fort cplx align: 4
     Fort dbl cplx align: 4
        Fort cplx8 align: 4
       Fort cplx16 align: 8
       Fort cplx32 align: 16
             C profiling: yes
           C++ profiling: yes
     Fortran77 profiling: yes
     Fortran90 profiling: yes
          C++ exceptions: no
          Thread support: posix (mpi: no, progress: no)
           Sparse Groups: no
            Build CFLAGS: -DNDEBUG -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector
                          -funwind-tables -fasynchronous-unwind-tables -g -finline-functions
                          -fno-strict-aliasing -pthread -fvisibility=hidden
          Build CXXFLAGS: -DNDEBUG -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector
                          -funwind-tables -fasynchronous-unwind-tables -g -finline-functions
                          -pthread
            Build FFLAGS: -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector
                          -funwind-tables -fasynchronous-unwind-tables -g
           Build FCFLAGS: 
           Build LDFLAGS: -export-dynamic  
              Build LIBS: -lnsl -lutil  -lm 
    Wrapper extra CFLAGS: -pthread 
  Wrapper extra CXXFLAGS: -pthread 
    Wrapper extra FFLAGS: -pthread 
   Wrapper extra FCFLAGS: -pthread 
   Wrapper extra LDFLAGS:     
      Wrapper extra LIBS:   -ldl   -Wl,--export-dynamic -lnsl -lutil -lm -ldl 
  Internal debug support: no
     MPI parameter check: runtime
Memory profiling support: no
Memory debugging support: no
         libltdl support: yes
   Heterogeneous support: no
 mpirun default --prefix: no
         MPI I/O support: yes
       MPI_WTIME support: gettimeofday
Symbol visibility support: yes
   FT Checkpoint support: no  (checkpoint thread: no)
                 MCA mca: parameter "mca_param_files" (current value:
                          "/home/markus/.openmpi/mca-params.conf:/etc/openmpi-mca-params.conf", data
                          source: default value)
                          Path for MCA configuration files containing default parameter values
                 MCA mca: parameter "mca_base_param_file_prefix" (current value: <none>, data source:
                          default value)
                          Aggregate MCA parameter file sets
                 MCA mca: parameter "mca_base_param_file_path" (current value:
                          "/usr/lib64/mpi/gcc/openmpi/share/openmpi/amca-param-sets:/media/808CCB178CCB069E/MD
                          Simulations/Test Simu1", data source: default value)
                          Aggregate MCA parameter Search path
                 MCA mca: parameter "mca_base_param_file_path_force" (current value: <none>, data
                          source: default value)
                          Forced Aggregate MCA parameter Search path
                 MCA mca: parameter "mca_component_path" (current value:
                          "/usr/lib64/mpi/gcc/openmpi/lib64/openmpi:/home/markus/.openmpi/components",
                          data source: default value)
                          Path where to look for Open MPI and ORTE components
                 MCA mca: parameter "mca_verbose" (current value: <none>, data source: default
                          value)
                          Top-level verbosity parameter
                 MCA mca: parameter "mca_component_show_load_errors" (current value: "1", data
                          source: default value)
                          Whether to show errors for components that failed to load or not
                 MCA mca: parameter "mca_component_disable_dlopen" (current value: "0", data source:
                          default value)
                          Whether to attempt to disable opening dynamic components or not
                 MCA mpi: parameter "mpi_paffinity_alone" (current value: "0", data source: default
                          value, synonym of: opal_paffinity_alone)
                          If nonzero, assume that this job is the only (set of) process(es) running
                          on each node and bind processes to processors, starting with processor ID
                          0
                 MCA mpi: parameter "mpi_paffinity_alone" (current value: "0", data source: default
                          value, synonym of: opal_paffinity_alone)
                          If nonzero, assume that this job is the only (set of) process(es) running
                          on each node and bind processes to processors, starting with processor ID
                          0
                 MCA mpi: parameter "mpi_param_check" (current value: "1", data source: default
                          value)
                          Whether you want MPI API parameters checked at run-time or not.  Possible
                          values are 0 (no checking) and 1 (perform checking at run-time)
                 MCA mpi: parameter "mpi_yield_when_idle" (current value: "-1", data source: default
                          value)
                          Yield the processor when waiting for MPI communication (for MPI processes,
                          will default to 1 when oversubscribing nodes)
                 MCA mpi: parameter "mpi_event_tick_rate" (current value: "-1", data source: default
                          value)
                          How often to progress TCP communications (0 = never, otherwise specified in
                          microseconds)
                 MCA mpi: parameter "mpi_show_handle_leaks" (current value: "0", data source: default
                          value)
                          Whether MPI_FINALIZE shows all MPI handles that were not freed or not
                 MCA mpi: parameter "mpi_no_free_handles" (current value: "0", data source: default
                          value)
                          Whether to actually free MPI objects when their handles are freed
                 MCA mpi: parameter "mpi_show_mpi_alloc_mem_leaks" (current value: "0", data source:
                          default value)
                          If >0, MPI_FINALIZE will show up to this many instances of memory allocated
                          by MPI_ALLOC_MEM that was not freed by MPI_FREE_MEM
                 MCA mpi: parameter "mpi_show_mca_params" (current value: <none>, data source:
                          default value)
                          Whether to show all MCA parameter values during MPI_INIT or not (good for
                          reproducability of MPI jobs for debug purposes). Accepted values are all,
                          default, file, api, and enviro - or a comma delimited combination of them
                 MCA mpi: parameter "mpi_show_mca_params_file" (current value: <none>, data source:
                          default value)
                          If mpi_show_mca_params is true, setting this string to a valid filename
                          tells Open MPI to dump all the MCA parameter values into a file suitable
                          for reading via the mca_param_files parameter (good for reproducability of
                          MPI jobs)
                 MCA mpi: parameter "mpi_keep_peer_hostnames" (current value: "1", data source:
                          default value)
                          If nonzero, save the string hostnames of all MPI peer processes (mostly for
                          error / debugging output messages).  This can add quite a bit of memory
                          usage to each MPI process.
                 MCA mpi: parameter "mpi_abort_delay" (current value: "0", data source: default
                          value)
                          If nonzero, print out an identifying message when MPI_ABORT is invoked
                          (hostname, PID of the process that called MPI_ABORT) and delay for that
                          many seconds before exiting (a negative delay value means to never abort). 
                          This allows attaching of a debugger before quitting the job.
                 MCA mpi: parameter "mpi_abort_print_stack" (current value: "0", data source: default
                          value)
                          If nonzero, print out a stack trace when MPI_ABORT is invoked
                 MCA mpi: parameter "mpi_preconnect_mpi" (current value: "0", data source: default
                          value, synonyms: mpi_preconnect_all)
                          Whether to force MPI processes to fully wire-up the MPI connections between
                          MPI processes during MPI_INIT (vs. making connections lazily -- upon the
                          first MPI traffic between each process peer pair)
                 MCA mpi: parameter "mpi_preconnect_all" (current value: "0", data source: default
                          value, deprecated, synonym of: mpi_preconnect_mpi)
                          Whether to force MPI processes to fully wire-up the MPI connections between
                          MPI processes during MPI_INIT (vs. making connections lazily -- upon the
                          first MPI traffic between each process peer pair)
                 MCA mpi: parameter "mpi_leave_pinned" (current value: "-1", data source: default
                          value)
                          Whether to use the "leave pinned" protocol or not.  Enabling this setting
                          can help bandwidth performance when repeatedly sending and receiving large
                          messages with the same buffers over RDMA-based networks (0 = do not use
                          "leave pinned" protocol, 1 = use "leave pinned" protocol, -1 = allow
                          network to choose at runtime).
                 MCA mpi: parameter "mpi_leave_pinned_pipeline" (current value: "0", data source:
                          default value)
                          Whether to use the "leave pinned pipeline" protocol or not.
                 MCA mpi: parameter "mpi_paffinity_alone" (current value: "0", data source: default
                          value)
                          If nonzero, assume that this job is the only (set of) process(es) running
                          on each node and bind processes to processors, starting with processor ID
                          0
                 MCA mpi: parameter "mpi_warn_on_fork" (current value: "1", data source: default
                          value)
                          If nonzero, issue a warning if program forks under conditions that could
                          cause system errors
                 MCA mpi: information "mpi_have_sparse_group_storage" (value: "0", data source:
                          default value)
                          Whether this Open MPI installation supports storing of data in MPI groups
                          in "sparse" formats (good for extremely large process count MPI jobs that
                          create many communicators/groups)
                 MCA mpi: parameter "mpi_use_sparse_group_storage" (current value: "0", data source:
                          default value)
                          Whether to use "sparse" storage formats for MPI groups (only relevant if
                          mpi_have_sparse_group_storage is 1)
                MCA orte: parameter "orte_base_help_aggregate" (current value: "1", data source:
                          default value)
                          If orte_base_help_aggregate is true, duplicate help messages will be
                          aggregated rather than displayed individually.  This can be helpful for
                          parallel jobs that experience multiple identical failures; rather than
                          print out the same help/failure message N times, display it once with a
                          count of how many processes sent the same message.
                MCA orte: parameter "orte_tmpdir_base" (current value: <none>, data source: default
                          value)
                          Base of the session directory tree
                MCA orte: parameter "orte_no_session_dirs" (current value: <none>, data source:
                          default value)
                          Prohibited locations for session directories (multiple locations separated
                          by ',', default=NULL)
                MCA orte: parameter "orte_debug" (current value: "0", data source: default value)
                          Top-level ORTE debug switch (default verbosity: 1)
                MCA orte: parameter "orte_debug_verbose" (current value: "-1", data source: default
                          value)
                          Verbosity level for ORTE debug messages (default: 1)
                MCA orte: parameter "orte_debug_daemons" (current value: "0", data source: default
                          value)
                          Whether to debug the ORTE daemons or not
                MCA orte: parameter "orte_debug_daemons_file" (current value: "0", data source:
                          default value)
                          Whether want stdout/stderr of daemons to go to a file or not
                MCA orte: parameter "orte_leave_session_attached" (current value: "0", data source:
                          default value)
                          Whether applications and/or daemons should leave their sessions attached so
                          that any output can be received - this allows X forwarding without all the
                          attendant debugging output
                MCA orte: parameter "orte_do_not_launch" (current value: "0", data source: default
                          value)
                          Perform all necessary operations to prepare to launch the application, but
                          do not actually launch it
                MCA orte: parameter "orte_daemon_spin" (current value: "0", data source: default
                          value)
                          Have any orteds spin until we can connect a debugger to them
                MCA orte: parameter "orte_daemon_fail" (current value: "-1", data source: default
                          value)
                          Have the specified orted fail after init for debugging purposes
                MCA orte: parameter "orte_daemon_fail_delay" (current value: "0", data source:
                          default value)
                          Have the specified orted fail after specified number of seconds (default: 0
                          => no delay)
                MCA orte: parameter "orte_heartbeat_rate" (current value: "0", data source: default
                          value)
                          Seconds between checks for daemon state-of-health (default: 0 => do not
                          check)
                MCA orte: parameter "orte_startup_timeout" (current value: "0", data source: default
                          value)
                          Milliseconds/daemon to wait for startup before declaring failed_to_start
                          (default: 0 => do not check)
                MCA orte: parameter "orte_timing" (current value: "0", data source: default value)
                          Request that critical timing loops be measured
                MCA orte: parameter "orte_base_user_debugger" (current value: "totalview @mpirun@ -a
                          @mpirun_args@ : ddt -n @np@ -start @executable@ @executable_argv@
                          @single_app@ : fxp @mpirun@ -a @mpirun_args@", data source: default value)
                          Sequence of user-level debuggers to search for in orterun
                MCA orte: parameter "orte_abort_timeout" (current value: "1", data source: default
                          value)
                          Max time to wait [in secs] before aborting an ORTE operation (default:
                          1sec)
                MCA orte: parameter "orte_timeout_step" (current value: "1000", data source: default
                          value)
                          Time to wait [in usecs/proc] before aborting an ORTE operation (default:
                          1000 usec/proc)
                MCA orte: parameter "orte_default_hostfile" (current value: <none>, data source:
                          default value)
                          Name of the default hostfile (relative or absolute path)
                MCA orte: parameter "orte_rankfile" (current value: <none>, data source: default
                          value, synonyms: rmaps_rank_file_path)
                          Name of the rankfile to be used for mapping processes (relative or absolute
                          path)
                MCA orte: parameter "orte_keep_fqdn_hostnames" (current value: "0", data source:
                          default value)
                          Whether or not to keep FQDN hostnames [default: no]
                MCA orte: parameter "orte_contiguous_nodes" (current value: "2147483647", data
                          source: default value)
                          Number of nodes after which contiguous nodename encoding will automatically
                          be used [default: INT_MAX]
                MCA orte: parameter "orte_tag_output" (current value: "0", data source: default
                          value)
                          Tag all output with [job,rank] (default: false)
                MCA orte: parameter "orte_xml_output" (current value: "0", data source: default
                          value)
                          Display all output in XML format (default: false)
                MCA orte: parameter "orte_xml_file" (current value: <none>, data source: default
                          value)
                          Provide all output in XML format to the specified file
                MCA orte: parameter "orte_timestamp_output" (current value: "0", data source: default
                          value)
                          Timestamp all application process output (default: false)
                MCA orte: parameter "orte_output_filename" (current value: <none>, data source:
                          default value)
                          Redirect output from application processes into filename.rank [default:
                          NULL]
                MCA orte: parameter "orte_show_resolved_nodenames" (current value: "0", data source:
                          default value)
                          Display any node names that are resolved to a different name (default:
                          false)
                MCA orte: parameter "orte_hetero_apps" (current value: "0", data source: default
                          value)
                          Indicates that multiple app_contexts are being provided that are a mix of
                          32/64 bit binaries (default: false)
                MCA orte: parameter "orte_launch_agent" (current value: "orted", data source: default
                          value)
                          Command used to start processes on remote nodes (default: orted)
                MCA orte: parameter "orte_allocation_required" (current value: "0", data source:
                          default value)
                          Whether or not an allocation by a resource manager is required [default:
                          no]
                MCA orte: parameter "orte_xterm" (current value: <none>, data source: default value)
                          Create a new xterm window and display output from the specified ranks there
                          [default: none]
                MCA orte: parameter "orte_forward_job_control" (current value: "0", data source:
                          default value)
                          Forward SIGTSTP (after converting to SIGSTOP) and SIGCONT signals to the
                          application procs [default: no]
                MCA orte: parameter "orte_report_launch_progress" (current value: "0", data source:
                          default value)
                          Output a brief periodic report on launch progress [default: no]
                MCA orte: parameter "orte_num_boards" (current value: "1", data source: default
                          value)
                          Number of processor boards/node (1-256) [default: 1]
                MCA orte: parameter "orte_num_sockets" (current value: "0", data source: default
                          value)
                          Number of sockets/board (1-256)
                MCA orte: parameter "orte_num_cores" (current value: "0", data source: default
                          value)
                          Number of cores/socket (1-256)
                MCA orte: parameter "orte_cpu_set" (current value: <none>, data source: default
                          value)
                          Comma-separated list of ranges specifying logical cpus allocated to this
                          job [default: none]
                MCA orte: parameter "orte_process_binding" (current value: <none>, data source:
                          default value)
                          Policy for binding processes [none | core | socket | board] (supported
                          qualifier: if-avail)
                MCA opal: parameter "opal_net_private_ipv4" (current value:
                          "10.0.0.0/8;172.16.0.0/12;192.168.0.0/16;169.254.0.0/16", data source:
                          default value)
                          Semicolon-delimited list of CIDR notation entries specifying what networks
                          are considered "private" (default value based on RFC1918 and RFC3330)
                MCA opal: parameter "opal_signal" (current value: "6,7,8,11", data source: default
                          value)
                          Comma-delimited list of integer signal numbers to Open MPI to attempt to
                          intercept.  Upon receipt of the intercepted signal, Open MPI will display a
                          stack trace and abort.  Open MPI will *not* replace signals if handlers are
                          already installed by the time MPI_INIT is invoked.  Optionally append
                          ":complain" to any signal number in the comma-delimited list to make Open
                          MPI complain if it detects another signal handler (and therefore does not
                          insert its own).
                MCA opal: parameter "opal_paffinity_alone" (current value: "0", data source: default
                          value, synonyms: mpi_paffinity_alone, mpi_paffinity_alone)
                          If nonzero, assume that this job is the only (set of) process(es) running
                          on each node and bind processes to processors, starting with processor ID
                          0
                MCA opal: parameter "opal_set_max_sys_limits" (current value: "0", data source:
                          default value)
                          Set to non-zero to automatically set any system-imposed limits to the
                          maximum allowed
                MCA opal: parameter "opal_event_include" (current value: "poll", data source: default
                          value)
                          Comma-delimited list of libevent subsystems to use (poll, select --
                          available on your platform)
           MCA backtrace: parameter "backtrace" (current value: <none>, data source: default value)
                          Default selection set of components for the backtrace framework (<none>
                          means use all components that can be found)
           MCA backtrace: parameter "backtrace_base_verbose" (current value: "0", data source:
                          default value)
                          Verbosity level for the backtrace framework (0 = no verbosity)
           MCA backtrace: parameter "backtrace_execinfo_priority" (current value: "0", data source:
                          default value)
          MCA memchecker: parameter "memchecker" (current value: <none>, data source: default value)
                          Default selection set of components for the memchecker framework (<none>
                          means use all components that can be found)
              MCA memory: parameter "memory" (current value: <none>, data source: default value)
                          Default selection set of components for the memory framework (<none> means
                          use all components that can be found)
              MCA memory: parameter "memory_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the memory framework (0 = no verbosity)
              MCA memory: parameter "memory_ptmalloc2_priority" (current value: "0", data source:
                          default value)
           MCA paffinity: parameter "paffinity_base_verbose" (current value: "0", data source:
                          default value)
                          Verbosity level of the paffinity framework
           MCA paffinity: parameter "paffinity" (current value: <none>, data source: default value)
                          Default selection set of components for the paffinity framework (<none>
                          means use all components that can be found)
               MCA carto: parameter "carto_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level of the carto framework
               MCA carto: parameter "carto" (current value: <none>, data source: default value)
                          Default selection set of components for the carto framework (<none> means
                          use all components that can be found)
           MCA maffinity: parameter "maffinity_base_verbose" (current value: "0", data source:
                          default value)
                          Verbosity level of the maffinity framework
           MCA maffinity: parameter "maffinity" (current value: <none>, data source: default value)
                          Default selection set of components for the maffinity framework (<none>
                          means use all components that can be found)
               MCA timer: parameter "timer" (current value: <none>, data source: default value)
                          Default selection set of components for the timer framework (<none> means
                          use all components that can be found)
               MCA timer: parameter "timer_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the timer framework (0 = no verbosity)
               MCA timer: parameter "timer_linux_priority" (current value: "0", data source: default
                          value)
                 MCA dpm: parameter "dpm" (current value: <none>, data source: default value)
                          Default selection set of components for the dpm framework (<none> means use
                          all components that can be found)
              MCA pubsub: parameter "pubsub" (current value: <none>, data source: default value)
                          Default selection set of components for the pubsub framework (<none> means
                          use all components that can be found)
              MCA pubsub: parameter "pubsub_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the pubsub framework (0 = no verbosity)
           MCA allocator: parameter "allocator" (current value: <none>, data source: default value)
                          Default selection set of components for the allocator framework (<none>
                          means use all components that can be found)
           MCA allocator: parameter "allocator_base_verbose" (current value: "0", data source:
                          default value)
                          Verbosity level for the allocator framework (0 = no verbosity)
                MCA coll: parameter "coll" (current value: <none>, data source: default value)
                          Default selection set of components for the coll framework (<none> means
                          use all components that can be found)
                MCA coll: parameter "coll_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the coll framework (0 = no verbosity)
                  MCA io: parameter "io_base_freelist_initial_size" (current value: "16", data
                          source: default value)
                          Initial MPI-2 IO request freelist size
                  MCA io: parameter "io_base_freelist_max_size" (current value: "64", data source:
                          default value)
                          Max size of the MPI-2 IO request freelist
                  MCA io: parameter "io_base_freelist_increment" (current value: "16", data source:
                          default value)
                          Increment size of the MPI-2 IO request freelist
                  MCA io: parameter "io" (current value: <none>, data source: default value)
                          Default selection set of components for the io framework (<none> means use
                          all components that can be found)
                  MCA io: parameter "io_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the io framework (0 = no verbosity)
               MCA mpool: parameter "mpool" (current value: <none>, data source: default value)
                          Default selection set of components for the mpool framework (<none> means
                          use all components that can be found)
               MCA mpool: parameter "mpool_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the mpool framework (0 = no verbosity)
                 MCA pml: parameter "pml_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level of the PML framework
                 MCA pml: parameter "pml" (current value: <none>, data source: default value)
                          Default selection set of components for the pml framework (<none> means use
                          all components that can be found)
              MCA rcache: parameter "rcache" (current value: <none>, data source: default value)
                          Default selection set of components for the rcache framework (<none> means
                          use all components that can be found)
              MCA rcache: parameter "rcache_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the rcache framework (0 = no verbosity)
                 MCA btl: parameter "btl_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level of the BTL framework
                 MCA btl: parameter "btl" (current value: <none>, data source: default value)
                          Default selection set of components for the btl framework (<none> means use
                          all components that can be found)
                 MCA btl: parameter "btl_base_include" (current value: <none>, data source: default
                          value)
                 MCA btl: parameter "btl_base_exclude" (current value: <none>, data source: default
                          value)
                 MCA btl: parameter "btl_base_warn_component_unused" (current value: "1", data
                          source: default value)
                          This parameter is used to turn on warning messages when certain NICs are
                          not used
                 MCA mtl: parameter "mtl" (current value: <none>, data source: default value)
                          Default selection set of components for the mtl framework (<none> means use
                          all components that can be found)
                 MCA mtl: parameter "mtl_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the mtl framework (0 = no verbosity)
                MCA topo: parameter "topo" (current value: <none>, data source: default value)
                          Default selection set of components for the topo framework (<none> means
                          use all components that can be found)
                MCA topo: parameter "topo_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the topo framework (0 = no verbosity)
                 MCA osc: parameter "osc" (current value: <none>, data source: default value)
                          Default selection set of components for the osc framework (<none> means use
                          all components that can be found)
                 MCA osc: parameter "osc_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the osc framework (0 = no verbosity)
                 MCA iof: parameter "iof" (current value: <none>, data source: default value)
                          Default selection set of components for the iof framework (<none> means use
                          all components that can be found)
                 MCA iof: parameter "iof_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the iof framework (0 = no verbosity)
                 MCA oob: parameter "oob" (current value: <none>, data source: default value)
                          Default selection set of components for the oob framework (<none> means use
                          all components that can be found)
                 MCA oob: parameter "oob_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the oob framework (0 = no verbosity)
                MCA odls: parameter "odls_base_sigkill_timeout" (current value: "1", data source:
                          default value)
                          Time to wait for a process to die after issuing a kill signal to it
                MCA odls: parameter "odls_base_report_bindings" (current value: "0", data source:
                          default value)
                          Report process bindings [default: no]
                MCA odls: parameter "odls" (current value: <none>, data source: default value)
                          Default selection set of components for the odls framework (<none> means
                          use all components that can be found)
                MCA odls: parameter "odls_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the odls framework (0 = no verbosity)
                 MCA ras: parameter "ras_base_display_alloc" (current value: "0", data source:
                          default value)
                          Whether to display the allocation after it is determined
                 MCA ras: parameter "ras_base_display_devel_alloc" (current value: "0", data source:
                          default value)
                          Whether to display a developer-detail allocation after it is determined
                 MCA ras: parameter "ras" (current value: <none>, data source: default value)
                          Default selection set of components for the ras framework (<none> means use
                          all components that can be found)
                 MCA ras: parameter "ras_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the ras framework (0 = no verbosity)
               MCA rmaps: parameter "rmaps_rank_file_path" (current value: <none>, data source:
                          default value, synonym of: orte_rankfile)
                          Name of the rankfile to be used for mapping processes (relative or absolute
                          path)
               MCA rmaps: parameter "rmaps_base_schedule_policy" (current value: "slot", data source:
                          default value)
                          Scheduling Policy for RMAPS. [slot (alias:core) | socket | board | node]
               MCA rmaps: parameter "rmaps_base_pernode" (current value: "0", data source: default
                          value)
                          Launch one ppn as directed
               MCA rmaps: parameter "rmaps_base_n_pernode" (current value: "-1", data source: default
                          value)
                          Launch n procs/node
               MCA rmaps: parameter "rmaps_base_n_perboard" (current value: "-1", data source:
                          default value)
                          Launch n procs/board
               MCA rmaps: parameter "rmaps_base_n_persocket" (current value: "-1", data source:
                          default value)
                          Launch n procs/socket
               MCA rmaps: parameter "rmaps_base_loadbalance" (current value: "0", data source:
                          default value)
                          Balance total number of procs across all allocated nodes
               MCA rmaps: parameter "rmaps_base_cpus_per_proc" (current value: "1", data source:
                          default value, synonyms: rmaps_base_cpus_per_rank)
                          Number of cpus to use for each rank [1-2**15 (default=1)]
               MCA rmaps: parameter "rmaps_base_cpus_per_rank" (current value: "1", data source:
                          default value, synonym of: rmaps_base_cpus_per_proc)
                          Number of cpus to use for each rank [1-2**15 (default=1)]
               MCA rmaps: parameter "rmaps_base_stride" (current value: "1", data source: default
                          value)
                          When binding multiple cores to a rank, the step size to use between cores
                          [1-2**15 (default: 1)]
               MCA rmaps: parameter "rmaps_base_slot_list" (current value: <none>, data source:
                          default value)
                          List of processor IDs to bind MPI processes to (e.g., used in conjunction
                          with rank files) [default=NULL]
               MCA rmaps: parameter "rmaps_base_no_schedule_local" (current value: "0", data source:
                          default value)
                          If false, allow scheduling MPI applications on the same node as mpirun
                          (default).  If true, do not schedule any MPI applications on the same node
                          as mpirun
               MCA rmaps: parameter "rmaps_base_no_oversubscribe" (current value: "0", data source:
                          default value)
                          If true, then do not allow oversubscription of nodes - mpirun will return
                          an error if there aren't enough nodes to launch all processes without
                          oversubscribing
               MCA rmaps: parameter "rmaps_base_display_map" (current value: "0", data source:
                          default value)
                          Whether to display the process map after it is computed
               MCA rmaps: parameter "rmaps_base_display_devel_map" (current value: "0", data source:
                          default value)
                          Whether to display a developer-detail process map after it is computed
               MCA rmaps: parameter "rmaps" (current value: <none>, data source: default value)
                          Default selection set of components for the rmaps framework (<none> means
                          use all components that can be found)
               MCA rmaps: parameter "rmaps_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the rmaps framework (0 = no verbosity)
                 MCA rml: parameter "rml_wrapper" (current value: <none>, data source: default
                          value)
                          Use a Wrapper component around the selected RML component
                 MCA rml: parameter "rml" (current value: <none>, data source: default value)
                          Default selection set of components for the rml framework (<none> means use
                          all components that can be found)
                 MCA rml: parameter "rml_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the rml framework (0 = no verbosity)
              MCA routed: parameter "routed" (current value: <none>, data source: default value)
                          Default selection set of components for the routed framework (<none> means
                          use all components that can be found)
              MCA routed: parameter "routed_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the routed framework (0 = no verbosity)
                 MCA plm: parameter "plm" (current value: <none>, data source: default value)
                          Default selection set of components for the plm framework (<none> means use
                          all components that can be found)
                 MCA plm: parameter "plm_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the plm framework (0 = no verbosity)
               MCA filem: parameter "filem" (current value: <none>, data source: default value)
                          Which Filem component to use (empty = auto-select)
               MCA filem: parameter "filem_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the filem framework (0 = no verbosity)
              MCA errmgr: parameter "errmgr" (current value: <none>, data source: default value)
                          Default selection set of components for the errmgr framework (<none> means
                          use all components that can be found)
              MCA errmgr: parameter "errmgr_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the errmgr framework (0 = no verbosity)
                 MCA ess: parameter "ess" (current value: <none>, data source: default value)
                          Default selection set of components for the ess framework (<none> means use
                          all components that can be found)
                 MCA ess: parameter "ess_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the ess framework (0 = no verbosity)
             MCA grpcomm: parameter "grpcomm" (current value: <none>, data source: default value)
                          Default selection set of components for the grpcomm framework (<none> means
                          use all components that can be found)
             MCA grpcomm: parameter "grpcomm_base_verbose" (current value: "0", data source: default
                          value)
                          Verbosity level for the grpcomm framework (0 = no verbosity)

