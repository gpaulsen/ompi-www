<div dir="ltr"><div>I&#39;m currently working on a project that utilizes MPI in order to distribute the calculating of a game tree across multiple MPI nodes. In order to do this, we require the use of a backtracking algorithm. We&#39;ve yet to find any that support the parallelism of MPI and are wondering if there exists any before we look towards implementing our own.<br></div><div><br></div><div>In essence, our code does the following:</div><div><br></div><div>  RecursiveCall(GameTreeNode)</div><div>    Create a set, S, of GameTreeNodes based on GameTreeNode (i.e. expand the game tree)</div><div>    For each GameTreeNode, N, in S</div><div>      Find an idle processor</div><div>      Execute RecursiveCall(N) on the selected processor</div><div>    End</div><div>    If there are no idle processors</div><div>      Do calculation on current processor</div><div>    End</div><div>  End</div><div><br></div><div>We&#39;ve reviewed &quot;DIB - A Distributed Implementation of Backtracking&quot; by Raphael Finkel &amp; Udi Manber, but that paper uses BSD sockets and we couldn&#39;t easily see a way to reimplement it within MPI. We are wondering if there exists a similar backtracking method that is already MPI-compatible.</div><div><br></div><div>Thanks.</div><div><br></div><div>Cheers,</div><div><br></div><div>Josh Vega</div><div>Computer Science, B.S., 2019</div><div>New Jersey Institute of Technology</div></div>

