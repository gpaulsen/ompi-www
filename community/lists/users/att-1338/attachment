<br><br><div><span class="gmail_quote">On 5/31/06, <b class="gmail_sendername">Brian W. Barrett</b> &lt;<a href="mailto:brbarret@open-mpi.org">brbarret@open-mpi.org</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
A quick workaround is to edit opal/include/opal_config.h and change the<br>#defines for OMPI_CXX_GCC_INLINE_ASSEMBLY and OMPI_CC_GCC_INLINE_ASSEMBLY<br>from 1 to 0.&nbsp;&nbsp;That should allow you to build Open MPI with those XL<br>
compilers.&nbsp;&nbsp;Hopefully IBM will fix this in a future version ;).<br></blockquote></div><br>
Well I actually edited include/ompi_config.h and set both OMPI_C_GCC_INLINE_ASSEMBLY<br>
and OMPI_CXX_GCC_INLINE_ASSEMBLY to 0.&nbsp; This worked until libtool tried to create<br>
a shared library:<br>
<br>
/bin/sh ../libtool --tag=CC --mode=link gxlc_64&nbsp; -O -DNDEBUG
-qnokeyword=asm&nbsp;&nbsp; -export-dynamic&nbsp;&nbsp; -o <a href="http://libopal.la">libopal.la</a>
-rpath /usr/local/ompi-xl/lib&nbsp;&nbsp; libltdl/libltdlc.la
asm/libasm.la class/libclass.la event/libevent.la
mca/base/libmca_base.la memoryhooks/libopalmemory.la
runtime/libruntime.la threads/libthreads.la util/libopalutil.la
mca/maffinity/base/libmca_maffinity_base.la&nbsp;
mca/memory/base/libmca_memory_base.la
mca/memory/malloc_hooks/libmca_memory_malloc_hooks.la&nbsp;
mca/paffinity/base/libmca_paffinity_base.la&nbsp;
mca/timer/base/libmca_timer_base.la
mca/timer/linux/libmca_timer_linux.la&nbsp; -lm&nbsp; -lutil -lnsl <br>
mkdir .libs<br>
gxlc_64 -shared&nbsp; --whole-archive libltdl/.libs/libltdlc.a
asm/.libs/libasm.a class/.libs/libclass.a event/.libs/libevent.a
mca/base/.libs/libmca_base.a memoryhooks/.libs/libopalmemory.a
runtime/.libs/libruntime.a threads/.libs/libthreads.a
util/.libs/libopalutil.a
mca/maffinity/base/.libs/libmca_maffinity_base.a
mca/memory/base/.libs/libmca_memory_base.a
mca/memory/malloc_hooks/.libs/libmca_memory_malloc_hooks.a
mca/paffinity/base/.libs/libmca_paffinity_base.a
mca/timer/base/.libs/libmca_timer_base.a
mca/timer/linux/.libs/libmca_timer_linux.a --no-whole-archive&nbsp;
-ldl -lm -lutil -lnsl -lc&nbsp; -qnokeyword=asm -soname libopal.so.0 -o
.libs/libopal.so.0.0.0<br>
gxlc: 1501-257 Option --whole-archive is not recognized.&nbsp; Option will be ignored.<br>
gxlc: 1501-257 Option --no-whole-archive is not recognized.&nbsp; Option will be ignored.<br>
gxlc: 1501-257 Option -qnokeyword=asm is not recognized.&nbsp; Option will be ignored.<br>
gxlc: 1501-257 Option -soname is not recognized.&nbsp; Option will be ignored.<br>
xlc: 1501-218 file libopal.so.0 contains an incorrect file suffix<br>
xlc: 1501-228 input file libopal.so.0 not found<br>
xlc -q64 -qthreaded -D_REENTRANT -lpthread -qmkshrobj
libltdl/.libs/libltdlc.a asm/.libs/libasm.a class/.libs/libclass.a
event/.libs/libevent.a mca/base/.libs/libmca_base.a
memoryhooks/.libs/libopalmemory.a runtime/.libs/libruntime.a
threads/.libs/libthreads.a util/.libs/libopalutil.a
mca/maffinity/base/.libs/libmca_maffinity_base.<br>
<br>
I was able to fix this by editing libtool and replacing $CC with $LD in the following:<br>
<br>
# Commands used to build and install a shared archive.<br>
archive_cmds=&quot;\$LD -shared \$libobjs \$deplibs \$compiler_flags \${wl}-soname \$wl\$soname -o \$lib&quot;<br>
archive_expsym_cmds=&quot;\$echo \\\&quot;{ global:\\\&quot; &gt; \$output_objdir/\$libname.ver~<br>
&nbsp; cat \$export_symbols | sed -e \\\&quot;s/\\\\(.*\\\\)/\\\\1;/\\\&quot; &gt;&gt; \$output_objdir/\$libname.ver~<br>
&nbsp; \$echo \\\&quot;local: *; };\\\&quot; &gt;&gt; \$output_objdir/\$libname.ver~<br>
&nbsp;&nbsp;&nbsp; \$LD -shared \$libobjs \$deplibs \$compiler_flags
\${wl}-soname \$wl\$soname \${wl}-version-script
\${wl}\$output_objdir/\$libname.ver -o \$lib&quot;<br>
<br>
We then fail later on at:<br>
<br>
make[3]: Entering directory `/usr/src/openmpi-1.0.3a1r10133/orte/tools/orted'<br>
/bin/sh ../../../libtool --tag=CC --mode=link gxlc_64&nbsp; -O
-DNDEBUG&nbsp;&nbsp;&nbsp; -export-dynamic&nbsp;&nbsp; -o
orted&nbsp;&nbsp; orted.o ../../../orte/liborte.la
../../../opal/libopal.la&nbsp; -lm&nbsp; -lutil -lnsl <br>
gxlc_64 -O -DNDEBUG -o .libs/orted orted.o --export-dynamic&nbsp;
../../../orte/.libs/liborte.so
/usr/src/openmpi-1.0.3a1r10133/opal/.libs/libopal.so
../../../opal/.libs/libopal.so -ldl -lm -lutil -lnsl --rpath
/usr/local/ompi-xl/lib<br>
gxlc: 1501-257 Option --export-dynamic is not recognized.&nbsp; Option will be ignored.<br>
gxlc: 1501-257 Option --rpath is not recognized.&nbsp; Option will be ignored.<br>
xlc: 1501-274 An incompatible level of gcc has been specified.<br>
xlc: 1501-228 input file /usr/local/ompi-xl/lib not found<br>
xlc -q64 -qthreaded -D_REENTRANT -lpthread -O -DNDEBUG -o .libs/orted
orted.o ../../../orte/.libs/liborte.so
/usr/src/openmpi-1.0.3a1r10133/opal/.libs/libopal.so
../../../opal/.libs/libopal.so -ldl -lm -lutil -lnsl
/usr/local/ompi-xl/lib<br>
<br>
Simply replacing ld for gxlc_64 here obviously won't work.<br>
node42 orted # ld&nbsp; -O -DNDEBUG -o .libs/orted orted.o
--export-dynamic&nbsp; ../../../orte/.libs/liborte.so
/usr/src/openmpi-1.0.3a1r10133/opal/.libs/libopal.so
../../../opal/.libs/libopal.so -ldl -lm -lutil -lnsl --rpath
/usr/local/ompi-xl/lib
-lpthread&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
ld: warning: cannot find entry symbol _start; defaulting to 0000000010013ed8<br>
<br>
Of course, I've been told that directly linking with ld isn't such a great idea in the first<br>
place.&nbsp; Ideas?<br>
<br>
Thanks,<br>
<br>
Justin.<br>
<br>

