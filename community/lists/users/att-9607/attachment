Hello,<br><br>I&#39;m attempting to wrap my brain around the MPI I/O mechanisms, and I was hoping to find some guidance.  I&#39;m trying to read a file that contains a 117-character string, followed by a series records that contain integers and reals.  The following code would read it in serial:<br>
<br>---<br>character(len=117) :: cfx1<br><br>read (nin) cfx1<br>do i=1,end_of_file<br>  read(nin) integer1,integer2,real1,real2,real3,real4,real5,real6,real7<br>enddo<br>---<br><br>To simplify the problem, I removed the &quot;cfx1&quot; string from the file I&#39;m reading, and created an MPI_TYPE_STRUCT as follows:<br>
<br>---<br>      length( 1 ) = 1                                                                                                                                                                                          <br>
      length( 2 ) = 2                                                                                                                                                                                          <br>      length( 3 ) = 7                                                                                                                                                                                          <br>
      length( 3 ) = 1                                                                                                                                                                                          <br>      disp( 1 ) = 0                                                                                                                                                                                            <br>
      disp( 2 ) = sizeof( MPI_LB )                                                                                                                                                                             <br>      disp( 3 ) = disp( 2 ) + 2*sizeof(MPI_INTEGER)<br>
      disp( 4 ) = disp( 3 ) + 7*sizeof(MPI_REAL)<br>      type( 1 ) = MPI_LB<br>      type( 2 ) = MPI_INTEGER<br>      type( 3 ) = MPI_REAL<br>      type( 4 ) = MPI_UB<br><br>      call MPI_TYPE_STRUCT( 4, length, disp, type, sptype, ierr )<br>
      call MPI_TYPE_COMMIT( sptype, ierr )<br>---<br><br>I then open the file, set the view as follows and try to do a read:<br><br>---<br>      mode = MPI_MODE_RDONLY<br>      call MPI_FILE_OPEN( MPI_COMM_WORLD, filename, mode,<br>
     +                    MPI_INFO_NULL, fh, ierr )<br><br>      offset = 0<br>      call MPI_FILE_SET_VIEW( fh, offset, sptype,<br>     +                        sptype, &#39;native&#39;, MPI_INFO_NULL, ierr )<br><br>      call MPI_FILE_READ( fh, sourcepart, 1, sptype,<br>
     +                           status, ierr )<br>---<br><br>where &quot;sourcepart&quot; is:<br><br>---<br>     type source_particle_datatype<br>        integer :: ipt,idm<br>        real :: xxx,yyy,zzz,uuu,vvv,www,erg<br>
      end type<br>---<br><br>This almost works.  With some fiddling (I can&#39;t seem to make it work right now), I&#39;m able to get most of the reals and integers into &quot;sourcepart&quot;, but something doesn&#39;t line up quite correctly.  I&#39;ve spent a lot of time looking at the documentation and tutorials on
the web, but haven&#39;t found a resource that helps me work through this
problem. <br><br>Ultimately, the objective will be to allow an arbitrary number of processes read this file, with each record being uniquely read by a single process.  (e.g. process 1 read record 1, process 2 reads record 2, process 1 reads record 3, process 2 reads record 4, etc.)<br>
<br>What&#39;s the best way to skin this cat?  Any assistance would be greatly appreciated.<br><br>Thanks,<br>Greg<br>
