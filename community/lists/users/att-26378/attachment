<div dir="ltr"><div class="gmail_extra"><div class="gmail_quote">On Mon, Feb 23, 2015 at 4:37 PM, Joshua Ladd <span dir="ltr">&lt;<a href="mailto:jladd.mlnx@gmail.com" target="_blank">jladd.mlnx@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div><div><div>Nathan,<br><br></div>I do, but the hang comes later on. It looks like it&#39;s a situation where the root is way, way faster than the children and he&#39;s inducing an an overrun in the unexpected message queue. I think the queue is set to just keep growing and it eventually blows up the memory??<br></div></div></div></blockquote><div><br></div><div>This is indeed possible there is no control flow in the PML (not in most of the BTLs). However, the fact that the received prefers to drain the incoming queues instead of returning back to MPI is slightly disturbing.</div><div><br></div><div>  George.</div><div> </div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div><div>$/hpc/mtl_scrap/users/joshual/openmpi-1.8.4/ompi_install/bin/mpirun -np 3 --display-map -mca btl vader,self ./a.out <br> Data for JOB [14187,1] offset 0<br><br> ========================   JOB MAP   ========================<br><br> Data for node: mngx-apl-01     Num slots: 16   Max slots: 0    Num procs: 3<br>        Process OMPI jobid: [14187,1] App: 0 Process rank: 0<br>        Process OMPI jobid: [14187,1] App: 0 Process rank: 1<br>        Process OMPI jobid: [14187,1] App: 0 Process rank: 2<br><br> =============================================================<span class=""><br>rank 2, m = 0<br>rank 0, m = 0<br></span><span class="">rank 1, m = 0<br></span><span class="">rank 0, m = 1000<br>rank 0, m = 2000<br>rank 0, m = 3000<br></span><span class="">rank 2, m = 1000<br>rank 1, m = 1000<br></span><span class="">rank 0, m = 4000<br>rank 0, m = 5000<br>rank 0, m = 6000<br>rank 0, m = 7000<br></span><span class="">rank 1, m = 2000<br></span><span class="">rank 2, m = 2000<br></span><span class="">rank 0, m = 8000<br>rank 0, m = 9000<br>rank 0, m = 10000<br>rank 0, m = 11000<br></span><span class="">rank 2, m = 3000<br>rank 1, m = 3000<br></span><span class="">rank 0, m = 12000<br>rank 0, m = 13000<br>rank 0, m = 14000<br></span><span class="">rank 1, m = 4000<br>rank 2, m = 4000<br></span><span class="">rank 0, m = 15000<br>rank 0, m = 16000<br></span>rank 0, m = 17000<br>rank 0, m = 18000<span class=""><br>rank 1, m = 5000<br>rank 2, m = 5000<br></span>rank 0, m = 19000<br>rank 0, m = 20000<br>rank 0, m = 21000<br>rank 0, m = 22000<br>rank 2, m = 6000     &lt;--- Finally hangs when Ranks 2 and 1 are at 6000 but rank 0, the root, is at 22,000<span class=""><br>rank 1, m = 6000<br><br></span></div>It fails with the ompi_coll_tuned_bcast_intra_split_bintree algorithm in Tuned - looks like a scatter/allgather type of operation. It&#39;s in the allgather phase during the bidirectional send/recv that things go bad. There are no issues running this under &quot;Basic&quot; colls.<br><br></div>Josh<br><div><div><br><br><br></div></div></div><div class="gmail_extra"><br><div class="gmail_quote"><div><div class="h5">On Mon, Feb 23, 2015 at 4:13 PM, Nathan Hjelm <span dir="ltr">&lt;<a href="mailto:hjelmn@lanl.gov" target="_blank">hjelmn@lanl.gov</a>&gt;</span> wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div class="h5"><br>
Josh, do you see a hang when using vader? It is preferred over the old<br>
sm btl.<br>
<br>
-Nathan<br>
<div><div><br>
On Mon, Feb 23, 2015 at 03:48:17PM -0500, Joshua Ladd wrote:<br>
&gt;    Sachin,<br>
&gt;<br>
&gt;    I am able to reproduce something funny. Looks like your issue. When I run<br>
&gt;    on a single host with two ranks, the test works fine. However, when I try<br>
&gt;    three or more, it looks like only the root, rank 0, is making any progress<br>
&gt;    after the first iteration.<br>
&gt;<br>
&gt;    $/hpc/mtl_scrap/users/joshual/openmpi-1.8.4/ompi_install/bin/mpirun -np 3<br>
&gt;    -mca btl self,sm ./bcast_loop<br>
&gt;    rank 0, m = 0<br>
&gt;    rank 1, m = 0<br>
&gt;    rank 2, m = 0<br>
&gt;    rank 0, m = 1000<br>
&gt;    rank 0, m = 2000<br>
&gt;    rank 0, m = 3000<br>
&gt;    rank 0, m = 4000<br>
&gt;    rank 0, m = 5000<br>
&gt;    rank 0, m = 6000<br>
&gt;    rank 0, m = 7000<br>
&gt;    rank 0, m = 8000<br>
&gt;    rank 0, m = 9000<br>
&gt;    rank 0, m = 10000<br>
&gt;    rank 0, m = 11000<br>
&gt;    rank 0, m = 12000<br>
&gt;    rank 0, m = 13000<br>
&gt;    rank 0, m = 14000<br>
&gt;    rank 0, m = 15000<br>
&gt;    rank 0, m = 16000   &lt;----- Hanging<br>
&gt;<br>
&gt;    After hanging for a while, I get an OOM kernel panic message:<br>
&gt;<br>
&gt;    joshual@mngx-apl-01 ~<br>
&gt;    $<br>
&gt;    Message from syslogd@localhost at Feb 23 22:42:17 ...<br>
&gt;     kernel:Kernel panic - not syncing: Out of memory: system-wide<br>
&gt;    panic_on_oom is enabled<br>
&gt;<br>
&gt;    Message from syslogd@localhost at Feb 23 22:42:17 ...<br>
&gt;     kernel:<br>
&gt;<br>
&gt;    With TCP BTL the result is sensible, i.e. I see three ranks reporting for<br>
&gt;    each multiple of 1000:<br>
&gt;    $/hpc/mtl_scrap/users/joshual/openmpi-1.8.4/ompi_install/bin/mpirun -np 3<br>
&gt;    -mca btl self,tcp ./a.out<br>
&gt;    rank 1, m = 0<br>
&gt;    rank 2, m = 0<br>
&gt;    rank 0, m = 0<br>
&gt;    rank 0, m = 1000<br>
&gt;    rank 2, m = 1000<br>
&gt;    rank 1, m = 1000<br>
&gt;    rank 1, m = 2000<br>
&gt;    rank 0, m = 2000<br>
&gt;    rank 2, m = 2000<br>
&gt;    rank 0, m = 3000<br>
&gt;    rank 2, m = 3000<br>
&gt;    rank 1, m = 3000<br>
&gt;    rank 0, m = 4000<br>
&gt;    rank 1, m = 4000<br>
&gt;    rank 2, m = 4000<br>
&gt;    rank 0, m = 5000<br>
&gt;    rank 2, m = 5000<br>
&gt;    rank 1, m = 5000<br>
&gt;    rank 0, m = 6000<br>
&gt;    rank 1, m = 6000<br>
&gt;    rank 2, m = 6000<br>
&gt;    rank 2, m = 7000<br>
&gt;    rank 1, m = 7000<br>
&gt;    rank 0, m = 7000<br>
&gt;    rank 0, m = 8000<br>
&gt;    rank 2, m = 8000<br>
&gt;    rank 1, m = 8000<br>
&gt;    rank 0, m = 9000<br>
&gt;    rank 2, m = 9000<br>
&gt;    rank 1, m = 9000<br>
&gt;    rank 2, m = 10000<br>
&gt;    rank 0, m = 10000<br>
&gt;    rank 1, m = 10000<br>
&gt;    rank 1, m = 11000<br>
&gt;    rank 0, m = 11000<br>
&gt;    rank 2, m = 11000<br>
&gt;    rank 2, m = 12000<br>
&gt;    rank 1, m = 12000<br>
&gt;    rank 0, m = 12000<br>
&gt;    rank 1, m = 13000<br>
&gt;    rank 0, m = 13000<br>
&gt;    rank 2, m = 13000<br>
&gt;    rank 1, m = 14000<br>
&gt;    rank 2, m = 14000<br>
&gt;    rank 0, m = 14000<br>
&gt;    rank 1, m = 15000<br>
&gt;    rank 0, m = 15000<br>
&gt;    rank 2, m = 15000<br>
&gt;    etc...<br>
&gt;<br>
&gt;    It looks like a bug in the SM BTL. I can poke some more at this tomorrow.<br>
&gt;<br>
&gt;    Josh<br>
&gt;    On Sun, Feb 22, 2015 at 11:18 PM, Sachin Krishnan &lt;<a href="mailto:sachkris@gmail.com" target="_blank">sachkris@gmail.com</a>&gt;<br>
&gt;    wrote:<br>
&gt;<br>
&gt;      George,<br>
&gt;      I was able to run the code without any errors in an older version of<br>
&gt;      OpenMPI in another machine. It looks like some problem with my machine<br>
&gt;      like Josh pointed out.<br>
&gt;      Adding --mca coll tuned or basic  to the mpirun command resulted in an<br>
&gt;      MPI_Init failed error with the following additional information for the<br>
&gt;      Open MPI developer:<br>
&gt;       mca_coll_base_comm_select(MPI_COMM_WORLD) failed<br>
&gt;        --&gt; Returned &quot;Not found&quot; (-13) instead of &quot;Success&quot; (0)<br>
&gt;      Thanks for the help.<br>
&gt;      Sachin<br>
&gt;      On Mon, Feb 23, 2015 at 4:17 AM, George Bosilca &lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;<br>
&gt;      wrote:<br>
&gt;<br>
&gt;        Sachin,<br>
&gt;        I cant replicate your issue neither with the latest 1.8 nor with the<br>
&gt;        trunk. I tried using a single host, while forcing SM and then TP to no<br>
&gt;        avail.<br>
&gt;        Can you try restricting the collective modules in use (adding --mca<br>
&gt;        coll tuned,basic) to your mpirun command?<br>
&gt;          George.<br>
&gt;        On Fri, Feb 20, 2015 at 9:31 PM, Sachin Krishnan &lt;<a href="mailto:sachkris@gmail.com" target="_blank">sachkris@gmail.com</a>&gt;<br>
&gt;        wrote:<br>
&gt;<br>
&gt;          Josh,<br>
&gt;          Thanks for the help.<br>
&gt;          I&#39;m running on a single host. How do I confirm that it is an issue<br>
&gt;          with the shared memory?<br>
&gt;          Sachin<br>
&gt;          On Fri, Feb 20, 2015 at 11:58 PM, Joshua Ladd &lt;<a href="mailto:jladd.mlnx@gmail.com" target="_blank">jladd.mlnx@gmail.com</a>&gt;<br>
&gt;          wrote:<br>
&gt;<br>
&gt;            Sachin,<br>
&gt;<br>
&gt;            Are you running this on a single host or across multiple hosts<br>
&gt;            (i.e. are you communicating between processes via networking.) If<br>
&gt;            it&#39;s on a single host, then it might be an issue with shared<br>
&gt;            memory.<br>
&gt;<br>
&gt;            Josh<br>
&gt;            On Fri, Feb 20, 2015 at 1:51 AM, Sachin Krishnan<br>
&gt;            &lt;<a href="mailto:sachkris@gmail.com" target="_blank">sachkris@gmail.com</a>&gt; wrote:<br>
&gt;<br>
&gt;              Hello Josh,<br>
&gt;<br>
&gt;              The command i use to compile the code is:<br>
&gt;<br>
&gt;              mpicc bcast_loop.c<br>
&gt;<br>
&gt;              To run the code I use:<br>
&gt;<br>
&gt;              mpirun -np 2 ./a.out<br>
&gt;<br>
&gt;              Output is unpredictable. It gets stuck at different places.<br>
&gt;<br>
&gt;              Im attaching lstopo and ompi_info outputs. Do you need any other<br>
&gt;              info?<br>
&gt;<br>
&gt;              lstopo-no-graphics output:<br>
&gt;<br>
&gt;              Machine (3433MB)<br>
&gt;<br>
&gt;                Socket L#0 + L3 L#0 (8192KB)<br>
&gt;<br>
&gt;                  L2 L#0 (256KB) + L1d L#0 (32KB) + L1i L#0 (32KB) + Core L#0<br>
&gt;<br>
&gt;                    PU L#0 (P#0)<br>
&gt;<br>
&gt;                    PU L#1 (P#4)<br>
&gt;<br>
&gt;                  L2 L#1 (256KB) + L1d L#1 (32KB) + L1i L#1 (32KB) + Core L#1<br>
&gt;<br>
&gt;                    PU L#2 (P#1)<br>
&gt;<br>
&gt;                    PU L#3 (P#5)<br>
&gt;<br>
&gt;                  L2 L#2 (256KB) + L1d L#2 (32KB) + L1i L#2 (32KB) + Core L#2<br>
&gt;<br>
&gt;                    PU L#4 (P#2)<br>
&gt;<br>
&gt;                    PU L#5 (P#6)<br>
&gt;<br>
&gt;                  L2 L#3 (256KB) + L1d L#3 (32KB) + L1i L#3 (32KB) + Core L#3<br>
&gt;<br>
&gt;                    PU L#6 (P#3)<br>
&gt;<br>
&gt;                    PU L#7 (P#7)<br>
&gt;<br>
&gt;                HostBridge L#0<br>
&gt;<br>
&gt;                  PCI 8086:0162<br>
&gt;<br>
&gt;                    GPU L#0 &quot;card0&quot;<br>
&gt;<br>
&gt;                    GPU L#1 &quot;renderD128&quot;<br>
&gt;<br>
&gt;                    GPU L#2 &quot;controlD64&quot;<br>
&gt;<br>
&gt;                  PCI 8086:1502<br>
&gt;<br>
&gt;                    Net L#3 &quot;eth0&quot;<br>
&gt;<br>
&gt;                  PCI 8086:1e02<br>
&gt;<br>
&gt;                    Block L#4 &quot;sda&quot;<br>
&gt;<br>
&gt;                    Block L#5 &quot;sr0&quot;<br>
&gt;<br>
&gt;              ompi_info output:<br>
&gt;<br>
&gt;                               Package: Open MPI builduser@anatol Distribution<br>
&gt;<br>
&gt;                              Open MPI: 1.8.4<br>
&gt;<br>
&gt;                Open MPI repo revision: v1.8.3-330-g0344f04<br>
&gt;<br>
&gt;                 Open MPI release date: Dec 19, 2014<br>
&gt;<br>
&gt;                              Open RTE: 1.8.4<br>
&gt;<br>
&gt;                Open RTE repo revision: v1.8.3-330-g0344f04<br>
&gt;<br>
&gt;                 Open RTE release date: Dec 19, 2014<br>
&gt;<br>
&gt;                                  OPAL: 1.8.4<br>
&gt;<br>
&gt;                    OPAL repo revision: v1.8.3-330-g0344f04<br>
&gt;<br>
&gt;                     OPAL release date: Dec 19, 2014<br>
&gt;<br>
&gt;                               MPI API: 3.0<br>
&gt;<br>
&gt;                          Ident string: 1.8.4<br>
&gt;<br>
&gt;                                Prefix: /usr<br>
&gt;<br>
&gt;               Configured architecture: i686-pc-linux-gnu<br>
&gt;<br>
&gt;                        Configure host: anatol<br>
&gt;<br>
&gt;                         Configured by: builduser<br>
&gt;<br>
&gt;                         Configured on: Sat Dec 20 17:00:34 PST 2014<br>
&gt;<br>
&gt;                        Configure host: anatol<br>
&gt;<br>
&gt;                              Built by: builduser<br>
&gt;<br>
&gt;                              Built on: Sat Dec 20 17:12:16 PST 2014<br>
&gt;<br>
&gt;                            Built host: anatol<br>
&gt;<br>
&gt;                            C bindings: yes<br>
&gt;<br>
&gt;                          C++ bindings: yes<br>
&gt;<br>
&gt;                           Fort mpif.h: yes (all)<br>
&gt;<br>
&gt;                          Fort use mpi: yes (full: ignore TKR)<br>
&gt;<br>
&gt;                     Fort use mpi size: deprecated-ompi-info-value<br>
&gt;<br>
&gt;                      Fort use mpi_f08: yes<br>
&gt;<br>
&gt;               Fort mpi_f08 compliance: The mpi_f08 module is available, but<br>
&gt;              due to<br>
&gt;<br>
&gt;                                        limitations in the /usr/bin/gfortran<br>
&gt;              compiler, does<br>
&gt;<br>
&gt;                                        not support the following: array<br>
&gt;              subsections,<br>
&gt;<br>
&gt;                                        direct passthru (where possible) to<br>
&gt;              underlying Open<br>
&gt;<br>
&gt;                                        MPI&#39;s C functionality<br>
&gt;<br>
&gt;                Fort mpi_f08 subarrays: no<br>
&gt;<br>
&gt;                         Java bindings: no<br>
&gt;<br>
&gt;                Wrapper compiler rpath: runpath<br>
&gt;<br>
&gt;                            C compiler: gcc<br>
&gt;<br>
&gt;                   C compiler absolute: /usr/bin/gcc<br>
&gt;<br>
&gt;                C compiler family name: GNU<br>
&gt;<br>
&gt;                    C compiler version: 4.9.2<br>
&gt;<br>
&gt;                          C++ compiler: g++<br>
&gt;<br>
&gt;                 C++ compiler absolute: /usr/bin/g++<br>
&gt;<br>
&gt;                         Fort compiler: /usr/bin/gfortran<br>
&gt;<br>
&gt;                     Fort compiler abs:<br>
&gt;<br>
&gt;                       Fort ignore TKR: yes (!GCC$ ATTRIBUTES NO_ARG_CHECK ::)<br>
&gt;<br>
&gt;                 Fort 08 assumed shape: yes<br>
&gt;<br>
&gt;                    Fort optional args: yes<br>
&gt;<br>
&gt;                        Fort INTERFACE: yes<br>
&gt;<br>
&gt;                  Fort ISO_FORTRAN_ENV: yes<br>
&gt;<br>
&gt;                     Fort STORAGE_SIZE: yes<br>
&gt;<br>
&gt;                    Fort BIND(C) (all): yes<br>
&gt;<br>
&gt;                    Fort ISO_C_BINDING: yes<br>
&gt;<br>
&gt;               Fort SUBROUTINE BIND(C): yes<br>
&gt;<br>
&gt;                     Fort TYPE,BIND(C): yes<br>
&gt;<br>
&gt;               Fort T,BIND(C,name=&quot;a&quot;): yes<br>
&gt;<br>
&gt;                          Fort PRIVATE: yes<br>
&gt;<br>
&gt;                        Fort PROTECTED: yes<br>
&gt;<br>
&gt;                         Fort ABSTRACT: yes<br>
&gt;<br>
&gt;                     Fort ASYNCHRONOUS: yes<br>
&gt;<br>
&gt;                        Fort PROCEDURE: yes<br>
&gt;<br>
&gt;                         Fort C_FUNLOC: yes<br>
&gt;<br>
&gt;               Fort f08 using wrappers: yes<br>
&gt;<br>
&gt;                       Fort MPI_SIZEOF: yes<br>
&gt;<br>
&gt;                           C profiling: yes<br>
&gt;<br>
&gt;                         C++ profiling: yes<br>
&gt;<br>
&gt;                 Fort mpif.h profiling: yes<br>
&gt;<br>
&gt;                Fort use mpi profiling: yes<br>
&gt;<br>
&gt;                 Fort use mpi_f08 prof: yes<br>
&gt;<br>
&gt;                        C++ exceptions: no<br>
&gt;<br>
&gt;                        Thread support: posix (MPI_THREAD_MULTIPLE: no, OPAL<br>
&gt;              support: yes,<br>
&gt;<br>
&gt;                                        OMPI progress: no, ORTE progress: yes,<br>
&gt;              Event lib:<br>
&gt;<br>
&gt;                                        yes)<br>
&gt;<br>
&gt;                         Sparse Groups: no<br>
&gt;<br>
&gt;                Internal debug support: no<br>
&gt;<br>
&gt;                MPI interface warnings: yes<br>
&gt;<br>
&gt;                   MPI parameter check: runtime<br>
&gt;<br>
&gt;              Memory profiling support: no<br>
&gt;<br>
&gt;              Memory debugging support: no<br>
&gt;<br>
&gt;                       libltdl support: yes<br>
&gt;<br>
&gt;                 Heterogeneous support: no<br>
&gt;<br>
&gt;               mpirun default --prefix: no<br>
&gt;<br>
&gt;                       MPI I/O support: yes<br>
&gt;<br>
&gt;                     MPI_WTIME support: gettimeofday<br>
&gt;<br>
&gt;                   Symbol vis. support: yes<br>
&gt;<br>
&gt;                 Host topology support: yes<br>
&gt;<br>
&gt;                        MPI extensions:<br>
&gt;<br>
&gt;                 FT Checkpoint support: no (checkpoint thread: no)<br>
&gt;<br>
&gt;                 C/R Enabled Debugging: no<br>
&gt;<br>
&gt;                   VampirTrace support: yes<br>
&gt;<br>
&gt;                MPI_MAX_PROCESSOR_NAME: 256<br>
&gt;<br>
&gt;                  MPI_MAX_ERROR_STRING: 256<br>
&gt;<br>
&gt;                   MPI_MAX_OBJECT_NAME: 64<br>
&gt;<br>
&gt;                      MPI_MAX_INFO_KEY: 36<br>
&gt;<br>
&gt;                      MPI_MAX_INFO_VAL: 256<br>
&gt;<br>
&gt;                     MPI_MAX_PORT_NAME: 1024<br>
&gt;<br>
&gt;                MPI_MAX_DATAREP_STRING: 128<br>
&gt;<br>
&gt;                         MCA backtrace: execinfo (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                          MCA compress: bzip (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                          MCA compress: gzip (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA crs: none (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                                MCA db: hash (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                                MCA db: print (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA event: libevent2021 (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA hwloc: external (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                                MCA if: posix_ipv4 (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                                MCA if: linux_ipv6 (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                       MCA installdirs: env (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                       MCA installdirs: config (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                        MCA memchecker: valgrind (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                            MCA memory: linux (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA pstat: linux (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA sec: basic (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA shmem: mmap (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA shmem: posix (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA shmem: sysv (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA timer: linux (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA dfs: app (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA dfs: orted (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA dfs: test (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                            MCA errmgr: default_app (MCA v2.0, API v3.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                            MCA errmgr: default_hnp (MCA v2.0, API v3.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                            MCA errmgr: default_orted (MCA v2.0, API v3.0,<br>
&gt;              Component<br>
&gt;<br>
&gt;                                        v1.8.4)<br>
&gt;<br>
&gt;                            MCA errmgr: default_tool (MCA v2.0, API v3.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                               MCA ess: env (MCA v2.0, API v3.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA ess: hnp (MCA v2.0, API v3.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA ess: singleton (MCA v2.0, API v3.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                               MCA ess: tool (MCA v2.0, API v3.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA filem: raw (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                           MCA grpcomm: bad (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA iof: hnp (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA iof: mr_hnp (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA iof: mr_orted (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                               MCA iof: orted (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA iof: tool (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA odls: default (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA oob: tcp (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA plm: isolated (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                               MCA plm: rsh (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA ras: loadleveler (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                               MCA ras: simulator (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA rmaps: lama (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA rmaps: mindist (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA rmaps: ppr (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA rmaps: rank_file (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA rmaps: resilient (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA rmaps: round_robin (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA rmaps: seq (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA rmaps: staged (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA rml: oob (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                            MCA routed: binomial (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                            MCA routed: debruijn (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                            MCA routed: direct (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                            MCA routed: radix (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA state: app (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA state: hnp (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA state: novm (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA state: orted (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA state: staged_hnp (MCA v2.0, API v1.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA state: staged_orted (MCA v2.0, API v1.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA state: tool (MCA v2.0, API v1.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                         MCA allocator: basic (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                         MCA allocator: bucket (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA bcol: basesmuma (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                              MCA bcol: ptpcoll (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA bml: r2 (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA btl: self (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA btl: sm (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA btl: tcp (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA btl: vader (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA coll: basic (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA coll: hierarch (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                              MCA coll: inter (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA coll: libnbc (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA coll: ml (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA coll: self (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA coll: sm (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA coll: tuned (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA dpm: orte (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA fbtl: posix (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA fcoll: dynamic (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA fcoll: individual (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA fcoll: static (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA fcoll: two_phase (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                             MCA fcoll: ylib (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                                MCA fs: ufs (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                                MCA io: ompio (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                                MCA io: romio (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA mpool: grdma (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                             MCA mpool: sm (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA osc: rdma (MCA v2.0, API v3.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA osc: sm (MCA v2.0, API v3.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA pml: v (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA pml: bfo (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA pml: cm (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA pml: ob1 (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                            MCA pubsub: orte (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                            MCA rcache: vma (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                               MCA rte: orte (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA sbgp: basesmsocket (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                              MCA sbgp: basesmuma (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                              MCA sbgp: p2p (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                          MCA sharedfp: individual (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                          MCA sharedfp: lockedfile (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;                          MCA sharedfp: sm (MCA v2.0, API v2.0, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                              MCA topo: basic (MCA v2.0, API v2.1, Component<br>
&gt;              v1.8.4)<br>
&gt;<br>
&gt;                         MCA vprotocol: pessimist (MCA v2.0, API v2.0,<br>
&gt;              Component v1.8.4)<br>
&gt;<br>
&gt;              Sachin<br>
&gt;<br>
&gt;              &gt;Sachin,<br>
&gt;<br>
&gt;              &gt;Can you, please, provide a command line? Additional information<br>
&gt;              about your<br>
&gt;              &gt;system could be helpful also.<br>
&gt;<br>
&gt;              &gt;Josh<br>
&gt;<br>
&gt;              &gt;&gt;On Wed, Feb 18, 2015 at 3:43 AM, Sachin Krishnan<br>
&gt;              &lt;sachkris_at_[hidden]&gt; wrote:<br>
&gt;<br>
&gt;              &gt;&gt; Hello,<br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt; I am new to MPI and also this list.<br>
&gt;              &gt;&gt; I wrote an MPI code with several MPI_Bcast calls in a loop.<br>
&gt;              My code was<br>
&gt;              &gt;&gt; getting stuck at random points, ie it was not systematic.<br>
&gt;              After a few hours<br>
&gt;              &gt;&gt; of debugging and googling, I found that the issue may be with<br>
&gt;              the several<br>
&gt;              &gt;&gt; MPI_Bcast calls in a loop.<br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt; I stumbled on this test code which can reproduce the issue:<br>
&gt;              &gt;&gt; <a href="https://github.com/fintler/ompi/blob/master/orte/test/mpi/bcast_loop.c" target="_blank">https://github.com/fintler/ompi/blob/master/orte/test/mpi/bcast_loop.c</a><br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt; Im using OpenMPI v1.8.4 installed from official Arch Linux<br>
&gt;              repo.<br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt; Is it a known issue with OpenMPI?<br>
&gt;              &gt;&gt; Is it some problem with the way openmpi is configured in my<br>
&gt;              system?<br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt; Thanks in advance.<br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt; Sachin<br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt;<br>
&gt;              &gt;&gt; _______________________________________________<br>
&gt;              &gt;&gt; users mailing list<br>
&gt;              &gt;&gt; users_at_[hidden]<br>
&gt;              &gt;&gt;<br>
&gt;              Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt;              &gt;&gt; Link to this post:<br>
&gt;              &gt;&gt; <a href="http://www.open-mpi.org/community/lists/users/2015/02/26338.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26338.php</a><br>
&gt;              &gt;&gt;<br>
&gt;<br>
&gt;              _______________________________________________<br>
&gt;              users mailing list<br>
&gt;              <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
&gt;              Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt;              Link to this post:<br>
&gt;              <a href="http://www.open-mpi.org/community/lists/users/2015/02/26363.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26363.php</a><br>
&gt;<br>
&gt;            _______________________________________________<br>
&gt;            users mailing list<br>
&gt;            <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
&gt;            Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt;            Link to this post:<br>
&gt;            <a href="http://www.open-mpi.org/community/lists/users/2015/02/26366.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26366.php</a><br>
&gt;<br>
&gt;          _______________________________________________<br>
&gt;          users mailing list<br>
&gt;          <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
&gt;          Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt;          Link to this post:<br>
&gt;          <a href="http://www.open-mpi.org/community/lists/users/2015/02/26367.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26367.php</a><br>
&gt;<br>
&gt;        _______________________________________________<br>
&gt;        users mailing list<br>
&gt;        <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
&gt;        Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt;        Link to this post:<br>
&gt;        <a href="http://www.open-mpi.org/community/lists/users/2015/02/26368.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26368.php</a><br>
&gt;<br>
&gt;      _______________________________________________<br>
&gt;      users mailing list<br>
&gt;      <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
&gt;      Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt;      Link to this post:<br>
&gt;      <a href="http://www.open-mpi.org/community/lists/users/2015/02/26369.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26369.php</a><br>
<br>
&gt; _______________________________________________<br>
&gt; users mailing list<br>
&gt; <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
</div></div>&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2015/02/26375.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26375.php</a><br>
<br>
<br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></div></div>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2015/02/26376.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26376.php</a><br></blockquote></div><br></div>
<br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2015/02/26377.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/02/26377.php</a><br></blockquote></div><br></div></div>
