Thank you all Jeff, Jody, Prentice and Bogdan for your invaluable clarification, solution and suggestion,<br><br><div class="gmail_quote"><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
Open MPI should return a failure if TCP connectivity is lost, even with a non-blocking point-to-point operation.  The failure should be returned in the call to MPI_TEST (and friends).</blockquote><div><br>even if MPI_TEST is a local operation?<br>
 <br></div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">  So I&#39;m not sure your timeout has meaning here -- if you reach the timeout, I think it simply means that the MPI communication has not completed yet.  It does not necessarily mean that the MPI communication has failed.<div class="im">
</div></blockquote><div><br>you are absolutely correct., but the job should be done before it expires. that&#39;s the reason I am using TIMEOUT.<br><br>So the conclusion is : <br></div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<div class="im"><br>
</div>
MPI doesn&#39;t provide any standard way to check reachability and/or health of a peer process.</blockquote><div><br>That&#39;s what I wanted to confirm. And to find out the solution, if any, or any alternative.<br><br>So now I think, I should go for Jody&#39;s approach<br>
 </div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><div><br>
How about you start your MPI program from a shell script that does the<br>
following:<br>
<br>
1. Reads a text file containing the names of all the possible candidates<br>
 for MPI nodes<br>
<br>
2. Loops through the list of names from (1) and pings each machine to<br>
see if it&#39;s alive. If the host is pingable, then write it&#39;s name to a<br>
different text file which will be host as the machine file for the<br>
mpirun command</div></blockquote><div> </div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><div><br>
3. Call mpirun using the machine file generated in (2).</div></blockquote><div><br>I am assuming processes have been launched successfully. <br></div></div><br><br clear="all"><br>-- <br>Vipin K.<br>Research Engineer,<br>
C-DOTB, India<br>

