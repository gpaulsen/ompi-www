<div>As an alternate suggestion (although George's is better, since this will affect your entire network connectivity), you could override the default TCP timeout values with the &quot;sysctl -w&quot; command.</div>
<div>The following three OIDs affect TCP timeout behavior under Linux:</div>
<div>&nbsp;</div>
<div>net.ipv4.tcp_keepalive_intvl = 75 &lt;----- How often (in seconds) to send keepalive probes<br>net.ipv4.tcp_keepalive_probes = 9 &lt;----- How many probes to send before declaring the connection dead.<br>net.ipv4.tcp_keepalive_time
 = 7200 &lt;----- How long the connection may be idle before the first keepalive is sent.<br>&nbsp;</div>
<div>Again, use them with caution and not on a live internet server.</div>
<div>&nbsp;</div>
<div>Durga<br><br>&nbsp;</div>
<div><span class="gmail_quote">On 10/26/06, <b class="gmail_sendername">George Bosilca</b> &lt;<a href="mailto:bosilca@cs.utk.edu">bosilca@cs.utk.edu</a>&gt; wrote:</span>
<blockquote class="gmail_quote" style="PADDING-LEFT: 1ex; MARGIN: 0px 0px 0px 0.8ex; BORDER-LEFT: #ccc 1px solid">The Open MPI behavior is the same independently of the network used<br>for the job. At least the behavior dictated by our internal message
<br>passing layer. But, for this to happens we should get a warning from<br>the network that something is wrong (such a timeout). In the case of<br>TCP (and Myrinet) the timeout is so high that Open MPI was not<br>informed that something went wrong (we printout some warnings when
<br>this happens). It was happily waiting for a message to complete ...<br>Once the network cable was reconnected, the network device itself<br>recover and resume the communication, leading to a correct send<br>operation (and this without involving Open MPI at all). There is
<br>nothing (that has a reasonable cost) we can do about this.<br><br>For IB, look like the network timeout is smaller. Open MPI knew that<br>something was wrong (the output prove it), and tried to continue<br>using the other available devices. If none are available, then Open
<br>MPI is supposed to abort the job. For your particular run did you had<br>Ethernet between the nodes ? If yes, I'm quite sure the MPI run<br>wasn't stopped ... it continued using the TCP device (if not disabled<br>by hand at mpirun time).
<br><br>That's not what is supposed to happens right now. If there are other<br>devices (such as TCP) the MPI job will print out some warnings and<br>will continue over the remaining networks (some will continue to use<br>
the other networks, only the peer where the network went down get<br>affected). If the network timeout is too high, Open MPI will never<br>notice that something went wrong. At least not the default message<br>layer (PML).
<br><br>If you want to have the job abort when your main network goes down,<br>disable the usage of the others available network. More specifically<br>disable the TCP. A simple way to do it, it's to add the following<br>argument to your mpirun command:
<br><br>--mca btl ^tcp (or --mca btl opnib,sm,self).<br><br>&nbsp;&nbsp;Thanks,<br>&nbsp;&nbsp;&nbsp;&nbsp;george.<br><br>PS: There are several internal message passing modules available for<br>Open MPI. The default one, look more for performance than
<br>reliability. If reliability it's what you need you should use the DR<br>PML. For this, you can specify --mca pml dr at mpirun time. This (DR)<br>PML has data reliability and timeout (Open MPI internal timeout that<br>
are configurable), allowing to recover faster from a network failure.<br><br><br>On Oct 26, 2006, at 3:52 PM, Troy Telford wrote:<br><br>&gt; I've recently had the chance to see how Open MPI (as well as other<br>&gt; MPIs)
<br>&gt; behave in the case of network failure.<br>&gt;<br>&gt; I've looked at what happens when a node has its network connection<br>&gt; disconnected in the middle of a job, with Ethernet, Myrinet (GM), and<br>&gt; InfiniBand (OpenIB).
<br>&gt;<br>&gt; With Ethernet and Myrinet, the job more or less pauses until the<br>&gt; cable is<br>&gt; re-connected.&nbsp;&nbsp;(I imagine timeouts still apply, but I wasn't patient<br>&gt; enough to wait for them)<br>&gt;<br>&gt; With InfiniBand, the job pauses and Open MPI throws a few error
<br>&gt; messages.<br>&gt; After the cable is plugged back in (and the SM catches up), the job<br>&gt; remains where it was when it was paused.&nbsp;&nbsp;I'd guess that part of<br>&gt; this is<br>&gt; that the timeout is much shorter with IB than with Myri or
<br>&gt; Ethernet, and<br>&gt; that when I unplug the IB cable, it times out fairly quickly (and then<br>&gt; Open MPI throws its error messages).<br>&gt;<br>&gt; At any rate, the thought occurs (and it may just be my ignorance of
<br>&gt; MPI):<br>&gt; After a network connection times out (as was apparently the case<br>&gt; with IB),<br>&gt; is the job salvageable?&nbsp;&nbsp;If the jobs are not salvageable, why<br>&gt; didn't Open<br>&gt; MPI abort the job (and clean up the running processes on the nodes)?
<br>&gt; --<br>&gt; Troy Telford<br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">
http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br><br>_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">
http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div><br><br clear="all"><br>-- <br>Devil wanted omnipresence;<br>He therefore created communists. 

