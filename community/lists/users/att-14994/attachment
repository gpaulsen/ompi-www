hi, <br><br>In my computers(X86-64), the sizeof(int)=4, but the sizeof(long)=sizeof(double)=sizeof(size_t)=8. when I checked my mpi.h file, I found that the definition about the sizeof(int) is correct. meanwhile, I think the mpi.h file was generated according to my compute environment when I compiled the Openmpi. So, my codes still don&#39;t work. :(<br>
<br>Further, I found when I called the collective routines(such as, MPI_Allgatherv(...)) which are implemented by the Point 2 Point don&#39;t work either when the data &gt; 2GB.<br><br>Thanks<br>Xianjun<br><br><div class="gmail_quote">
2010/12/6 Tim Prince <span dir="ltr">&lt;<a href="mailto:n8tm@aol.com">n8tm@aol.com</a>&gt;</span><br><blockquote class="gmail_quote" style="margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;">
<div><div></div><div class="h5">On 12/5/2010 7:13 PM, цооэ╬Э wrote:<br>
<blockquote class="gmail_quote" style="margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;">
hi,<br>
<br>
I met a question recently when I tested the MPI_send and MPI_Recv<br>
functions. When I run the following codes, the processes hanged and I<br>
found there was not data transmission in my network at all.<br>
<br>
BTW: I finished this test on two X86-64 computers with 16GB memory and<br>
installed Linux.<br>
<br>
1 #include &lt;stdio.h&gt;<br>
2 #include &lt;mpi.h&gt;<br>
3 #include &lt;stdlib.h&gt;<br>
4 #include &lt;unistd.h&gt;<br>
5<br>
6<br>
7 int main(int argc, char** argv)<br>
8 {<br>
9 int localID;<br>
10 int numOfPros;<br>
11 size_t Gsize = (size_t)2 * 1024 * 1024 * 1024;<br>
12<br>
13 char* g = (char*)malloc(Gsize);<br>
14<br>
15 MPI_Init(&amp;argc, &amp;argv);<br>
16 MPI_Comm_size(MPI_COMM_WORLD, &amp;numOfPros);<br>
17 MPI_Comm_rank(MPI_COMM_WORLD, &amp;localID);<br>
18<br>
19 MPI_Datatype MPI_Type_lkchar;<br>
20 MPI_Type_contiguous(2048, MPI_BYTE, &amp;MPI_Type_lkchar);<br>
21 MPI_Type_commit(&amp;MPI_Type_lkchar);<br>
22<br>
23 if (localID == 0)<br>
24 {<br>
25 MPI_Send(g, 1024*1024, MPI_Type_lkchar, 1, 1, MPI_COMM_WORLD);<br>
26 }<br>
27<br>
28 if (localID != 0)<br>
29 {<br>
30 MPI_Status status;<br>
31 MPI_Recv(g, 1024*1024, MPI_Type_lkchar, 0, 1, \<br>
32 MPI_COMM_WORLD, &amp;status);<br>
33 }<br>
34<br>
35 MPI_Finalize();<br>
36<br>
37 return 0;<br>
38 }<br>
<br>
</blockquote></div></div>
You supplied all your constants as 32-bit signed data, so, even if the count for MPI_Send() and MPI_Recv() were a larger data type, you would see this limit. Did you look at your &lt;mpi.h&gt; ?<br><font color="#888888">
<br>
-- <br>
Tim Prince<br>
<br>
_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a></font></blockquote></div><br>

