<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html;charset=ISO-8859-1" http-equiv="Content-Type">
</head>
<body bgcolor="#ffffff" text="#000000">
Miguel Figueiredo Mascarenhas Sousa Filipe wrote:
<blockquote
 cite="midf058a9c30611080425o70f499a9r6dc174d51f926d4@mail.gmail.com"
 type="cite">
  <pre wrap="">H</pre>
  <blockquote type="cite">
    <blockquote type="cite">
      <pre wrap="">the MPI model assumes you don't have a "shared memory" system..
therefore it is "message passing" oriented, and not designed to
perform optimally on shared memory systems (like SMPs, or numa-CCs).
      </pre>
    </blockquote>
    <pre wrap="">For many programs with both MPI and shared memory implementations, the
MPI version runs faster on SMPs and numa-CCs. Why? See the previous
paragraph...
    </pre>
  </blockquote>
  <pre wrap=""><!---->
Of course it does..its faster to copy data in main memory than it is
to do it thought any kind of network interface. You can optimize you
message passing implementation to a couple of memory to memory copies
when ranks are on the same node. In the worst case, even if using
local IP addresses to communicate between peers/ranks (in the same
node), the operating  system doesn't even touch the interface.. it
will just copy data from a tcp sender buffer to a tcp receiver
buffer.. in the end - that's always faster than going through a
phisical network link.

  </pre>
</blockquote>
There are a lot of papers about the relative merits of a mixed shared
memory and<br>
MPI model - OpenMP on-node and MPI inter-node, for example.&nbsp; Generally
they<br>
seem to show that MPI is at least as good.<br>
<br>
It isn't true that copying data in main memory (with a CPU) is always
faster than<br>
the NIC.&nbsp; Several effects arise:&nbsp; when you copy between address spaces,
then the OS overhead<br>
of making a shared memory region can be high,&nbsp; the CPUs may not be as
good at copying<br>
as the NIC, having the CPU do it can trash the caches, and leave the
copied data in the<br>
wrong cache altogether, and having the CPU do it loses the parallelism
you can get<br>
by letting a separate processor (the NIC) do the work.<br>
<br>
-Larry<br>
<br>
</body>
</html>

