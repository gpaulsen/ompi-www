<html>
  <head>
    <meta content="text/html; charset=windows-1252"
      http-equiv="Content-Type">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    <br>
    <div class="moz-cite-prefix">On 9/12/2014 9:22 AM, JR Cary wrote:<br>
    </div>
    <blockquote cite="mid:541301B7.3070502@txcorp.com" type="cite">
      <meta content="text/html; charset=windows-1252"
        http-equiv="Content-Type">
      <font face="Courier New, Courier, monospace"><font face="Courier
          New, Courier, monospace"><br>
        </font><br>
      </font>
      <div class="moz-cite-prefix">On 9/12/14, 7:27 AM, Tim Prince
        wrote:<br>
      </div>
      <blockquote cite="mid:5412F4B1.2060709@aol.com" type="cite">
        <meta content="text/html; charset=windows-1252"
          http-equiv="Content-Type">
        <br>
        <div class="moz-cite-prefix">On 9/12/2014 6:14 AM, JR Cary
          wrote:<br>
        </div>
        <blockquote cite="mid:5412D578.1040703@txcorp.com" type="cite">
          <meta http-equiv="content-type" content="text/html;
            charset=windows-1252">
          <font face="Courier New, Courier, monospace">This must be a
            very old topic.<br>
            <br>
            I would like to run mpi with one process per node, e.g.,
            using<br>
            -cpus-per-rank=1.  Then I want to use openmp inside of that.<br>
            But other times I will run with a rank on each physical
            core.<br>
            <br>
            Inside my code I would like to detect which situation I am
            in.<br>
            Is there an openmpi api call to determine that?<br>
          </font><br>
        </blockquote>
        <font face="Courier New, Courier, monospace">omp_get_num_threads()

          should work.  Unless you want to choose a different
          non-parallel algorithm for this case, a single thread omp
          parallel region works fine.<br>
          You should soon encounter cases where you want intermediate
          choices, such as 1 rank per CPU package and 1 thread per core,
          even if you stay away from platforms with more than 12 cores
          per CPU.</font><br>
      </blockquote>
      <br>
      <font face="Courier New, Courier, monospace">I may not understand,
        so I will try to ask in more detail.<br>
        <br>
        Suppose I am running on a four-core processor (and my code likes
        one thread per core).<br>
        <br>
        In case 1 I do<br>
        <br>
          mpiexec -np 2 myexec<br>
        <br>
        and I want to know that each mpi process should use 2 threads.<br>
        <br>
        If instead I did</font><br>
      <font face="Courier New, Courier, monospace"><font face="Courier
          New, Courier, monospace"><br>
            mpiexec -np 4 myexec<br>
          <br>
          I want to know that each mpi process should use one thread.<br>
          <br>
          Will omp_get_num_threads() should return a different value for
          those two cases?<br>
          <br>
          Perhaps I am not invoking mpiexec correctly. <br>
          I use MPI_Init_thread(&amp;argc, &amp;argv,
          MPI_THREAD_FUNNELED, &amp;threadSupport), and regardless<br>
          of what how I invoke mpiexec (-n 1, -n 2, -n 4), I see 2
          openmp processes <br>
          and 1 openmp threads (have not called omp_set_num_threads).<br>
          When I run serial, I see 8 openmp processes and 1 openmp
          threads.<br>
          So I must be missing an arg to mpiexec?<br>
          <br>
          This is a 4-core haswell with hyperthreading to get 8.<br>
          <br>
            </font></font><br>
    </blockquote>
    Sorry, I assumed you were setting OMP_NUM_THREADS for your runs.  If
    you don't do that, each instance of OpenMP will try to run 8
    threads, where you probably want just 1 thread per core.  I turn off
    hyperthreading in BIOS on my machines, as I never run anything which
    would benefit from it.  <br>
  </body>
</html>

