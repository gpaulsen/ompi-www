<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="Content-Type">
  <title></title>
</head>
<body bgcolor="#ffffff" text="#000000">
On 4/26/2010 2:31 AM, Asad Ali wrote:
<blockquote
 cite="mid:h2x28d120cc1004260231r7c301c5dy11fd8ab79450e5bc@mail.gmail.com"
 type="cite"><br>
  <br>
  <div class="gmail_quote">On Mon, Apr 26, 2010 at 8:01 PM, Ashley
Pittman <span dir="ltr">&lt;<a moz-do-not-send="true"
 href="mailto:ashley@pittman.co.uk">ashley@pittman.co.uk</a>&gt;</span>
wrote:<br>
  <blockquote class="gmail_quote"
 style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
    <div class="im"><br>
On 25 Apr 2010, at 22:27, Asad Ali wrote:<br>
    <br>
&gt; Yes I use different machines such as<br>
&gt;<br>
&gt; machine 1 uses AMD Opterons. (Fedora)<br>
&gt;<br>
&gt; machine 2 and 3 use Intel Xeons. (CentOS)<br>
&gt;<br>
&gt; machine 4 uses slightly older Intel Xeons. (Debian)<br>
&gt;<br>
&gt; Only machine 1 gives correct results. &nbsp;While CentOS and Debian
results are same but are wrong and different from those of machine 1.<br>
    <br>
    </div>
Have you verified the are actually wrong or are they just different?
&nbsp;It's actually perfectly possible for the same program to get different
results from run to run even on the same hardware and the same OS. &nbsp;All
floating point operations by the MPI library are expected to be
deterministic but changing the process layout or and MPI settings can
affect this and of course anything the application does can introduce
differences as well.<br>
    <br>
Ashley.<br>
  </blockquote>
  <div><br>
The code is the same with the same input/output and the same constants
etc. From run to run the results can only be different if you either
use different input/output or use different random number seeds. Here
in my case the random number seeds are the same as well. This means
that this code must give (and it does) the same results no matter how
many times you run it. I didn't tamper with mpi-settings for any run. I
have verified that results of only Fedora are correct because I know
what is in my data and how should my model behave and I get a nearly
perfect convergence on Fedora OS. Even my dual core laptop with Ubuntu
9.10 also gives correct results. The other OSs give the same results
for a few hundred iterations as Fedora but then an unusual thing
happens and the results start getting wrong. <br>
  </div>
  </div>
</blockquote>
If you're really interested in solving your "problem,"&nbsp; you'll have to
consider important details such as which compiler was used, which
options (e.g. 387 vs. sse), run-time setting of x87 or SSE control
registers, 32- vs. 64-bit compilation.&nbsp; SSE2 is the default for 64-bit
compilation, but compilers vary on defaults for 32-bit.&nbsp; If your
program depends on x87 extra precision of doubles, or efficient mixing
of double and long double, 387 code may be a better choice, but limits
your efficiency.<br>
<pre class="moz-signature" cols="72">-- 
Tim Prince</pre>
</body>
</html>

