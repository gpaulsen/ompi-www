<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<META content="MSHTML 6.00.5730.11" name=GENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=#ffffff>
<DIV><FONT face=Arial size=2>This is due to a problem in (void *)-&gt;(uint64_t_ 
conversion in OMPI.&nbsp; The following patch fixes the problem, as would an 
appropriate cast of pval, I suspect.&nbsp; The problem is an inappropriate use 
of ompi_ptr_t.&nbsp; I would guess that other uses of lval might be suspect also 
(such as in the Portals code), since lval&nbsp;might be&nbsp;undefined after 
assigning pval on a 32 bit system.</FONT></DIV>
<DIV><FONT face=Arial size=2></FONT>&nbsp;</DIV>
<DIV><FONT face=Arial size=2>After applying this patch, HPCC runs fine on 
OSX.</FONT></DIV>
<DIV><FONT face=Arial size=2></FONT>&nbsp;</DIV>
<DIV><FONT face=Arial size=2>regards,</FONT></DIV>
<DIV><FONT face=Arial size=2>-reese</FONT></DIV>
<DIV><FONT face=Arial size=2></FONT>&nbsp;</DIV>
<DIV><FONT face=Arial size=2>--- ompi/mca/btl/gm/btl_gm.c<BR>+++ 
ompi/mca/btl/gm/btl_gm.c<BR>@@ -774,7 +774,11 @@<BR>&nbsp;&nbsp;&nbsp;&nbsp; /* 
post the put descriptor */<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
gm_put(gm_btl-&gt;port,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_src-&gt;seg_addr.pval,<BR>+#if GM_SIZEOF_VOID_P == 
4<BR>+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_dst-&gt;seg_addr.ival,<BR>+#else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_dst-&gt;seg_addr.lval,<BR>+#endif<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_src-&gt;seg_len,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
GM_LOW_PRIORITY,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
endpoint-&gt;endpoint_addr.node_id,<BR>@@ -816,7 +820,11 
@@<BR>&nbsp;&nbsp;&nbsp;&nbsp; /* post the put descriptor 
*/<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
gm_put(gm_btl-&gt;port,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_src-&gt;seg_addr.pval,<BR>+#if GM_SIZEOF_VOID_P == 
4<BR>+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_dst-&gt;seg_addr.ival,<BR>+#else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_dst-&gt;seg_addr.lval,<BR>+#endif<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_src-&gt;seg_len,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
GM_LOW_PRIORITY,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
endpoint-&gt;endpoint_addr.node_id,<BR>@@ -919,7 +927,11 @@</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=Arial size=2>&nbsp;&nbsp;&nbsp;&nbsp; /* post get put descriptor 
*/<BR>&nbsp;&nbsp;&nbsp;&nbsp; gm_get(gm_btl-&gt;port,<BR>+#if GM_SIZEOF_VOID_P 
== 4<BR>+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_dst-&gt;seg_addr.ival,<BR>+#else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_dst-&gt;seg_addr.lval,<BR>+#endif<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_src-&gt;seg_addr.pval,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_src-&gt;seg_len,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
GM_LOW_PRIORITY,<BR>@@ -962,7 +974,11 @@</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=Arial size=2>&nbsp;&nbsp;&nbsp;&nbsp; /* post get put descriptor 
*/<BR>&nbsp;&nbsp;&nbsp;&nbsp; gm_get(gm_btl-&gt;port,<BR>+#if GM_SIZEOF_VOID_P 
== 4<BR>+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_dst-&gt;seg_addr.ival,<BR>+#else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_dst-&gt;seg_addr.lval,<BR>+#endif<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_src-&gt;seg_addr.pval,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
des-&gt;des_src-&gt;seg_len,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
GM_LOW_PRIORITY,<BR></FONT></DIV></BODY></HTML>

