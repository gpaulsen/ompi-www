<div dir="ltr">Hi,<div><br></div><div>I am trying to do something like below with OpenMPI and OpenMP (threads).</div><div><br></div><div><img src="cid:ii_1559a3ab8f7ac698" alt="Inline image 1" width="544" height="124"><br></div><div><br></div><div>I was trying to use the explicit thread affinity with GOMP_CPU_AFFINITY environment variable as described here (<a href="https://gcc.gnu.org/onlinedocs/libgomp/GOMP_005fCPU_005fAFFINITY.html">https://gcc.gnu.org/onlinedocs/libgomp/GOMP_005fCPU_005fAFFINITY.html</a>). </div><div><br></div><div>However, both P0 and P1 processes will read the same GOMP_CPU_AFFINITY and will place threads on the same set of cores.</div><div><br></div><div>Is there a way to overcome this and pass process specific affinity scheme to OpenMP when running with OpenMPI? For example, can I say T0 of P0 should be in Core 0, but T0 of P1 should be Core 4?</div><div><br></div><div>P.S. I can manually achieve this within the program using <b>sched_setaffinity()</b>, but that&#39;s not portable.</div><div><br></div><div>Thank you,</div><div>Saliya<br clear="all"><div><br></div>-- <br><div class="gmail_signature" data-smartmail="gmail_signature"><div dir="ltr"><div><div dir="ltr"><div dir="ltr"><div dir="ltr"><span style="color:rgb(136,136,136)">Saliya Ekanayake</span></div><div dir="ltr">Ph.D. Candidate | Research Assistant</div><div dir="ltr">School of Informatics and Computing | Digital Science Center</div><div dir="ltr">Indiana University, Bloomington<br><br><font color="#888888"></font></div></div></div></div></div></div>
</div></div>

