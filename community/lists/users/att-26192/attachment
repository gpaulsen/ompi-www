<html><head><meta http-equiv="Content-Type" content="text/html charset=us-ascii"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class=""><br class=""><div><blockquote type="cite" class=""><div class="">On Jan 15, 2015, at 06:02 , Diego Avesani &lt;<a href="mailto:diego.avesani@gmail.com" class="">diego.avesani@gmail.com</a>&gt; wrote:</div><br class="Apple-interchange-newline"><div class=""><div dir="ltr" class="">Dear Gus, Dear all,<div class="">Thanks a lot.</div><div class=""><span style="font-size:12.8000001907349px" class="">MPI_Type_Struct works well for the first part of my problem, so I am very happy to be able to use it.</span><br class=""></div><div class=""><span style="font-size:12.8000001907349px" class=""><br class=""></span></div><div class=""><span style="font-size:12.8000001907349px" class="">Regarding MPI_TYPE_VECTOR.</span></div><div class=""><span style="font-size:12.8000001907349px" class=""><br class=""></span></div><div class=""><span style="font-size:12.8000001907349px" class="">I have studied it and for simple case it is clear to me what id does (at least I believe). Foe example if I have a matrix define as:</span></div><div class="">REAL, ALLOCATABLE (AA(:,:))</div><div class="">ALLOCATE AA(100,5)</div><div class=""><br class=""></div><div class="">I could send part of it defining</div><div class=""><br class=""></div><div class="">CALL MPI_TYPE_VECTOR(5,1,5,MPI_DOUBLE_PRECISION,<i class="">MY_NEW_TYPE</i>)</div><div class=""><br class=""></div><div class="">after that I can send part of it with</div><div class=""><br class=""></div><div class="">CALL MPI_SEND( AA(1:<i class="">10</i>,:), <i class="">10</i>,&nbsp;<i class="">MY_NEW_TYPE</i>, 1, 0, MPI_COMM_WORLD );<br class=""></div><div class=""><br class=""></div><div class="">Have I understood correctly?</div><div class=""><br class=""></div><div class="">What I can do in case of three dimensional array? for example AA(:,:,:), I am looking to MPI_TYPE_CREATE_SUBARRAY.</div><div class="">Is that the correct way?</div><div class=""><br class=""></div><div class="">Thanks again</div></div></div></blockquote><div><br class=""></div><div>Indeed, using the subarray is the right approach independent on the number of dimensions of the data (you can use it instead of MPI_TYPE_VECTOR as well).</div><div><br class=""></div><div>&nbsp; George.</div><div><br class=""></div><br class=""><blockquote type="cite" class=""><div class=""><div dir="ltr" class=""><div class=""><br class=""></div><div class=""><span style="font-size:12.8000001907349px" class=""><br class=""></span></div><div class=""><br class=""></div></div><div class="gmail_extra"><br clear="all" class=""><div class=""><div class="gmail_signature">Diego<br class=""><br class=""></div></div>
<br class=""><div class="gmail_quote">On 13 January 2015 at 19:04, Gus Correa <span dir="ltr" class="">&lt;<a href="mailto:gus@ldeo.columbia.edu" target="_blank" class="">gus@ldeo.columbia.edu</a>&gt;</span> wrote:<br class=""><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi Diego<br class="">
I guess MPI_Type_Vector is the natural way to send and receive Fortran90 array sections (e.g. your QQMLS(:,50:100,:)).<br class="">
I used that before and it works just fine.<br class="">
I think that is pretty standard MPI programming style.<br class="">
I guess MPI_Type_Struct tries to emulate Fortran90 and C structures<br class="">
(as you did in your previous code, with all the surprises regarding alignment, etc), not array sections.<br class="">
Also, MPI type vector should be more easy going (and probably more efficient) than MPI type struct, with less memory alignment problems.<br class="">
I hope this helps,<br class="">
Gus Correa<br class="">
<br class="">
PS - These books have a quite complete description and several examples<br class="">
of all MPI objects and functions, including MPI types (native and user defined):<br class="">
<a href="http://mitpress.mit.edu/books/mpi-complete-reference-0" target="_blank" class="">http://mitpress.mit.edu/books/<u class=""></u>mpi-complete-reference-0</a><br class="">
<a href="http://mitpress.mit.edu/books/mpi-complete-reference-1" target="_blank" class="">http://mitpress.mit.edu/books/<u class=""></u>mpi-complete-reference-1</a><br class="">
<br class="">
[They cover MPI 1 and 2. I guess there is a new/upcoming book<br class="">
with MPI 3, but for what you're doing 1 and 2 are more than enough.]<span class=""><br class="">
<br class="">
<br class="">
On 01/13/2015 09:22 AM, Diego Avesani wrote:<br class="">
</span><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><span class="">
Dear all,<br class="">
<br class="">
I had some wonderful talking about MPI_type_create_struct adn<br class="">
isend\irecv with<br class="">
Gilles, Gustavo, George, Gus, Tom and Jeff. Now all is more clear and my<br class="">
program works.<br class="">
<br class="">
Now I have another question. In may program I have matrix:<br class="">
<br class=""></span>
/QQMLS(:,:,:) /that is allocate as<br class="">
<br class="">
/ALLOCATE(QQMLS(9,npt,18)/), where npt is the number of particles<span class=""><br class="">
<br class="">
QQMLS is double precision.<br class="">
<br class="">
I would like to sent form a CPU to another part of it, for example,<br class="">
sending QQMLS(:,50:100,:). I mean sending the QQMLS of the particles<br class="">
between 50 to 100.<br class="">
I suppose that i could use MPI_Type_vector but I am not sure. The<br class="">
particle that I want to sent could be from 25 to 50 ecc.. ecc..so<br class="">
&nbsp; blocklength changes everytime.<br class="">
<br class="">
Do I have to use MPI_type_create_struct?<br class="">
Do I have correctly understood MPI_Type_vector?<br class="">
<br class="">
Thanks a lot<br class="">
<br class="">
<br class="">
Diego<br class="">
<br class="">
<br class="">
<br class=""></span>
______________________________<u class=""></u>_________________<br class="">
users mailing list<br class="">
<a href="mailto:users@open-mpi.org" target="_blank" class="">users@open-mpi.org</a><br class="">
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank" class="">http://www.open-mpi.org/<u class=""></u>mailman/listinfo.cgi/users</a><br class="">
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2015/01/26171.php" target="_blank" class="">http://www.open-mpi.org/<u class=""></u>community/lists/users/2015/01/<u class=""></u>26171.php</a><br class="">
<br class="">
</blockquote>
<br class="">
______________________________<u class=""></u>_________________<br class="">
users mailing list<br class="">
<a href="mailto:users@open-mpi.org" target="_blank" class="">users@open-mpi.org</a><br class="">
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank" class="">http://www.open-mpi.org/<u class=""></u>mailman/listinfo.cgi/users</a><br class="">
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2015/01/26172.php" target="_blank" class="">http://www.open-mpi.org/<u class=""></u>community/lists/users/2015/01/<u class=""></u>26172.php</a><br class="">
</blockquote></div><br class=""></div>
_______________________________________________<br class="">users mailing list<br class=""><a href="mailto:users@open-mpi.org" class="">users@open-mpi.org</a><br class="">Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/users<br class="">Link to this post: http://www.open-mpi.org/community/lists/users/2015/01/26184.php</div></blockquote></div><br class=""></body></html>
