<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=Content-Type content="text/html; charset=us-ascii">
<META content="MSHTML 6.00.2900.2914" name=GENERATOR></HEAD>
<BODY>
<DIV><SPAN class=293280017-29062006><FONT face=Arial color=#0000ff size=2>It 
doesn't look like you ever got an answer to this question -- sorry!&nbsp; We 
sometimes get very bad at mail management.&nbsp; :-(</FONT></SPAN></DIV>
<DIV><SPAN class=293280017-29062006><FONT face=Arial color=#0000ff 
size=2></FONT></SPAN>&nbsp;</DIV>
<DIV><SPAN class=293280017-29062006><FONT face=Arial color=#0000ff size=2>I'm 
guessing that this is always going to be a problematic scenario for Open 
MPI.&nbsp; We have to do forwarding of stdin/out/err between the MPI process and 
mpirun.&nbsp;&nbsp;</FONT></SPAN><SPAN class=293280017-29062006><FONT face=Arial 
color=#0000ff size=2>I'm guessing that -- for lack of a longer description -- 
this does not play well with the ncurses model of getting input 
events.</FONT></SPAN></DIV>
<DIV><SPAN class=293280017-29062006><FONT face=Arial color=#0000ff 
size=2></FONT></SPAN>&nbsp;</DIV>
<DIV><SPAN class=293280017-29062006><FONT face=Arial color=#0000ff size=2>So I 
don't have a good answer for you -- I'm guessing that this is simply the nature 
of forwarding I/O around (and reading via ptys -- or not -- and all the 
complications therein).</FONT></SPAN></DIV><BR>
<BLOCKQUOTE dir=ltr 
style="PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #0000ff 2px solid; MARGIN-RIGHT: 0px">
  <DIV class=OutlookMessageHeader lang=en-us dir=ltr align=left>
  <HR tabIndex=-1>
  <FONT face=Tahoma size=2><B>From:</B> users-bounces@open-mpi.org 
  [mailto:users-bounces@open-mpi.org] <B>On Behalf Of </B>Ross 
  Lance<BR><B>Sent:</B> Tuesday, June 13, 2006 7:38 PM<BR><B>To:</B> 
  users@open-mpi.org<BR><B>Subject:</B> [OMPI users] mpirun and 
  ncurses<BR></FONT><BR></DIV>
  <DIV></DIV>
  <DIV>I have been using termios.h to&nbsp;detect a keypress and&nbsp;then deal 
  with it inside of a loop and when&nbsp;porting&nbsp;it over to mpi, and using 
  mpirun it now will&nbsp;wait and the loop&nbsp;is paused waiting for a carrige 
  return checking for a keypress. </DIV>
  <DIV>&nbsp;</DIV>
  <DIV>I then&nbsp;tried ncurses with nodelay() function and the loop continues 
  but still requires a return before it deals with the&nbsp;input inside of 
  mpirun. Where alone it would respond to a keypress without a return.</DIV>
  <DIV>&nbsp;</DIV>
  <DIV>Both methods above are contained within if( rank == 0 ) { }&nbsp;and in a 
  for(;;)</DIV>
  <DIV>&nbsp;</DIV>
  <DIV>And I am using svn checkout of OpenMPI.</DIV>
  <DIV>&nbsp;</DIV>
  <DIV>I would like to be able to press a key within&nbsp;a loop in main to 
  change values and exit the loop. Very&nbsp;easy with&nbsp;both methods above. 
  But mpirun seems to alter the&nbsp;behavior.&nbsp;&nbsp;</DIV>
  <DIV>&nbsp;</DIV>
  <DIV>Do any of you know of a method to acomplish this within an mpi 
  application. I want to loop forever and respong to keyboard input when it 
  comes in or shortly there after.</DIV>
  <DIV>&nbsp;</DIV>
  <DIV>Ross</DIV></BLOCKQUOTE></BODY></HTML>

