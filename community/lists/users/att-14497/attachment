
<br><font size=2 face="sans-serif">Brian </font>
<br>
<br><font size=2 face="sans-serif">Most HPC applications are run with one
processor and one working thread per MPI process. In this case, the node
is not being used for other work so if the MPI process does release a processor,
there is nothing else important for it to do anyway.</font>
<br>
<br><font size=2 face="sans-serif">In these applications, the blocking
MPI call (like MPI_Recv) is issued only when there is no more computation
that can be done until the MPI_Recv returns with with the message. </font>
<br>
<br><font size=2 face="sans-serif">Unless your application has other threads
that can make valuable use of the processor freed up by making MPI_Recv
do yields, the polling &quot;overhead&quot; is probably not something to
worry about.</font>
<br>
<br><font size=2 face="sans-serif">If you do have other work available
for the freed processor to turn to, the &quot;problem&quot; may be worth
solving. MPI implementations, in general, default to a polling approach
because it makes the MPI_Recv faster and if there is nothing else important
for the processor to turn to, a fast MPI_Recv is what matters.</font>
<br>
<br>
<br><font size=2 face="sans-serif">Dick Treumann &nbsp;- &nbsp;MPI Team
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
IBM Systems &amp; Technology Group<br>
Dept X2ZA / MS P963 -- 2455 South Road -- Poughkeepsie, NY 12601<br>
Tele (845) 433-7846 &nbsp; &nbsp; &nbsp; &nbsp; Fax (845) 433-8363<br>
</font>
<br>
<br>
<br>
<table width=100%>
<tr valign=top>
<td><font size=1 color=#5f5f5f face="sans-serif">From:</font>
<td><font size=1 face="sans-serif">Brian Budge &lt;brian.budge@gmail.com&gt;</font>
<tr valign=top>
<td><font size=1 color=#5f5f5f face="sans-serif">To:</font>
<td><font size=1 face="sans-serif">Open MPI Users &lt;users@open-mpi.org&gt;</font>
<tr valign=top>
<td><font size=1 color=#5f5f5f face="sans-serif">Date:</font>
<td><font size=1 face="sans-serif">10/19/2010 09:47 PM</font>
<tr valign=top>
<td><font size=1 color=#5f5f5f face="sans-serif">Subject:</font>
<td><font size=1 face="sans-serif">[OMPI users] busy wait in MPI_Recv</font>
<tr valign=top>
<td><font size=1 color=#5f5f5f face="sans-serif">Sent by:</font>
<td><font size=1 face="sans-serif">users-bounces@open-mpi.org</font></table>
<br>
<hr noshade>
<br>
<br>
<br><tt><font size=2>Hi all -<br>
<br>
I just ran a small test to find out the overhead of an MPI_Recv call<br>
when no communication is occurring. &nbsp; It seems quite high. &nbsp;I
noticed<br>
during my google excursions that openmpi does busy waiting. &nbsp;I also<br>
noticed that the option to -mca mpi_yield_when_idle seems not to help<br>
much (in fact, turning on the yield seems only to slow down the<br>
program). &nbsp;What is the best way to reduce this polling cost during<br>
low-communication invervals? &nbsp;Should I write my own recv loop that<br>
sleeps for short periods? &nbsp;I don't want to go write someone that is<br>
possibly already done much better in the library :)<br>
<br>
Thanks,<br>
 &nbsp;Brian<br>
_______________________________________________<br>
users mailing list<br>
users@open-mpi.org<br>
</font></tt><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users"><tt><font size=2>http://www.open-mpi.org/mailman/listinfo.cgi/users</font></tt></a><tt><font size=2><br>
</font></tt>
<br>
<br>
