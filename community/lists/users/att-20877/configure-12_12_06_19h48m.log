
============================================================================
== Configuring Open MPI
============================================================================

*** Startup tests
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking target system type... x86_64-unknown-linux-gnu
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for style of include used by make... GNU
checking how to create a ustar tar archive... gnutar
checking dependency style of gcc... gcc3
checking whether make supports nested variables... yes

*** Checking versions
checking Open MPI version... 1.6.3
checking Open MPI release date... Oct 24, 2012
checking Open MPI Subversion repository version... r27472
checking Open MPI Run-Time Environment version... 1.6.3
checking Open MPI Run-Time Environment release date... Oct 24, 2012
checking Open MPI Run-Time Environment Subversion repository version... r27472
checking Open Portable Access Layer version... 1.6.3
checking Open Portable Access Layer release date... Oct 24, 2012
checking Open Portable Access Layer Subversion repository version... r27472

*** Initialization, setup
configure: builddir: /gpfs/bb/appmaint/nbu/installs/openmpi/openmpi-1.6.3
configure: srcdir: /gpfs/bb/appmaint/nbu/installs/openmpi/openmpi-1.6.3
installing to directory "/gpfs/apps/openmpi/1.6.3/gcc_4.7.2-tm-ib"

*** OPAL Configuration options
checking if want to run code coverage... no
checking if want to compile with branch probabilities... no
checking if want to debug memory usage... no
checking if want to profile memory usage... no
checking if want developer-level compiler pickyness... no
checking if want developer-level debugging code... no
checking if want to install project-internal header files... no
checking if want pretty-print stacktrace... yes
checking if want pty support... yes
checking if want weak symbol support... yes
checking if want dlopen support... yes
checking if want heterogeneous support... no
checking if want trace file debugging... no
checking if want fault tolerance... Disabled fault tolerance
checking if want IPv6 support... no
checking if want package/brand string... Open MPI appmaint@bb2login04 Distribution
checking if want ident string... 1.6.3
checking if want to use an alternative checksum algo for messages... no
checking maximum length of processor name... 256
checking maximum length of error string... 256
checking maximum length of object name... 64
checking maximum length of info key... 36
checking maximum length of info val... 256
checking maximum length of port name... 1024
checking maximum length of datarep string... 128

*** ORTE Configuration options
checking if want full RTE support... yes
checking if want orterun "--prefix" behavior to be enabled by default... no

*** OMPI Configuration options
checking if want compile-time warnings inside of mpi.h... no
checking if want sparse process groups... no
checking if want peruse support... no
checking if want Fortran 77 bindings... yes
checking if want Fortran 90 bindings... yes
checking Fortran 90 bindings "size"... small
checking if want PMPI... yes
checking if want C++ bindings... yes
checking if want MPI::SEEK_SET support... yes
checking if want run-time MPI parameter checking... runtime
checking max supported array dimension in F90 MPI bindings... 4

============================================================================
== Compiler and preprocessor tests
============================================================================

*** C compiler and preprocessor
checking for gcc... (cached) gcc
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for gcc option to accept ISO C89... (cached) none needed
checking whether gcc and cc understand -c and -o together... yes
checking for the C compiler vendor... gnu
checking for ANSI C header files... (cached) yes
checking if gcc supports -finline-functions... yes
checking if gcc supports -fno-strict-aliasing... yes
configure: WARNING:  -fno-strict-aliasing has been added to CFLAGS
checking if gcc supports __builtin_expect... yes
checking if gcc supports __builtin_prefetch... yes
checking for C optimization flags... -DNDEBUG -g -O2 -finline-functions -fno-strict-aliasing
checking for Interix environment... no
checking for C ident string support... #ident
checking for int8_t... yes
checking for uint8_t... yes
checking for int16_t... yes
checking for uint16_t... yes
checking for int32_t... yes
checking for uint32_t... yes
checking for int64_t... yes
checking for uint64_t... yes
checking for int128_t... no
checking for uint128_t... no
checking for long long... yes
checking for long double... yes
checking for float _Complex... yes
checking for double _Complex... yes
checking for long double _Complex... yes
checking for intptr_t... yes
checking for uintptr_t... yes
checking for mode_t... yes
checking for ssize_t... yes
checking for ptrdiff_t... yes
checking size of char... 1
checking size of short... 2
checking size of int... 4
checking size of long... 8
checking size of long long... 8
checking size of float... 4
checking size of double... 8
checking size of long double... 16
checking size of float _Complex... 8
checking size of double _Complex... 16
checking size of long double _Complex... 32
checking size of void *... 8
checking size of size_t... 8
checking size of ssize_t... 8
checking size of ptrdiff_t... 8
checking size of wchar_t... 4
checking alignment of _Bool... 1
checking alignment of int8_t... 1
checking alignment of int16_t... 2
checking alignment of int32_t... 4
checking alignment of int64_t... 8
checking alignment of char... 1
checking alignment of short... 2
checking alignment of wchar_t... 4
checking alignment of int... 4
checking alignment of long... 8
checking alignment of long long... 8
checking alignment of float... 4
checking alignment of double... 8
checking alignment of long double... 16
checking alignment of float _Complex... 4
checking alignment of double _Complex... 8
checking alignment of long double _Complex... 16
checking alignment of void *... 8
checking for C bool type... no
checking size of _Bool... 1
checking for inline... __inline__
checking for C/C++ restrict keyword... __restrict
checking for weak symbol support... yes
checking for functional offsetof macro... yes

*** C++ compiler and preprocessor
checking whether we are using the GNU C++ compiler... yes
checking whether c++ accepts -g... yes
checking dependency style of c++... gcc3
checking how to run the C++ preprocessor... c++ -E
checking for the C++ compiler vendor... gnu
checking if c++ supports -finline-functions... yes
configure: WARNING:  -finline-functions has been added to CXXFLAGS
checking if C and C++ are link compatible... yes
checking for C++ optimization flags... -O3 -DNDEBUG -finline-functions
checking size of bool... 1
checking alignment of bool... 1

*** C++ compiler and preprocessor
checking whether we are using the GNU C++ compiler... (cached) yes
checking whether c++ accepts -g... (cached) yes
checking dependency style of c++... (cached) gcc3
checking how to run the C++ preprocessor... c++ -E
checking if C++ compiler works... yes
checking if c++ supports -finline-functions... yes
configure: WARNING:  -finline-functions has been added to CXXFLAGS
checking if C and C++ are link compatible... (cached) yes
checking for C++ optimization flags... -O3 -DNDEBUG -finline-functions
checking size of bool... (cached) 1
checking alignment of bool... (cached) 1
checking if able to build the MPI C++ bindings... yes
checking for the C++ compiler vendor... (cached) gnu
checking if want C++ exception handling... no
checking for C++ template_repository_directory... not used
checking for C++ compiler template parameters... none needed
checking for C++ ident string support... #ident
checking if c++ supports __builtin_expect... yes
checking if c++ supports __builtin_prefetch... yes
checking if c++ supports const_cast<> properly... yes

*** Compiler characteristics
checking for __attribute__... yes
checking for __attribute__(aligned)... yes
checking for __attribute__(always_inline)... yes
checking for __attribute__(cold)... yes
checking for __attribute__(const)... yes
checking for __attribute__(deprecated)... yes
checking for __attribute__(deprecated_argument)... yes
checking for __attribute__(format)... yes
checking for __attribute__(format_funcptr)... yes
checking for __attribute__(hot)... yes
checking for __attribute__(malloc)... yes
checking for __attribute__(may_alias)... yes
checking for __attribute__(no_instrument_function)... yes
checking for __attribute__(nonnull)... yes
checking for __attribute__(noreturn)... yes
checking for __attribute__(noreturn_funcptr)... yes
checking for __attribute__(packed)... yes
checking for __attribute__(pure)... yes
checking for __attribute__(sentinel)... yes
checking for __attribute__(unused)... yes
checking for __attribute__(visibility)... yes
checking for __attribute__(warn_unused_result)... yes
checking for __attribute__(weak_alias)... yes
checking for compiler familyid... 1
checking for compiler familyname... GNU
checking for compiler version... 263938
checking for compiler version_str... 4.7.2

*** Assembler
checking dependency style of gcc... gcc3
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking for fgrep... /bin/grep -F
checking if need to remove -g from CCASFLAGS... no
checking whether to enable smp locks... yes
checking if .proc/endp is needed... no
checking directive for setting text section... .text
checking directive for exporting symbols... .globl
checking for objdump... objdump
checking if .note.GNU-stack is needed... yes
checking suffix for labels... :
checking prefix for global symbol labels... 
checking prefix for lsym labels... .L
checking prefix for function in .type... @
checking if .size is needed... yes
checking if .align directive takes logarithmic value... no
checking if gcc supports GCC inline assembly... yes
checking if gcc supports DEC inline assembly... no
checking if gcc supports XLC inline assembly... no
checking if c++ supports GCC inline assembly... yes
checking if c++ supports DEC inline assembly... no
checking if c++ supports XLC inline assembly... no
checking for assembly format... default-.text-.globl-:--.L-@-1-0-1-1-1
checking for asssembly architecture... AMD64
checking for perl... perl
checking for pre-built assembly file... yes (atomic-amd64-linux.s)
checking for atomic assembly filename... atomic-amd64-linux.s

*** Fortran 77 compiler
checking whether we are using the GNU Fortran 77 compiler... yes
checking whether gfortran accepts -g... yes

*** Fortran 90/95 compiler
checking whether we are using the GNU Fortran compiler... yes
checking whether gfortran accepts -g... yes
checking if Fortran 77 compiler works... yes
checking gfortran external symbol convention... single underscore
checking if C and Fortran 77 are link compatible... yes
checking to see if F77 compiler likes the C++ exception flags... skipped (no C++ exceptions flags)
checking to see if mpif77/mpif90 compilers need additional linker flags... none
checking if Fortran 77 compiler supports CHARACTER... yes
checking size of Fortran 77 CHARACTER... 1
checking for C type corresponding to CHARACTER... char
checking alignment of Fortran CHARACTER... 1
checking if Fortran 77 compiler supports LOGICAL... yes
checking size of Fortran 77 LOGICAL... 4
checking for C type corresponding to LOGICAL... int
checking alignment of Fortran LOGICAL... 4
checking if Fortran 77 compiler supports LOGICAL*1... yes
checking size of Fortran 77 LOGICAL*1... 1
checking for C type corresponding to LOGICAL*1... char
checking alignment of Fortran LOGICAL*1... 1
checking if Fortran 77 compiler supports LOGICAL*2... yes
checking size of Fortran 77 LOGICAL*2... 2
checking for C type corresponding to LOGICAL*2... short
checking alignment of Fortran LOGICAL*2... 2
checking if Fortran 77 compiler supports LOGICAL*4... yes
checking size of Fortran 77 LOGICAL*4... 4
checking for C type corresponding to LOGICAL*4... int
checking alignment of Fortran LOGICAL*4... 4
checking if Fortran 77 compiler supports LOGICAL*8... yes
checking size of Fortran 77 LOGICAL*8... 8
checking for C type corresponding to LOGICAL*8... long long
checking alignment of Fortran LOGICAL*8... 8
checking if Fortran 77 compiler supports INTEGER... yes
checking size of Fortran 77 INTEGER... 4
checking for C type corresponding to INTEGER... int
checking alignment of Fortran INTEGER... 4
checking if Fortran 77 compiler supports INTEGER*1... yes
checking size of Fortran 77 INTEGER*1... 1
checking for C type corresponding to INTEGER*1... char
checking alignment of Fortran INTEGER*1... 1
checking if Fortran 77 compiler supports INTEGER*2... yes
checking size of Fortran 77 INTEGER*2... 2
checking for C type corresponding to INTEGER*2... short
checking alignment of Fortran INTEGER*2... 2
checking if Fortran 77 compiler supports INTEGER*4... yes
checking size of Fortran 77 INTEGER*4... 4
checking for C type corresponding to INTEGER*4... int
checking alignment of Fortran INTEGER*4... 4
checking if Fortran 77 compiler supports INTEGER*8... yes
checking size of Fortran 77 INTEGER*8... 8
checking for C type corresponding to INTEGER*8... long long
checking alignment of Fortran INTEGER*8... 8
checking if Fortran 77 compiler supports INTEGER*16... yes
checking size of Fortran 77 INTEGER*16... 16
checking for C type corresponding to INTEGER*16... not found
configure: WARNING: *** Did not find corresponding C type
checking if Fortran 77 compiler supports REAL... yes
checking size of Fortran 77 REAL... 4
checking for C type corresponding to REAL... float
checking alignment of Fortran REAL... 4
checking if Fortran 77 compiler supports REAL*2... no
checking if Fortran 77 compiler supports REAL*4... yes
checking size of Fortran 77 REAL*4... 4
checking for C type corresponding to REAL*4... float
checking alignment of Fortran REAL*4... 4
checking if Fortran 77 compiler supports REAL*8... yes
checking size of Fortran 77 REAL*8... 8
checking for C type corresponding to REAL*8... double
checking alignment of Fortran REAL*8... 8
checking if Fortran 77 compiler supports REAL*16... yes
checking size of Fortran 77 REAL*16... 16
checking for C type corresponding to REAL*16... long double
checking alignment of Fortran REAL*16... 16
checking for C type matching bit representation of REAL*16... pending
checking if long double == REAL*16... no
checking for C type matching bit representation of REAL*16... no
configure: WARNING: MPI_REAL16 and MPI_COMPLEX32 support have been disabled
checking if Fortran 77 compiler supports DOUBLE PRECISION... yes
checking size of Fortran 77 DOUBLE PRECISION... 8
checking for C type corresponding to DOUBLE PRECISION... double
checking alignment of Fortran DOUBLE PRECISION... 8
checking if Fortran 77 compiler supports COMPLEX... yes
checking size of Fortran 77 COMPLEX... 8
checking alignment of Fortran COMPLEX... 4
checking if Fortran 77 compiler supports DOUBLE COMPLEX... yes
checking size of Fortran 77 DOUBLE COMPLEX... 16
checking alignment of Fortran DOUBLE COMPLEX... 8
checking if Fortran 77 compiler supports COMPLEX*8... yes
checking size of Fortran 77 COMPLEX*8... 8
checking alignment of Fortran COMPLEX*8... 4
checking if Fortran 77 compiler supports COMPLEX*16... yes
checking size of Fortran 77 COMPLEX*16... 16
checking alignment of Fortran COMPLEX*16... 8
checking if Fortran 77 compiler supports COMPLEX*32... yes
checking size of Fortran 77 COMPLEX*32... 32
checking alignment of Fortran COMPLEX*32... 16
checking for max Fortran MPI handle index... ( 0x7fffffff < 2147483647 ? 0x7fffffff : 2147483647 )
checking Fortran value for .TRUE. logical type... 1
checking for correct handling of Fortran logical arrays... yes
checking for the value of MPI_STATUS_SIZE... 6 Fortran INTEGERs
checking if Fortran compiler works... yes
checking whether gfortran and gfortran compilers are compatible... yes
checking for extra arguments to build a shared library... none needed
checking for Fortran flag to compile .f files... none
checking for Fortran flag to compile .f90 files... none
checking to see if F90 compiler likes the C++ exception flags... skipped (no C++ exceptions flags)
checking for Fortran 90 compiler module include flag... -I
checking if Fortran 90 compiler supports CHARACTER... yes
checking size of Fortran 90 CHARACTER... 1
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports LOGICAL... yes
checking size of Fortran 90 LOGICAL... 4
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports LOGICAL*1... yes
checking size of Fortran 90 LOGICAL*1... 1
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports LOGICAL*2... yes
checking size of Fortran 90 LOGICAL*2... 2
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports LOGICAL*4... yes
checking size of Fortran 90 LOGICAL*4... 4
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports LOGICAL*8... yes
checking size of Fortran 90 LOGICAL*8... 8
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports INTEGER... yes
checking size of Fortran 90 INTEGER... 4
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports INTEGER*1... yes
checking size of Fortran 90 INTEGER*1... 1
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports INTEGER*2... yes
checking size of Fortran 90 INTEGER*2... 2
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports INTEGER*4... yes
checking size of Fortran 90 INTEGER*4... 4
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports INTEGER*8... yes
checking size of Fortran 90 INTEGER*8... 8
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports INTEGER*16... yes
checking size of Fortran 90 INTEGER*16... 16
configure: WARNING: *** Corresponding Fortran 77 type (INTEGER*16) not supported
configure: WARNING: *** Skipping Fortran 90 type (INTEGER*16)
checking if Fortran 90 compiler supports REAL... yes
checking size of Fortran 90 REAL... 4
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports REAL*2... no
checking if Fortran 90 compiler supports REAL*4... yes
checking size of Fortran 90 REAL*4... 4
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports REAL*8... yes
checking size of Fortran 90 REAL*8... 8
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports REAL*16... yes
checking size of Fortran 90 REAL*16... 16
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports DOUBLE PRECISION... yes
checking size of Fortran 90 DOUBLE PRECISION... 8
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports COMPLEX... yes
checking size of Fortran 90 COMPLEX... 8
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports COMPLEX*8... yes
checking size of Fortran 90 COMPLEX*8... 8
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports COMPLEX*16... yes
checking size of Fortran 90 COMPLEX*16... 16
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports COMPLEX*32... yes
checking size of Fortran 90 COMPLEX*32... 32
checking if Fortran 77 and 90 type sizes match... yes
checking if Fortran 90 compiler supports DOUBLE COMPLEX... yes
checking size of Fortran 90 DOUBLE COMPLEX... 16
checking if Fortran 77 and 90 type sizes match... yes
checking Fortran 90 kind of MPI_INTEGER_KIND (selected_int_kind(9))... configure: error: Could not determine kind of selected_int_kind(MPI_INTEGER_KIND)
