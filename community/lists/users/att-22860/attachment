<html><head><meta http-equiv="Content-Type" content="text/html charset=iso-8859-1"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;">I don't think it's a bug in OMPI, but more likely reflects improvements in the default collective algorithms. If you want to further improve performance, you should bind your processes to a core (if your application isn't threaded) or to a socket (if threaded).<div><br></div><div>As someone previously noted, apps will always run slower on multiple nodes vs everything on a single node due to the shared memory vs IB differences. Nothing you can do about that one.</div><div><br></div><div><br><div><div>On Oct 28, 2013, at 10:36 PM, San B &lt;<a href="mailto:forum.san@gmail.com">forum.san@gmail.com</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div dir="ltr">&nbsp; &nbsp; &nbsp; As discussed earlier, the executable which was compiled with OpenMPI-1.4.5 gave very low performance of 12338.809 seconds when job executed on two nodes(8 cores per node). The same job run on single node(all 16cores) got executed in just 3692.403 seconds. Now I compiled the application with OpenMPI-1.6.5 and got executed in&nbsp;5527.320 seconds on two nodes.&nbsp;<div>
<br></div><div>&nbsp; &nbsp; &nbsp;Is this a performance gain with OMPI-1.6.5 over OMPI-1.4.5 or an issue with OPENMPI itself?</div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Oct 15, 2013 at 5:32 PM, San B <span dir="ltr">&lt;<a href="mailto:forum.san@gmail.com" target="_blank">forum.san@gmail.com</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div>Hi,</div><div><br></div><div>&nbsp; &nbsp; &nbsp;As per your instruction, I did the profiling of the application with mpiP. Following is the difference between the two runs:</div>
<div><br></div><div>Run 1: 16 mpi processes on single node</div>
<div><br></div><div><div>@--- MPI Time (seconds) ---------------------------------------------------</div><div>---------------------------------------------------------------------------</div><div>Task &nbsp; &nbsp;AppTime &nbsp; &nbsp;MPITime &nbsp; &nbsp; MPI%</div>

<div>&nbsp; &nbsp;0 &nbsp; 3.61e+03 &nbsp; &nbsp; &nbsp; &nbsp;661 &nbsp; &nbsp;18.32</div><div>&nbsp; &nbsp;1 &nbsp; 3.61e+03 &nbsp; &nbsp; &nbsp; &nbsp;627 &nbsp; &nbsp;17.37</div><div>&nbsp; &nbsp;2 &nbsp; 3.61e+03 &nbsp; &nbsp; &nbsp; &nbsp;700 &nbsp; &nbsp;19.39</div><div>&nbsp; &nbsp;3 &nbsp; 3.61e+03 &nbsp; &nbsp; &nbsp; &nbsp;665 &nbsp; &nbsp;18.41</div><div>&nbsp; &nbsp;4 &nbsp; 3.61e+03 &nbsp; &nbsp; &nbsp; &nbsp;702 &nbsp; &nbsp;19.45</div>

<div>&nbsp; &nbsp;5 &nbsp; 3.61e+03 &nbsp; &nbsp; &nbsp; &nbsp;703 &nbsp; &nbsp;19.48</div><div>&nbsp; &nbsp;6 &nbsp; 3.61e+03 &nbsp; &nbsp; &nbsp; &nbsp;740 &nbsp; &nbsp;20.50</div><div>&nbsp; &nbsp;7 &nbsp; 3.61e+03 &nbsp; &nbsp; &nbsp; &nbsp;763 &nbsp; &nbsp;21.14</div></div><div>...</div><div>...</div><div><br></div><div>Run 2: 16 mpi processes on two nodes - 8 mpi processes per node</div>

<div><br></div><div><div>@--- MPI Time (seconds) ---------------------------------------------------</div><div>---------------------------------------------------------------------------</div><div>Task &nbsp; &nbsp;AppTime &nbsp; &nbsp;MPITime &nbsp; &nbsp; MPI%</div>

<div>&nbsp; &nbsp;0 &nbsp; 1.27e+04 &nbsp; 1.06e+04 &nbsp; &nbsp;84.14</div><div>&nbsp; &nbsp;1 &nbsp; 1.27e+04 &nbsp; 1.07e+04 &nbsp; &nbsp;84.34</div><div>&nbsp; &nbsp;2 &nbsp; 1.27e+04 &nbsp; 1.07e+04 &nbsp; &nbsp;84.20</div><div>&nbsp; &nbsp;3 &nbsp; 1.27e+04 &nbsp; 1.07e+04 &nbsp; &nbsp;84.20</div><div>&nbsp; &nbsp;4 &nbsp; 1.27e+04 &nbsp; 1.07e+04 &nbsp; &nbsp;84.22</div>

<div>&nbsp; &nbsp;5 &nbsp; 1.27e+04 &nbsp; 1.07e+04 &nbsp; &nbsp;84.25</div><div>&nbsp; &nbsp;6 &nbsp; 1.27e+04 &nbsp; 1.06e+04 &nbsp; &nbsp;84.02</div><div>&nbsp; &nbsp;7 &nbsp; 1.27e+04 &nbsp; 1.07e+04 &nbsp; &nbsp;84.35</div><div>&nbsp; &nbsp;8 &nbsp; 1.27e+04 &nbsp; 1.07e+04 &nbsp; &nbsp;84.29</div></div><div><br></div><div><br></div>
<div>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; The time spent for MPI functions in run 1 is less than 20%, where as it is more than 80% in the run 2. For more details, I've attached both output files. Please go thru these files and suggest what optimization we can do with OpenMPI or Intel MKL.</div>

<div><br></div><div>Thanks</div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Mon, Oct 7, 2013 at 12:15 PM, San B <span dir="ltr">&lt;<a href="mailto:forum.san@gmail.com" target="_blank">forum.san@gmail.com</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div><div><p>Hi,<br></p><p>I'm facing a&nbsp; performance issue with a scientific 
application(Fortran). The issue is, it runs faster on single node but 
runs very slow on multiple nodes. For example, a 16 core job on single node
 finishes in 1hr 2mins, but the same job on two nodes (i.e. 8 cores per 
node &amp; remaining 8 cores kept free) takes 3hr 20mins. The code is 
compiled with ifort-13.1.1, openmpi-1.4.5 and intel MKL libraries - 
lapack, blas, scalapack, blacs &amp; fftw. What could be the problem 
here with?</p>Is it possible to do any tuning in OpenMPI? FY More info: The cluster has Intel Sandybridge processor (E5-2670), 
infiniband and Hyperthreading is Enabled. Jobs are submitted thru LSF 
scheduler.<br><br></div>Does HyperThreading causing any problem here?<br><br><br></div><div>Thanks</div></div>
</blockquote></div><br></div>
<br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div><br></div>
_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>http://www.open-mpi.org/mailman/listinfo.cgi/users</blockquote></div><br></div></body></html>
