Hi,<br><br>you are right, I should have provided C++ and Fortran example, so I am doing now<br><br><br>Here is &quot;cplusplus.cpp&quot;<br><br>#include &lt;mpi.h&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br>
int main()<br>{<br>    MPI::Init();<br>    char command[] = &quot;./a.out&quot;;<br>    MPI::Info info;<br>    MPI::Intercomm child = MPI::COMM_WORLD.Spawn(command, NULL, 8,info, 0); <br>    int a[8]={0,0,0,0,0,0,0,0};<br>
    int dummy;<br>    child.Allgather(&amp;dummy, 0, MPI::INT, a, 1, MPI::INT);<br>    child.Disconnect();<br>    cout &lt;&lt; &quot;a[&quot;; <br>    for ( int i = 0; i &lt; 7; i++ )<br>        cout &lt;&lt; a[i] &lt;&lt; &quot;,&quot;;<br>
    cout &lt;&lt; a[7] &lt;&lt; &quot;]&quot; &lt;&lt; endl;<br><br>    MPI::Finalize();<br>}<br><br><br>Here is again &quot;fortran.f90&quot;<br><br>program main<br> use mpi<br> implicit none<br> integer :: parent, rank, val, dummy, ierr<br>
 call MPI_Init(ierr)<br> call MPI_Comm_get_parent(parent, ierr)<br> call MPI_Comm_rank(parent, rank, ierr)<br> val = rank + 1<br> call MPI_Allgather(val,   1, MPI_INTEGER, &amp;<br>                    dummy, 0, MPI_INTEGER, &amp;<br>
                    parent, ierr)<br> call MPI_Comm_disconnect(parent, ierr)<br> call MPI_Finalize(ierr)<br>end program main<br><br>here is how you build and run<br><br>-bash-3.2$ mpif90 fortran.f90<br>-bash-3.2$ mpiCC -o parent cplusplus.cpp<br>
-bash-3.2$ ./parent<br>a[0,0,0,0,0,0,0,0]<br><br><br><br>If I use mpich2, <br>-bash-3.2$ mpif90 fortran.f90<br>-bash-3.2$ mpiCC -o parent cplusplus.cpp<br>-bash-3.2$ ./parent<br>a[1,2,3,4,5,6,7,8]<br><br>I hope that you can repeat this problem to see problem with OPENMPI, <br>
<br>Thanks, <br><br><br><div class="gmail_quote">On Thu, May 20, 2010 at 10:09 AM, Jeff Squyres <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
Can you send us an all-C or all-Fortran example that shows the problem?<br>
<br>
We don&#39;t have easy access to test through the python bindings.  ...ok, I admit it, it&#39;s laziness on my part.  :-)  But having a pure Open MPI test app would also remove some possible variables and possible sources of error.<br>

<div><div></div><div class="h5"><br>
<br>
On May 20, 2010, at 9:43 AM, Battalgazi YILDIRIM wrote:<br>
<br>
&gt; Hi Jody,<br>
&gt;<br>
&gt; I think that it is correct, you can  test this example in your desktop,<br>
&gt;<br>
&gt; thanks,<br>
&gt;<br>
&gt; On Thu, May 20, 2010 at 3:18 AM, jody &lt;<a href="mailto:jody.xha@gmail.com">jody.xha@gmail.com</a>&gt; wrote:<br>
&gt; Hi<br>
&gt; I am really no python expert, but it looks to me as if you were<br>
&gt; gathering arrays filled with zeroes:<br>
&gt;  a = array(&#39;i&#39;, [0]) * n<br>
&gt;<br>
&gt; Shouldn&#39;t this line be<br>
&gt;  a = array(&#39;i&#39;, [r])*n<br>
&gt; where r is the rank of the process?<br>
&gt;<br>
&gt; Jody<br>
&gt;<br>
&gt;<br>
&gt; On Thu, May 20, 2010 at 12:00 AM, Battalgazi YILDIRIM<br>
&gt; &lt;<a href="mailto:yildirimga@gmail.com">yildirimga@gmail.com</a>&gt; wrote:<br>
&gt; &gt; Hi,<br>
&gt; &gt;<br>
&gt; &gt;<br>
&gt; &gt; I am trying to use intercommunicator ::Allgather between two child process.<br>
&gt; &gt; I have fortran and Python code,<br>
&gt; &gt; I am using mpi4py for python. It seems that ::Allgather is not working<br>
&gt; &gt; properly in my desktop.<br>
&gt; &gt;<br>
&gt; &gt;  I have contacted first mpi4py developers (Lisandro Dalcin), he simplified<br>
&gt; &gt; my problem and provided two example files (python.py and fortran.f90,<br>
&gt; &gt; please see below).<br>
&gt; &gt;<br>
&gt; &gt; We tried with different MPI vendors, the following example worked correclty(<br>
&gt; &gt; it means the final print out should be array(&#39;i&#39;, [1, 2, 3, 4, 5, 6, 7, 8])<br>
&gt; &gt; )<br>
&gt; &gt;<br>
&gt; &gt; However, it is not giving correct answer in my two desktop (Redhat and<br>
&gt; &gt; ubuntu) both<br>
&gt; &gt; using OPENMPI<br>
&gt; &gt;<br>
&gt; &gt; Could yo look at this problem please?<br>
&gt; &gt;<br>
&gt; &gt; If you want to follow our discussion before you, you can go to following<br>
&gt; &gt; link:<br>
&gt; &gt; <a href="http://groups.google.com/group/mpi4py/browse_thread/thread/c17c660ae56ff97e" target="_blank">http://groups.google.com/group/mpi4py/browse_thread/thread/c17c660ae56ff97e</a><br>
&gt; &gt;<br>
&gt; &gt; yildirim@memosa:~/python_intercomm$ more python.py<br>
&gt; &gt; from mpi4py import MPI<br>
&gt; &gt; from array import array<br>
&gt; &gt; import os<br>
&gt; &gt;<br>
&gt; &gt; progr = os.path.abspath(&#39;a.out&#39;)<br>
&gt; &gt; child = MPI.COMM_WORLD.Spawn(progr,[], 8)<br>
&gt; &gt; n = child.remote_size<br>
&gt; &gt; a = array(&#39;i&#39;, [0]) * n<br>
&gt; &gt; child.Allgather([None,<a href="http://MPI.INT" target="_blank">MPI.INT</a>],[a,<a href="http://MPI.INT" target="_blank">MPI.INT</a>])<br>
&gt; &gt; child.Disconnect()<br>
&gt; &gt; print a<br>
&gt; &gt;<br>
&gt; &gt; yildirim@memosa:~/python_intercomm$ more fortran.f90<br>
&gt; &gt; program main<br>
&gt; &gt;  use mpi<br>
&gt; &gt;  implicit none<br>
&gt; &gt;  integer :: parent, rank, val, dummy, ierr<br>
&gt; &gt;  call MPI_Init(ierr)<br>
&gt; &gt;  call MPI_Comm_get_parent(parent, ierr)<br>
&gt; &gt;  call MPI_Comm_rank(parent, rank, ierr)<br>
&gt; &gt;  val = rank + 1<br>
&gt; &gt;  call MPI_Allgather(val,   1, MPI_INTEGER, &amp;<br>
&gt; &gt;                     dummy, 0, MPI_INTEGER, &amp;<br>
&gt; &gt;                     parent, ierr)<br>
&gt; &gt;  call MPI_Comm_disconnect(parent, ierr)<br>
&gt; &gt;  call MPI_Finalize(ierr)<br>
&gt; &gt; end program main<br>
&gt; &gt;<br>
&gt; &gt; yildirim@memosa:~/python_intercomm$ mpif90 fortran.f90<br>
&gt; &gt;<br>
&gt; &gt; yildirim@memosa:~/python_intercomm$ python python.py<br>
&gt; &gt; array(&#39;i&#39;, [0, 0, 0, 0, 0, 0, 0, 0])<br>
&gt; &gt;<br>
&gt; &gt;<br>
&gt; &gt; --<br>
&gt; &gt; B. Gazi YILDIRIM<br>
&gt; &gt;<br>
&gt; &gt; _______________________________________________<br>
&gt; &gt; users mailing list<br>
&gt; &gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
&gt; &gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt; &gt;<br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; users mailing list<br>
&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; --<br>
&gt; B. Gazi YILDIRIM<br>
&gt; _______________________________________________<br>
&gt; users mailing list<br>
&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
<br>
<br>
</div></div><font color="#888888">--<br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
For corporate legal information go to:<br>
<a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
</font><div><div></div><div class="h5"><br>
<br>
_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
</div></div></blockquote></div><br><br clear="all"><br>-- <br>B. Gazi YILDIRIM<br>

