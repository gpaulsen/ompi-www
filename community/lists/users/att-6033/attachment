<table cellspacing='0' cellpadding='0' border='0' ><tr><td valign='top' style='font: inherit;'>Thanks Ashley, after going through your suggestions we tried our test with valgrind 3.3.0 and with glibc-devel-2.5-18.el5_1.1, both exhibit the same results. A simple non-MPI test prog however returns expected responses, so valgrind itself look ok. We then checked that the same (shared) libc gets linked in both the MPI and non-MPI cases,<span style="font-family: monospace;"> </span>adding -pthread to the cc command line yields the same<span style="font-family: monospace;"> </span>result, the only difference it appears is the open mpi libraries.<br><br>Now mpicc links<span style="font-family: monospace;"><span style="font-family: arial;"> </span></span>against libopen-pal which defines malloc for it's own purposes.<span style="font-family: monospace;"></span> The big difference seems to be that libopen-pal.so is providing its own malloc replacement<span
 style="font-family: monospace;"> <br><br></span>Is there perhaps something I have missed in runtime? I have included the ompi_info just in case. Thanks in advance. Tom<br><br><br>--- On <b>Tue, 7/8/08, Ashley Pittman <i>&lt;apittman@concurrent-thinking.com&gt;</i></b> wrote:<br><blockquote style="border-left: 2px solid rgb(16, 16, 255); margin-left: 5px; padding-left: 5px;">From: Ashley Pittman &lt;apittman@concurrent-thinking.com&gt;<br>Subject: Re: [OMPI users] Valgrind Functionality<br>To: rarebitusa@yahoo.com, "Open MPI Users" &lt;users@open-mpi.org&gt;<br>Date: Tuesday, July 8, 2008, 2:05 AM<br><br><pre>On Mon, 2008-07-07 at 19:09 -0700, Tom Riddle wrote:<br>&gt; <br>&gt; I was attempting to get valgrind working with a simple MPI app<br>&gt; (osu_latency) on OpenMPI. While it appears to report uninitialized<br>&gt; values it fails to report any mallocs or frees that have been<br>&gt; conducted. <br><br>The normal reason for this is either using
 static applications or having<br>a very stripped glibc.  It doesn't appear you've done the former as you<br>are linking in libpthread but the latter is a possibility, you might<br>benefit from installing the glibc-devel package.  I don't recalled RHEL<br>being the worst offenders at stripping libc however.<br><br>&gt; I am using RHEL 5, gcc 4.2.3 and a drop from the repo labeled<br>&gt; openmpi-1.3a1r18303. configured with  <br>&gt; <br>&gt;  $ ../configure --prefix=/opt/wkspace/openmpi-1.3a1r18303 CC=gcc <br>&gt; CXX=g++ --disable-mpi-f77 --enable-debug --enable-memchecker <br>&gt; --with-psm=/usr/include --with-valgrind=/opt/wkspace/valgrind-3.3.0/<br><br>&gt; As the FAQ's suggest I am running a later version of valgrind,<br>&gt; enabling the memchecker and debug. I tested a slightly modified<br>&gt; osu_latency test which has a simple char buffer malloc and free but<br>&gt; the valgrind summary shows no malloc/free activity whatsoever. This
 is<br>&gt; running on a dual node system using Infinipath HCAs.  Here is a<br>&gt; trimmed output.<br><br>Although you configured openmpi with what appears to be valgrind 3.3.0<br>the version of valgrind you are using is 3.2.1, perhaps you want to<br>specify the full path of valgrind on the mpirun command line?<br><br>&gt; [tom@lab01 ~]$ mpirun --mca pml cm -np 2 --hostfile my_hostfile<br>&gt; valgrind ./osu_latency1 <br>&gt; ==17839== Memcheck, a memory error detector.<br>&gt; ==17839== Copyright (C) 2002-2006, and GNU GPL'd, by Julian Seward et<br>&gt; al.<br>&gt; ==17839== Using LibVEX rev 1658, a library for dynamic binary<br>&gt; translation.<br>&gt; ==17839== Copyright (C) 2004-2006, and GNU GPL'd, by OpenWorks LLP.<br>&gt; ==17839== Using valgrind-3.2.1, a dynamic binary instrumentation<br>&gt; framework.<br>&gt; ==17839== Copyright (C) 2000-2006, and GNU GPL'd, by Julian Seward et<br>&gt; al.<br>&gt; ==17839== For more details, rerun with:
 -v<br><br>Ashley Pittman.</pre></blockquote></td></tr></table><br>

      
