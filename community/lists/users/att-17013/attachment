I am having this problem too. If someone could help, I will appreciate!<br><br><div class="gmail_quote">On Fri, Jul 22, 2011 at 5:29 PM, Rodrigo Oliveira <span dir="ltr">&lt;<a href="mailto:rsilva.oliveira@gmail.com">rsilva.oliveira@gmail.com</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;"><div>Hi there.</div><div><br></div><div>I have an application in which I need to terminate a process anytime due an external command. In order to maintain the consistence of the processes, I need to receive the messages that were already sent to the terminating process. I used the MPI_Iprobe to check whether there is messages to be received, but I noticed that I have to call this function twice. Otherwise it does not work properly. The code bellow <span style="font-family: arial,sans-serif; font-size: 13px;">exemplifies what happens. Can anyone help me? Is there another way to do what I need?</span></div>


<div><br></div><div>Thanks in advance.</div><div><br></div><br clear="all"><div>#include &quot;mpi.h&quot;</div><div>#include &lt;stdio.h&gt;</div><div> </div>
<div>int main(int argc, char *argv[]) {</div><div><span style="white-space: pre-wrap;">	</span>int rank, size, i;</div><div><span style="white-space: pre-wrap;">	</span>MPI_Status status;</div>
<div><br></div><div><span style="white-space: pre-wrap;">	</span>MPI_Init(&amp;argc, &amp;argv);</div><div><span style="white-space: pre-wrap;">	</span>MPI_Comm_size(MPI_COMM_WORLD, &amp;size);</div>
<div><span style="white-space: pre-wrap;">	</span>MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);</div><div><span style="white-space: pre-wrap;">	</span></div><div><span style="white-space: pre-wrap;">	</span>if (size &lt; 2) {</div>


<div><span style="white-space: pre-wrap;">		</span>printf(&quot;Please run with two processes.\n&quot;); fflush(stdout);</div><div><span style="white-space: pre-wrap;">		</span>MPI_Finalize();</div>
<div><span style="white-space: pre-wrap;">		</span>return 0;</div><div><span style="white-space: pre-wrap;">	</span>}</div><div><span style="white-space: pre-wrap;">	</span>if (rank == 0) {</div>
<div><span style="white-space: pre-wrap;">		</span>for (i=0; i&lt;10; i++) {</div><div><span style="white-space: pre-wrap;">			</span>MPI_Send(&amp;i, 1, MPI_INT, 1, 123, MPI_COMM_WORLD);</div>
<div><span style="white-space: pre-wrap;">		</span>}</div><div><span style="white-space: pre-wrap;">	</span>}</div><div><span style="white-space: pre-wrap;">	</span>if (rank == 1) {</div>
<div><span style="white-space: pre-wrap;">		</span>int value, has_message;</div><div><span style="white-space: pre-wrap;">		</span>MPI_Status status;</div><div><span style="white-space: pre-wrap;">		</span>sleep (2);</div>


<div><span style="white-space: pre-wrap;">		</span></div><div><span style="white-space: pre-wrap;">		</span><b>// Code bellow does not work properly</b></div><div><span style="white-space: pre-wrap;">		</span>MPI_Iprobe(0, 123, MPI_COMM_WORLD, &amp;has_message, &amp;status);</div>


<div><span style="white-space: pre-wrap;">		</span>while (has_message) {</div><div><span style="white-space: pre-wrap;">			</span>MPI_Recv(&amp;value, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, &amp;status);</div>
<div><span style="white-space: pre-wrap;">			</span>printf(&quot;Process %d received message %d.\n&quot;, rank, value);</div><div><span style="white-space: pre-wrap;">			</span>MPI_Iprobe(0, 123, MPI_COMM_WORLD, &amp;has_message, &amp;status);</div>


<div><span style="white-space: pre-wrap;">		</span>}</div><div><br></div><div><span style="white-space: pre-wrap;">		</span><b>// Calling MPI_Iprobe twice for each incoming message makes the code work.</b></div>
<div><span style="white-space: pre-wrap;">		</span>/*</div><div><span style="white-space: pre-wrap;">		</span>MPI_Iprobe(0, 123, MPI_COMM_WORLD, &amp;has_message, &amp;status);</div><div><span style="white-space: pre-wrap;">		</span>MPI_Iprobe(0, 123, MPI_COMM_WORLD, &amp;has_message, &amp;status);</div>


<div><span style="white-space: pre-wrap;">		</span>while (has_message) {</div><div><span style="white-space: pre-wrap;">			</span>MPI_Recv(&amp;value, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, &amp;status);</div>
<div><span style="white-space: pre-wrap;">			</span>printf(&quot;Process %d received message %d.\n&quot;, rank, value);</div><div><span style="white-space: pre-wrap;">			</span>MPI_Iprobe(0, 123, MPI_COMM_WORLD, &amp;has_message, &amp;status);</div>


<div><span style="white-space: pre-wrap;">			</span>MPI_Iprobe(0, 123, MPI_COMM_WORLD, &amp;has_message, &amp;status);</div><div><span style="white-space: pre-wrap;">		</span>}</div><div><span style="white-space: pre-wrap;">		</span>*/</div>


<div><span style="white-space: pre-wrap;">		</span></div><div><span style="white-space: pre-wrap;">		</span>fflush(stdout);</div><div><span style="white-space: pre-wrap;">	</span>}</div>
<div><span style="white-space: pre-wrap;">	</span>MPI_Finalize();</div><div><span style="white-space: pre-wrap;">	</span>return 0;</div><div>}</div>
<br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div><br>

