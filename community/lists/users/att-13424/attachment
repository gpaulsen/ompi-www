<div class="gmail_quote"><div>Hi   Jeff S.<br>Thank you very much for your reply. <br>I am still feeling some confusion. Please guide.<br><br></div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
 The idea is to do this:<br>
<br>
    MPI_Recv_init()<br>
    MPI_Send_init()<br>
    for (i = 0; i &lt; 1000; ++i) {<br>
        MPI_Startall()<br>
        /* do whatever */<br>
        MPI_Waitall()<br>
    }<br>
    for (i = 0; i &lt; 1000; ++i) {<br>
        MPI_Request_free()<br>
    }<br>
<br>
So in your inner loop, you just call MPI_Startall() and a corresponding MPI_Test* / MPI_Wait* call to complete those requests.<br>
<br>
The idea is that the MPI_*_init() functions do some one-time setup on the requests and then you just start and complete those same requests over and over and over.  When you&#39;re done, you free them.<br>
<br></blockquote></div>Actually in my code what I was doing is:<br><br><b style="color: rgb(204, 0, 0);">CALL a subroutine-(1) 10000 times in the main program.<br><br></b><b style="color: rgb(204, 0, 0);">Subroutine-(1) starts===================================</b><br>
<b style="color: rgb(204, 0, 0);"><br>   Loop A starts here &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (three passes)<br>   Call subroutine-(2)<br><br>   Subroutine-(2) starts----------------------------<br>
         <span style="color: rgb(255, 0, 0);">Pick local data from array U in separate arrays for each neighboring processor</span><br style="color: rgb(255, 0, 0);"><span style="color: rgb(255, 0, 0);">         CALL MPI_IRECV for each neighboring process</span><br style="color: rgb(255, 0, 0);">
<span style="color: rgb(255, 0, 0);">         CALL MPI_ISEND for each neighboring process</span><br style="color: rgb(255, 0, 0);"><br style="color: rgb(255, 0, 0);"><span style="color: rgb(255, 0, 0);">         -------perform work that could be done with local data</span><br style="color: rgb(255, 0, 0);">
<span style="color: rgb(255, 0, 0);">         CALL MPI_WAITALL( )</span><br style="color: rgb(255, 0, 0);"><span style="color: rgb(255, 0, 0);">         -------perform work using the received data</span><br style="color: rgb(255, 0, 0);">
   Subroutine</b><b style="color: rgb(204, 0, 0);">-(2)</b><b style="color: rgb(204, 0, 0);"> ends</b><b style="color: rgb(204, 0, 0);">----------------------------</b><br><br><b style="color: rgb(204, 0, 0);"><span style="color: rgb(255, 0, 0);">         -------perform work to update array U</span></b><br>
<b style="color: rgb(204, 0, 0);">   Loop A ends here &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</b><br><br><b style="color: rgb(204, 0, 0);">Subroutine-(1) ends====================================</b><br>
<br>I assume that the above setup will overlap computation with communication (hiding communication behind computations), as well.<br>Now intention is to use persistent communication to get more efficiency. I am facing confusion how to use your proposed model for my work. Please suggest.<br>
<br>best regards,<br>AA.  <br><br><br><br>

