<html>
<head>
<style><!--
.hmmessage P
{
margin:0px;
padding:0px
}
body.hmmessage
{
font-size: 12pt;
font-family:Calibri
}
--></style></head>
<body class='hmmessage'><div dir='ltr'>sorry for the trivial question<br>i am new to open mpi and parallel computing<br><br>i installed openmpi-1.6.1 on my pc which has an <font style="font-size:10pt;" size="2">ubuntu 12.10<br><font style="font-size: 10pt;" size="2">also i have nas parallel benchmark , i need to edit the NPB make file "ma<font style="font-size: 10pt;" size="2">ke.def</font>"</font> <br><font style="font-size: 10pt;" size="2">i need to <font style="font-size: 10pt;" size="2">k<font style="font-size: 10pt;" size="2">now what <font style="font-size: 10pt;" size="2">is the linker library </font></font></font></font>file for both fortran and <font style="font-size: 10pt;" size="2">c compilers and where i can find them in the build folder ( i think i should find them in lib folder )<br><font style="font-size: 10pt;" size="2">it is </font></font></font><font style="font-size:10pt;" size="2"><font style="font-size: 10pt;" size="2"><font style="font-size: 10pt;" size="2"><font style="font-size:10pt;" size="2"><font style="font-size: 10pt;" size="2"><font style="">F_LIB&nbsp;&nbsp; <font style="font-size: 10pt;" size="2">and&nbsp;&nbsp; </font></font></font></font></font></font></font><font style="font-size:10pt;" size="2" color="#AC193D"><font style="font-size: 10pt;" size="2"><font style="font-size: 10pt;" size="2"><font style="font-size:10pt;" size="2" color="#AC193D"><font style="font-size: 10pt;" size="2"><font style="" color="#000000"><font style="font-size: 10pt;" size="2"><font style="font-size:10pt;" size="2" color="#AC193D"><font style="font-size: 10pt;" size="2"><font style="" color="#000000">C_LIB that are required<br><font style="font-size: 10pt;" size="2">this is the NPB make file:</font><br></font></font></font></font></font></font></font></font><br><br>#---------------------------------------------------------------------------<br>#<br>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SITE- AND/OR PLATFORM-SPECIFIC DEFINITIONS. <br>#<br>#---------------------------------------------------------------------------<br><br>#---------------------------------------------------------------------------<br># Items in this file will need to be changed for each platform.<br>#---------------------------------------------------------------------------<br><br>#---------------------------------------------------------------------------<br># Parallel Fortran:<br>#<br># For CG, EP, FT, MG, LU, SP, BT and UA, which are in Fortran, the following <br># must be defined:<br>#<br># F77&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Fortran compiler<br># FFLAGS&nbsp;&nbsp;&nbsp;&nbsp; - Fortran compilation arguments<br># F_INC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - any -I arguments required for compiling Fortran <br># FLINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Fortran linker<br># FLINKFLAGS - Fortran linker arguments<br># F_LIB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - any -L and -l arguments required for linking Fortran <br># <br># compilations are done with $(F77) $(F_INC) $(FFLAGS) or<br>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(F77) $(FFLAGS)<br># linking is done with&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(FLINK) $(F_LIB) $(FLINKFLAGS)<br>#---------------------------------------------------------------------------<br><br>#---------------------------------------------------------------------------<br># This is the fortran compiler used for Fortran programs<br>#---------------------------------------------------------------------------<br>F77 = f77<br># This links fortran programs; usually the same as ${F77}<br>FLINK&nbsp;&nbsp;&nbsp; = $(F77)<br><br>#---------------------------------------------------------------------------<br># These macros are passed to the linker <br>#---------------------------------------------------------------------------<br><font style="" color="#000000">F_LIB&nbsp; =</font><br><br>#---------------------------------------------------------------------------<br># These macros are passed to the compiler <br>#---------------------------------------------------------------------------<br>F_INC =<br><br>#---------------------------------------------------------------------------<br># Global *compile time* flags for Fortran programs<br>#---------------------------------------------------------------------------<br>FFLAGS&nbsp;&nbsp;&nbsp; = -O<br><br>#---------------------------------------------------------------------------<br># Global *link time* flags. Flags for increasing maximum executable <br># size usually go here. <br>#---------------------------------------------------------------------------<br>FLINKFLAGS = -O<br><br><br>#---------------------------------------------------------------------------<br># Parallel C:<br>#<br># For IS and DC, which are in C, the following must be defined:<br>#<br># CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - C compiler <br># CFLAGS&nbsp;&nbsp;&nbsp;&nbsp; - C compilation arguments<br># C_INC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - any -I arguments required for compiling C <br># CLINK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - C linker<br># CLINKFLAGS - C linker flags<br># C_LIB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - any -L and -l arguments required for linking C <br>#<br># compilations are done with $(CC) $(C_INC) $(CFLAGS) or<br>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(CC) $(CFLAGS)<br># linking is done with&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(CLINK) $(C_LIB) $(CLINKFLAGS)<br>#---------------------------------------------------------------------------<br><br>#---------------------------------------------------------------------------<br># This is the C compiler used for C programs<br>#---------------------------------------------------------------------------<br>CC = cc<br># This links C programs; usually the same as ${CC}<br>CLINK&nbsp;&nbsp;&nbsp; = $(CC)<br><br>#---------------------------------------------------------------------------<br># These macros are passed to the linker <br>#---------------------------------------------------------------------------<br><font style="" color="#000000">C_LIB&nbsp; = -lm</font><br><br>#---------------------------------------------------------------------------<br># These macros are passed to the compiler <br>#---------------------------------------------------------------------------<br>C_INC =<br><br>#---------------------------------------------------------------------------<br># Global *compile time* flags for C programs<br># DC inspects the following flags (preceded by "-D"):<br>#<br># IN_CORE - computes all views and checksums in main memory (if there is <br># enough memory)<br>#<br># VIEW_FILE_OUTPUT - forces DC to write the generated views to disk<br>#<br># OPTIMIZATION - turns on some nonstandard DC optimizations<br>#<br># _FILE_OFFSET_BITS=64 <br># _LARGEFILE64_SOURCE - are standard compiler flags which allow to work with <br># files larger than 2GB.<br>#---------------------------------------------------------------------------<br>CFLAGS&nbsp;&nbsp;&nbsp; = -O<br><br>#---------------------------------------------------------------------------<br># Global *link time* flags. Flags for increasing maximum executable <br># size usually go here. <br>#---------------------------------------------------------------------------<br>CLINKFLAGS = -O<br><br><br>#---------------------------------------------------------------------------<br># Utilities C:<br>#<br># This is the C compiler used to compile C utilities.&nbsp; Flags required by <br># this compiler go here also; typically there are few flags required; hence <br># there are no separate macros provided for such flags.<br>#---------------------------------------------------------------------------<br>UCC&nbsp;&nbsp;&nbsp; = cc<br><br><br>#---------------------------------------------------------------------------<br># Destination of executables, relative to subdirs of the main directory. . <br>#---------------------------------------------------------------------------<br>BINDIR&nbsp;&nbsp;&nbsp; = ../bin<br><br><br>#---------------------------------------------------------------------------<br># The variable RAND controls which random number generator <br># is used. It is described in detail in README.install. <br># Use "randi8" unless there is a reason to use another one. <br># Other allowed values are "randi8_safe", "randdp" and "randdpvec"<br>#---------------------------------------------------------------------------<br>RAND&nbsp;&nbsp; = randi8<br># The following is highly reliable but may be slow:<br># RAND&nbsp;&nbsp; = randdp<br><br><br>#---------------------------------------------------------------------------<br># The variable WTIME is the name of the wtime source code module in the<br># common directory.&nbsp; <br># For most machines,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; use wtime.c<br># For SGI power challenge: use wtime_sgi64.c<br>#---------------------------------------------------------------------------<br>WTIME&nbsp; = wtime.c<br><br><br>#---------------------------------------------------------------------------<br># Enable if either Cray (not Cray-X1) or IBM: <br># (no such flag for most machines: see common/wtime.h)<br># This is used by the C compiler to pass the machine name to common/wtime.h,<br># where the C/Fortran binding interface format is determined<br>#---------------------------------------------------------------------------<br># MACHINE&nbsp;&nbsp;&nbsp; =&nbsp;&nbsp;&nbsp; -DCRAY<br># MACHINE&nbsp;&nbsp;&nbsp; =&nbsp;&nbsp;&nbsp; -DIBM<br><br><br></font></font> 		 	   		  </div></body>
</html>