--- hwloc_base_util.c	2014-03-12 09:20:39.000000000 +0900
+++ hwloc_base_util.try.c	2014-03-12 09:20:11.000000000 +0900
@@ -1671,7 +1671,7 @@
  * Make a map of socket/core/hwthread tuples
  */
 static int build_map(int *num_sockets_arg, int *num_cores_arg, 
-                     hwloc_cpuset_t cpuset, int ***map)
+                     hwloc_cpuset_t cpuset, int ***map, hwloc_topology_t topo)
 {
     static int num_sockets = -1, num_cores = -1;
     int socket_index, core_index, pu_index;
@@ -1681,7 +1681,7 @@
     /* Find out how many sockets we have (cached so that we don't have
        to look this up every time) */
     if (num_sockets < 0) {
-        num_sockets = hwloc_get_nbobjs_by_type(opal_hwloc_topology, HWLOC_OBJ_SOCKET);
+        num_sockets = hwloc_get_nbobjs_by_type(topo, HWLOC_OBJ_SOCKET);
         /* some systems (like the iMac) only have one
          * socket and so don't report a socket
          */
@@ -1691,7 +1691,7 @@
         /* Lazy: take the total number of cores that we have in the
            topology; that'll be more than the max number of cores
            under any given socket */
-        num_cores = hwloc_get_nbobjs_by_type(opal_hwloc_topology, HWLOC_OBJ_CORE);
+        num_cores = hwloc_get_nbobjs_by_type(topo, HWLOC_OBJ_CORE);
     }
     *num_sockets_arg = num_sockets;
     *num_cores_arg = num_cores;
@@ -1713,11 +1713,11 @@
     /* Iterate the PUs in this cpuset; fill in the data[][] array with
        the socket/core/pu triples */
     for (pu_index = 0,
-             pu = hwloc_get_obj_inside_cpuset_by_type(opal_hwloc_topology,
+             pu = hwloc_get_obj_inside_cpuset_by_type(topo,
                                                       cpuset, HWLOC_OBJ_PU, 
                                                       pu_index);
          NULL != pu;
-         pu = hwloc_get_obj_inside_cpuset_by_type(opal_hwloc_topology,
+         pu = hwloc_get_obj_inside_cpuset_by_type(topo,
                                                   cpuset, HWLOC_OBJ_PU, 
                                                   ++pu_index)) {
         /* Go upward and find the core this PU belongs to */
@@ -1785,7 +1785,7 @@
         return OPAL_ERR_NOT_BOUND;
     }
 
-    if (OPAL_SUCCESS != (ret = build_map(&num_sockets, &num_cores, cpuset, &map))) {
+    if (OPAL_SUCCESS != (ret = build_map(&num_sockets, &num_cores, cpuset, &map, topo))) {
         return ret;
     }
 
