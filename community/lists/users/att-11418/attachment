<br><br><div class="gmail_quote">On Fri, Dec 4, 2009 at 10:29, Eugene Loh <span dir="ltr">&lt;<a href="mailto:Eugene.Loh@sun.com">Eugene.Loh@sun.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">




  
  

<div bgcolor="#ffffff" text="#000000">
Nicolas Bock wrote:
<blockquote cite="http://middcf611bd0912040923s593252a7u23db47cecea9f3c7@mail.gmail.com" type="cite">
  <div class="gmail_quote"><div class="im">On Fri, Dec 4, 2009 at 10:10, Eugene Loh <span dir="ltr">&lt;<a href="mailto:Eugene.Loh@sun.com" target="_blank">Eugene.Loh@sun.com</a>&gt;</span>
wrote:<br>
  </div><div class="im"><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
    <div bgcolor="#ffffff" text="#000000">Yield helped, but
not as effectively as one might have imagined.<br>
    </div>
  </blockquote>
  <div><br>
Yes, that&#39;s the impression I get as well, the master process might be
yielding, but it doesn&#39;t appear to be a lot. Maybe I should do this
differently to avoid this CPU usage in master. All I really want is to
execute another process somewhere on a free node in my MPI universe,
wait for it to be done and go on. From my limited understanding of MPI,
MPI_Comm_spawn() and MPI_Barrier() seemed just like what I needed, but
as I said, maybe there are other ways to do this.<br>
  </div>
  </div></div>
</blockquote>
I think you might observe a world of difference if the master issued
some non-blocking call and then intermixed MPI_Test calls with sleep
calls.  You should see *much* more subservient behavior.  As I
remember, putting such passivity into OMPI is on somebody&#39;s to-do list,
but just not very high.<br></div></blockquote><div><br>Hi Eugene,<br><br>could you give me more details? I can&#39;t figure out how to do this. I could see that one way to implement what you are describing is:<br><br>in slave.c:<br>

MPI_Send() to rank 0<br><br>in master.c<br>MPI_IRecv() from the spawned processes<br>while (1) {  MPI_Test(); }<br><br>I can&#39;t figure out how to find the ranks that MPI_Comm_spawn() used. What&#39;s the source argument in MPI_IRecv() supposed to be?<br>

<br>Thanks, nick<br><br></div></div>

