Florian,<div><br></div><div>under the hood, strlen() can use vector instructions, and then read memory above the end of the string. valgrind is extremely picky and does warn about that.</div><div>iirc, there are some filter options not to issue these warnings, but I forgot the details.</div><div><br></div><div>can you try to send &quot;Bonjour&quot; instead of &quot;Halo&quot; and see if the warning disappear ?</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles</div><div><br></div><div>PS if it works, do not jump to the erroneous conclusion valgrind likes French and dislikes German ;-)<br><br>On Wednesday, March 2, 2016, Florian Lindner &lt;<a href="mailto:mailinglists@xgm.de">mailinglists@xgm.de</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hello,<br>
<br>
using OpenMPI 1.10.2 and valgrind 3.11.0 I try to use the code below to<br>
send a c++ string.<br>
<br>
It works fine, but running through valgrind gives a lot of memory errors, invalid read of size...<br>
<br>
What is going wrong there?<br>
<br>
Valgrind output, see below.<br>
<br>
Thanks!<br>
Florian<br>
<br>
<br>
// Compile with: mpicxx -std=c++11 -g -O0 -Wall -Wextra mpi.cpp<br>
#include &lt;mpi.h&gt;<br>
#include &lt;iostream&gt;<br>
#include &lt;string&gt;<br>
<br>
using namespace std;<br>
<br>
<br>
void receive() {<br>
  int length = 0;<br>
  MPI_Status status;<br>
  MPI_Probe(MPI_ANY_SOURCE, 0, MPI_COMM_WORLD, &amp;status);<br>
  MPI_Get_count(&amp;status, MPI_CHAR, &amp;length);<br>
  cout &lt;&lt; &quot;Stringlength = &quot; &lt;&lt; length &lt;&lt; endl;<br>
  char cstr[length];<br>
  MPI_Recv(cstr,<br>
           length,<br>
           MPI_CHAR,<br>
           MPI_ANY_SOURCE,<br>
           MPI_ANY_TAG,<br>
           MPI_COMM_WORLD,<br>
           MPI_STATUS_IGNORE);<br>
  cout &lt;&lt; cstr &lt;&lt; endl;<br>
}<br>
<br>
void send(int rankReceiver) {<br>
  std::string s = &quot;Hallo&quot;;<br>
  MPI_Send(s.c_str(),<br>
           s.size()+1,<br>
           MPI_CHAR,<br>
           rankReceiver,<br>
           0,<br>
           MPI_COMM_WORLD);<br>
}<br>
<br>
int main(int argc, char* argv[])<br>
{<br>
  int rank;<br>
  MPI_Init(&amp;argc, &amp;argv);<br>
<br>
  MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);<br>
  if (rank == 0)<br>
    send(1);<br>
  else {<br>
    receive();<br>
  }<br>
  MPI_Finalize();<br>
  return 0;<br>
}<br>
<br>
<br>
VALGRIND OUTPUT<br>
<br>
% mpicxx -std=c++11 -g -O0 -Wall -Wextra mpi.cpp &amp;&amp; mpirun -n 2 ./a.out<br>
Stringlength = 6<br>
Hallo<br>
florian@asaru ~/scratch (git)-[master] % LD_PRELOAD=/usr/lib/valgrind/libmpiwrap-amd64-linux.so mpirun -n 2 valgrind ./a.out<br>
==9290== Memcheck, a memory error detector<br>
==9290== Copyright (C) 2002-2015, and GNU GPL&#39;d, by Julian Seward et al.<br>
==9290== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info<br>
==9290== Command: ./a.out<br>
==9290==<br>
==9291== Memcheck, a memory error detector<br>
==9291== Copyright (C) 2002-2015, and GNU GPL&#39;d, by Julian Seward et al.<br>
==9291== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info<br>
==9291== Command: ./a.out<br>
==9291==<br>
valgrind MPI wrappers  9290: Active for pid 9290<br>
valgrind MPI wrappers  9291: Active for pid 9291<br>
valgrind MPI wrappers  9290: Try MPIWRAP_DEBUG=help for possible options<br>
valgrind MPI wrappers  9291: Try MPIWRAP_DEBUG=help for possible options<br>
Stringlength = 6<br>
==9291== Invalid read of size 1<br>
==9291==    at 0x4C2DBA2: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==9291==    by 0x56852D8: length (char_traits.h:267)<br>
==9291==    by 0x56852D8: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:562)<br>
==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
==9291==    by 0x408B61: main (mpi.cpp:46)<br>
==9291==  Address 0xffefff870 is on thread 1&#39;s stack<br>
==9291==  in frame #2, created by receive() (mpi.cpp:8)<br>
==9291==<br>
==9291== Invalid read of size 1<br>
==9291==    at 0x4C2DBB4: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==9291==    by 0x56852D8: length (char_traits.h:267)<br>
==9291==    by 0x56852D8: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:562)<br>
==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
==9291==    by 0x408B61: main (mpi.cpp:46)<br>
==9291==  Address 0xffefff871 is on thread 1&#39;s stack<br>
==9291==  in frame #2, created by receive() (mpi.cpp:8)<br>
==9291==<br>
==9291== Invalid read of size 1<br>
==9291==    at 0x60A0FF1: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==9291==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==9291==    by 0x5684F75: sputn (streambuf:451)<br>
==9291==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==9291==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==9291==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
==9291==    by 0x408B61: main (mpi.cpp:46)<br>
==9291==  Address 0xffefff874 is on thread 1&#39;s stack<br>
==9291==  in frame #4, created by receive() (mpi.cpp:8)<br>
==9291==<br>
==9291== Invalid read of size 1<br>
==9291==    at 0x60A100D: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==9291==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==9291==    by 0x5684F75: sputn (streambuf:451)<br>
==9291==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==9291==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==9291==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
==9291==    by 0x408B61: main (mpi.cpp:46)<br>
==9291==  Address 0xffefff873 is on thread 1&#39;s stack<br>
==9291==  in frame #4, created by receive() (mpi.cpp:8)<br>
==9291==<br>
==9291== Invalid read of size 2<br>
==9291==    at 0x4C2F9C0: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==9291==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==9291==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==9291==    by 0x5684F75: sputn (streambuf:451)<br>
==9291==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==9291==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==9291==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
==9291==    by 0x408B61: main (mpi.cpp:46)<br>
==9291==  Address 0xffefff870 is on thread 1&#39;s stack<br>
==9291==  in frame #5, created by receive() (mpi.cpp:8)<br>
==9291==<br>
==9291== Invalid read of size 1<br>
==9291==    at 0x4C2F9F8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==9291==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==9291==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==9291==    by 0x5684F75: sputn (streambuf:451)<br>
==9291==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==9291==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==9291==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
==9291==    by 0x408B61: main (mpi.cpp:46)<br>
==9291==  Address 0xffefff874 is on thread 1&#39;s stack<br>
==9291==  in frame #5, created by receive() (mpi.cpp:8)<br>
==9291==<br>
Hallo<br>
==9291==<br>
==9291== HEAP SUMMARY:<br>
==9291==     in use at exit: 96,351 bytes in 247 blocks<br>
==9291==   total heap usage: 15,020 allocs, 14,773 frees, 13,362,383 bytes allocated<br>
==9291==<br>
==9291== LEAK SUMMARY:<br>
==9291==    definitely lost: 9,154 bytes in 39 blocks<br>
==9291==    indirectly lost: 4,008 bytes in 22 blocks<br>
==9291==      possibly lost: 0 bytes in 0 blocks<br>
==9291==    still reachable: 83,189 bytes in 186 blocks<br>
==9291==         suppressed: 0 bytes in 0 blocks<br>
==9291== Rerun with --leak-check=full to see details of leaked memory<br>
==9291==<br>
==9291== For counts of detected and suppressed errors, rerun with: -v<br>
==9291== ERROR SUMMARY: 14 errors from 6 contexts (suppressed: 0 from 0)<br>
==9290==<br>
==9290== HEAP SUMMARY:<br>
==9290==     in use at exit: 96,351 bytes in 247 blocks<br>
==9290==   total heap usage: 15,018 allocs, 14,771 frees, 13,370,045 bytes allocated<br>
==9290==<br>
==9290== LEAK SUMMARY:<br>
==9290==    definitely lost: 9,154 bytes in 39 blocks<br>
==9290==    indirectly lost: 4,008 bytes in 22 blocks<br>
==9290==      possibly lost: 0 bytes in 0 blocks<br>
==9290==    still reachable: 83,189 bytes in 186 blocks<br>
==9290==         suppressed: 0 bytes in 0 blocks<br>
==9290== Rerun with --leak-check=full to see details of leaked memory<br>
==9290==<br>
==9290== For counts of detected and suppressed errors, rerun with: -v<br>
==9290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)<br>
<br>
_______________________________________________<br>
users mailing list<br>
<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;users@open-mpi.org&#39;)">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/03/28617.php" target="_blank">http://www.open-mpi.org/community/lists/users/2016/03/28617.php</a><br>
</blockquote></div>

