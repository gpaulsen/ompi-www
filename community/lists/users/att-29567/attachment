the Bcast in coll/sm<div><br></div><div>coll modules have priority</div><div>(see ompi_info --all)</div><div><br></div><div>for a given function (e,g. bcast) the module which implements it and has the highest priority is used. </div><div>note a module can disqualify itself on a given communicator (e.g. coll/sm on I ter node communucator).</div><div>by default, coll/tuned is very likely used. this module is a bit special since it selects a given algorithm based on communicator and message size.</div><div><br></div><div>if you give a high priority to coll/sm, then it will be used for single node intra communicators, assuming coll/sm implements all collective primitives.</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles<br><br>On Thursday, June 30, 2016, Saliya Ekanayake &lt;<a href="mailto:esaliya@gmail.com">esaliya@gmail.com</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><p dir="ltr">Thank you, Gilles. </p>
<p dir="ltr">What is the bcast I should look for? In general, how do I know which module was used to for which communication - can I print this info? </p>
<div class="gmail_quote">On Jun 30, 2016 3:19 AM, &quot;Gilles Gouaillardet&quot; &lt;<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;gilles@rist.or.jp&#39;);" target="_blank">gilles@rist.or.jp</a>&gt; wrote:<br type="attribution"><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
  
    
  
  <div bgcolor="#FFFFFF" text="#000000">
    <p>1) is correct. coll/sm is disqualified if the communicator is an
      inter communicator or the communicator spans on several nodes.</p>
    <p>you can have a look at the source code, and you will not that
      bcast does not use send/recv. instead, it uses a shared memory, so
      hopefully, it is faster than other modules</p>
    <p><br>
    </p>
    <p>Cheers,</p>
    <p><br>
    </p>
    <p>Gilles<br>
    </p>
    <div>On 6/30/2016 3:04 PM, Saliya Ekanayake
      wrote:<br>
    </div>
    <blockquote type="cite">
      <div dir="ltr">Hi,
        <div><br>
        </div>
        <div>Looking at the <b>ompi/mca/coll/sm/coll_sm_module.c</b> it
          seems this module will be used only if the calling
          communicator solely groups processes within a node. I&#39;ve got
          two questions here.</div>
        <div><br>
        </div>
        <div>1. So is my understanding correct that for something like
          MPI_COMM_WORLD where world is multiple processes within a node
          across many nodes, this module will not be used?</div>
        <div><br>
        </div>
        <div>2. If 1, is correct then are there any shared memory
          optimizations that happen when a collective like bcast  or
          allreduce is called, so that communicating within a node is
          done efficiently through memory?</div>
        <div><br>
        </div>
        <div>Thank you,</div>
        <div>Saliya</div>
        <div><br clear="all">
          <div><br>
          </div>
          -- <br>
          <div data-smartmail="gmail_signature">
            <div dir="ltr">
              <div>
                <div dir="ltr">
                  <div dir="ltr">
                    <div dir="ltr"><span style="color:rgb(136,136,136)">Saliya
                        Ekanayake</span></div>
                    <div dir="ltr">Ph.D. Candidate | Research Assistant</div>
                    <div dir="ltr">School of Informatics and Computing |
                      Digital Science Center</div>
                    <div dir="ltr">Indiana University, Bloomington<br>
                      <br>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <br>
      <fieldset></fieldset>
      <br>
      <pre>_______________________________________________
users mailing list
<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;users@open-mpi.org&#39;);" target="_blank">users@open-mpi.org</a>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/users</a>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/06/29564.php" target="_blank">http://www.open-mpi.org/community/lists/users/2016/06/29564.php</a></pre>
    </blockquote>
    <br>
  </div>

<br>_______________________________________________<br>
users mailing list<br>
<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;users@open-mpi.org&#39;);" target="_blank">users@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/06/29565.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/users/2016/06/29565.php</a><br></blockquote></div>
</blockquote></div>

