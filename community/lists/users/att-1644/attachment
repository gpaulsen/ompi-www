I don't think I blamed the implementation in any way in my original email. My intent is to gain understanding of why my code does/should not work. I assumed that I was not passing the correct intercommunicator. However, I am at a loss on how to construct a proper intercommunicator in this case. You have mentioned that I haven't defined any group to be the root group. Could you care to elaborate on how can I make a group a root group?
<br><br>Thanks.<br><br><div><span class="gmail_quote">On 7/18/06, <b class="gmail_sendername">Bert Wesarg</b> &lt;<a href="mailto:wesarg@informatik.uni-halle.de">wesarg@informatik.uni-halle.de</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
Hi,<br><br>s anwar wrote:<br>&gt; Please see attached source file.<br>&gt;<br>&gt; According to my understanding of MPI_Comm_spawn(), the intercommunicator<br>&gt; returned is the same as it is returned by MPI_Comm_get_parent() in the
<br>&gt; spawned processes. I am assuming that there is one intercommunicator<br>&gt; which contains all the (spawned) child processes as well as the parent<br>&gt; process. If this is the case, then why does an MPI_Bcast() using such an
<br>&gt; intercommunicator wait indefinately?<br><br>your code from line 75:<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MPI_Bcast(&amp;one_int, 1, MPI_INT, 0, intercomm);<br><br>from the mpi 2 standard &quot;<a href="http://7.3.2.1">7.3.2.1</a>. Broadcast&quot;
<br><br>&quot;If comm is an intercommunicator, then the call involves all processes in<br>the intercommunicator, but with one group (group A) defining the root<br>process. All processes in the other group (group B) pass the same value in
<br>argument root, which is the rank of the root in group A. The root passes<br>the value MPI_ROOT in root. All other processes in group A pass the value<br>MPI_PROC_NULL in root. Data is broadcast from the root to all processes in
<br>group B. The receive buffer arguments of the processes in group B must be<br>consistent with the send buffer argument of the root.&quot;<br><br>so, you define no group to be the root group (group A). i don't know what
<br>schould happen, when no root group is defined, but your code firstly don't<br>conform to the standard, so don't blame the implementation first.<br><br>by<br>bert wesarg<br><br>_______________________________________________
<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div>
<br>

