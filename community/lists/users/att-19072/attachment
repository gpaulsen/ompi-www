
									
										
											
												I am combining mpi and cuda. Trying to find out sum of array elements using cuda and using mpi to distribute the array.<br>
 <br>
my cuda code <br>
<pre>#include &lt;stdio.h&gt;<br>  <br>__global__ void add(int *devarray, int *devsum)<br>{<br>        int index = blockIdx.x * blockDim.x + threadIdx.x;<br>        *devsum = *devsum + devarray[index];<br>}<br> <br>extern <span class="code-string">&quot;</span><span class="code-string">C&quot;</span><br>
int * run_kernel(int array[],int nelements)<br>{<br>        int  *devarray, *sum, *devsum;<br>        sum =(int *) malloc(<span class="code-digit">1</span> * sizeof(int));<br>        <br>        printf(<span class="code-string">&quot;</span><span class="code-string">\nrun_kernel called..............&quot;</span>);       <br>
        <br>        cudaMalloc((void**) &amp;devarray, sizeof(int)*nelements);<br>        cudaMalloc((void**) &amp;devsum, sizeof(int));       <br>        cudaMemcpy(devarray, array, sizeof(int)*nelements, cudaMemcpyHostToDevice);<br>
        //cudaMemcpy(devsum, sum, sizeof(int), cudaMemcpyHostToDevice);<br>        add&lt;&lt;&lt;2, 3&gt;&gt;&gt;(devarray, devsum);<br>      //  printf(<span class="code-string">&quot;</span><span class="code-string">\ndevsum is %d&quot;</span>, devsum);		<br>
	cudaMemcpy(sum, devsum, sizeof(int), cudaMemcpyDeviceToHost);<br> <br>        printf(<span class="code-string">&quot;</span><span class="code-string"> \nthe sum is %d\n&quot;</span>, *sum);<br>        cudaFree(devarray);<br>
        cudaFree(devsum);<br>	<span class="code-keyword">return</span> sum;<br>        <br>}<br></pre><pre> <br><br><span class="code-preprocessor">#include</span><span class="code-preprocessor"> <span class="code-string">&quot;</span><span class="code-string">mpi.h&quot;</span></span><br>
<span class="code-preprocessor">#include</span><span class="code-preprocessor"> <span class="code-keyword">&lt;</span><span class="code-leadattribute">stdio.h&gt;</span><br><span class="code-attribute">#include</span> <span class="code-attribute">&lt;stdlib.h&gt;</span><br>
<span class="code-attribute">#include</span> <span class="code-attribute">&lt;string.h&gt;</span><br> <br><span class="code-attribute">#define</span>  <span class="code-attribute">ARRAYSIZE</span>	<span class="code-attribute">2000</span> <br>
<span class="code-attribute">#define</span>  <span class="code-attribute">MASTER</span>		<span class="code-attribute">0</span> <br><span class="code-attribute">int</span>  <span class="code-attribute">data[ARRAYSIZE];</span> <br>
<br><span class="code-attribute">int</span> <span class="code-attribute">main(int</span> <span class="code-attribute">argc,</span> <span class="code-attribute">char*</span> <span class="code-attribute">argv[])</span><br><span class="code-attribute">{</span><br>
 <br><span class="code-attribute">int</span>   <span class="code-attribute">numtasks,</span> <span class="code-attribute">taskid,</span> <span class="code-attribute">rc,</span> <span class="code-attribute">dest,</span> <span class="code-attribute">offset,</span> <span class="code-attribute">i,</span> <span class="code-attribute">j,</span> <span class="code-attribute">tag1,</span> <span class="code-attribute">tag2,</span> <span class="code-attribute">source,</span> <span class="code-attribute">chunksize,</span> <span class="code-attribute">namelen;</span>  <br>
<span class="code-attribute">int</span> <span class="code-attribute">mysum;</span> <br><span class="code-attribute">long</span> <span class="code-attribute">sum;</span> <br><span class="code-attribute">int</span> <span class="code-attribute">update(int</span> <span class="code-attribute">myoffset,</span> <span class="code-attribute">int</span> <span class="code-attribute">chunk,</span> <span class="code-attribute">int</span> <span class="code-attribute">myid);</span><br>
<span class="code-attribute">char</span> <span class="code-attribute">myname[MPI_MAX_PROCESSOR_NAME];</span> <br><span class="code-attribute">MPI_Status</span> <span class="code-attribute">status;</span><br><span class="code-attribute">double</span> <span class="code-attribute">start</span> <span class="code-keyword">=</span> <span class="code-attribute">0.0,</span> <span class="code-attribute">stop</span> <span class="code-keyword">=</span> <span class="code-attribute">0.0,</span> <span class="code-attribute">time</span> <span class="code-keyword">=</span> <span class="code-attribute">0.0;</span><br>
<span class="code-attribute">double</span> <span class="code-attribute">totaltime;</span><br><span class="code-attribute">FILE</span> <span class="code-attribute">*fp;</span><br><span class="code-attribute">char</span> <span class="code-attribute">line[128];</span><br>
<span class="code-attribute">char</span> <span class="code-attribute">element;</span><br><span class="code-attribute">int</span> <span class="code-attribute">n;</span><br><span class="code-attribute">int</span> <span class="code-attribute">k</span><span class="code-keyword">=0;</span><br>
 <br><span class="code-keyword">/</span><span class="code-attribute">*****</span> <span class="code-attribute">Initializations</span> <span class="code-attribute">*****</span><span class="code-keyword">/</span><br> <br><span class="code-attribute">MPI_Init(&amp;argc,</span> <span class="code-attribute">&amp;argv);</span> <br>
<span class="code-attribute">MPI_Comm_size(MPI_COMM_WORLD,</span> <span class="code-attribute">&amp;numtasks);</span> <br><span class="code-attribute">MPI_Comm_rank(MPI_COMM_WORLD,&amp;taskid);</span> <span class="code-attribute"><br>
MPI_Get_processor_name(myname,</span> <span class="code-attribute">&amp;namelen);</span> <br><span class="code-attribute">printf</span> <span class="code-attribute">(&quot;MPI</span> <span class="code-attribute">task</span> <span class="code-attribute">%d</span> <span class="code-attribute">has</span> <span class="code-attribute">started</span> <span class="code-attribute">on</span> <span class="code-attribute">host</span> <span class="code-attribute">%s...\n&quot;,</span> <span class="code-attribute">taskid,</span> <span class="code-attribute">myname);</span> <br>
<span class="code-attribute">chunksize</span> <span class="code-keyword">=</span> <span class="code-attribute">(ARRAYSIZE</span> <span class="code-keyword">/</span> <span class="code-attribute">numtasks);</span> <br><span class="code-attribute">tag2</span> <span class="code-keyword">=</span> <span class="code-attribute">1;</span> <br>
<span class="code-attribute">tag1</span> <span class="code-keyword">=</span> <span class="code-attribute">2;</span> <br><br><span class="code-keyword">/</span><span class="code-attribute">*****</span> <span class="code-attribute">Master</span> <span class="code-attribute">task</span> <span class="code-attribute">only</span> <span class="code-attribute">******</span><span class="code-keyword">/</span><br>
 <br><span class="code-attribute">if</span> <span class="code-attribute">(taskid</span> <span class="code-keyword">==</span> <span class="code-attribute">MASTER){</span><br> <br>  <span class="code-attribute">fp</span><span class="code-keyword">=fopen(</span><span class="code-attribute">&quot;integers.txt&quot;,</span> <span class="code-attribute">&quot;r&quot;);</span><br>
  <span class="code-attribute">if(fp</span> <span class="code-attribute">!</span><span class="code-keyword">=</span> <span class="code-attribute">NULL){</span><br>   <span class="code-attribute">sum</span> <span class="code-keyword">=</span> <span class="code-attribute">0;</span><br>
   <span class="code-attribute">while(fgets(line,</span> <span class="code-attribute">sizeof</span> <span class="code-attribute">line,</span> <span class="code-attribute">fp)!</span><span class="code-keyword">=</span> <span class="code-attribute">NULL){</span><br>
    <span class="code-attribute">fscanf(fp,&quot;%d&quot;,&amp;data[k]);</span><br>    <span class="code-attribute">sum</span> <span class="code-keyword">=</span> <span class="code-attribute">sum</span> <span class="code-attribute">+</span> <span class="code-attribute">data[k];</span> <span class="code-keyword">/</span><span class="code-keyword">/</span> <span class="code-attribute">calculate</span> <span class="code-attribute">sum</span> <span class="code-attribute">to</span> <span class="code-attribute">verify</span> <span class="code-attribute">later</span> <span class="code-attribute">on</span><br>
    <span class="code-attribute">k++;</span><br>   <span class="code-attribute">}</span><br>  <span class="code-attribute">}</span><br> <br><br><span class="code-attribute">printf(&quot;Initialized</span> <span class="code-attribute">array</span> <span class="code-attribute">sum</span> <span class="code-attribute">%d\n&quot;,</span> <span class="code-attribute">sum);</span><br>
 <br>  <span class="code-keyword">/</span><span class="code-attribute">*</span> <span class="code-attribute">Send</span> <span class="code-attribute">each</span> <span class="code-attribute">task</span> <span class="code-attribute">its</span> <span class="code-attribute">portion</span> <span class="code-attribute">of</span> <span class="code-attribute">the</span> <span class="code-attribute">array</span> <span class="code-attribute">-</span> <span class="code-attribute">master</span> <span class="code-attribute">keeps</span> <span class="code-attribute">1st</span> <span class="code-attribute">part</span> <span class="code-attribute">*</span><span class="code-keyword">/</span> <br>
  <span class="code-attribute">offset</span> <span class="code-keyword">=</span> <span class="code-attribute">chunksize;</span> <br>  <span class="code-attribute">for</span> <span class="code-attribute">(dest</span><span class="code-keyword">=1;</span> <span class="code-attribute">dest&lt;numtasks;</span> <span class="code-attribute">dest++)</span> <span class="code-attribute">{</span> <br>
    <span class="code-attribute">MPI_Send(&amp;offset,</span> <span class="code-attribute">1,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">dest,</span> <span class="code-attribute">tag1,</span> <span class="code-attribute">MPI_COMM_WORLD);</span> <br>
    <span class="code-attribute">MPI_Send(&amp;data[offset],</span> <span class="code-attribute">chunksize,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">dest,</span> <span class="code-attribute">tag2,</span> <span class="code-attribute">MPI_COMM_WORLD);</span> <br>
    <span class="code-attribute">printf(&quot;Sent</span> <span class="code-attribute">%d</span> <span class="code-attribute">elements</span> <span class="code-attribute">to</span> <span class="code-attribute">task</span> <span class="code-attribute">%d</span> <span class="code-attribute">offset</span><span class="code-keyword">=</span> <span class="code-attribute">%d\n&quot;,chunksize,dest,offset);</span> <br>
    <span class="code-attribute">offset</span> <span class="code-keyword">=</span> <span class="code-attribute">offset</span> <span class="code-attribute">+</span> <span class="code-attribute">chunksize;</span> <br>   <span class="code-attribute">}</span><br>
 <br><br> <br>  <span class="code-keyword">/</span><span class="code-attribute">*</span> <span class="code-attribute">Master</span> <span class="code-attribute">does</span> <span class="code-attribute">its</span> <span class="code-attribute">part</span> <span class="code-attribute">of</span> <span class="code-attribute">the</span> <span class="code-attribute">work</span> <span class="code-attribute">*</span><span class="code-keyword">/</span><br>
 <br>  <span class="code-attribute">offset</span> <span class="code-keyword">=</span> <span class="code-attribute">0;</span><br>  <span class="code-attribute">mysum</span> <span class="code-keyword">=</span> <span class="code-attribute">run_kernel(&amp;data[offset],</span> <span class="code-attribute">chunksize);</span><br>
  <span class="code-attribute">printf(&quot;Kernel</span> <span class="code-attribute">returns</span> <span class="code-attribute">sum</span> <span class="code-attribute">%d&quot;,</span> <span class="code-attribute">mysum);</span> <br>
  <span class="code-keyword">/</span><span class="code-keyword">/</span><span class="code-attribute">mysum</span> <span class="code-keyword">=</span> <span class="code-attribute">update(offset,</span> <span class="code-attribute">chunksize,</span> <span class="code-attribute">taskid);</span><br>
 <br>  <span class="code-keyword">/</span><span class="code-attribute">*</span> <span class="code-attribute">Wait</span> <span class="code-attribute">to</span> <span class="code-attribute">receive</span> <span class="code-attribute">results</span> <span class="code-attribute">from</span> <span class="code-attribute">each</span> <span class="code-attribute">task</span> <span class="code-attribute">*</span><span class="code-keyword">/</span><br>
 <br>  <span class="code-attribute">for</span> <span class="code-attribute">(i</span><span class="code-keyword">=1;</span> <span class="code-attribute">i&lt;numtasks;</span> <span class="code-attribute">i++)</span> <span class="code-attribute">{</span> <br>
    <span class="code-attribute">source</span> <span class="code-keyword">=</span> <span class="code-attribute">i;</span> <br>    <span class="code-attribute">MPI_Recv(&amp;offset,</span> <span class="code-attribute">1,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">source,</span> <span class="code-attribute">tag1,</span> <span class="code-attribute">MPI_COMM_WORLD,</span> <span class="code-attribute">&amp;status);</span> <br>
    <span class="code-attribute">MPI_Recv(&amp;data[offset],</span> <span class="code-attribute">chunksize,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">source,</span> <span class="code-attribute">tag2,MPI_COMM_WORLD,</span> <span class="code-attribute">&amp;status);</span> <br>
   <span class="code-attribute">}</span><br>  <br>  <span class="code-keyword">/</span><span class="code-attribute">*</span> <span class="code-attribute">Get</span> <span class="code-attribute">final</span> <span class="code-attribute">sum</span> <span class="code-attribute">and</span> <span class="code-attribute">print</span> <span class="code-attribute">sample</span> <span class="code-attribute">results</span> <span class="code-attribute">*</span><span class="code-keyword">/</span>  <br>
 <br>  <span class="code-attribute">MPI_Reduce(&amp;mysum,</span> <span class="code-attribute">&amp;sum,</span> <span class="code-attribute">1,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">MPI_SUM,</span> <span class="code-attribute">MASTER,</span> <span class="code-attribute">MPI_COMM_WORLD);</span> <br>
  <span class="code-attribute">printf(&quot;\n***</span> <span class="code-attribute">Final</span> <span class="code-attribute">sum</span><span class="code-keyword">=</span> <span class="code-attribute">%d</span> <span class="code-attribute">***\n&quot;,sum);</span> <br>
 <span class="code-attribute">}</span>  <span class="code-keyword">/</span><span class="code-attribute">*</span> <span class="code-attribute">end</span> <span class="code-attribute">of</span> <span class="code-attribute">master</span> <span class="code-attribute">section</span> <span class="code-attribute">*</span><span class="code-keyword">/</span><br>
 <br><span class="code-keyword">/</span><span class="code-attribute">*****</span> <span class="code-attribute">Non-master</span> <span class="code-attribute">tasks</span> <span class="code-attribute">only</span> <span class="code-attribute">*****</span><span class="code-keyword">/</span><br>
<br> <br><span class="code-attribute">if</span> <span class="code-attribute">(taskid</span> <span class="code-attribute">&gt;</span> <span class="code-attribute">MASTER)</span> <span class="code-attribute">{</span><br> <br>
  <span class="code-keyword">/</span><span class="code-attribute">*</span> <span class="code-attribute">Receive</span> <span class="code-attribute">my</span> <span class="code-attribute">portion</span> <span class="code-attribute">of</span> <span class="code-attribute">array</span> <span class="code-attribute">from</span> <span class="code-attribute">the</span> <span class="code-attribute">master</span> <span class="code-attribute">task</span> <span class="code-attribute">*</span><span class="code-keyword">/</span><br>
  <span class="code-attribute">start</span><span class="code-keyword">=</span> <span class="code-attribute">MPI_Wtime();</span> <br>  <span class="code-attribute">source</span> <span class="code-keyword">=</span> <span class="code-attribute">MASTER;</span> <br>
  <span class="code-attribute">MPI_Recv(&amp;offset,</span> <span class="code-attribute">1,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">source,</span> <span class="code-attribute">tag1,</span> <span class="code-attribute">MPI_COMM_WORLD,</span> <span class="code-attribute">&amp;status);</span> <br>
  <span class="code-attribute">MPI_Recv(&amp;data[offset],</span> <span class="code-attribute">chunksize,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">source,</span> <span class="code-attribute">tag2,MPI_COMM_WORLD,</span> <span class="code-attribute">&amp;status);</span> <br>
  <span class="code-attribute">mysum</span> <span class="code-keyword">=</span> <span class="code-attribute">run_kernel(&amp;data[offset],</span> <span class="code-attribute">chunksize);</span><br>  <span class="code-attribute">printf(&quot;\nKernel</span> <span class="code-attribute">returns</span> <span class="code-attribute">sum</span> <span class="code-attribute">%d</span> <span class="code-attribute">&quot;,</span> <span class="code-attribute">mysum);</span><br>
 <br><span class="code-keyword">/</span><span class="code-keyword">/</span> <span class="code-attribute">mysum</span> <span class="code-keyword">=</span> <span class="code-attribute">update(offset,</span> <span class="code-attribute">chunksize,</span> <span class="code-attribute">taskid);</span><br>
  <span class="code-attribute">stop</span> <span class="code-keyword">=</span> <span class="code-attribute">MPI_Wtime();</span><br>  <span class="code-attribute">time</span> <span class="code-keyword">=</span> <span class="code-attribute">stop</span> <span class="code-attribute">-start;</span><br>
  <span class="code-attribute">printf(&quot;time</span> <span class="code-attribute">taken</span> <span class="code-attribute">by</span> <span class="code-attribute">process</span> <span class="code-attribute">%d</span> <span class="code-attribute">to</span> <span class="code-attribute">recieve</span> <span class="code-attribute">elements</span> <span class="code-attribute">and</span> <span class="code-attribute">caluclate</span> <span class="code-attribute">own</span> <span class="code-attribute">sum</span> <span class="code-attribute">is</span> <span class="code-keyword">=</span> <span class="code-attribute">%lf</span> <span class="code-attribute">seconds</span> <span class="code-attribute">\n&quot;,</span> <span class="code-attribute">taskid,</span> <span class="code-attribute">time);</span>  <br>
 <span class="code-keyword">/</span><span class="code-keyword">/</span> <span class="code-attribute">totaltime</span> <span class="code-keyword">=</span> <span class="code-attribute">totaltime</span> <span class="code-attribute">+</span> <span class="code-attribute">time;</span><br>
 <br><br> <br>  <span class="code-keyword">/</span><span class="code-attribute">*</span> <span class="code-attribute">Send</span> <span class="code-attribute">my</span> <span class="code-attribute">results</span> <span class="code-attribute">back</span> <span class="code-attribute">to</span> <span class="code-attribute">the</span> <span class="code-attribute">master</span> <span class="code-attribute">task</span> <span class="code-attribute">*</span><span class="code-keyword">/</span> <br>
  <span class="code-attribute">dest</span> <span class="code-keyword">=</span> <span class="code-attribute">MASTER;</span> <br>  <span class="code-attribute">MPI_Send(&amp;offset,</span> <span class="code-attribute">1,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">dest,</span> <span class="code-attribute">tag1,</span> <span class="code-attribute">MPI_COMM_WORLD);</span> <br>
  <span class="code-attribute">MPI_Send(&amp;data[offset],</span> <span class="code-attribute">chunksize,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">MASTER,</span> <span class="code-attribute">tag2,</span> <span class="code-attribute">MPI_COMM_WORLD);</span> <br>
  <span class="code-attribute">MPI_Reduce(&amp;mysum,</span> <span class="code-attribute">&amp;sum,</span> <span class="code-attribute">1,</span> <span class="code-attribute">MPI_INT,</span> <span class="code-attribute">MPI_SUM,</span> <span class="code-attribute">MASTER,</span> <span class="code-attribute">MPI_COMM_WORLD);</span><br>
 <br>  <span class="code-attribute">}</span> <span class="code-keyword">/</span><span class="code-attribute">*</span> <span class="code-attribute">end</span> <span class="code-attribute">of</span> <span class="code-attribute">non-master</span> <span class="code-attribute">*</span><span class="code-keyword">/</span><br>
 <br> <span class="code-attribute">MPI_Finalize();</span> <br><span class="code-attribute">}</span>  <br></span></pre>
<br>
here is the output of above code - <br>
 <br>
MPI task 2 has started on host 4<br>
MPI task 3 has started on host 4<br>
MPI task 0 has started on host 4<br>
MPI task 1 has started on host 4<br>
 <br>
Initialized array sum 9061<br>
Sent 500 elements to task 1 offset= 500<br>
Sent 500 elements to task 2 offset= 1000<br>
Sent 500 elements to task 3 offset= 1500<br>
 <br>
<br>
 <br>
run_kernel called.............. <br>
the sum is 10<br>
 <br>
Kernel returns sum 159300360 time taken by process 2 to recieve elements and caluclate own sum is = 0.290016 seconds <br>
run_kernel called.............. <br>
the sum is 268452367<br>
run_kernel called.............. <br>
the sum is 10<br>
 <br>
Kernel returns sum 145185544 time taken by process 3 to recieve elements and caluclate own sum is = 0.293579 seconds <br>
run_kernel called.............. <br>
the sum is 1048<br>
 <br>
Kernel returns sum 156969736 time taken by process 1 to recieve elements and caluclate own sum is = 0.297599 seconds <br>
Kernel returns sum 152148496<br>
*** Final sum= 613604136 ***<br>
 <br>
The final sum and initialized sum is not matching. I am guessing its a pointer issue. mysum should be pointer? but then MPI_REDUCE does not execute properly and segmentation fault occurs. <br>
 <br>
Any idea what is going wrong?<br>
Thanks<br clear="all"><br><br><div><span style="font-size:13px"><br><font color="#666666" face="georgia, serif"><br></font></span></div><br>

