Hi,<br>From what I could see, actually you can obviate the input-parse.xml  with a bit of rough work :).<br><br>1. To parse the objects to the spawning processes, first wrap your objects in to a derived data type (ex. MPI_Struct) which can be easily transferred from the web service to the spawned children. If you are using Axis/C, then this might be an easy map since you already have your data structs ready. So after spawning, send your object structs to the leading process of the spawned pool which from there you can distribute the objects to other processes in that pool. No need to use the file at this point since theres an inter communicator established between the webservice and the lead process when you call MPI_Spawn. Use this correctly within webservice and the lead process. Call &#39;MPI_Comm_get_parent&#39; inside the lead child to get the webservice intercommunicator.<br>
<br>2. In this case, I&#39;m not sure. But since the webservice runs only in one instance, you dont need  it to run in several processes. So as I could see, the main process can be a single process and it can be executed just as ./main_process without mpirun -np x commands. So this might work for you as well when the service is loaded inside the httpserver as a single service. <br>
I think someone can comment on this whether is it safe and acceptable to run the main process without mpirun?<br><br><br>Prasad.<br><br><div class="gmail_quote">On Tue, Jul 28, 2009 at 8:35 AM, Ashika Umanga Umagiliya <span dir="ltr">&lt;<a href="mailto:aumanga@biggjapan.com" target="_blank">aumanga@biggjapan.com</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">


  

<div bgcolor="#ffffff" text="#000000">
Greetings all,<br>
<br>
Please refer to the image at : <a href="http://i25.tinypic.com/v65ite.png" target="_blank">http://i25.tinypic.com/v65ite.png</a><br>
<br>
As mentioned in Lisandro&#39;s reply, my webservice is acting as a proxy to
the MPI application.<br>
In the webservice, the SOAP parameters are bind into C++ object model.<br>
<br>
But I have several questions:<br>
<br>
(1) It seems MPI_Comm_spawn() command just execute the MPI programm
like an external application.<br>
So, the C++ object-model created in webservice, is not accessible in my
MPI application.(illustrated in blue line)<br>
If thats the case,to pass the input parameters, I have to marshal my
object-model into an XML file , then call MPI_Comm_spawn() with the
filename as an argument,so that MPI programm can read the values from
the XML file.(illustrated in red lines)<br>
Is there any other way to do this?<br>
<br>
(2) Before calling MPI_Comm_spawn() in my webservice,I have to
initialize MPI by calling, MPI_Init(),MPI_Comm_get_parent()..etc.<br>
So do I have to initialize MPI in my webservice logic.<br>
If thats the case,I can&#39;t start my webservice in standard way like:<br>
<br>
#./svmWebservice<br>
<br>
but in MPI way:<br>
#mpirun -np 100 -hostfile ~./hosts svmWebservice                    <br>
??? which is confusing ??<br>
<br>
Any tips?<br>
Thanks in advance,<br><font color="#888888">
umanga</font><div><div></div><div><br>
<br>
Lisandro Dalcin wrote:
<blockquote type="cite">
  <pre>I do not know anything about implementing webservices, but you should
take a look at MPI-2 dynamic process management. This way, your
webservice can MPI_Comm_spawn() a brand-new set of parallel processes
doing the heavy work. This way, your webservice will act as a kind of
proxy application between the request coming from the outside world
and your parallel computing resources...


On Fri, Jul 17, 2009 at 12:44 AM, Ashika Umanga
Umagiliya<a href="mailto:aumanga@biggjapan.com" target="_blank">&lt;aumanga@biggjapan.com&gt;</a> wrote:
  </pre>
  <blockquote type="cite">
    <pre>Greetings all,

I am in the design level of parallizing an SVM algorithm.We need to expose
this as a webservice.I have decided to go with Axis2/C implementation.

Please refer to : <a href="http://i30.tinypic.com/i707qq.png" target="_blank">http://i30.tinypic.com/i707qq.png</a>

As can be seen in the Figure1 , can I embedd my MPI logic in side my
Webservice ? I guess that its not possible because the webservice is
packaged as a static library (myService.so) and can not execute the
&quot;mpirun&quot;.

In Figure2, I have illustrated another alternative.In my Webservice, I
invoke my parallel program (myParallelProg) using &quot;mpirun&quot; and other
parameters.

Is there any good design to accomplish what I am trying to do?I think the
second is not a good design ?

Thanks in advance,
umanga


_______________________________________________
users mailing list
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a>

    </pre>
  </blockquote>
  <pre>  </pre>
</blockquote>
<br>
</div></div></div>

<br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div><br><br clear="all"><br>-- <br><a href="http://www.codeproject.com/script/Articles/MemberArticles.aspx?amid=3489381" target="_blank">http://www.codeproject.com/script/Articles/MemberArticles.aspx?amid=3489381</a><br>



