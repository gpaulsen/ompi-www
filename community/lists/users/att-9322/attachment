<table cellspacing="0" cellpadding="0" border="0" ><tr><td valign="top" style="font: inherit;">Wow, that's great.<br><br>&nbsp;You mean that PMPI_* is totally/functionally similar to MPI_*, right ?<br><br>&nbsp;Thank you so much for your instructions.<br><br>Le , Duy Khanh<br>Cellphone: (+84)958521704<br>Faculty of Computer Science and Engineering<br>Ho Chi Minh city University of Technology , Viet Nam<br><br><br><br>--- On <b>Wed, 5/13/09, Jeff Squyres <i>&lt;jsquyres@cisco.com&gt;</i></b> wrote:<br><blockquote style="border-left: 2px solid rgb(16, 16, 255); margin-left: 5px; padding-left: 5px;"><br>From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<br>Subject: Re: [OMPI users] How to override MPI functions such as MPI_Init, MPI_Recv...<br>To: "Open MPI Users" &lt;users@open-mpi.org&gt;<br>Date: Wednesday, May 13, 2009, 11:43 AM<br><br><div class="plainMail">You could just define your own library with the same signatures as official MPI functions, and link
 that into MPI applications.&nbsp; Under the covers, you invoke the PMPI_* equivalents of each function.&nbsp; Lots of profiling and analysis tools work this way.&nbsp; For example:<br><br>int MPI_Init(int argc, char **argv)<br>{<br>&nbsp; &nbsp; /* do whatever you want to do here */<br>&nbsp; &nbsp; ret = PMPI_Init(argc, argv);<br>&nbsp; &nbsp; /* do whatever you want to do here */<br>&nbsp; &nbsp; return ret;<br>}<br><br>compile/link that into libextra_mpi_stuff.a.&nbsp; Then compile your app with:<br><br>&nbsp;&nbsp;&nbsp;mpicc my_mpi_app.c -lextra_mpi_stuff<br><br>and then when mpi_mpi_app.c calls MPI_Init(), it'll call *your* MPI_Init.&nbsp; Your MPI_Init will do whatever it wants to, and invoke PMPI_Init() (i.e., the "real" init function) and return back to the user.<br><br>This is the profiling interface of MPI.<br><br><br>On May 13, 2009, at 1:20 PM, Le Duy Khanh wrote:<br><br>&gt; Dear,<br>&gt; <br>&gt;&nbsp; I intend to override some MPI
 functions such as MPI_Init, MPI_Recv... but I don't want to dig into OpenMPI source code.Therefore, I am thinking of a way to create a lib called "mympi.h" in which I will #include "mpi.h" to override those functions. I will create a new interface with exactly the same signatures like MPI_Init (because users are familiar with those functions). However, the problem is that I don't know how to override those functions because as I know, C/C++ doesn't allow us to override functions (only overload them).<br>&gt; <br>&gt;&nbsp; Could you please show me how to override OMPI functions but still keep the same function names and signatures?<br>&gt; <br>&gt;&nbsp; Thank you so much for your time and consideration<br>&gt; <br>&gt; Le , Duy Khanh<br>&gt; Cellphone: (+84)958521704<br>&gt; Faculty of Computer Science and Engineering<br>&gt; Ho Chi Minh city University of Technology , Viet Nam<br>&gt; <br>&gt; _______________________________________________<br>&gt;
 users mailing list<br>&gt; <a ymailto="mailto:users@open-mpi.org" href="/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br><br><br>--Jeff Squyres<br>Cisco Systems<br><br>_______________________________________________<br>users mailing list<br><a ymailto="mailto:users@open-mpi.org" href="/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></div></blockquote></td></tr></table><br>

      
