<?
$subject_val = "Re: [OMPI users] -DUSE_TSD_DATA_HACK problem in openmpi's ptmalloc2";
include("../../include/msg-header.inc");
?>
<!-- received="Wed Sep 26 05:01:19 2012" -->
<!-- isoreceived="20120926090119" -->
<!-- sent="Wed, 26 Sep 2012 11:01:19 +0200" -->
<!-- isosent="20120926090119" -->
<!-- name="Jeff Squyres" -->
<!-- email="jsquyres_at_[hidden]" -->
<!-- subject="Re: [OMPI users] -DUSE_TSD_DATA_HACK problem in openmpi's ptmalloc2" -->
<!-- id="4302C29F-5D20-4648-AF38-FA78002C8961_at_cisco.com" -->
<!-- charset="us-ascii" -->
<!-- inreplyto="OF4EE73F4F.3D5482A0-ON49257A7F.00225804-49257A7F.002374B3_at_jcity.maeda.co.jp" -->
<!-- expires="-1" -->
<div class="center">
<table border="2" width="100%" class="links">
<tr>
<th><a href="date.php">Date view</a></th>
<th><a href="index.php">Thread view</a></th>
<th><a href="subject.php">Subject view</a></th>
<th><a href="author.php">Author view</a></th>
</tr>
</table>
</div>
<p class="headers">
<strong>Subject:</strong> Re: [OMPI users] -DUSE_TSD_DATA_HACK problem in openmpi's ptmalloc2<br>
<strong>From:</strong> Jeff Squyres (<em>jsquyres_at_[hidden]</em>)<br>
<strong>Date:</strong> 2012-09-26 05:01:19
</p>
<ul class="links">
<!-- next="start" -->
<li><strong>Next message:</strong> <a href="20331.php">Siegmar Gross: "Re: [OMPI users] bindings not reported and other problems in openmpi-1.7a1r27358"</a>
<li><strong>Previous message:</strong> <a href="20329.php">Jeff Squyres: "Re: [OMPI users] error from MPI_Allgather"</a>
<li><strong>In reply to:</strong> <a href="20249.php">tmishima_at_[hidden]: "[OMPI users] -DUSE_TSD_DATA_HACK problem in openmpi's ptmalloc2"</a>
<!-- nextthread="start" -->
<!-- reply="end" -->
</ul>
<hr>
<!-- body="start" -->
<p>
Thanks for bringing this to our attention.
<br>
<p>Brian just committed a fix on the trunk (<a href="https://svn.open-mpi.org/trac/ompi/changeset/27371">https://svn.open-mpi.org/trac/ompi/changeset/27371</a>).  We'll let that soak for a day or three and then bring it over to v1.6 and v1.7.
<br>
<p><p>On Sep 20, 2012, at 8:25 AM, &lt;tmishima_at_[hidden]&gt; &lt;tmishima_at_[hidden]&gt; wrote:
<br>
<p><span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Hello, I found a problem in openmpi's ptmalloc2. The problem is that
</span><br>
<span class="quotelev1">&gt; TSD (thread specific data) does not work properly and it may cause
</span><br>
<span class="quotelev1">&gt; peformance loss and segfault.  In my case, heavy memory allocating
</span><br>
<span class="quotelev1">&gt; applications sometimes make segfault.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Please see opal/mca/memory/linux/sysdeps/pthread/malloc-machine.h.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; When USE_TSD_DATA_HACK is defined, which is default of openmpi, the
</span><br>
<span class="quotelev1">&gt; hacked TSD is used as shown below.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt;  #if defined(__sgi) || defined(USE_TSD_DATA_HACK)
</span><br>
<span class="quotelev1">&gt;  typedef void *tsd_key_t[256];
</span><br>
<span class="quotelev1">&gt;  #define tsd_key_create(key, destr) do { \
</span><br>
<span class="quotelev1">&gt;    int i; \
</span><br>
<span class="quotelev1">&gt;    for(i=0; i&lt;256; i++) (*key)[i] = 0; \
</span><br>
<span class="quotelev1">&gt;  } while(0)
</span><br>
<span class="quotelev1">&gt;  #define tsd_setspecific(key, data) \
</span><br>
<span class="quotelev1">&gt;   (key[(unsigned)pthread_self() % 256] = (data))
</span><br>
<span class="quotelev1">&gt;  #define tsd_getspecific(key, vptr) \
</span><br>
<span class="quotelev1">&gt;   (vptr = key[(unsigned)pthread_self() % 256])
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; On the other hand, thread ID(=pthread_self()) generated by pthread is
</span><br>
<span class="quotelev1">&gt; not a continuous number, at least in my environment.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt;  An example of threads created by t-test1 included in ptmalloc2:
</span><br>
<span class="quotelev1">&gt;  [mishima_at_manage ptmalloc2]$ ./t-test1 4 4
</span><br>
<span class="quotelev1">&gt;  Using posix threads.
</span><br>
<span class="quotelev1">&gt;  total=4 threads=4 i_max=10000 size=10000 bins=200
</span><br>
<span class="quotelev1">&gt;  Created thread 41cb4940.
</span><br>
<span class="quotelev1">&gt;  Created thread 41eb5940.
</span><br>
<span class="quotelev1">&gt;  Created thread 420b6940.
</span><br>
<span class="quotelev1">&gt;  Created thread 422b7940.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Since the interval of ID number is much larger than 256, each thread may
</span><br>
<span class="quotelev1">&gt; share key-array address. Most of [pthread_self() % 256] is 64 as shown
</span><br>
<span class="quotelev1">&gt; above, which means that the hacked TSD does not function at all.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; I think -DUSE_TSD_DATA_HACK=1 should be removed from openmpi's
</span><br>
<span class="quotelev1">&gt; configuration. As far as I checked, when I use pthread's TSD by
</span><br>
<span class="quotelev1">&gt; &quot;#undef USE_DATA_HACK&quot;, the problem goes away.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; One more request is PGI compiler issue. PGI compiler does not have
</span><br>
<span class="quotelev1">&gt; pre-defined macro __GNUC__. Therefore, PGI does not use fast inline
</span><br>
<span class="quotelev1">&gt; mutex_lock wrriten in malloc-machine.h. Please consider to add 4 lines
</span><br>
<span class="quotelev1">&gt; arround the head of malloc.c.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; --- opal/mca/memory/linux/malloc.c.org  2012-08-30 16:15:19.000000000 +0900
</span><br>
<span class="quotelev1">&gt; +++ opal/mca/memory/linux/malloc.c      2012-08-31 07:57:16.000000000 +0900
</span><br>
<span class="quotelev1">&gt; @@ -43,6 +43,11 @@
</span><br>
<span class="quotelev1">&gt; #define MORECORE opal_memory_linux_free_ptmalloc2_sbrk
</span><br>
<span class="quotelev1">&gt; #define munmap(a,b) opal_memory_linux_free_ptmalloc2_munmap(a,b,1)
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; +/* For PGI compiler to activate inline mutex_lock */
</span><br>
<span class="quotelev1">&gt; +#if defined(__PGI)
</span><br>
<span class="quotelev1">&gt; +#define __GNUC__ 1
</span><br>
<span class="quotelev1">&gt; +#endif
</span><br>
<span class="quotelev1">&gt; +
</span><br>
<span class="quotelev1">&gt; /* make some non-GCC compilers happy */
</span><br>
<span class="quotelev1">&gt; #ifndef __GNUC__
</span><br>
<span class="quotelev1">&gt; #define __const const
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; P.S.
</span><br>
<span class="quotelev1">&gt; Since GNU and Intel compiler uses inline mutex_lock, mutex initialization
</span><br>
<span class="quotelev1">&gt; is very fast and the hacked TSD problem does not cause segfault. Only
</span><br>
<span class="quotelev1">&gt; the perfomance loss could be induced. The reason is a very long story,
</span><br>
<span class="quotelev1">&gt; please let it omitted today.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Best regards,
</span><br>
<span class="quotelev1">&gt; Tetsuya Mishima
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; _______________________________________________
</span><br>
<span class="quotelev1">&gt; users mailing list
</span><br>
<span class="quotelev1">&gt; users_at_[hidden]
</span><br>
<span class="quotelev1">&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a>
</span><br>
<p><p><pre>
-- 
Jeff Squyres
jsquyres_at_[hidden]
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/">http://www.cisco.com/web/about/doing_business/legal/cri/</a>
</pre>
<!-- body="end" -->
<hr>
<ul class="links">
<!-- next="start" -->
<li><strong>Next message:</strong> <a href="20331.php">Siegmar Gross: "Re: [OMPI users] bindings not reported and other problems in openmpi-1.7a1r27358"</a>
<li><strong>Previous message:</strong> <a href="20329.php">Jeff Squyres: "Re: [OMPI users] error from MPI_Allgather"</a>
<li><strong>In reply to:</strong> <a href="20249.php">tmishima_at_[hidden]: "[OMPI users] -DUSE_TSD_DATA_HACK problem in openmpi's ptmalloc2"</a>
<!-- nextthread="start" -->
<!-- reply="end" -->
</ul>
<div class="center">
<table border="2" width="100%" class="links">
<tr>
<th><a href="date.php">Date view</a></th>
<th><a href="index.php">Thread view</a></th>
<th><a href="subject.php">Subject view</a></th>
<th><a href="author.php">Author view</a></th>
</tr>
</table>
</div>
<!-- trailer="footer" -->
<? include("../../include/msg-footer.inc") ?>
