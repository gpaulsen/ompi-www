Thanks&nbsp; George,<br /><br />&nbsp;&nbsp;&nbsp;&nbsp; But what is the need for user to specify it. The api can check the address of&nbsp; input buffers and output buffers. Is there some extra advantage of MPI_IN_PLACE over automatically detecting it using pointers?<br /><br />-Neeraj<br /><br />On Tue, 11 Dec 2007 06:10:06 -0500 Open MPI Users  wrote<br /><br />  Neeraj,<br /><br />  <br /><br />  MPI_IN_PLACE is defined by the MPI standard in order to allow the  <br /><br />  users to specify that the input and output buffers for the collectives  <br /><br />  are the same. Moreover, not all collectives support MPI_IN_PLACE and  <br /><br />  for those that support it some strict rules apply. Please read the  <br /><br />  collective section in the MPI standard to see all the restrictions.<br /><br />  <br /><br />     Thanks,<br /><br />       george.<br /><br />  <br /><br />  On Dec 11, 2007, at 5:56 AM, Neeraj Chourasia wrote:<br /><br />  <br /><br />  &gt; Hello everyone,<br /><br />  &gt;<br /><br />  &gt;     While going through collective algorithms, I came across  <br /><br />  &gt; preprocessor directive MPI_IN_PLACE which is (void *)1. Its always  <br /><br />  &gt; being compared against source buffer(sbuf). My question is when  <br /><br />  &gt; MPI_IN_PLACE == sbuf condition would be true. As far as i  <br /><br />  &gt; understand, sbuf is the address of source buffer, which every node  <br /><br />  &gt; has to transfer to remaining nodes based on recursive doubling or  <br /><br />  &gt; say bruck algo. And it can never be equal to (void *)1. Any help is  <br /><br />  &gt; appreciated.<br /><br />  &gt;<br /><br />  &gt; Regards<br /><br />  &gt; Neeraj<br /><br />  &gt;<br /><br />  &gt; _______________________________________________<br /><br />  &gt; users mailing list<br /><br />  &gt; users@open-mpi.org<br /><br />  &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<br /><br />  <br /><br />  <br /><br />  
<br>
