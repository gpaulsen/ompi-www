<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">mpirun is not an MPI process, so it makes no difference what your processes are doing wrt MPI_Abort or any other MPI function call.<div><br></div><div>A quick glance thru the code shows that mpirun won't properly terminate under these conditions. It is waiting to hear that all daemons have terminated, and obviously is missing the one that was on the node that you powered off.</div><div><br></div><div>This obviously isn't a scenario we regularly test. The work Jeff referred to is intended to better handle such situations, but isn't ready for release yet. I'm not sure if I'll have time to go back to the 1.4 series and resolve this behavior, but I'll put it on my list of things to look at if/when time permits.</div><div><br></div><div><br><div><div>On Jun 23, 2010, at 6:53 AM, Randolph Pullen wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td valign="top" style="font: inherit;">ok,<br>Having confirmed that replacing MPI_Abort with exit() does not work and checking that under these conditions the only process left running appears to be mpirun,<br>I think I need to report a bug, ie:<br>Although the processes themselves can be stopped (by exit if nothing else)<br>mpirun hangs after a node is powered off and can never exit as it appears to wait indefinitely for the missing node to receive or send a signal.<br><br><br>--- On <b>Wed, 23/6/10, Jeff Squyres <i>&lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt;</i></b> wrote:<br><blockquote style="border-left: 2px solid rgb(16, 16, 255); margin-left: 5px; padding-left: 5px;"><br>From: Jeff Squyres &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt;<br>Subject: Re: [OMPI users] more Bugs in MPI_Abort() -- mpirun<br>To: "Open MPI Users" &lt;<a href="mailto:users@open-mpi.org">users@open-mpi.org</a>&gt;<br>Received: Wednesday, 23 June, 2010, 9:10 PM<br><br><div class="plainMail">Open
 MPI's fault tolerance support is fairly rudimentary.&nbsp; If you kill any process without calling MPI_Finalize, Open MPI will -- by default -- kill all the others in the job.<br><br>Various research work is ongoing to improve fault tolerance in Open MPI, but I don't know the state of it in terms of surviving a failed process.&nbsp; I *think* that this kind of stuff is not ready for prime time, but I admit that this is not an area that I pay close attention to.<br><br><br><br>On Jun 23, 2010, at 3:08 AM, Randolph Pullen wrote:<br><br>&gt; That is effectively what I have done by changing to the immediate send/receive and waiting in a loop a finite number of times for the transfers to complete - and calling MPI_abort if they do not complete in a set time.<br>&gt; It is not clear how I can kill mpirun in a manner consistent with the API.<br>&gt; Are you implying I should call exit() rather than MPI_abort?<br>&gt; <br>&gt; --- On Wed, 23/6/10, David Zhang
 &lt;<a ymailto="mailto:solarbikedz@gmail.com" href="x-msg://30/mc/compose?to=solarbikedz@gmail.com">solarbikedz@gmail.com</a>&gt; wrote:<br>&gt; <br>&gt; From: David Zhang &lt;<a ymailto="mailto:solarbikedz@gmail.com" href="x-msg://30/mc/compose?to=solarbikedz@gmail.com">solarbikedz@gmail.com</a>&gt;<br>&gt; Subject: Re: [OMPI users] more Bugs in MPI_Abort() -- mpirun<br>&gt; To: "Open MPI Users" &lt;<a ymailto="mailto:users@open-mpi.org" href="x-msg://30/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a>&gt;<br>&gt; Received: Wednesday, 23 June, 2010, 4:37 PM<br>&gt; <br>&gt; Since you turned the machine off instead of just killing one of the processes, no signals could be sent to other processes.&nbsp; Perhaps you could institute some sort of handshaking in your software that periodically check for the attendance of all machines, and timeout if not all are present within some alloted time?<br>&gt; <br>&gt; On Tue, Jun 22, 2010 at 10:43 PM, Randolph Pullen &lt;<a ymailto="mailto:randolph_pullen@yahoo.com.au" href="x-msg://30/mc/compose?to=randolph_pullen@yahoo.com.au">randolph_pullen@yahoo.com.au</a>&gt; wrote:<br>&gt; <br>&gt; I have a mpi program that aggregates data from multiple sql systems.&nbsp; It all runs fine.&nbsp; To test fault tolerance I switch one of the machines off while it is running.&nbsp; The result is always a hang, ie mpirun never completes.<br>&gt;&nbsp; <br>&gt; To try and avoid this I have replaced the send and receive calls with immediate calls (ie MPI_Isend, MPI_Irecv) to try and trap long waiting sends and receives but it makes no difference.<br>&gt; My requirement is that all complete or mpirun exits with an error - no matter where they are in their execution when a failure occurs.&nbsp; This system must continue (ie fail)&nbsp; if a machine dies, regroup and re-cast the job over the remaining nodes.<br>&gt; <br>&gt; I am running FC10, gcc 4.3.2 and openMPI 1.4.1<br>&gt; 4G RAM, dual core intel
 all x86_64<br>&gt; <br>&gt; <br>&gt; ===============================================================================================================<br>&gt; The commands I have tried:<br>&gt; mpirun&nbsp; -hostfile ~/mpd.hosts -np 6&nbsp; ./ingsprinkle&nbsp; test t3&nbsp; "select * from tab"&nbsp;&nbsp;&nbsp;<br>&gt; <br>&gt; mpirun -mca btl ^sm -hostfile ~/mpd.hosts -np 6&nbsp; ./ingsprinkle&nbsp; test t3&nbsp; "select * from tab"&nbsp;&nbsp;&nbsp;<br>&gt; <br>&gt; mpirun -mca orte_forward_job_control 1&nbsp; -hostfile ~/mpd.hosts -np 6&nbsp; ./ingsprinkle&nbsp; test t3&nbsp; "select * from tab"&nbsp;&nbsp;&nbsp;<br>&gt; <br>&gt; <br>&gt; ===============================================================================================================<br>&gt; <br>&gt; The results:<br>&gt; recv returned 0 with status 0<br>&gt; waited&nbsp; # 2000002 tiumes - now status is&nbsp; 0 flag is -1976147192<br>&gt;
 --------------------------------------------------------------------------<br>&gt; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD <br>&gt; with errorcode 5.<br>&gt; <br>&gt; NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.<br>&gt; You may or may not see output from other processes, depending on<br>&gt; exactly when Open MPI kills them.<br>&gt; --------------------------------------------------------------------------<br>&gt; --------------------------------------------------------------------------<br>&gt; mpirun has exited due to process rank 0 with PID 29141 on<br>&gt; node bd01 exiting without calling "finalize". This may<br>&gt; have caused other processes in the application to be<br>&gt; terminated by signals sent by mpirun (as reported here).<br>&gt; --------------------------------------------------------------------------<br>&gt; <br>&gt; [*** wait a long time ***]<br>&gt; [bd01:29136]
 [[55293,0],0]-[[55293,0],1] mca_oob_tcp_msg_recv: readv failed: Connection reset by peer (104)<br>&gt; <br>&gt; ^Cmpirun: abort is already in progress...hit ctrl-c again to forcibly terminate<br>&gt; <br>&gt; <br>&gt; ===============================================================================================================<br>&gt; <br>&gt; As you can see, my trap can signal an abort, the tcp layer can time out but mpirun just keeps on running...<br>&gt; <br>&gt; Any help greatly appreciated..<br>&gt; Vlad<br>&gt; <br>&gt; <br>&gt; <br>&gt;&nbsp; <br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a ymailto="mailto:users@open-mpi.org" href="x-msg://30/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; David Zhang<br>&gt;
 University of California, San Diego<br>&gt; <br>&gt; -----Inline Attachment Follows-----<br>&gt; <br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a ymailto="mailto:users@open-mpi.org" href="x-msg://30/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt; <br>&gt;&nbsp; _______________________________________________<br>&gt; users mailing list<br>&gt; <a ymailto="mailto:users@open-mpi.org" href="x-msg://30/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br><br><br>-- <br>Jeff Squyres<br><a ymailto="mailto:jsquyres@cisco.com" href="x-msg://30/mc/compose?to=jsquyres@cisco.com">jsquyres@cisco.com</a><br>For corporate legal information go to:<br><a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br><br><br>_______________________________________________<br>users mailing list<br><a ymailto="mailto:users@open-mpi.org" href="x-msg://30/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></div></blockquote></td></tr></tbody></table><br>



      &nbsp;_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>http://www.open-mpi.org/mailman/listinfo.cgi/users</blockquote></div><br></div></body></html>
