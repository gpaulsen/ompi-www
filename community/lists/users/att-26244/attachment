<div dir="ltr">Dear all,<div>here how I create a 2D vector type to send 3D array element:</div><div><br></div><div>(in the attachment)</div><div><br></div><div>The vectors are:</div><div>real*4  AA(4,5,3), BB(4,5,3)<br></div><div>In my idea both AA and BB have three elements (last columns) and each elements has (4x5) features.</div><div><br></div><div>1) What do you think?</div><div><br></div><div>2) why I can not send AA(1,1,2:3) as</div><div> call MPI_SEND(AA(1,1,2:3), 2, rowtype, 1, 300, MPI_COMM_WORLD, ierr)<br></div><div><br></div><div>Thanks a lot</div><div><br></div><div><br></div></div><div class="gmail_extra"><br clear="all"><div><div class="gmail_signature">Diego<br><br></div></div>
<br><div class="gmail_quote">On 18 January 2015 at 13:02, Diego Avesani <span dir="ltr">&lt;<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Dear All, Dear Gus, Dear George,<div>I almost get it. In the attachment the program.<br></div><div><br></div><div>All data arrived, However I got a segmentation fault. </div><div>The idea is to have mpi_type_row and then construct a mpi_rowcolumn_type.</div><div>Probably I am not able to understand the correct position in Fortran.</div><div><br></div><div>(P.S. I am sorry for the other post in the other treat.)</div><span class=""><div><br></div><div>What do you think?</div><div><br></div><div>Thanks again</div><div><br></div><div><br></div></span></div><div class="gmail_extra"><span class="HOEnZb"><font color="#888888"><br clear="all"><div><div>Diego<br><br></div></div></font></span><div><div class="h5">
<br><div class="gmail_quote">On 16 January 2015 at 20:04, Diego Avesani <span dir="ltr">&lt;<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Dear all,<div>here the 3D example, but unfortunately it does not work.</div><div>I believe that there is some problem with the stride.</div><div><br></div><div>What do you think?</div><div><br></div><div>Thanks again to everyone</div></div><div class="gmail_extra"><span><font color="#888888"><br clear="all"><div><div>Diego<br><br></div></div></font></span><div><div>
<br><div class="gmail_quote">On 16 January 2015 at 19:20, Diego Avesani <span dir="ltr">&lt;<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Dear All,<div>in the attachment the 2D example, Now I will try the 3D example.</div><div><br></div><div>What do you think of it? is it correct?</div><div>The idea is to build a 2D data_type, to sent 3D data</div></div><div class="gmail_extra"><span><font color="#888888"><br clear="all"><div><div>Diego<br><br></div></div></font></span><div><div>
<br><div class="gmail_quote">On 16 January 2015 at 18:19, Diego Avesani <span dir="ltr">&lt;<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Dear George, Dear All,<div><br></div><div>and what do you think about the previous post?</div><div><br></div><div>Thanks again</div></div><div class="gmail_extra"><br clear="all"><div><div>Diego<br><br></div></div>
<br><div class="gmail_quote"><div><div>On 16 January 2015 at 18:11, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;</span> wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div><div style="word-wrap:break-word">You could but you don’t need to. The datatype engine of Open MPI is doing a fair job of packing/unpacking the data on the flight, so you don’t have to.<div><br></div><div>  George.</div><div><br><div><blockquote type="cite"><div><div><div>On Jan 16, 2015, at 11:32 , Diego Avesani &lt;<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a>&gt; wrote:</div><br></div></div><div><div><div><div dir="ltr" style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px">Dear all,<div><br></div><div>Could I use  MPI_PACK?</div><div><br></div></div><div class="gmail_extra" style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px"><br clear="all"><div><div>Diego<br><br></div></div><br><div class="gmail_quote">On 16 January 2015 at 16:26, Diego Avesani<span> </span><span dir="ltr">&lt;<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a>&gt;</span><span> </span>wrote:<br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div dir="ltr">Dear George, Dear all,<div><br></div><div>I have been studying. It&#39;s clear for 2D case QQ(:,:).</div><div><br></div><div>For example if </div><div>real :: QQ(npt,9) , with 9 the characteristic of each particles.</div><div><br></div><div>I can simple:</div><div><br></div><div><div> call MPI_TYPE_VECTOR(QQ(1:50), 9, 9, MPI_REAL,  my_2D_type, ierr)</div></div><div><br></div><div>I send 50 element of QQ. I am in fortran so a two dimensional array is organized in a 1D array and a new row start after the 9 elements of a colum</div><div><br></div><div>The problem is a 3D array. I belive that I have to create a sort of<span> </span><i>vector of vectors.</i></div><div>More or less like:</div><div><i><br></i></div><div>call MPI_TYPE_VECTOR(xxx, xxx, xxx, MPI_REAL,  my_row, ierr)</div><div><br></div><div>     and then<i> </i></div><div><br></div><div>call MPI_TYPE_VECTOR(xxx, xxx, xxx, <i><b>my_row</b></i>,  my_type, ierr).<i><br></i></div><div><br></div><div>You can note that in the second case I have  <i><b>my_row</b><span> </span></i>instead of mpi_real.  </div><div><br></div><div>I found somethind about it in a tutorial but I am not able to find it again in google. I think that is not convinient the use of struct in this case, I have only real. Moreover, mpi_struct is think <span style="font-size:12.8000001907349px">to emulate Fortran90 and C structures, as Gus&#39; suggestion.</span></div><div><span style="font-size:12.8000001907349px"><br></span></div><div>Let&#39;s me look to that tutorial</div><div>What do you think?</div><div><br></div><div>Thanks again</div><div><i><br></i></div><div><i><br></i></div><div><br></div><div><br></div><div><br></div></div><div class="gmail_extra"><br clear="all"><div><div>Diego<br><br></div></div><br><div class="gmail_quote"><div><div>On 16 January 2015 at 16:02, George Bosilca<span> </span><span dir="ltr">&lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;</span><span> </span>wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div><div><div dir="ltr">The operation you describe is a pack operation, agglomerating together in a contiguous buffer originally discontinuous elements. As a result there is no need to use the MPI_TYPE_VECTOR, but instead you can just use the type you created so far (MPI_my_STRUCT) with a count.<div><br></div><div> <span> </span>George.</div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote"><div><div>On Fri, Jan 16, 2015 at 5:32 AM, Diego Avesani<span> </span><span dir="ltr">&lt;<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a>&gt;</span><span> </span>wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div><div><div dir="ltr">Dear All, <div>I&#39;m sorry to insist, but I am not able to understand. Moreover, I have realized that I have to explain myself better.<br></div><div><br></div><div>I try to explain in may program. Each CPU has<span> </span><i>npt</i><span> </span>particles. My program understand how many particles each CPU has to send, according to their positions. Then I can do:</div><div><br></div><div><i>icount=1</i></div><div><div><i> DO i=1,npt</i></div><div><i>   <span> </span>IF(i is a particle to send)THEN</i></div><div><i><br></i></div><div><i>       <span> </span>DATASEND(icount)%ip     = PART(ip)%ip</i></div><div><i>       <span> </span>DATASEND(icount)%mc     = PART(ip)%mc</i></div><div><i>         </i></div><div><i>       <span> </span>DATASEND(icount)%RP     = PART(ip)%RP</i></div><div><i>       <span> </span>DATASEND(icount)%QQ     = PART(ip)%QQ</i></div><div><i><br></i></div><div><i>       <span> </span>icount=icount+1</i></div><div><i>   <span> </span>ENDIF</i></div><div><i> ENDDO</i></div></div><div><i><br></i></div><div>After that, I can send<i> </i><i>DATASEND</i></div><div><br></div><div>I<span> </span><i>DATASEND</i> is a   <i>MPI_my_STRUCT.</i><span> </span>I can allocate it according to the number of particles that I have to send:</div><div><br></div><div>TYPE(tParticle)  ,ALLOCATABLE,DIMENSION(:) :: DATASEND,DATARECV<br></div><div><br></div><div>This means that the number of particles which I have to send can change every time.</div><div><br></div><div>After that, I compute for each particles, somethins called QQmls(:,:,:).</div><div>QQmls has all real elements. Now I would like to to the same that I did with PART, but in this case:</div><div><br></div><div><div><i>icount=1</i></div><div></div></div><div><div><i>DO i=1,npt</i></div><div><i>   <span> </span>IF(i is a particle to send)THEN</i></div></div><div><i>   </i></div><div><i>       </i><i>DATASEND_REAL(:,<b>icount</b>,:)=QQmls(:,<b>i</b>,:)</i></div><div><i>     <span> </span>icount=icount+1</i><i><br></i></div><div><i><br></i></div><div><i>   <span> </span>ENDIF</i></div><div><i>ENDDO</i></div><div><br></div><div>I would like to have a sort  <i>MPI_my_TYPE to do that (like </i>  <i>MPI_my_STRUCT</i><i>)<span> </span></i>and not to create every time <i>MPI_TYPE_VECTOR<span> </span></i>because<i>  </i><i>DATASEND_REAL<span> </span></i>changes size every time.</div><div><br></div><div>I hope to make myself clear.</div><div><br></div><div>So is it correct to use <i>MPI_TYPE_VECTOR?,<span> </span></i>Can I do what I want?</div><div><br></div><div>In the meantime, I will study some examples.</div><div><br></div><div>Thanks again</div><div><br></div><div> </div><div><br></div><div><br></div></div><div class="gmail_extra"><br clear="all"><div><div>Diego<br><br></div></div><br><div class="gmail_quote"><div><div>On 16 January 2015 at 07:39, George Bosilca<span> </span><span dir="ltr">&lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;</span><span> </span>wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div><div> The subarray creation is an multi-dimension extension of the vector type. You can see it as a vector of vector of vector and so on, one vector per dimension. The stride array is used to declare on each dimension what is the relative displacement (in number of elements) from the beginning of the dimension array.<br><br>It is important to use regular type creation when you can take advantage of such regularity instead of resorting to use of struct or h*. This insure better packing/unpacking performance, as well as possible future support for one-sided communications.<br><br>George.<br><div><div><br><br><br>&gt; On Jan 15, 2015, at 19:31, Gus Correa &lt;<a href="mailto:gus@ldeo.columbia.edu" target="_blank">gus@ldeo.columbia.edu</a>&gt; wrote:<br>&gt;<br>&gt; I never used MPI_Type_create_subarray, only MPI_Type_Vector.<br>&gt; What I like about MPI_Type_Vector is that you can define a stride,<br>&gt; hence you can address any regular pattern in memory.<br>&gt; However, it envisages the array layout in memory as a big 1-D array,<br>&gt; with a linear index progressing in either Fortran or C order.<br>&gt;<br>&gt; Somebody correct me please if I am wrong, but at first sight MPI_Type_Vector sounds more flexible to me than MPI_Type_create_subarray, exactly because the latter doesn&#39;t have strides.<br>&gt;<br>&gt; The downside is that you need to do some index arithmetic to figure<br>&gt; the right strides, etc, to match the corresponding<br>&gt; Fortran90 array sections.<br>&gt;<br>&gt; There are good examples in the &quot;MPI - The complete reference&quot; books I suggested to you before (actually in vol 1).<br>&gt;<br>&gt; Online I could find the two man pages (good information, but no example):<br>&gt;<br>&gt;<span> </span><a href="http://www.open-mpi.org/doc/v1.8/man3/MPI_Type_vector.3.php" target="_blank">http://www.open-mpi.org/doc/v1.8/man3/MPI_Type_vector.3.php</a><br>&gt;<span> </span><a href="http://www.open-mpi.org/doc/v1.8/man3/MPI_Type_create_subarray.3.php" target="_blank">http://www.open-mpi.org/doc/v1.8/man3/MPI_Type_create_subarray.3.php</a><br>&gt;<br>&gt; There is a very simple 2D example of MPI_Type_vector using strides here:<br>&gt;<br>&gt;<span> </span><a href="https://computing.llnl.gov/tutorials/mpi/#Derived_Data_Types" target="_blank">https://computing.llnl.gov/tutorials/mpi/#Derived_Data_Types</a><br>&gt;<br>&gt; and a similar one here:<br>&gt;<br>&gt;<span> </span><a href="http://static.msi.umn.edu/tutorial/scicomp/general/MPI/content6.html" target="_blank">http://static.msi.umn.edu/tutorial/scicomp/general/MPI/content6.html</a><br>&gt;<br>&gt; Gus Correa<br>&gt;<br>&gt;&gt; On 01/15/2015 06:53 PM, Diego Avesani wrote:<br>&gt;&gt; dear George, dear Gus, dear all,<br>&gt;&gt; Could you please tell me where I can find a good example?<br>&gt;&gt; I am sorry but I can not understand the 3D array.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Really Thanks<br>&gt;&gt;<br>&gt;&gt; Diego<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On 15 January 2015 at 20:13, George Bosilca &lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a><br>&gt;&gt; &lt;mailto:<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;&gt;    On Jan 15, 2015, at 06:02 , Diego Avesani &lt;<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a><br>&gt;&gt;&gt;    &lt;mailto:<a href="mailto:diego.avesani@gmail.com" target="_blank">diego.avesani@gmail.com</a>&gt;&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    Dear Gus, Dear all,<br>&gt;&gt;&gt;    Thanks a lot.<br>&gt;&gt;&gt;    MPI_Type_Struct works well for the first part of my problem, so I<br>&gt;&gt;&gt;    am very happy to be able to use it.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    Regarding MPI_TYPE_VECTOR.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    I have studied it and for simple case it is clear to me what id<br>&gt;&gt;&gt;    does (at least I believe). Foe example if I have a matrix define as:<br>&gt;&gt;&gt;    REAL, ALLOCATABLE (AA(:,:))<br>&gt;&gt;&gt;    ALLOCATE AA(100,5)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    I could send part of it defining<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    CALL MPI_TYPE_VECTOR(5,1,5,MPI_DOUBLE_PRECISION,/MY_NEW_TYPE/)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    after that I can send part of it with<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    CALL MPI_SEND( AA(1:/10/,:), /10/, /MY_NEW_TYPE/, 1, 0,<br>&gt;&gt;&gt;    MPI_COMM_WORLD );<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    Have I understood correctly?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    What I can do in case of three dimensional array? for example<br>&gt;&gt;&gt;    AA(:,:,:), I am looking to MPI_TYPE_CREATE_SUBARRAY.<br>&gt;&gt;&gt;    Is that the correct way?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    Thanks again<br>&gt;&gt;<br>&gt;&gt;    Indeed, using the subarray is the right approach independent on the<br>&gt;&gt;    number of dimensions of the data (you can use it instead of<br>&gt;&gt;    MPI_TYPE_VECTOR as well).<br>&gt;&gt;<br>&gt;&gt;       George.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    Diego<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    On 13 January 2015 at 19:04, Gus Correa &lt;<a href="mailto:gus@ldeo.columbia.edu" target="_blank">gus@ldeo.columbia.edu</a><br>&gt;&gt;&gt;    &lt;mailto:<a href="mailto:gus@ldeo.columbia.edu" target="_blank">gus@ldeo.columbia.edu</a>&gt;&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;        Hi Diego<br>&gt;&gt;&gt;        I guess MPI_Type_Vector is the natural way to send and receive<br>&gt;&gt;&gt;        Fortran90 array sections (e.g. your QQMLS(:,50:100,:)).<br>&gt;&gt;&gt;        I used that before and it works just fine.<br>&gt;&gt;&gt;        I think that is pretty standard MPI programming style.<br>&gt;&gt;&gt;        I guess MPI_Type_Struct tries to emulate Fortran90 and C<br>&gt;&gt;&gt;        structures<br>&gt;&gt;&gt;        (as you did in your previous code, with all the surprises<br>&gt;&gt;&gt;        regarding alignment, etc), not array sections.<br>&gt;&gt;&gt;        Also, MPI type vector should be more easy going (and probably<br>&gt;&gt;&gt;        more efficient) than MPI type struct, with less memory<br>&gt;&gt;&gt;        alignment problems.<br>&gt;&gt;&gt;        I hope this helps,<br>&gt;&gt;&gt;        Gus Correa<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;        PS - These books have a quite complete description and several<br>&gt;&gt;&gt;        examples<br>&gt;&gt;&gt;        of all MPI objects and functions, including MPI types (native<br>&gt;&gt;&gt;        and user defined):<br>&gt;&gt;&gt;       <span> </span><a href="http://mitpress.mit.edu/books/__mpi-complete-reference-0" target="_blank">http://mitpress.mit.edu/books/__mpi-complete-reference-0</a><br>&gt;&gt;&gt;        &lt;<a href="http://mitpress.mit.edu/books/mpi-complete-reference-0" target="_blank">http://mitpress.mit.edu/books/mpi-complete-reference-0</a>&gt;<br>&gt;&gt;&gt;       <span> </span><a href="http://mitpress.mit.edu/books/__mpi-complete-reference-1" target="_blank">http://mitpress.mit.edu/books/__mpi-complete-reference-1</a><br>&gt;&gt;&gt;        &lt;<a href="http://mitpress.mit.edu/books/mpi-complete-reference-1" target="_blank">http://mitpress.mit.edu/books/mpi-complete-reference-1</a>&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;        [They cover MPI 1 and 2. I guess there is a new/upcoming book<br>&gt;&gt;&gt;        with MPI 3, but for what you&#39;re doing 1 and 2 are more than<br>&gt;&gt;&gt;        enough.]<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;        On 01/13/2015 09:22 AM, Diego Avesani wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            Dear all,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            I had some wonderful talking about MPI_type_create_struct adn<br>&gt;&gt;&gt;            isend\irecv with<br>&gt;&gt;&gt;            Gilles, Gustavo, George, Gus, Tom and Jeff. Now all is<br>&gt;&gt;&gt;            more clear and my<br>&gt;&gt;&gt;            program works.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            Now I have another question. In may program I have matrix:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            /QQMLS(:,:,:) /that is allocate as<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            /ALLOCATE(QQMLS(9,npt,18)/), where npt is the number of<br>&gt;&gt;&gt;            particles<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            QQMLS is double precision.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            I would like to sent form a CPU to another part of it, for<br>&gt;&gt;&gt;            example,<br>&gt;&gt;&gt;            sending QQMLS(:,50:100,:). I mean sending the QQMLS of the<br>&gt;&gt;&gt;            particles<br>&gt;&gt;&gt;            between 50 to 100.<br>&gt;&gt;&gt;            I suppose that i could use MPI_Type_vector but I am not<br>&gt;&gt;&gt;            sure. The<br>&gt;&gt;&gt;            particle that I want to sent could be from 25 to 50 ecc..<br>&gt;&gt;&gt;            ecc..so<br>&gt;&gt;&gt;              blocklength changes everytime.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            Do I have to use MPI_type_create_struct?<br>&gt;&gt;&gt;            Do I have correctly understood MPI_Type_vector?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            Thanks a lot<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            Diego<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;            _________________________________________________<br>&gt;&gt;&gt;            users mailing list<br>&gt;&gt;&gt;           <span> </span><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><span> </span>&lt;mailto:<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a>&gt;<br>&gt;&gt;&gt;            Subscription:<br>&gt;&gt;&gt;           <span> </span><a href="http://www.open-mpi.org/__mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/__mailman/listinfo.cgi/users</a><br>&gt;&gt;&gt;            &lt;<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a>&gt;<br>&gt;&gt;&gt;            Link to this post:<br>&gt;&gt;&gt;           <span> </span><a href="http://www.open-mpi.org/__community/lists/users/2015/01/__26171.php" target="_blank">http://www.open-mpi.org/__community/lists/users/2015/01/__26171.php</a><br>&gt;&gt;&gt;            &lt;<a href="http://www.open-mpi.org/community/lists/users/2015/01/26171.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26171.php</a>&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;        _________________________________________________<br>&gt;&gt;&gt;        users mailing list<br>&gt;&gt;&gt;       <span> </span><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><span> </span>&lt;mailto:<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a>&gt;<br>&gt;&gt;&gt;        Subscription:<br>&gt;&gt;&gt;       <span> </span><a href="http://www.open-mpi.org/__mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/__mailman/listinfo.cgi/users</a><br>&gt;&gt;&gt;        &lt;<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a>&gt;<br>&gt;&gt;&gt;        Link to this post:<br>&gt;&gt;&gt;       <span> </span><a href="http://www.open-mpi.org/__community/lists/users/2015/01/__26172.php" target="_blank">http://www.open-mpi.org/__community/lists/users/2015/01/__26172.php</a><br>&gt;&gt;&gt;        &lt;<a href="http://www.open-mpi.org/community/lists/users/2015/01/26172.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26172.php</a>&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;    _______________________________________________<br>&gt;&gt;&gt;    users mailing list<br>&gt;&gt;&gt;   <span> </span><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><span> </span>&lt;mailto:<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a>&gt;<br>&gt;&gt;&gt;    Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt;&gt;    Link to this post:<br>&gt;&gt;&gt;   <span> </span><a href="http://www.open-mpi.org/community/lists/users/2015/01/26184.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26184.php</a><br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;    _______________________________________________<br>&gt;&gt;    users mailing list<br>&gt;&gt;   <span> </span><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><span> </span>&lt;mailto:<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a>&gt;<br>&gt;&gt;    Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt;    Link to this post:<br>&gt;&gt;   <span> </span><a href="http://www.open-mpi.org/community/lists/users/2015/01/26192.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26192.php</a><br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; users mailing list<br>&gt;&gt;<span> </span><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>&gt;&gt; Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt; Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/users/2015/01/26193.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26193.php</a><br>&gt;<br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt;<span> </span><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>&gt; Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt; Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/users/2015/01/26194.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26194.php</a><br>_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></div></div></div></div>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/users/2015/01/26195.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26195.php</a><br></blockquote></div><br></div><br>_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></div></div>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/users/2015/01/26197.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26197.php</a><br></blockquote></div><br></div><br>_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></div></div>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/users/2015/01/26199.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26199.php</a><br></blockquote></div><br></div></blockquote></div><br></div><span style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;display:inline!important">_______________________________________________</span><br style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px"><span style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;display:inline!important">users mailing list</span><br style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px"><span style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;display:inline!important"><a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a></span><br style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px"><span style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;display:inline!important">Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a></span><br style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px"></div></div><span style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;float:none;display:inline!important">Link to this post:<span> </span></span><a href="http://www.open-mpi.org/community/lists/users/2015/01/26201.php" style="font-family:CourierNewPSMT;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26201.php</a></div></blockquote></div><br></div></div><br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></div></div>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2015/01/26202.php" target="_blank">http://www.open-mpi.org/community/lists/users/2015/01/26202.php</a><br></blockquote></div><br></div>
</blockquote></div><br></div></div></div>
</blockquote></div><br></div></div></div>
</blockquote></div><br></div></div></div>
</blockquote></div><br></div>

