<div dir="ltr"><div class="gmail_extra">Thanks, John. I sometimes wonder if I&#39;m the only one out there with this particular problem.</div><div class="gmail_extra"><br></div><div class="gmail_extra">Ralph, thanks for sticking with me. :) Using a pool of uids doesn&#39;t really work due to the way cgroups/containers works. It also would require changing the permissions of all of the user&#39;s files, which would create issues for Jupyter/Hub&#39;s access to the files, which is used for in situ monitoring.</div><div class="gmail_extra"><br></div><div class="gmail_extra">Docker does not yet handle uid mapping at the container level (1.10 added mappings for the daemon). We have <a href="https://github.com/radiasoft/containers/blob/fc63d3c0d2ffe7e8a80ed1e2a8dc44a33c08cb46/bin/build-docker.sh#L110">solved this problem</a> by adding a uid/gid switcher at container startup for our images. The trick is to change the uid/gid of the &quot;container user&quot; with usermod and groupmod. This only works, however, with images we provide. I&#39;d like a solution that allows us to start arbitrary/unsafe images, relying on cgroups to their job.</div><div class="gmail_extra"><br></div><div class="gmail_extra">Gilles, the containers do lock the user down, but the problem is that the file system space has to be dynamically bound to the containers across the cluster. JuptyerHub solves this problem by understanding the concept of a user, and providing a hook to change the directory to be mounted.</div><div class="gmail_extra"><br></div><div class="gmail_extra">Daniel, we&#39;ve had bad experiences with ZoL. It&#39;s allocation algorithm degrades rapidly when the file system gets over 80% full. It still is not integrated into major distros, which leads to dkms nightmares on system upgrades. I don&#39;t really see Flocker as helping in this regard, because the problem is the scheduler, not the file system. We know which directory we have to mount from the cluster file system, just need to get the scheduler to allow us to mount that with the container that is running slurmd.</div><div class="gmail_extra"><br></div><div class="gmail_extra">I&#39;ll play with Slurm Elastic Compute this week to see how it works.</div><div class="gmail_extra"><br></div><div class="gmail_extra">Rob<br></div><div class="gmail_extra"><br></div></div>

