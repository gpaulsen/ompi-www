<html>
<head>
<style><!--
.hmmessage P
{
margin:0px;
padding:0px
}
body.hmmessage
{
font-size: 10pt;
font-family:Tahoma
}
--></style>
</head>
<body class='hmmessage'>
Hi,&nbsp;<div><br></div><div>I have installed a new open MPI 1.3.4.&nbsp;</div><div><br></div><div>But I got more weird errors:&nbsp;</div><div><br></div><div><div>*** glibc detected *** /lustre/nsga2b: malloc(): memory corruption (fast): 0x000000001cafc450 ***</div><div>======= Backtrace: =========</div><div>/lib64/libc.so.6[0x3c50272aeb]</div><div>/lib64/libc.so.6(__libc_malloc+0x7a)[0x3c5027402a]</div><div>/usr/lib64/libstdc++.so.6(_Znwm+0x1d)[0x3c590bd17d]</div><div>/lustre/jxding/netplan49/nsga2b[0x445bc6]</div><div>/lustre/jxding/netplan49/nsga2b[0x44f43b]</div><div>/lib64/libc.so.6(__libc_start_main+0xf4)[0x3c5021d974]</div><div>/lustre/jxding/netplan49/nsga2b(__gxx_personality_v0+0x499)[0x443909]</div><div>======= Memory map: ========</div><div>00400000-00f33000 r-xp 00000000 6ac:e3210 685016360 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lustre/netplan49/nsga2b</div><div>01132000-0117e000 rwxp 00b32000 6ac:e3210 685016360 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lustre/netplan49/nsga2b</div><div>0117e000-01188000 rwxp 0117e000 00:00 0</div><div>1ca11000-1ca78000 rwxp 1ca11000 00:00 0</div><div>1ca78000-1ca79000 rwxp 1ca78000 00:00 0</div><div>1ca79000-1ca7a000 rwxp 1ca79000 00:00 0</div><div>1ca7a000-1cab8000 rwxp 1ca7a000 00:00 0</div><div>1cab8000-1cac7000 rwxp 1cab8000 00:00 0</div><div>1cac7000-1cacf000 rwxp 1cac7000 00:00 0</div><div>1cacf000-1cad0000 rwxp 1cacf000 00:00 0</div><div>1cad0000-1cad1000 rwxp 1cad0000 00:00 0</div><div>1cad1000-1cad2000 rwxp 1cad1000 00:00 0</div><div>1cad2000-1cada000 rwxp 1cad2000 00:00 0</div><div>1cada000-1cadc000 rwxp 1cada000 00:00 0</div><div>1cadc000-1cae0000 rwxp 1cadc000 00:00 0</div><div><br></div><div>.........................</div><div><div>512600000-3512605000 r-xp 00000000 00:11 12043 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/usr/lib64/librdmacm.so.1</div><div>3512605000-3512804000 ---p 00005000 00:11 12043 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/usr/lib64/librdmacm.so.1</div><div>3512804000-3512805000 rwxp 00004000 00:11 12043 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/usr/lib64/librdmacm.so.1</div><div>3512e00000-3512e0c000 r-xp 00000000 00:11 5545 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /usr/lib64/libibverbs.so.1</div><div>3512e0c000-351300b000 ---p 0000c000 00:11 5545 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /usr/lib64/libibverbs.so.1</div><div>351300b000-351300c000 rwxp 0000b000 00:11 5545 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /usr/lib64/libibverbs.so.1</div><div>3c4f200000-3c4f21c000 r-xp 00000000 00:11 2853 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /lib64/ld-2.5.so</div><div>3c4f41b000-3c4f41c000 r-xp 0001b000 00:11 2853 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /lib64/ld-2.5.so</div><div>3c4f41c000-3c4f41d000 rwxp 0001c000 00:11 2853 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /lib64/ld-2.5.so</div><div>3c50200000-3c5034c000 r-xp 00000000 00:11 897 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lib64/libc.so.6</div><div>3c5034c000-3c5054c000 ---p 0014c000 00:11 897 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lib64/libc.so.6</div><div>3c5054c000-3c50550000 r-xp 0014c000 00:11 897 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lib64/libc.so.6</div><div>3c50550000-3c50551000 rwxp 00150000 00:11 897 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lib64/libc.so.6</div><div>3c50551000-3c50556000 rwxp 3c50551000 00:00 0</div><div>3c50600000-3c50682000 r-xp 00000000 00:11 2924 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /lib64/libm.so.6</div><div>3c50682000-3c50881000 ---p 00082000 00:11 2924 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /lib64/libm.so.6</div><div>3c50881000-3c50882000 r-xp 00081000 00:11 2924 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /lib64/libm.so.6</div><div>3c50882000-3c50883000 rwxp 00082000 00:11 2924 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /lib64/libm.so.6</div><div>3c50a00000-3c50a02000 r-xp 00000000 00:11 923 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lib64/libdl.so.2</div><div>3c50a02000-3c50c02000 ---p 00002000 00:11 923 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lib64/libdl.so.2</div><div>3c50c02000-3c50c03000 r-xp 00002000 00:11 923 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lib64/libdl.so.2</div><div>3c50c03000-3c50c04000 rwxp 00003000 00:11 923 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lib64/libdl.so.2</div><div>3c50e00000-3c50e16000 r-xp 00000000 00:11 1011 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /lib64/libpthread.so.0</div></div><div><br></div><div>.....................</div><div><div>2ae87b05e000-2ae87b075000 r-xp 00000000 6ac:e3210 686492235 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lustre/mpi_protocol_091117/openmpi134/lib/libmpi_cxx.so.0.0.0</div><div>2ae87b075000-2ae87b274000 ---p 00017000 6ac:e3210 686492235 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lustre/mpi_protocol_091117/openmpi134/lib/libmpi_cxx.so.0.0.0</div><div>2ae87b274000-2ae87b277000 rwxp 00016000 6ac:e3210 686492235 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/lustre/mpi_protocol_091117/openmpi134/lib/libmpi_cxx.so.0.0.0</div><div>&nbsp;</div></div><div><br></div><div><br></div><div><div>fff2fa38000-7fff2fa4e000 rwxp 7ffffffe9000 00:00 0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[stack]</div><div>ffffffffff600000-ffffffffffe00000 ---p 00000000 00:00 0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[vdso]</div><div>[n332:82320] *** Process received signal ***</div><div>[n332:82320] Signal: Aborted (6)</div><div>[n332:82320] Signal code: &nbsp;(-6)</div><div>[n332:82320] [ 0] /lib64/libpthread.so.0 [0x3c50e0e4c0]</div><div>[n332:82320] [ 1] /lib64/libc.so.6(gsignal+0x35) [0x3c50230215]</div><div>[n332:82320] [ 2] /lib64/libc.so.6(abort+0x110) [0x3c50231cc0]</div><div>[n332:82320] [ 3] /lib64/libc.so.6 [0x3c5026a7fb]</div><div>[n332:82320] [ 4] /lib64/libc.so.6 [0x3c50272aeb]</div><div>[n332:82320] [ 5] /lib64/libc.so.6(__libc_malloc+0x7a) [0x3c5027402a]</div><div>[n332:82320] [ 6] /usr/lib64/libstdc++.so.6(_Znwm+0x1d) [0x3c590bd17d]</div><div>[n332:82320] [ 7] /lustre/jxding/netplan49/nsga2b [0x445bc6]</div><div>[n332:82320] [ 8] /lustre/jxding/netplan49/nsga2b [0x44f43b]</div><div>[n332:82320] [ 9] /lib64/libc.so.6(__libc_start_main+0xf4) [0x3c5021d974]</div><div>[n332:82320] [10] /lustre/nsga2b(__gxx_personality_v0+0x499) [0x443909]</div><div>[n332:82320] *** End of error message ***</div><div>=&gt;&gt; PBS: job killed: walltime 117 exceeded limit 90</div><div>mpirun: killing job...</div></div><div><br></div><div><br></div><div><br></div><br>&gt; Subject: Re: [OMPI users] OMPI seg fault by a class with weird address.<br>&gt; From: jsquyres@cisco.com<br>&gt; Date: Tue, 15 Mar 2011 12:50:41 -0400<br>&gt; CC: users@open-mpi.org<br>&gt; To: dtustudy68@hotmail.com<br>&gt; <br>&gt; You can:<br>&gt; <br>&gt;     mpirun -np 4 valgrind ./my_application<br>&gt; <br>&gt; That is, you run 4 copies of valgrind, each with one instance of ./my_application.  Then you'll get valgrind reports for your applications.  You might want to dig into the valgrind command line options to have it dump the results to files with unique prefixes (e.g., PID and/or hostname) so that you can get a unique report from each process.<br>&gt; <br>&gt; If you disabled ptmalloc and you're still getting the same error, then it sounds like an application error.  Check out and see what valgrind tells you.<br>&gt; <br>&gt; <br>&gt; <br>&gt; On Mar 15, 2011, at 11:25 AM, Jack Bryan wrote:<br>&gt; <br>&gt; &gt; Thanks,<br>&gt; &gt; <br>&gt; &gt; From  http://valgrind.org/docs/manual/mc-manual.html#mc-manual.mpiwrap<br>&gt; &gt; <br>&gt; &gt; I find that <br>&gt; &gt; <br>&gt; &gt; "Currently the wrappers are only buildable with mpiccs which are based on GNU GCC or Intel's C++ Compiler."<br>&gt; &gt; <br>&gt; &gt; The cluster which I am working on is using GNU Open MPI mpic++. i am afraid that the Valgrind wrapper can work here. <br>&gt; &gt; <br>&gt; &gt; I do not have system administrator authorization. <br>&gt; &gt; <br>&gt; &gt; Are there other mem-checkers (open source) that can do this ?<br>&gt; &gt; <br>&gt; &gt; thanks<br>&gt; &gt; <br>&gt; &gt; Jack<br>&gt; &gt; <br>&gt; &gt; &gt; Subject: Re: [OMPI users] OMPI seg fault by a class with weird address.<br>&gt; &gt; &gt; From: jsquyres@cisco.com<br>&gt; &gt; &gt; Date: Tue, 15 Mar 2011 06:19:53 -0400<br>&gt; &gt; &gt; CC: dtustudy68@hotmail.com<br>&gt; &gt; &gt; To: users@open-mpi.org<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; You may also want to run your program through a memory-checking debugger such as valgrind to see if it turns up any other problems.<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; AFIK, ptmalloc should be fine for use with STL vector allocation.<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; <br>&gt; &gt; &gt; On Mar 15, 2011, at 4:00 AM, Belaid MOA wrote:<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Hi Jack,<br>&gt; &gt; &gt; &gt; I may need to see the whole code to decide but my quick look suggest that ptmalloc is causing a problem with STL-vector allocation. ptmalloc is the openMPI internal malloc library. Could you try to build openMPI without memory management (using --without-memory-manager) and let us know the outcome. ptmalloc is not needed if you are not using an RDMA interconnect.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; With best regards,<br>&gt; &gt; &gt; &gt; -Belaid.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; From: dtustudy68@hotmail.com<br>&gt; &gt; &gt; &gt; To: belaid_moa@hotmail.com; users@open-mpi.org<br>&gt; &gt; &gt; &gt; Subject: RE: [OMPI users] OMPI seg fault by a class with weird address.<br>&gt; &gt; &gt; &gt; Date: Tue, 15 Mar 2011 00:30:19 -0600<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Hi, <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Because the code is very long, I just show the calling relationship of functions. <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; main()<br>&gt; &gt; &gt; &gt; {<br>&gt; &gt; &gt; &gt; scheduler();<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; }<br>&gt; &gt; &gt; &gt; scheduler()<br>&gt; &gt; &gt; &gt; {<br>&gt; &gt; &gt; &gt; ImportIndices();<br>&gt; &gt; &gt; &gt; }<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; ImportIndices()<br>&gt; &gt; &gt; &gt; {<br>&gt; &gt; &gt; &gt; Index IdxNode ;<br>&gt; &gt; &gt; &gt; IdxNode = ReadFile("fileName");<br>&gt; &gt; &gt; &gt; }<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Index ReadFile(const char* fileinput) <br>&gt; &gt; &gt; &gt; {<br>&gt; &gt; &gt; &gt; Index TempIndex;<br>&gt; &gt; &gt; &gt; .........<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; }<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; vector&lt;int&gt; Index::GetPosition() const { return Position; }<br>&gt; &gt; &gt; &gt; vector&lt;int&gt; Index::GetColumn() const { return Column; }<br>&gt; &gt; &gt; &gt; vector&lt;int&gt; Index::GetYear() const { return Year; }<br>&gt; &gt; &gt; &gt; vector&lt;string&gt; Index::GetName() const { return Name; }<br>&gt; &gt; &gt; &gt; int Index::GetPosition(const int idx) const { return Position[idx]; }<br>&gt; &gt; &gt; &gt; int Index::GetColumn(const int idx) const { return Column[idx]; }<br>&gt; &gt; &gt; &gt; int Index::GetYear(const int idx) const { return Year[idx]; }<br>&gt; &gt; &gt; &gt; string Index::GetName(const int idx) const { return Name[idx]; }<br>&gt; &gt; &gt; &gt; int Index::GetSize() const { return Position.size(); }<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; The sequential code works well, and there is no scheduler(). <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; The parallel code output from gdb:<br>&gt; &gt; &gt; &gt; ----------------------------------------------<br>&gt; &gt; &gt; &gt; Breakpoint 1, myNeplanTaskScheduler(CNSGA2 *, int, int, int, ._85 *, char, int, message_para_to_workers_VecT &amp;, MPI_Datatype, int &amp;, int &amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &amp;, int, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, MPI_Datatype, int, MPI_Datatype, int) (nsga2=0x118c490, <br>&gt; &gt; &gt; &gt; popSize=&lt;value optimized out&gt;, nodeSize=&lt;value optimized out&gt;, <br>&gt; &gt; &gt; &gt; myRank=&lt;value optimized out&gt;, myChildpop=0x1208d80, genCandTag=65 'A', <br>&gt; &gt; &gt; &gt; generationNum=1, myPopParaVec=std::vector of length 4, capacity 4 = {...}, <br>&gt; &gt; &gt; &gt; message_to_master_type=0x7fffffffd540, myT1Flag=@0x7fffffffd68c, <br>&gt; &gt; &gt; &gt; myT2Flag=@0x7fffffffd688, <br>&gt; &gt; &gt; &gt; resultTaskPackageT1=std::vector of length 4, capacity 4 = {...}, <br>&gt; &gt; &gt; &gt; resultTaskPackageT2Pr=std::vector of length 4, capacity 4 = {...}, <br>&gt; &gt; &gt; &gt; xdataV=std::vector of length 4, capacity 4 = {...}, objSize=7, <br>&gt; &gt; &gt; &gt; resultTaskPackageT12=std::vector of length 4, capacity 4 = {...}, <br>&gt; &gt; &gt; &gt; xdata_to_workers_type=0x121c410, myGenerationNum=1, <br>&gt; &gt; &gt; &gt; Mpara_to_workers_type=0x121b9b0, nconNum=0)<br>&gt; &gt; &gt; &gt; at src/nsga2/myNetplanScheduler.cpp:109<br>&gt; &gt; &gt; &gt; 109 ImportIndices();<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 2, ImportIndices () at src/index.cpp:120<br>&gt; &gt; &gt; &gt; 120 IdxNode = ReadFile("prepdata/idx_node.csv");<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 4, ReadFile (fileinput=0xd8663d "prepdata/idx_node.csv")<br>&gt; &gt; &gt; &gt; at src/index.cpp:86<br>&gt; &gt; &gt; &gt; 86 Index TempIndex;<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 5, Index::Index (this=0x7fffffffcb80) at src/index.cpp:20<br>&gt; &gt; &gt; &gt; 20 Name(0) {}<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Program received signal SIGSEGV, Segmentation fault.<br>&gt; &gt; &gt; &gt; 0x00002aaaab3b0b81 in opal_memory_ptmalloc2_int_malloc ()<br>&gt; &gt; &gt; &gt; from /opt/openmpi-1.3.4-gnu/lib/libopen-pal.so.0<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; ---------------------------------------<br>&gt; &gt; &gt; &gt; the backtrace output from the above parallel OpenMPI code:<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; (gdb) bt<br>&gt; &gt; &gt; &gt; #0 0x00002aaaab3b0b81 in opal_memory_ptmalloc2_int_malloc ()<br>&gt; &gt; &gt; &gt; from /opt/openmpi-1.3.4-gnu/lib/libopen-pal.so.0<br>&gt; &gt; &gt; &gt; #1 0x00002aaaab3b2bd3 in opal_memory_ptmalloc2_malloc ()<br>&gt; &gt; &gt; &gt; from /opt/openmpi-1.3.4-gnu/lib/libopen-pal.so.0<br>&gt; &gt; &gt; &gt; #2 0x0000003f7c8bd1dd in operator new(unsigned long) ()<br>&gt; &gt; &gt; &gt; from /usr/lib64/libstdc++.so.6<br>&gt; &gt; &gt; &gt; #3 0x00000000004646a7 in __gnu_cxx::new_allocator&lt;int&gt;::allocate (<br>&gt; &gt; &gt; &gt; this=0x7fffffffcb80, __n=0)<br>&gt; &gt; &gt; &gt; at /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/ext/new_allocator.h:88<br>&gt; &gt; &gt; &gt; #4 0x00000000004646cf in std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (this=0x7fffffffcb80, __n=0)<br>&gt; &gt; &gt; &gt; at /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/stl_vector.h:127<br>&gt; &gt; &gt; &gt; #5 0x0000000000464701 in std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (this=0x7fffffffcb80, __n=0, __a=...)<br>&gt; &gt; &gt; &gt; at /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/stl_vector.h:113<br>&gt; &gt; &gt; &gt; #6 0x0000000000464d0b in std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (<br>&gt; &gt; &gt; &gt; this=0x7fffffffcb80, __n=0, __value=@0x7fffffffc968, __a=...)<br>&gt; &gt; &gt; &gt; at /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/stl_vector.h:216<br>&gt; &gt; &gt; &gt; #7 0x00000000004890d7 in Index::Index (this=0x7fffffffcb80)<br>&gt; &gt; &gt; &gt; ---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---<br>&gt; &gt; &gt; &gt; at src/index.cpp:20<br>&gt; &gt; &gt; &gt; #8 0x000000000048927a in ReadFile (fileinput=0xd8663d "prepdata/idx_node.csv")<br>&gt; &gt; &gt; &gt; at src/index.cpp:86<br>&gt; &gt; &gt; &gt; #9 0x0000000000489533 in ImportIndices () at src/index.cpp:120<br>&gt; &gt; &gt; &gt; #10 0x0000000000445e0e in myNeplanTaskScheduler(CNSGA2 *, int, int, int, ._85 *, char, int, message_para_to_workers_VecT &amp;, MPI_Datatype, int &amp;, int &amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &amp;, int, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, MPI_Datatype, int, MPI_Datatype, int) (nsga2=0x118c490, <br>&gt; &gt; &gt; &gt; popSize=&lt;value optimized out&gt;, nodeSize=&lt;value optimized out&gt;, <br>&gt; &gt; &gt; &gt; myRank=&lt;value optimized out&gt;, myChildpop=0x1208d80, genCandTag=65 'A', <br>&gt; &gt; &gt; &gt; generationNum=1, myPopParaVec=std::vector of length 4, capacity 4 = {...}, <br>&gt; &gt; &gt; &gt; message_to_master_type=0x7fffffffd540, myT1Flag=@0x7fffffffd68c, <br>&gt; &gt; &gt; &gt; myT2Flag=@0x7fffffffd688, <br>&gt; &gt; &gt; &gt; resultTaskPackageT1=std::vector of length 4, capacity 4 = {...}, <br>&gt; &gt; &gt; &gt; resultTaskPackageT2Pr=std::vector of length 4, capacity 4 = {...}, <br>&gt; &gt; &gt; &gt; xdataV=std::vector of length 4, capacity 4 = {...}, objSize=7, <br>&gt; &gt; &gt; &gt; resultTaskPackageT12=std::vector of length 4, capacity 4 = {...}, <br>&gt; &gt; &gt; &gt; xdata_to_workers_type=0x121c410, myGenerationNum=1, <br>&gt; &gt; &gt; &gt; Mpara_to_workers_type=0x121b9b0, nconNum=0)<br>&gt; &gt; &gt; &gt; ---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---<br>&gt; &gt; &gt; &gt; at src/nsga2/myNetplanScheduler.cpp:109<br>&gt; &gt; &gt; &gt; #11 0x000000000044f44b in main (argc=1, argv=0x7fffffffd998)<br>&gt; &gt; &gt; &gt; at src/nsga2/main-parallel2.cpp:216<br>&gt; &gt; &gt; &gt; ----------------------------------------------------<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; What is "opal_memory_ptmalloc2_int_malloc ()" ?<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; The gdb output from sequential code: <br>&gt; &gt; &gt; &gt; -------------------------------------<br>&gt; &gt; &gt; &gt; Breakpoint 1, main (argc=&lt;value optimized out&gt;, argv=&lt;value optimized out&gt;)<br>&gt; &gt; &gt; &gt; at src/nsga2/main-seq.cpp:32<br>&gt; &gt; &gt; &gt; 32 ImportIndices();<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 2, ImportIndices () at src/index.cpp:115<br>&gt; &gt; &gt; &gt; 115 IdxNode = ReadFile("prepdata/idx_node.csv");<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 4, ReadFile (fileinput=0xd6bb9d "prepdata/idx_node.csv")<br>&gt; &gt; &gt; &gt; at src/index.cpp:86<br>&gt; &gt; &gt; &gt; 86 Index TempIndex;<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 5, Index::Index (this=0x7fffffffd6d0) at src/index.cpp:20<br>&gt; &gt; &gt; &gt; 20 Name(0) {}<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 4, ReadFile (fileinput=0xd6bbb3 "prepdata/idx_ud.csv")<br>&gt; &gt; &gt; &gt; at src/index.cpp:86<br>&gt; &gt; &gt; &gt; 86 Index TempIndex;<br>&gt; &gt; &gt; &gt; (gdb) bt<br>&gt; &gt; &gt; &gt; #0 ReadFile (fileinput=0xd6bbb3 "prepdata/idx_ud.csv") at src/index.cpp:86<br>&gt; &gt; &gt; &gt; #1 0x0000000000471cc9 in ImportIndices () at src/index.cpp:116<br>&gt; &gt; &gt; &gt; #2 0x000000000043bba6 in main (argc=&lt;value optimized out&gt;, <br>&gt; &gt; &gt; &gt; argv=&lt;value optimized out&gt;) at src/nsga2/main-seq.cpp:32<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; --------------------------------------<br>&gt; &gt; &gt; &gt; thanks<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; From: belaid_moa@hotmail.com<br>&gt; &gt; &gt; &gt; To: users@open-mpi.org; dtustudy68@hotmail.com<br>&gt; &gt; &gt; &gt; Subject: RE: [OMPI users] OMPI seg fault by a class with weird address.<br>&gt; &gt; &gt; &gt; Date: Tue, 15 Mar 2011 06:16:35 +0000<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Hi Jack,<br>&gt; &gt; &gt; &gt; 1- Where is your main function to see how you called your class?<br>&gt; &gt; &gt; &gt; 2- I do not see the implementation of GetPosition, GetName, etc.?<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; With best regards,<br>&gt; &gt; &gt; &gt; -Belaid.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; From: dtustudy68@hotmail.com<br>&gt; &gt; &gt; &gt; To: users@open-mpi.org<br>&gt; &gt; &gt; &gt; Date: Mon, 14 Mar 2011 19:04:12 -0600<br>&gt; &gt; &gt; &gt; Subject: [OMPI users] OMPI seg fault by a class with weird address.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Hi, <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; I got a run-time error of a Open MPI C++ program. <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; The following output is from gdb: <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; --------------------------------------------------------------------------<br>&gt; &gt; &gt; &gt; Program received signal SIGSEGV, Segmentation fault.<br>&gt; &gt; &gt; &gt; 0x00002aaaab3b0b81 in opal_memory_ptmalloc2_int_malloc ()<br>&gt; &gt; &gt; &gt; from /opt/openmpi-1.3.4-gnu/lib/libopen-pal.so.0<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; At the point <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 9, Index::Index (this=0x7fffffffcb80) at src/index.cpp:20<br>&gt; &gt; &gt; &gt; 20 Name(0) {}<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; The Index has been called before this point and no problem:<br>&gt; &gt; &gt; &gt; -------------------------------------------------------<br>&gt; &gt; &gt; &gt; Breakpoint 9, Index::Index (this=0x117d800) at src/index.cpp:20<br>&gt; &gt; &gt; &gt; 20 Name(0) {}<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Breakpoint 9, Index::Index (this=0x117d860) at src/index.cpp:20<br>&gt; &gt; &gt; &gt; 20 Name(0) {}<br>&gt; &gt; &gt; &gt; (gdb) c<br>&gt; &gt; &gt; &gt; Continuing.<br>&gt; &gt; &gt; &gt; ----------------------------------------------------------------------------<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; It seems that the 0x7fffffffcb80 address is a problem. <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; But, I donot know the reason and how to remove the bug. <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Any help is really appreciated. <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; thanks<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; the following is the index definition.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; ---------------------------------------------------------<br>&gt; &gt; &gt; &gt; class Index {<br>&gt; &gt; &gt; &gt; public:<br>&gt; &gt; &gt; &gt; Index();<br>&gt; &gt; &gt; &gt; Index(const Index&amp; rhs);<br>&gt; &gt; &gt; &gt; ~Index();<br>&gt; &gt; &gt; &gt; Index&amp; operator=(const Index&amp; rhs);<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; vector&lt;int&gt; GetPosition() const;<br>&gt; &gt; &gt; &gt; vector&lt;int&gt; GetColumn() const;<br>&gt; &gt; &gt; &gt; vector&lt;int&gt; GetYear() const;<br>&gt; &gt; &gt; &gt; vector&lt;string&gt; GetName() const;<br>&gt; &gt; &gt; &gt; int GetPosition(const int idx) const;<br>&gt; &gt; &gt; &gt; int GetColumn(const int idx) const;<br>&gt; &gt; &gt; &gt; int GetYear(const int idx) const;<br>&gt; &gt; &gt; &gt; string GetName(const int idx) const;<br>&gt; &gt; &gt; &gt; int GetSize() const;<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; void Add(const int idx, const int col, const string&amp; name);<br>&gt; &gt; &gt; &gt; void Add(const int idx, const int col, const int year, const string&amp; name);<br>&gt; &gt; &gt; &gt; void Add(const int idx, const Step&amp; col, const string&amp; name);<br>&gt; &gt; &gt; &gt; void WriteFile(const char* fileinput) const;<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; private:<br>&gt; &gt; &gt; &gt; vector&lt;int&gt; Position;<br>&gt; &gt; &gt; &gt; vector&lt;int&gt; Column;<br>&gt; &gt; &gt; &gt; vector&lt;int&gt; Year;<br>&gt; &gt; &gt; &gt; vector&lt;string&gt; Name;<br>&gt; &gt; &gt; &gt; };<br>&gt; &gt; &gt; &gt; // Contructors and destructor for the Index class<br>&gt; &gt; &gt; &gt; Index::Index() :<br>&gt; &gt; &gt; &gt; Position(0),<br>&gt; &gt; &gt; &gt; Column(0),<br>&gt; &gt; &gt; &gt; Year(0),<br>&gt; &gt; &gt; &gt; Name(0) {}<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Index::Index(const Index&amp; rhs) :<br>&gt; &gt; &gt; &gt; Position(rhs.GetPosition()),<br>&gt; &gt; &gt; &gt; Column(rhs.GetColumn()),<br>&gt; &gt; &gt; &gt; Year(rhs.GetYear()),<br>&gt; &gt; &gt; &gt; Name(rhs.GetName()) {}<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Index::~Index() {}<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Index&amp; Index::operator=(const Index&amp; rhs) {<br>&gt; &gt; &gt; &gt; Position = rhs.GetPosition();<br>&gt; &gt; &gt; &gt; Column = rhs.GetColumn(),<br>&gt; &gt; &gt; &gt; Year = rhs.GetYear(),<br>&gt; &gt; &gt; &gt; Name = rhs.GetName();<br>&gt; &gt; &gt; &gt; return *this;<br>&gt; &gt; &gt; &gt; }<br>&gt; &gt; &gt; &gt; ----------------------------------------------------------<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; _______________________________________________ users mailing list users@open-mpi.org http://www.open-mpi.org/mailman/listinfo.cgi/users<br>&gt; &gt; &gt; &gt; _______________________________________________<br>&gt; &gt; &gt; &gt; users mailing list<br>&gt; &gt; &gt; &gt; users@open-mpi.org<br>&gt; &gt; &gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; <br>&gt; &gt; &gt; -- <br>&gt; &gt; &gt; Jeff Squyres<br>&gt; &gt; &gt; jsquyres@cisco.com<br>&gt; &gt; &gt; For corporate legal information go to:<br>&gt; &gt; &gt; http://www.cisco.com/web/about/doing_business/legal/cri/<br>&gt; &gt; &gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Jeff Squyres<br>&gt; jsquyres@cisco.com<br>&gt; For corporate legal information go to:<br>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<br>&gt; <br></div> 		 	   		  </body>
</html>
