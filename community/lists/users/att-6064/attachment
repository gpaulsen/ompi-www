<table cellspacing='0' cellpadding='0' border='0' ><tr><td valign='top' style='font: inherit;'><pre>Does anyone know if this feature has been incorporated yet? I did a <br>./configure --help but do not see the enable-ptmalloc2-internal option.<br><br>- The ptmalloc2 memory manager component is now by default built as<br>  a standalone library named libopenmpi-malloc.  Users wanting to<br>  use leave_pinned with ptmalloc2 will now need to link the library<br>  into their application explicitly.  All other users will use the<br>  libc-provided allocator instead of Open MPI's ptmalloc2.  This change<br>  may be overriden with the configure option enable-ptmalloc2-internal<br>  --&gt; Expected: 1.3<br></pre><br><br>--- On <b>Fri, 7/11/08, Ashley Pittman <i>&lt;apittman@concurrent-thinking.com&gt;</i></b> wrote:<br><blockquote style="border-left: 2px solid rgb(16, 16, 255); margin-left: 5px; padding-left: 5px;">From: Ashley Pittman
 &lt;apittman@concurrent-thinking.com&gt;<br>Subject: Re: [OMPI users] Valgrind Functionality<br>To: "Tom Riddle" &lt;rarebitusa@yahoo.com&gt;<br>Cc: "Open MPI Users" &lt;users@open-mpi.org&gt;<br>Date: Friday, July 11, 2008, 8:58 AM<br><br><pre>On Tue, 2008-07-08 at 18:01 -0700, Tom Riddle wrote:<br>&gt; Thanks Ashley, after going through your suggestions we tried our test<br>&gt; with valgrind 3.3.0 and with glibc-devel-2.5-18.el5_1.1, both exhibit<br>&gt; the same results. A simple non-MPI test prog however returns expected<br>&gt; responses, so valgrind itself look ok. We then checked that the same<br>&gt; (shared) libc gets linked in both the MPI and non-MPI cases, adding<br>&gt; -pthread to the cc command line yields the same result, the only<br>&gt; difference it appears is the open mpi libraries.<br>&gt; <br>&gt; Now mpicc links against libopen-pal which defines malloc for it's own<br>&gt; purposes. The big difference seems to be that
 libopen-pal.so is<br>&gt; providing its own malloc replacement <br><br>This will be the problem, I've tested on a openmpi (1.2.6) machine here<br>and I see exactly the same behaviour as you.  I re-compiled the<br>application without libopen-pal and valgrind works as expected.  To do<br>this I used mpicc -show to see what compile line it was using and ran<br>the command myself without the -lopen-pal option.  This clearly isn't a<br>acceptable long-term solution but might help you in the short term.<br><br>I'm a MPI expert but work on a different MPI to openmpi normally, I have<br>however done a lot of work with Valgrind on different platforms so pick<br>up questions related to it here.  I think this problem is going to need<br>input from one of the openmpi guys...<br><br>The problem seems to be the presence of malloc() and free() functions in<br>the libopen-pal library is preventing valgrind from intercepting these<br>functions in glibc and hence
 dramatically reducing the benefit which<br>valgrind brings.<br><br>Ashley Pittman.</pre></blockquote></td></tr></table><br>



      
