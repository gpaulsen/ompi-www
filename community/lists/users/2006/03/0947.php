<? include("../../include/msg-header.inc"); ?>
<!-- received="Fri Mar 31 18:38:32 2006" -->
<!-- isoreceived="20060331233832" -->
<!-- sent="Fri, 31 Mar 2006 16:38:17 -0700" -->
<!-- isosent="20060331233817" -->
<!-- name="Brunner, Thomas A." -->
<!-- email="tabrunn_at_[hidden]" -->
<!-- subject="Re: [OMPI users] MPI_Testsome with no requests" -->
<!-- id="C0530B79.25CD%tabrunn_at_sandia.gov" -->
<!-- charset="us-ascii" -->
<!-- inreplyto="2266F211-1232-4A2F-9331-EC8E837BB3E7_at_cs.utk.edu" -->
<!-- expires="-1" -->
<div class="center">
<table border="2" width="100%" class="links">
<tr>
<th><a href="date.php">Date view</a></th>
<th><a href="index.php">Thread view</a></th>
<th><a href="subject.php">Subject view</a></th>
<th><a href="author.php">Author view</a></th>
</tr>
</table>
</div>
<p class="headers">
<strong>From:</strong> Brunner, Thomas A. (<em>tabrunn_at_[hidden]</em>)<br>
<strong>Date:</strong> 2006-03-31 18:38:17
</p>
<ul class="links">
<!-- next="start" -->
<li><strong>Next message:</strong> <a href="http://www.open-mpi.org/community/lists/users/2006/04/0948.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<li><strong>Previous message:</strong> <a href="0946.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<li><strong>In reply to:</strong> <a href="0946.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<!-- nextthread="start" -->
<li><strong>Next in thread:</strong> <a href="http://www.open-mpi.org/community/lists/users/2006/04/0948.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<li><strong>Reply:</strong> <a href="http://www.open-mpi.org/community/lists/users/2006/04/0948.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<!-- reply="end" -->
</ul>
<hr>
<!-- body="start" -->
<p>
Compiling revision 9505 of the trunk and building my original test code now
<br>
core dumps.  I can run the test code with the Testsome line commented out.
<br>
Here is the output from a brief gdb session:
<br>
<p>--------------------------------------------------------------
<br>
<p>gdb a.out /cores/core.28141
<br>
GNU gdb 6.1-20040303 (Apple version gdb-437) (Sun Dec 25 08:31:29 GMT 2005)
<br>
Copyright 2004 Free Software Foundation, Inc.
<br>
GDB is free software, covered by the GNU General Public License, and you are
<br>
welcome to change it and/or distribute copies of it under certain
<br>
conditions.
<br>
Type &quot;show copying&quot; to see the conditions.
<br>
There is absolutely no warranty for GDB.  Type &quot;show warranty&quot; for details.
<br>
This GDB was configured as &quot;powerpc-apple-darwin&quot;...Reading symbols for
<br>
shared libraries ..... done
<br>
<p>Core was generated by `a.out'.
<br>
#0  0x010b2a90 in ?? ()
<br>
(gdb) bt
<br>
#0  0x010b2a90 in ?? ()
<br>
#1  0x010b2a3c in ?? ()
<br>
warning: Previous frame identical to this frame (corrupt stack?)
<br>
#2  0x00002c18 in grow_table (table=0x1, soft=3221222188, hard=0) at
<br>
class/ompi_pointer_array.c:352
<br>
(gdb) up
<br>
#1  0x010b2a3c in ?? ()
<br>
(gdb) up
<br>
#2  0x00002c18 in grow_table (table=0x1, soft=3221222188, hard=0) at
<br>
class/ompi_pointer_array.c:352
<br>
352         if (table-&gt;size &gt;= OMPI_FORTRAN_HANDLE_MAX) {
<br>
<p>---------------------------------------------------------------
<br>
This is the output from the code.
<br>
<p>Hello from processor 0 of 1
<br>
Signal:10 info.si_errno:0(Unknown error: 0) si_code:1(BUS_ADRALN)
<br>
Failing at addr:0x0
<br>
*** End of error message ***
<br>
------------------------------------------------------------
<br>
<p>Perhaps in the MPI_Wait* and MPI_Test* functions, if incount==0, then
<br>
*outcount should be set to zero and immediately return?  (Of course checking
<br>
that outcount !=0 too.)
<br>
<p>Tom
<br>
<p><p><p>On 3/31/06 1:35 PM, &quot;George Bosilca&quot; &lt;bosilca_at_[hidden]&gt; wrote:
<br>
<p><span class="quotelev1">&gt; When we're checking the arguments, we check for the request array to
</span><br>
<span class="quotelev1">&gt; not be NULL without looking to the number of requests. I think it
</span><br>
<span class="quotelev1">&gt; make sense, as I don't see why the user would call these functions
</span><br>
<span class="quotelev1">&gt; with 0 requests ... But, the other way around make sense too. As I
</span><br>
<span class="quotelev1">&gt; don't find anything in the MPI standard that stop the user doing that
</span><br>
<span class="quotelev1">&gt; I add the additional check to all MPI_Wait* and MPI_Test* functions.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Please get the version from trunk after revision 9504.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt;    Thanks,
</span><br>
<span class="quotelev1">&gt;      george.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; On Mar 31, 2006, at 2:56 PM, Brunner, Thomas A. wrote:
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; I have an algorithm that collects information in a tree like manner
</span><br>
<span class="quotelev2">&gt;&gt; using
</span><br>
<span class="quotelev2">&gt;&gt; nonblocking communication.  Some nodes do not receive information
</span><br>
<span class="quotelev2">&gt;&gt; from other
</span><br>
<span class="quotelev2">&gt;&gt; nodes, so there are no outstanding requests on those nodes.  On all
</span><br>
<span class="quotelev2">&gt;&gt; processors, I check for the incoming messages using MPI_Testsome().
</span><br>
<span class="quotelev2">&gt;&gt; MPI_Testsome fails with OpenMPI, however if the request length is
</span><br>
<span class="quotelev2">&gt;&gt; zero.
</span><br>
<span class="quotelev2">&gt;&gt; Here is a code that can be run with only one processor that shows
</span><br>
<span class="quotelev2">&gt;&gt; the same
</span><br>
<span class="quotelev2">&gt;&gt; behavior:
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; ///////////////////////////////////////////
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; #include &quot;mpi.h&quot;
</span><br>
<span class="quotelev2">&gt;&gt; #include &lt;stdio.h&gt;
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; int main( int argc, char *argv[])
</span><br>
<span class="quotelev2">&gt;&gt; {
</span><br>
<span class="quotelev2">&gt;&gt;     int myid, numprocs;
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt;     MPI_Init(&amp;argc,&amp;argv);
</span><br>
<span class="quotelev2">&gt;&gt;     MPI_Comm_size(MPI_COMM_WORLD,&amp;numprocs);
</span><br>
<span class="quotelev2">&gt;&gt;     MPI_Comm_rank(MPI_COMM_WORLD,&amp;myid);
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt;     printf(&quot;Hello from processor %i of %i\n&quot;, myid, numprocs);
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt;     int size = 0;
</span><br>
<span class="quotelev2">&gt;&gt;     int num_done = 0;
</span><br>
<span class="quotelev2">&gt;&gt;     MPI_Status* stat = 0;
</span><br>
<span class="quotelev2">&gt;&gt;     MPI_Request* req = 0;
</span><br>
<span class="quotelev2">&gt;&gt;     int* done_indices = 0;
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt;     MPI_Testsome( size, req, &amp;num_done, done_indices, stat);
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt;     printf(&quot;Finalizing on processor %i of %i\n&quot;, myid, numprocs);
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt;     MPI_Finalize();
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt;     return 0;
</span><br>
<span class="quotelev2">&gt;&gt; }
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; /////////////////////////////////////////
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; The output using OpenMPI is:
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; Hello from processor 0 of 1
</span><br>
<span class="quotelev2">&gt;&gt; [mymachine:09115] *** An error occurred in MPI_Testsome
</span><br>
<span class="quotelev2">&gt;&gt; [mymachine:09115] *** on communicator MPI_COMM_WORLD
</span><br>
<span class="quotelev2">&gt;&gt; [mymachine:09115] *** MPI_ERR_REQUEST: invalid request
</span><br>
<span class="quotelev2">&gt;&gt; [mymachine:09115] *** MPI_ERRORS_ARE_FATAL (goodbye)
</span><br>
<span class="quotelev2">&gt;&gt; 1 process killed (possibly by Open MPI)
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; Many other MPI implementations support this, and reading the
</span><br>
<span class="quotelev2">&gt;&gt; standard, it
</span><br>
<span class="quotelev2">&gt;&gt; seems like it should be OK.
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; Thanks,
</span><br>
<span class="quotelev2">&gt;&gt; Tom
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; &lt;config.log.bz2&gt;
</span><br>
<span class="quotelev2">&gt;&gt; &lt;testsome_test.out&gt;
</span><br>
<span class="quotelev2">&gt;&gt; &lt;testsome_test.c&gt;
</span><br>
<span class="quotelev2">&gt;&gt; &lt;ompi_info.out&gt;
</span><br>
<span class="quotelev2">&gt;&gt; _______________________________________________
</span><br>
<span class="quotelev2">&gt;&gt; users mailing list
</span><br>
<span class="quotelev2">&gt;&gt; users_at_[hidden]
</span><br>
<span class="quotelev2">&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a>
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; _______________________________________________
</span><br>
<span class="quotelev1">&gt; users mailing list
</span><br>
<span class="quotelev1">&gt; users_at_[hidden]
</span><br>
<span class="quotelev1">&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a>
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<!-- body="end" -->
<hr>
<ul class="links">
<!-- next="start" -->
<li><strong>Next message:</strong> <a href="http://www.open-mpi.org/community/lists/users/2006/04/0948.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<li><strong>Previous message:</strong> <a href="0946.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<li><strong>In reply to:</strong> <a href="0946.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<!-- nextthread="start" -->
<li><strong>Next in thread:</strong> <a href="http://www.open-mpi.org/community/lists/users/2006/04/0948.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<li><strong>Reply:</strong> <a href="http://www.open-mpi.org/community/lists/users/2006/04/0948.php">George Bosilca: "Re: [OMPI users] MPI_Testsome with no requests"</a>
<!-- reply="end" -->
</ul>
<div class="center">
<table border="2" width="100%" class="links">
<tr>
<th><a href="date.php">Date view</a></th>
<th><a href="index.php">Thread view</a></th>
<th><a href="subject.php">Subject view</a></th>
<th><a href="author.php">Author view</a></th>
</tr>
</table>
</div>
<!-- trailer="footer" -->
<? include("../../include/msg-footer.inc") ?>
