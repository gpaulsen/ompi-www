<div dir="ltr"><div><div><div>It would have to be done via MPI_Info arguments, and we never had a request to do so (and hence, don&#39;t define such an argument). It would be easy enough to do so (look in the ompi/mca/dpm/orte/dpm_orte.c code).<br>
<br></div>MPI implementations generally don&#39;t forcibly propagate envars because it is so hard to know which ones to handle - it is easy to propagate a system envar that causes bad things to happen on the remote end.<br>
<br></div>One thing you could do, of course, is add that envar to your default shell setup (.bashrc or whatever). This would set the variable by default on your remote locations (assuming you are using rsh/ssh for your launcher), and then any process you start would get it. However, that won&#39;t help if this is an envar intended only for the comm_spawned process.<br>
<br></div>I can add this capability to the OMPI trunk, and port it to the 1.7 release - but we don&#39;t go all the way back to the 1.4 series any more.<br><br></div><div class="gmail_extra"><br><br><div class="gmail_quote">
On Wed, Dec 11, 2013 at 2:10 PM, tom fogal <span dir="ltr">&lt;<a href="mailto:tfogal@sci.utah.edu" target="_blank">tfogal@sci.utah.edu</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
Hi all,<br>
<br>
I&#39;m developing on Open MPI 1.4.5-ubuntu2 on Ubuntu 13.10 (so, Ubuntu&#39;s<br>
packaged Open MPI) at the moment.<br>
<br>
I&#39;d like to pass environment variables to processes started via<br>
MPI_Comm_spawn.  Unfortunately, the MPI 3.0 standard (at least) does<br>
not seem to specify a way to do this; thus I have been searching for<br>
implementation-specific ways to accomplish my task.<br>
<br>
I have tried setting the environment variable using the POSIX setenv(3)<br>
call, but it seems that Open MPI comm-spawn&#39;d processes do not inherit<br>
environment variables.  See the attached 2 C99 programs; one prints<br>
out the environment it receives, and one sets the MEANING_OF_LIFE<br>
environment variable, spawns the previous &#39;env printing&#39; program, and<br>
exits.  I run via:<br>
<br>
  $ env -i HOME=/home/tfogal \<br>
  PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin \<br>
  mpirun -x TJFVAR=testing -n 5 ./mpienv ./envpar<br>
<br>
and expect (well, hope) to find the MEANING_OF_LIFE in &#39;envpar&#39;s<br>
output.  I do see TJFVAR, but the MEANING_OF_LIFE sadly does not<br>
propagate.  Perhaps I am asking the wrong question...<br>
<br>
I found another MPI implementation which allowed passing such<br>
information via the MPI_Info argument, however I could find no<br>
documentation of similar functionality in Open MPI.<br>
<br>
Is there a way to accomplish what I&#39;m looking for?  I could even be<br>
convinced to hack source, but a starting pointer would be appreciated.<br>
<br>
Thanks,<br>
<br>
-tom<br>
<br>
<br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div><br></div>

