<html>
  <head>
    <meta content="text/html; charset=ISO-8859-1"
      http-equiv="Content-Type">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    On 2/6/13 1:03 AM, Gus Correa wrote:<br>
    <span style="white-space: pre;">&gt;<br>
      &gt; On 02/05/2013 08:52 AM, Jeff Squyres (jsquyres) wrote:<br>
      &gt;&gt; To add to what Reuti said, if you enable PBS support in
      Open MPI, when users "mpirun ..." in a PBS job, Open MPI will
      automatically use the PBS native launching mechanism, which won't
      let you run outside of the servers allocated to that job.<br>
      &gt;&gt;<br>
      &gt;&gt; Concrete example: if you qsub a job and are allocated
      node A, B, and C, but then try to run with "mpirun --host D,E,F
      ...", you'll get an error.<br>
      &gt;&gt;<br>
      &gt;&gt; That being said -- keep in mind what Reuti said: if users
      are allowed to ssh between nodes that are not allocated to them,
      then they can always bypass this behavior and use just Open MPI's
      ssh support to launch on nodes D, E, F (etc.).<br>
      <br>
      &gt;&gt; On Feb 5, 2013, at 2:46 AM,
      Reuti<a class="moz-txt-link-rfc2396E" href="mailto:reuti@staff.uni-marburg.de">&lt;reuti@staff.uni-marburg.de&gt;</a> wrote:</span><br>
    <blockquote type="cite">Can the users use a plain ssh between the
      nodes? If they are forced to use the TM of Torque instead, it
      should be impossible to start a job on a non-granted machine.<br>
      <br>
    </blockquote>
    Thanks Reuti and Jeff, you are right, users should not be allowed to
    ssh to all nodes, which is how our cluster was set up: users can
    even password-less ssh to any node. I know this is not appropriate
    question in OpenMPI forum, but how can we setup so that user can
    only ssh (with password) to nodes that are allocated to them at the
    time of qsub'ing? I am still new to all of this cluster thing :)<br>
    <br>
    <br>
    <span style="white-space: pre;">&gt;<br>
      &gt; Besides Reuti's and Jeff's suggestions.<br>
      &gt;<br>
      &gt; If you build your own Torque/PBS with PAM support<br>
      &gt; (./configure --with-pam [other configure flags]),<br>
      &gt; you can prevent users that are not running a Torque/PBS job<br>
      &gt; on a node to launch processes in that node.<br>
      &gt;<br>
      &gt; See this:<br>
      &gt;
<a class="moz-txt-link-freetext" href="http://docs.adaptivecomputing.com/torque/4-1-3/help.htm#topics/1-installConfig/customizingTheInstall.htm">http://docs.adaptivecomputing.com/torque/4-1-3/help.htm#topics/1-installConfig/customizingTheInstall.htm</a><br>
      &gt;<br>
      &gt; Of course you will need to rebuild your OpenMPI with Torque<br>
      &gt; support again, after you install a version of Torque with PAM<br>
      &gt; support.<br>
      &gt;<br>
      &gt; This is mostly a Torque/Maui issue, with a bit of an MPI
      issue.<br>
      &gt; You may get more help about this on the Torque and Maui<br>
      &gt; mailing lists, and in their archives you may find more
      specific<br>
      &gt; guidance on what you need to add to the pam/security<br>
      &gt; files to make it work.<br>
    </span><br>
    Thanks for this! I will try this --with-pam when our test job
    finishes. <br>
    <br>
    <span style="white-space: pre;">&gt;<br>
      &gt; Torque with PAM support is not 100% foolproof,<br>
      &gt; because users that *are* running a Torque/PBS job on<br>
      &gt; a node can still cheat and launch more processes there,<br>
      &gt; but it helps restrict the problem to this case.<br>
      &gt;<br>
      &gt; Some sys admins also add a cleanup/sweep routine to the<br>
      &gt; Torque epilogue script to kill any processes belonging to<br>
      &gt; the user whose job just finished.<br>
      &gt; However, this not very good because that user may have
      another<br>
      &gt; legitimate job still running there.<br>
      &gt; Other cleanup strategies are possible, and you may find some<br>
      &gt; suggestions and even scripts if you google around.<br>
      &gt;<br>
      &gt; Moreover, if you configure your scheduler (Maui?) to<br>
      &gt; assign full nodes to jobs (no node sharing),<br>
      &gt; the cheaters will be cheating on<br>
      &gt; themselves, not stepping on other users' toes.<br>
      &gt; Look for "JOBNODEMATCHPOLICY" here:<br>
      &gt; <a class="moz-txt-link-freetext" href="http://docs.adaptivecomputing.com/maui/a.fparameters.php">http://docs.adaptivecomputing.com/maui/a.fparameters.php</a><br>
      &gt;<br>
      &gt; Assigning full nodes to jobs ("EXACTNODE") may or may not be
      a<br>
      &gt; good choice for you.<br>
      &gt; E.g. you may consider it wasteful, if there are many serial<br>
      &gt; jobs or parallel jobs running only on a few processors, in<br>
      &gt; which case you may want to pack those jobs in the fewest<br>
      &gt; nodes possible ("EXACTPROC"), so as to have a maximum
      throughput.<br>
      &gt; However, "no node sharing" helps preventing cheaters<br>
      &gt; to bother other users that are running jobs on the same node,<br>
      &gt; and it is not bad at all if most of the jobs are parallel<br>
      &gt; and use many cores (say, &gt;= number of cores per node).<br>
    </span><br>
    Yes, we use Maui, but I let it at its' default settings since I have
    no idea and experience about maui's options. I like EXACTPROC
    option. Our cluster is small so that might be better for us.<br>
    <br>
    <br>
    <br>
  </body>
</html>

