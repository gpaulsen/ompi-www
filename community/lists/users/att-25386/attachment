<div dir="ltr">I have found the solution. The command <i>mpirun -machinefile ./my_hosts -n 3 ./testMPI</i> works. I think the order of arguments matters here.<br></div><div class="gmail_extra"><br><div class="gmail_quote">On Thu, Sep 25, 2014 at 11:02 AM, XingFENG <span dir="ltr">&lt;<a href="mailto:xingfeng@cse.unsw.edu.au" target="_blank">xingfeng@cse.unsw.edu.au</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div><div>Hi all,<br><br></div>I got problem with running program on a cluster.<br></div>I used the following command. <i>my_hosts</i> is a file containing 3 hosts while <i>testMPI</i> is a very simple MPI program.<br><div>==========================================<br><i>mpirun -np 2 --hostfile ./my_hosts ./testMPI<br>mpirun -np 2 --machinefile ./my_hosts ./testMPI<br>mpirun -np 2 --f ./my_hosts ./testMPI<br></i>==========================================<br clear="all"><div><div><br></div><div>And the output is like this.<br>==========================================<br><i>invalid &quot;local&quot; arg: --hostfile<br><br>usage:<br>mpiexec [-h or -help or --help]    # get this message<br>mpiexec -file filename             # (or -f) filename contains XML job description<br>mpiexec [global args] [local args] executable [args]<br>   where global args may be<br>      -l                           # line labels by MPI rank<br>      -bnr                         # MPICH1 compatibility mode<br>      -machinefile                 # file mapping procs to machines<br>      -s &lt;spec&gt;                    # direct stdin to &quot;all&quot; or 1,2 or 2-4,6 <br>      -1                           # override default of trying 1st proc locally<br>      -ifhn                        # network interface to use locally<br>      -tv                          # run procs under totalview (must be installed)<br>      -tvsu                        # totalview startup only<br>      -gdb                         # run procs under gdb<br>      -m                           # merge output lines (default with gdb)<br>      -a                           # means assign this alias to the job<br>      -ecfn                        # output_xml_exit_codes_filename<br>      -recvtimeout &lt;integer_val&gt;   # timeout for recvs to fail (e.g. from mpd daemon)<br>      -g&lt;local arg name&gt;           # global version of local arg (below)<br>    and local args may be<br>      -n &lt;n&gt; or -np &lt;n&gt;            # number of processes to start<br>      -wdir &lt;dirname&gt;              # working directory to start in<br>      -umask &lt;umask&gt;               # umask for remote process<br>      -path &lt;dirname&gt;              # place to look for executables<br>      -host &lt;hostname&gt;             # host to start on<br>      -soft &lt;spec&gt;                 # modifier of -n value<br>      -arch &lt;arch&gt;                 # arch type to start on (not implemented)<br>      -envall                      # pass all env vars in current environment<br>      -envnone                     # pass no env vars<br>      -envlist &lt;list of env var names&gt; # pass current values of these vars<br>      -env &lt;name&gt; &lt;value&gt;          # pass this value of this env var<br>mpiexec [global args] [local args] executable args : [local args] executable...<br>mpiexec -gdba jobid                # gdb-attach to existing jobid<br>mpiexec -configfile filename       # filename contains cmd line segs as lines<br>  (See User Guide for more details)<br><br>Examples:<br>   mpiexec -l -n 10 cpi 100<br>   mpiexec -genv QPL_LICENSE 4705 -n 3 a.out<br><br>   mpiexec -n 1 -host foo master : -n 4 -host mysmp slave</i><br><br>==========================================<br clear="all"><div><br><br></div><div>Another problem is that I cannot get the version of MPI. With command mpirun --version I got<br><br>==========================================<br><i>invalid &quot;local&quot; arg: --version<br><br>usage:<br>mpiexec [-h or -help or --help]    # get this message<br>mpiexec -file filename             # (or -f) filename contains XML job description<br>mpiexec [global args] [local args] executable [args]<br>   where global args may be<br>      -l                           # line labels by MPI rank<br>      -bnr                         # MPICH1 compatibility mode<br>      -machinefile                 # file mapping procs to machines<br>      -s &lt;spec&gt;                    # direct stdin to &quot;all&quot; or 1,2 or 2-4,6 <br>      -1                           # override default of trying 1st proc locally<br>      -ifhn                        # network interface to use locally<br>      -tv                          # run procs under totalview (must be installed)<br>      -tvsu                        # totalview startup only<br>      -gdb                         # run procs under gdb<br>      -m                           # merge output lines (default with gdb)<br>      -a                           # means assign this alias to the job<br>      -ecfn                        # output_xml_exit_codes_filename<br>      -recvtimeout &lt;integer_val&gt;   # timeout for recvs to fail (e.g. from mpd daemon)<br>      -g&lt;local arg name&gt;           # global version of local arg (below)<br>    and local args may be<br>      -n &lt;n&gt; or -np &lt;n&gt;            # number of processes to start<br>      -wdir &lt;dirname&gt;              # working directory to start in<br>      -umask &lt;umask&gt;               # umask for remote process<br>      -path &lt;dirname&gt;              # place to look for executables<br>      -host &lt;hostname&gt;             # host to start on<br>      -soft &lt;spec&gt;                 # modifier of -n value<br>      -arch &lt;arch&gt;                 # arch type to start on (not implemented)<br>      -envall                      # pass all env vars in current environment<br>      -envnone                     # pass no env vars<br>      -envlist &lt;list of env var names&gt; # pass current values of these vars<br>      -env &lt;name&gt; &lt;value&gt;          # pass this value of this env var<br>mpiexec [global args] [local args] executable args : [local args] executable...<br>mpiexec -gdba jobid                # gdb-attach to existing jobid<br>mpiexec -configfile filename       # filename contains cmd line segs as lines<br>  (See User Guide for more details)<br><br>Examples:<br>   mpiexec -l -n 10 cpi 100<br>   mpiexec -genv QPL_LICENSE 4705 -n 3 a.out<br><br>   mpiexec -n 1 -host foo master : -n 4 -host mysmp slave</i><br><br><br>==========================================<br><br></div>Any help would be greatly appreciated!<span class="HOEnZb"><font color="#888888"><br></font></span></div><span class="HOEnZb"><font color="#888888"><div><br></div><div><br>-- <br><div dir="ltr">Best Regards.<br>---<br>Xing FENG<div>PhD Candidate<br>Database Research Group<br><br></div><div>School of Computer Science and Engineering<div>University of New South Wales<br></div>NSW 2052, Sydney<br></div><div><br></div><div>Phone: <a href="tel:%28%2B61%29%20413%20857%20288" value="+61413857288" target="_blank">(+61) 413 857 288</a></div></div>
</div></font></span></div></div></div>
</blockquote></div><br><br clear="all"><br>-- <br><div dir="ltr">Best Regards.<br>---<br>Xing FENG<div>PhD Candidate<br>Database Research Group<br><br></div><div>School of Computer Science and Engineering<div>University of New South Wales<br></div>NSW 2052, Sydney<br></div><div><br></div><div>Phone: (+61) 413 857 288</div></div>
</div>
