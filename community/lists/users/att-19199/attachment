<html>
  <head>
    <meta content="text/html; charset=ISO-8859-1"
      http-equiv="Content-Type">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    <br>
    <br>
    On 5/4/2012 1:17 PM, Don Armstrong wrote:
    <blockquote cite="mid:20120504171742.GO3458@rzlab.ucr.edu"
      type="cite">
      <pre wrap="">On Fri, 04 May 2012, Rolf vandeVaart wrote:
</pre>
      <blockquote type="cite">
        <pre wrap="">On Behalf Of Don Armstrong
</pre>
        <blockquote type="cite">
          <pre wrap="">On Thu, 03 May 2012, Rolf vandeVaart wrote:
</pre>
          <blockquote type="cite">
            <pre wrap="">2. If that works, then you can also run with a debug switch to
see what connections are being made by MPI.
</pre>
          </blockquote>
          <pre wrap="">
You can see the connections being made in the attached log:

[archimedes:29820] btl: tcp: attempting to connect() to [[60576,1],2] address
138.23.141.162 on port 2001
</pre>
        </blockquote>
        <pre wrap="">
Yes, I missed that. So, can we simplify the problem. Can you run
with np=2 and one process on each node?
</pre>
      </blockquote>
      <pre wrap="">
It hangs in exactly the same spot without completing the initial
sm-based message. [Specifically, the GUID sending and acking appears
to complete on the tcp connection, but the actual traffic is never
sent, and the
ompi_request_wait_completion(&amp;sendreq-&gt;req_send.req_base.req_ompi);
never clears).

</pre>
      <blockquote type="cite">
        <pre wrap="">Also, maybe you can send the ifconfig output from each node. We
sometimes see this type of hanging when a node has two different
interfaces on the same subnet.
</pre>
      </blockquote>
      <pre wrap="">
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 00:30:48:7d:82:54 brd ff:ff:ff:ff:ff:ff
    inet 138.23.140.43/23 brd 138.23.141.255 scope global eth0
    inet 172.16.30.79/24 brd 172.16.30.255 scope global eth0:1
    inet6 fe80::230:48ff:fe7d:8254/64 scope link 
       valid_lft forever preferred_lft forever
3: eth1: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN qlen 1000
    link/ether 00:30:48:7d:82:55 brd ff:ff:ff:ff:ff:ff
    inet6 fd74:56b0:69d6::2101/118 scope global 
       valid_lft forever preferred_lft forever
    inet6 fe80::230:48ff:fe7d:8255/64 scope link 
       valid_lft forever preferred_lft forever
16: tun0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 100
    link/none 
    inet 10.134.0.6/24 brd 10.134.0.255 scope global tun0
17: tun1: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 100
    link/none 
    inet 10.137.0.201/24 brd 10.137.0.255 scope global tun1

1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP qlen 1000
    link/ether 00:17:a4:4b:7c:ea brd ff:ff:ff:ff:ff:ff
    inet 172.16.30.110/24 brd 172.16.30.255 scope global eth0:1
    inet 138.23.141.162/23 brd 138.23.141.255 scope global eth0
    inet6 fe80::217:a4ff:fe4b:7cea/64 scope link 
       valid_lft forever preferred_lft forever
3: eth1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN qlen 1000
    link/ether 00:17:a4:4b:7c:ec brd ff:ff:ff:ff:ff:ff
7: tun0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 100
    link/none 
    inet 10.134.0.26/24 brd 10.134.0.255 scope global tun0

</pre>
      <blockquote type="cite">
        <pre wrap="">Assuming there are multiple interfaces, can you experiment with the runtime flags outlined here?
<a class="moz-txt-link-freetext" href="http://www.open-mpi.org/faq/?category=tcp#tcp-selection">http://www.open-mpi.org/faq/?category=tcp#tcp-selection</a>
</pre>
      </blockquote>
      <pre wrap="">
It's already running with btl_tcp_if_include=eth0 and
oob_tcp_if_include=eth0; the connections are happening only on eth0,
which has the 138.23.141.16 addresses.</pre>
    </blockquote>
    Sorry if this is a stupid question but what is eth0:1 (it's under
    eth0).&nbsp; Are the 172.16.30.X addresses pingable to each other?<br>
    <br>
    <br>
    <div class="moz-signature">-- <br>
      <meta content="text/html; charset=ISO-8859-1"
        http-equiv="Content-Type">
      <div class="moz-signature">
        <meta http-equiv="content-type" content="text/html;
          charset=ISO-8859-1">
        <title></title>
        <div class="moz-signature">
          <div class="moz-signature">
            <div class="moz-signature">
              <div class="moz-signature">Terry D. Dontje | Principal
                Software Engineer<br>
                <div class="moz-signature"><font color="#666666"
                    face="Verdana" size="2">Developer
                    Tools
                    Engineering | +1.781.442.2631<br>
                  </font>
                  <font color="#ff0000" face="Verdana" size="2">Oracle
                  </font><font color="#666666" face="Verdana" size="2"><b>
                      - Performance
                      Technologies</b></font><br>
                  <font color="#666666" face="Verdana" size="2">
                    95 Network Drive, Burlington, MA 01803<br>
                    Email <a moz-do-not-send="true"
                      href="mailto:terry.dontje@oracle.com">terry.dontje@oracle.com</a><br>
                  </font><br>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <br>
      <br>
    </div>
  </body>
</html>

