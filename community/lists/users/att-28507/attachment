<div dir="ltr"><br><br>On Thu, Feb 11, 2016 at 8:46 AM, Nathan Hjelm &lt;<a href="mailto:hjelmn@lanl.gov">hjelmn@lanl.gov</a>&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Thu, Feb 11, 2016 at 02:17:40PM +0000, Peter Wind wrote:<br>&gt; &gt;    I would add that the present situation is bound to give problems for some<br>&gt; &gt;    users.<br>&gt; &gt;    It is natural to divide an array in segments, each process treating its<br>&gt; &gt;    own segment, but needing to read adjacent segments too.<br>&gt; &gt;    MPI_Win_allocate_shared seems to be designed for this.<br>&gt; &gt;    This will work fine as long as no segment as size zero. It can also be<br>&gt; &gt;    expected that most testing would be done with all segments larger than<br>&gt; &gt;    zero.<br>&gt; &gt;    The document adding &quot;size = 0 is valid&quot;, would also make people confident<br>&gt; &gt;    that it will be consistent for that special case too.<br>&gt;<br>&gt; Nope, that statement says its ok for a rank to specify that the local<br>&gt; shared memory segment is 0 bytes. Nothing more. The standard<br>&gt; unfortunately does not define what pointer value is returned for a rank<br>&gt; that specifies size = 0. Not sure if the RMA working group intentionally<br>&gt; left that undefine... Anyway, Open MPI does not appear to be out of<br>&gt; compliance with the standard here.<br>&gt;<br><br>MPI_Alloc_mem doesn&#39;t say what happens if you pass size=0 either.  The RMA working group intentionally tries to maintain consistency with the rest of the MPI standard whenever possible, so we did not create a new semantic here.<br><br>MPI_Win_shared_query text includes this:<div><br>&quot;If all processes in the group attached to the window specified size = 0, then the call returns size = 0 and a baseptr as if MPI_ALLOC_MEM was called with size = 0.&quot;<br> <br>&gt;<br>&gt; To be safe you should use MPI_Win_shared_query as suggested. You can<br>&gt; pass MPI_PROC_NULL as the rank to get the pointer for the first non-zero<br>&gt; sized segment in the shared memory window.<br><br>Indeed!  I forgot about that.  MPI_Win_shared_query solves this problem for the user brilliantly.<br><br>Jeff<br><br>--<br>Jeff Hammond<br><a href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a><br><a href="http://jeffhammond.github.io/">http://jeffhammond.github.io/</a></div></div>

