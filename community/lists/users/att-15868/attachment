<html><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">I -think- setting&nbsp;OMPI_MCA_memory_ptmalloc2_disable to 1 will turn off OMPI's memory wrappers without having to rebuild. &nbsp;Someone please correct me if I'm wrong :-).<div><br></div><div>For example (bash-like shell):</div><div><br></div><div>export&nbsp;OMPI_MCA_memory_ptmalloc2_disable=1</div><div><br></div><div>Hope that helps,</div><div><br><div apple-content-edited="true"> <span class="Apple-style-span" style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Helvetica; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; "><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div><div><div>--</div><div><div>Samuel K. Gutierrez</div><div>Los Alamos National Laboratory&nbsp;</div></div><div><br></div></div></div></div></span> </div><br><div><div>On Mar 15, 2011, at 9:19 AM, Jack Bryan wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><span class="Apple-style-span" style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Helvetica; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; "><div class="hmmessage" style="font-size: 10pt; font-family: Tahoma; ">Thanks,<div><br></div><div>I do not have system administrator authorization.&nbsp;</div><div>I am afraid that I cannot rebuild OpenMPI&nbsp;--without-memory-manager.&nbsp;</div><div><br></div><div>Are there other ways to get around it ?&nbsp;</div><div><br></div><div>For example, use other things to replace "ptmalloc" ?</div><div><br></div><div>Any help is really appreciated.&nbsp;</div><div><br></div><div>thanks&nbsp;<br><br><hr id="stopSpelling">From:<span class="Apple-converted-space">&nbsp;</span><a href="mailto:belaid_moa@hotmail.com">belaid_moa@hotmail.com</a><br>To:<span class="Apple-converted-space">&nbsp;</span><a href="mailto:dtustudy68@hotmail.com">dtustudy68@hotmail.com</a>;<span class="Apple-converted-space">&nbsp;</span><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>Subject: RE: [OMPI users] OMPI seg fault by a class with weird address.<br>Date: Tue, 15 Mar 2011 08:00:56 +0000<br><br>Hi Jack,<br>&nbsp; I may need to see the whole code to decide but my quick look suggest that ptmalloc is causing a problem with STL-vector allocation. ptmalloc is the openMPI internal malloc library. Could you try to build openMPI without memory management (using --without-memory-manager) and let us know the outcome. ptmalloc is not needed if you are not using an RDMA interconnect.<br><br>&nbsp; With best regards,<br>-Belaid.<br><br><hr id="ecxstopSpelling">From:<span class="Apple-converted-space">&nbsp;</span><a href="mailto:dtustudy68@hotmail.com">dtustudy68@hotmail.com</a><br>To:<span class="Apple-converted-space">&nbsp;</span><a href="mailto:belaid_moa@hotmail.com">belaid_moa@hotmail.com</a>;<span class="Apple-converted-space">&nbsp;</span><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>Subject: RE: [OMPI users] OMPI seg fault by a class with weird address.<br>Date: Tue, 15 Mar 2011 00:30:19 -0600<br><br><font class="ecxApple-style-span" size="2" face="Tahoma">Hi,&nbsp;</font><div><div><font class="ecxApple-style-span" size="2" face="Tahoma"><br></font></div><div><span class="ecxApple-style-span" style="font-family: Tahoma; font-size: 13px; ">Because the code is very long, I just &nbsp;show the calling relationship of functions.&nbsp;</span></div><div style="font-family: Tahoma; font-size: 10pt; "><br></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">main()</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">{</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">&nbsp;&nbsp; &nbsp;scheduler();</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma"><br></font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">}</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">scheduler()</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">{</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">&nbsp;&nbsp; &nbsp;&nbsp;ImportIndices();</font></div><div><span class="ecxApple-style-span" style="font-family: Tahoma; font-size: 10pt; ">}</span></div><div><span class="ecxApple-style-span" style="font-family: Tahoma; font-size: 10pt; "><br></span></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">ImportIndices()</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">{</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma"><span class="ecxApple-tab-span" style="white-space: pre; ">	</span></font><span class="ecxApple-style-span" style="font-family: Tahoma; font-size: 10pt; ">Index</span><span class="ecxApple-style-span" style="font-family: Tahoma; font-size: 10pt; ">&nbsp;</span><span class="ecxApple-style-span" style="font-family: Tahoma; font-size: 13px; "><span class="ecxApple-tab-span" style="text-indent: 0px !important; white-space: pre; ">IdxNode </span>;</span></div><div><font class="ecxApple-style-span" size="2" face="Tahoma"><span class="ecxApple-tab-span" style="white-space: pre; ">	IdxNode = ReadFile</span>("fileName");</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">}</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma"><br></font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma"><div>Index ReadFile(const char* fileinput)&nbsp;</div><div>{</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Index TempIndex;</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;.........</div><div><br></div></font>}</div><div><br></div><div><div>vector&lt;int&gt; Index::GetPosition() const { return Position; }</div><div>vector&lt;int&gt; Index::GetColumn() const { return Column; }</div><div>vector&lt;int&gt; Index::GetYear() const { return Year; }</div><div>vector&lt;string&gt; Index::GetName() const { return Name; }</div><div>int Index::GetPosition(const int idx) const { return Position[idx]; }</div><div>int Index::GetColumn(const int idx) const { return Column[idx]; }</div><div>int Index::GetYear(const int idx) const { return Year[idx]; }</div><div>string Index::GetName(const int idx) const { return Name[idx]; }</div><div>int Index::GetSize() const { return Position.size(); }</div></div><div><br></div><div><font class="ecxApple-style-span" size="2" face="Tahoma" style="text-indent: 0px !important; ">The sequential code works well, and there is no&nbsp;</font><span class="ecxApple-style-span" style="text-indent: 0px !important; font-family: Tahoma; font-size: 13px; ">&nbsp;scheduler().&nbsp;</span></div><div><span class="ecxApple-style-span" style="text-indent: 0px !important; font-family: Tahoma; font-size: 13px; "><br></span></div><div><font class="ecxApple-style-span" size="2" face="Tahoma"><b>The parallel code output from gdb:</b></font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma">----------------------------------------------</font></div><div><font class="ecxApple-style-span" size="2" face="Tahoma"><div>Breakpoint 1, myNeplanTaskScheduler(CNSGA2 *, int, int, int, ._85 *, char, int, message_para_to_workers_VecT &amp;, MPI_Datatype, int &amp;, int &amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &amp;, int, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, MPI_Datatype, int, MPI_Datatype, int) (nsga2=0x118c490,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;popSize=&lt;value optimized out&gt;, nodeSize=&lt;value optimized out&gt;,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;myRank=&lt;value optimized out&gt;, myChildpop=0x1208d80, genCandTag=65 'A',&nbsp;</div><div>&nbsp;&nbsp; &nbsp;generationNum=1, myPopParaVec=std::vector of length 4, capacity 4 = {...},&nbsp;</div><div>&nbsp;&nbsp; &nbsp;message_to_master_type=0x7fffffffd540, myT1Flag=@0x7fffffffd68c,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;myT2Flag=@0x7fffffffd688,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;resultTaskPackageT1=std::vector of length 4, capacity 4 = {...},&nbsp;</div><div>&nbsp;&nbsp; &nbsp;resultTaskPackageT2Pr=std::vector of length 4, capacity 4 = {...},&nbsp;</div><div>&nbsp;&nbsp; &nbsp;xdataV=std::vector of length 4, capacity 4 = {...}, objSize=7,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;resultTaskPackageT12=std::vector of length 4, capacity 4 = {...},&nbsp;</div><div>&nbsp;&nbsp; &nbsp;xdata_to_workers_type=0x121c410, myGenerationNum=1,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;Mpara_to_workers_type=0x121b9b0, nconNum=0)</div><div>&nbsp;&nbsp; &nbsp;at src/nsga2/myNetplanScheduler.cpp:109</div><div>109 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ImportIndices();</div><div>(gdb) c</div><div>Continuing.</div><div><br></div><div>Breakpoint 2, ImportIndices () at src/index.cpp:120</div><div>120 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IdxNode = ReadFile("prepdata/idx_node.csv");</div><div>(gdb) c</div><div>Continuing.</div><div><br></div><div>Breakpoint 4, ReadFile (fileinput=0xd8663d "prepdata/idx_node.csv")</div><div>&nbsp;&nbsp; &nbsp;at src/index.cpp:86</div><div>86 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Index TempIndex;</div><div>(gdb) c</div><div>Continuing.</div><div><br></div><div>Breakpoint 5, Index::Index (this=0x7fffffffcb80) at src/index.cpp:20</div><div>20 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Name(0) {}</div><div>(gdb) c</div><div>Continuing.</div><div><br></div><div><b>Program received signal SIGSEGV, Segmentation fault.</b></div><div><b>0x00002aaaab3b0b81 in opal_memory_ptmalloc2_int_malloc ()</b></div><div><b>&nbsp;&nbsp; from /opt/openmpi-1.3.4-gnu/lib/libopen-pal.so.0</b></div><div><br></div></font></div><div>---------------------------------------</div><div><b>the backtrace output from the above parallel OpenMPI code:</b></div><div><br></div><div><div>(gdb) bt</div><div>#0 &nbsp;0x00002aaaab3b0b81 in opal_memory_ptmalloc2_int_malloc ()</div><div>&nbsp;&nbsp; from /opt/openmpi-1.3.4-gnu/lib/libopen-pal.so.0</div><div>#1 &nbsp;0x00002aaaab3b2bd3 in opal_memory_ptmalloc2_malloc ()</div><div>&nbsp;&nbsp; from /opt/openmpi-1.3.4-gnu/lib/libopen-pal.so.0</div><div>#2 &nbsp;0x0000003f7c8bd1dd in operator new(unsigned long) ()</div><div>&nbsp;&nbsp; from /usr/lib64/libstdc++.so.6</div><div>#3 &nbsp;0x00000000004646a7 in __gnu_cxx::new_allocator&lt;int&gt;::allocate (</div><div>&nbsp;&nbsp; &nbsp;this=0x7fffffffcb80, __n=0)</div><div>&nbsp;&nbsp; &nbsp;at /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/ext/new_allocator.h:88</div><div>#4 &nbsp;0x00000000004646cf in std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (this=0x7fffffffcb80, __n=0)</div><div>&nbsp;&nbsp; &nbsp;at /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/stl_vector.h:127</div><div>#5 &nbsp;0x0000000000464701 in std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (this=0x7fffffffcb80, __n=0, __a=...)</div><div>&nbsp;&nbsp; &nbsp;at /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/stl_vector.h:113</div><div>#6 &nbsp;0x0000000000464d0b in std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (</div><div>&nbsp;&nbsp; &nbsp;this=0x7fffffffcb80, __n=0, __value=@0x7fffffffc968, __a=...)</div><div>&nbsp;&nbsp; &nbsp;at /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/stl_vector.h:216</div><div>#7 &nbsp;0x00000000004890d7 in Index::Index (this=0x7fffffffcb80)</div><div>---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---</div><div>&nbsp;&nbsp; &nbsp;at src/index.cpp:20</div><div>#8 &nbsp;0x000000000048927a in ReadFile (fileinput=0xd8663d "prepdata/idx_node.csv")</div><div>&nbsp;&nbsp; &nbsp;at src/index.cpp:86</div><div>#9 &nbsp;0x0000000000489533 in ImportIndices () at src/index.cpp:120</div><div>#10 0x0000000000445e0e in myNeplanTaskScheduler(CNSGA2 *, int, int, int, ._85 *, char, int, message_para_to_workers_VecT &amp;, MPI_Datatype, int &amp;, int &amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &amp;, int, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &amp;, MPI_Datatype, int, MPI_Datatype, int) (nsga2=0x118c490,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;popSize=&lt;value optimized out&gt;, nodeSize=&lt;value optimized out&gt;,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;myRank=&lt;value optimized out&gt;, myChildpop=0x1208d80, genCandTag=65 'A',&nbsp;</div><div>&nbsp;&nbsp; &nbsp;generationNum=1, myPopParaVec=std::vector of length 4, capacity 4 = {...},&nbsp;</div><div>&nbsp;&nbsp; &nbsp;message_to_master_type=0x7fffffffd540, myT1Flag=@0x7fffffffd68c,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;myT2Flag=@0x7fffffffd688,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;resultTaskPackageT1=std::vector of length 4, capacity 4 = {...},&nbsp;</div><div>&nbsp;&nbsp; &nbsp;resultTaskPackageT2Pr=std::vector of length 4, capacity 4 = {...},&nbsp;</div><div>&nbsp;&nbsp; &nbsp;xdataV=std::vector of length 4, capacity 4 = {...}, objSize=7,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;resultTaskPackageT12=std::vector of length 4, capacity 4 = {...},&nbsp;</div><div>&nbsp;&nbsp; &nbsp;xdata_to_workers_type=0x121c410, myGenerationNum=1,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;Mpara_to_workers_type=0x121b9b0, nconNum=0)</div><div>---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---</div><div>&nbsp;&nbsp; &nbsp;at src/nsga2/myNetplanScheduler.cpp:109</div><div>#11 0x000000000044f44b in main (argc=1, argv=0x7fffffffd998)</div><div>&nbsp;&nbsp; &nbsp;at src/nsga2/main-parallel2.cpp:216</div></div><div>----------------------------------------------------</div><div><br></div><div>What is "opal_memory_ptmalloc2_int_malloc ()" ?</div><div><br></div><div>The gdb output from sequential code:&nbsp;</div><div>-------------------------------------</div><div><div>Breakpoint 1, main (argc=&lt;value optimized out&gt;, argv=&lt;value optimized out&gt;)</div><div>&nbsp;&nbsp; &nbsp;at src/nsga2/main-seq.cpp:32</div><div>32 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ImportIndices();</div><div>(gdb) c</div><div>Continuing.</div><div><br></div><div>Breakpoint 2, ImportIndices () at src/index.cpp:115</div><div>115 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IdxNode = ReadFile("prepdata/idx_node.csv");</div><div>(gdb) c</div><div>Continuing.</div><div><br></div><div>Breakpoint 4, ReadFile (fileinput=0xd6bb9d "prepdata/idx_node.csv")</div><div>&nbsp;&nbsp; &nbsp;at src/index.cpp:86</div><div>86 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Index TempIndex;</div><div>(gdb) c</div><div>Continuing.</div><div><br></div><div>Breakpoint 5, Index::Index (this=0x7fffffffd6d0) at src/index.cpp:20</div><div>20 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Name(0) {}</div><div>(gdb) c</div><div>Continuing.</div><div><br></div><div>Breakpoint 4, ReadFile (fileinput=0xd6bbb3 "prepdata/idx_ud.csv")</div><div>&nbsp;&nbsp; &nbsp;at src/index.cpp:86</div><div>86 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Index TempIndex;</div><div>(gdb) bt</div><div>#0 &nbsp;ReadFile (fileinput=0xd6bbb3 "prepdata/idx_ud.csv") at src/index.cpp:86</div><div>#1 &nbsp;0x0000000000471cc9 in ImportIndices () at src/index.cpp:116</div><div>#2 &nbsp;0x000000000043bba6 in main (argc=&lt;value optimized out&gt;,&nbsp;</div><div>&nbsp;&nbsp; &nbsp;argv=&lt;value optimized out&gt;) at src/nsga2/main-seq.cpp:32</div></div><div><br></div><div>--------------------------------------</div><div>thanks</div><div><br></div><div><br><div id="ecxSkyDrivePlaceholder" style="font-family: Tahoma; font-size: 10pt; "></div><hr id="ecxstopSpelling" style="font-family: Tahoma; font-size: 10pt; "><font class="ecxApple-style-span" size="2" face="Tahoma">From:<span class="Apple-converted-space">&nbsp;</span><a href="mailto:belaid_moa@hotmail.com">belaid_moa@hotmail.com</a></font><br><font class="ecxApple-style-span" size="2" face="Tahoma">To:<span class="Apple-converted-space">&nbsp;</span><a href="mailto:users@open-mpi.org">users@open-mpi.org</a>;<span class="Apple-converted-space">&nbsp;</span><a href="mailto:dtustudy68@hotmail.com">dtustudy68@hotmail.com</a></font><br><font class="ecxApple-style-span" size="2" face="Tahoma">Subject: RE: [OMPI users] OMPI seg fault by a class with weird address.</font><br><font class="ecxApple-style-span" size="2" face="Tahoma">Date: Tue, 15 Mar 2011 06:16:35 +0000</font><br><br><font class="ecxApple-style-span" size="2" face="Tahoma">Hi Jack,</font><br><font class="ecxApple-style-span" size="2" face="Tahoma">1- Where is your main function to see how you called your class?</font><br><font class="ecxApple-style-span" size="2" face="Tahoma">2- I do not see the implementation of GetPosition, GetName, etc.?</font><br><br><font class="ecxApple-style-span" size="2" face="Tahoma">With best regards,</font><br><font class="ecxApple-style-span" size="2" face="Tahoma">-Belaid.</font><br><font class="ecxApple-style-span" size="2" face="Tahoma">&nbsp;<span class="Apple-converted-space">&nbsp;</span></font><br><br><hr id="ecxstopSpelling" style="font-family: Tahoma; font-size: 10pt; "><font class="ecxApple-style-span" size="2" face="Tahoma">From:<span class="Apple-converted-space">&nbsp;</span><a href="mailto:dtustudy68@hotmail.com">dtustudy68@hotmail.com</a></font><br><font class="ecxApple-style-span" size="2" face="Tahoma">To:<span class="Apple-converted-space">&nbsp;</span><a href="mailto:users@open-mpi.org">users@open-mpi.org</a></font><br><font class="ecxApple-style-span" size="2" face="Tahoma">Date: Mon, 14 Mar 2011 19:04:12 -0600</font><br><font class="ecxApple-style-span" size="2" face="Tahoma">Subject: [OMPI users] OMPI seg fault by a class with weird address.</font><br><br><font class="ecxApple-style-span" size="2" face="Tahoma" style="font-family: Tahoma; font-size: 10pt; ">Hi,&nbsp;</font><div style="font-family: Tahoma; font-size: 10pt; "><br></div><div style="font-family: Tahoma; font-size: 10pt; ">I got a run-time error of a Open MPI C++ program.&nbsp;</div><div style="font-family: Tahoma; font-size: 10pt; "><br></div><div style="font-family: Tahoma; font-size: 10pt; ">The following output is from gdb:&nbsp;</div><div style="font-family: Tahoma; font-size: 10pt; "><br></div><div style="font-family: Tahoma; font-size: 10pt; ">--------------------------------------------------------------------------</div><div style="font-family: Tahoma; font-size: 10pt; "><font class="ecxApple-style-span" color="#555555" face="Tahoma, Verdana, Arial, sans-serif"><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Program received signal SIGSEGV, Segmentation fault.</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">0x00002aaaab3b0b81 in opal_memory_ptmalloc2_int_malloc ()</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">&nbsp;&nbsp; from /opt/openmpi-1.3.4-gnu/lib/libopen-pal.so.0</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">At the point&nbsp;</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><div>Breakpoint 9, Index::Index (this=0x7fffffffcb80) at src/index.cpp:20</div><div>20 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Name(0) {}</div></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">The Index has been called before this point and no problem:</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">-------------------------------------------------------</div><div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Breakpoint 9, Index::Index (this=0x117d800) at src/index.cpp:20</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">20 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Name(0) {}</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">(gdb) c</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Continuing.</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Breakpoint 9, Index::Index (this=0x117d860) at src/index.cpp:20</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">20 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Name(0) {}</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">(gdb) c</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Continuing.</span></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">----------------------------------------------------------------------------</div></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">It seems that the&nbsp;0x7fffffffcb80 address is a problem.&nbsp;</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">But, I donot know the reason and how to remove the bug.&nbsp;</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Any help is really appreciated.&nbsp;</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">thanks</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">the following is the index&nbsp;definition.</span></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">---------------------------------------------------------</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><div>class Index {</div><div>&nbsp;&nbsp; &nbsp;public:</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;Index();</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;Index(const Index&amp; rhs);</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;~Index();</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;Index&amp; operator=(const Index&amp; rhs);</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span></div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>vector&lt;int&gt; GetPosition() const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>vector&lt;int&gt; GetColumn() const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>vector&lt;int&gt; GetYear() const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>vector&lt;string&gt; GetName() const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>int GetPosition(const int idx) const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>int GetColumn(const int idx) const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>int GetYear(const int idx) const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>string GetName(const int idx) const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>int GetSize() const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span></div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>void Add(const int idx, const int col, const string&amp; name);</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>void Add(const int idx, const int col, const int year, const string&amp; name);</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>void Add(const int idx, const Step&amp; col, const string&amp; name);</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>void WriteFile(const char* fileinput) const;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span></div><div>&nbsp;&nbsp; &nbsp;private:</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>vector&lt;int&gt; Position;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>vector&lt;int&gt; Column;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>vector&lt;int&gt; Year;</div><div><span class="ecxApple-tab-span" style="white-space: pre; ">		</span>vector&lt;string&gt; Name;</div><div>};</div></div><div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">// Contructors and destructor for the Index class</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Index::Index() :</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Position(0),</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Column(0),</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Year(0),</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Name(0) {}</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Index::Index(const Index&amp; rhs) :</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Position(rhs.GetPosition()),</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Column(rhs.GetColumn()),</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Year(rhs.GetYear()),</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Name(rhs.GetName()) {}</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Index::~Index() {}</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">Index&amp; Index::operator=(const Index&amp; rhs) {</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">&nbsp;&nbsp; &nbsp;Position = rhs.GetPosition();</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Column = rhs.GetColumn(),</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Year = rhs.GetYear(),</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; "><span class="ecxApple-tab-span" style="white-space: pre; ">	</span>Name = rhs.GetName();</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">&nbsp;&nbsp; &nbsp;return *this;</span></div><div><span class="ecxApple-style-span" style="font-size: 12px; line-height: 15px; white-space: nowrap; ">}</span></div></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; ">----------------------------------------------------------</div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div><div style="font-size: 12px; line-height: 15px; white-space: nowrap; "><br></div></font></div><br><font class="ecxApple-style-span" size="2" face="Tahoma">_______________________________________________ users mailing list<span class="Apple-converted-space">&nbsp;</span><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a></font></div></div></div>_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a></div></span></blockquote></div><br></div></body></html>
