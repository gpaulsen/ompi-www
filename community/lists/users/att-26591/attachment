<div dir="ltr"><span style="font-size:12.8000001907349px">&gt; 2. Unable to resolve: can you be more specific on this?</span><br><div class="gmail_extra"><br><div class="gmail_quote">This was my mistake. I used &quot;xxx.yyy.zzz&quot; instead of &quot;localhost&quot; in the startup options for orterun. (More precisely the GUI did it, but I knew that code.) No idea how 1.6.5 managed to get around the fact that not even &quot;dig xxx.yyy.zzz&quot; can resolve this hostname. All the other servers were specified by their ip address, so no need to resolve anything there.</div><div class="gmail_quote"><br></div><div class="gmail_quote"><span style="font-size:12.8000001907349px"><br></span></div><div class="gmail_quote"><span style="font-size:12.8000001907349px">&gt; 3. Host key verification failed: this likely means an ssh misconfiguration somewhere on your machines.</span><br></div><div class="gmail_quote"><span style="font-size:12.8000001907349px"><br></span></div><div class="gmail_quote"><span style="font-size:12.8000001907349px">You are right, only the master could do a password less ssh to the workers, but the workers could not do a passwordless ssh to the master (or to any other worker). I manually enabled this between 3 selected workers, and checked that everything worked fine then. But my method to enable this manually is time consuming, so now I use &quot;</span>-mca plm_ssh_no_tree_spawn 1&quot; as option to orterun instead.</div><div class="gmail_quote"><br></div><div class="gmail_quote">Thanks for the help. This enabled me to do the tests I wanted to do.</div><div class="gmail_quote"><br></div><div class="gmail_quote"><br></div><div class="gmail_quote">&gt; 1. Ctrl-Z issues.  For the moment &quot;don&#39;t do that&quot;.</div><div class="gmail_quote"><br></div><div class="gmail_quote">As said, I use &quot;kill -SIGSTOP 12345&quot; instead now. Even if the shell would not freeze, and orterun would stop (after first forwarding the signal to all workers, which seems to be the most reasonable behavior to me), I would still have to use &quot;kill -SIGSTOP 12345&quot; (because I don&#39;t want to pause the workers, only the master). I verified that this triggers the crash reliable for me with 1.6.5.</div><div class="gmail_quote"><br></div><div class="gmail_quote">I cannot reproduce my crash with 1.8.4, but I&#39;m not sure what I learn from this. Maybe the new &quot;[warn] opal_libevent2021_event_base_loop: reentrant invocation.  Only one event_base_loop can run on each event_base at once.&quot; warning tries to tell me that I&#39;m using MPI_THREAD_MULTIPLE incorrectly. But I radically simplified my mpi calls for this test now, such that I only call MPI_Send and MPI_Recv, and only on MPI_COMM_WORLD. But I still get the warning with 1.8.4, and still can produce my crash with 1.6.5, and still cannot reproduce my crash with 1.8.4. Is it really possible that MPI_THREAD_MULTIPLE had a bug (the clusters were this bug can be triggered have infiniband interconnect) in 1.6.5, which is fixed in 1.8.4?</div><div class="gmail_quote"><br></div><div class="gmail_quote">I still fear that the bug is somewhere else in my software (because of the history of this bug and how hard it often was to trigger it in the past).</div></div></div>

