<div dir="ltr">Dear Gus, Dear all,<div>Thanks a lot.</div><div><span style="font-size:12.8000001907349px">MPI_Type_Struct works well for the first part of my problem, so I am very happy to be able to use it.</span><br></div><div><span style="font-size:12.8000001907349px"><br></span></div><div><span style="font-size:12.8000001907349px">Regarding MPI_TYPE_VECTOR.</span></div><div><span style="font-size:12.8000001907349px"><br></span></div><div><span style="font-size:12.8000001907349px">I have studied it and for simple case it is clear to me what id does (at least I believe). Foe example if I have a matrix define as:</span></div><div>REAL, ALLOCATABLE (AA(:,:))</div><div>ALLOCATE AA(100,5)</div><div><br></div><div>I could send part of it defining</div><div><br></div><div>CALL MPI_TYPE_VECTOR(5,1,5,MPI_DOUBLE_PRECISION,<i>MY_NEW_TYPE</i>)</div><div><br></div><div>after that I can send part of it with</div><div><br></div><div>CALL MPI_SEND( AA(1:<i>10</i>,:), <i>10</i>, <i>MY_NEW_TYPE</i>, 1, 0, MPI_COMM_WORLD );<br></div><div><br></div><div>Have I understood correctly?</div><div><br></div><div>What I can do in case of three dimensional array? for example AA(:,:,:), I am looking to MPI_TYPE_CREATE_SUBARRAY.</div><div>Is that the correct way?</div><div><br></div><div>Thanks again</div><div><br></div><div><span style="font-size:12.8000001907349px"><br></span></div><div><br></div></div><div class="gmail_extra"><br clear="all"><div><div class="gmail_signature">Diego<br><br></div></div>
<br><div class="gmail_quote">On 13 January 2015 at 19:04, Gus Correa <span dir="ltr">&lt;<a href="mailto:gus@ldeo.columbia.edu" target="_blank">gus@ldeo.columbia.edu</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi Diego<br>
I guess MPI_Type_Vector is the natural way to send and receive Fortran90 array sections (e.g. your QQMLS(:,50:100,:)).<br>
I used that before and it works just fine.<br>
I think that is pretty standard MPI programming style.<br>
I guess MPI_Type_Struct tries to emulate Fortran90 and C structures<br>
(as you did in your previous code, with all the surprises regarding alignment, etc), not array sections.<br>
Also, MPI type vector should be more easy going (and probably more efficient) than MPI type struct, with less memory alignment problems.<br>
I hope this helps,<br>
Gus Correa<br>
<br>
PS - These books have a quite complete description and several examples<br>
of all MPI objects and functions, including MPI types (native and user defined):<br>
<a href="http://mitpress.mit.edu/books/mpi-complete-reference-0" target="_blank">http://mitpress.mit.edu/books/<u></u>mpi-complete-reference-0</a><br>
<a href="http://mitpress.mit.edu/books/mpi-complete-reference-1" target="_blank">http://mitpress.mit.edu/books/<u></u>mpi-complete-reference-1</a><br>
<br>
[They cover MPI 1 and 2. I guess there is a new/upcoming book<br>
with MPI 3, but for what you&#39;re doing 1 and 2 are more than enough.]<span class=""><br>
<br>
<br>
On 01/13/2015 09:22 AM, Diego Avesani wrote:<br>
</span><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><span class="">
Dear all,<br>
<br>
I had some wonderful talking about MPI_type_create_struct adn<br>
isend\irecv with<br>
Gilles, Gustavo, George, Gus, Tom and Jeff. Now all is more clear and my<br>
program works.<br>
<br>
Now I have another question. In may program I have matrix:<br>
<br></span>
/QQMLS(:,:,:) /that is allocate as<br>
<br>
/ALLOCATE(QQMLS(9,npt,18)/), where npt is the number of particles<span class=""><br>
<br>
QQMLS is double precision.<br>
<br>
I would like to sent form a CPU to another part of it, for example,<br>
sending QQMLS(:,50:100,:). I mean sending the QQMLS of the particles<br>
between 50 to 100.<br>
I suppose that i could use MPI_Type_vector but I am not sure. The<br>
particle that I want to sent could be from 25 to 50 ecc.. ecc..so<br>
  blocklength changes everytime.<br>
<br>
Do I have to use MPI_type_create_struct?<br>
Do I have correctly understood MPI_Type_vector?<br>
<br>
Thanks a lot<br>
<br>
<br>
Diego<br>
<br>
<br>
<br></span>
______________________________<u></u>_________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/<u></u>mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2015/01/26171.php" target="_blank">http://www.open-mpi.org/<u></u>community/lists/users/2015/01/<u></u>26171.php</a><br>
<br>
</blockquote>
<br>
______________________________<u></u>_________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/<u></u>mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2015/01/26172.php" target="_blank">http://www.open-mpi.org/<u></u>community/lists/users/2015/01/<u></u>26172.php</a><br>
</blockquote></div><br></div>

