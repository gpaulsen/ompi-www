<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html;charset=ISO-8859-1" http-equiv="Content-Type">
  <title></title>
</head>
<body bgcolor="#ffffff" text="#000000">
<br>
<br>
Troy Telford wrote:
<blockquote cite="midop.s559m31vies9li@rygel.lnxi.com" type="cite">
  <blockquote type="cite">
    <pre wrap="">The configure seemed to go OK, but the make failed.  As you see at the
end of the
make output, it doesn't like the format of libgm.so.  It looks to me
that it is using
a path (/usr/lib/.....) to 32 bit libraries, rather than 64 bit
(/usr/lib64/....).   Is this
correct?  What's the solution?
    </pre>
  </blockquote>
  <pre wrap=""><!---->
First thing's first:  Does it compile okay with gcc?
  </pre>
</blockquote>
I'm not sure I understand, and besides I am strictly a Fortran guy.&nbsp;
However,<br>
I have made a successful build on this system without 'gm' support, but
that<br>
is not very interesting because its executables only run on the
interactive node.<br>
Therefore I don't think its a Fortran compiler problem, especially
since there<br>
is already an MPICH/PGI combination running on the system.<br>
<blockquote cite="midop.s559m31vies9li@rygel.lnxi.com" type="cite">
  <pre wrap="">
I say this because PGI's compiler has proven stubborn from time to time:   
I can compile Open MPI with PGI 6.0 just fine, but PGI 6.1 won't compile  
for me either (different reasons, though -- I posted my problem earlier  
this week).

That being said:
The distros get mixed in my mind, so I'm not sure if yours is one that:
a.)  Puts 32-bit libs in /lib32 and /usr/lib32, with 64-bit libs in /lib64  
and /usr/lib64 (and /lib points to lib64)
b.)  32-bit libs are in /lib and /usr/lib, and 64-bit are in /lib64 and  
/usr/lib64

If your machine is a 'b' then yes, it does appear to be trying (and  
failing) to use a 32-bit libgm.so
  </pre>
</blockquote>
The answer is 'b'<br>
<blockquote cite="midop.s559m31vies9li@rygel.lnxi.com" type="cite">
  <pre wrap="">
The first thing I'd do is make sure you have a 64-bit version of libgm.so;  
at least that is what I suspect.

Locate all instances of libgm.so, run 'file libgm.so' to ensure one of 'em  
is 64-bit, and that the 64-bit library is in a path where the linker can  
find it (ld.so.conf or LD_LIBRARY_PATH).
  </pre>
</blockquote>
I checked, and '/usr/lib64/libgm.so' is definitely a 64 bit library,
and <br>
I am sure that /usr/lib64 is by default in a path where the linker
looks, since it is<br>
a native 64 bit (Opteron) system.&nbsp; Just to be sure, however, I added
/usr/lib64 to<br>
LD_LIBRARY_PATH, with the same results.<br>
</body>
</html>

