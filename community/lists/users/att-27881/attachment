<html>
  <head>

    <meta http-equiv="content-type" content="text/html; charset=utf-8">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    Hi,<br>
    <br>
    I have encountered a problem when running with 1.6.5 over IB
    (openib, ConnectX-3):<br>
    <blockquote>
      <pre><meta http-equiv="content-type" content="text/html; charset=utf-8">[[51298,1],2][btl_openib_component.c:3496:handle_wc] from ib7-bc2qq42-be01p02 to: 3 error polling LP CQ with status RETRY EXCEEDED ERROR status number 12 for wr_id 217ce00 opcode 0  vendor error 129 qp_idx 0
--------------------------------------------------------------------------
The InfiniBand retry count between two MPI processes has been
exceeded.  "Retry count" is defined in the InfiniBand spec 1.2
(section 12.7.38):

    The total number of times that the sender wishes the receiver to
    retry timeout, packet sequence, etc. errors before posting a
    completion error.

This error typically means that there is something awry within the
InfiniBand fabric itself.  You should note the hosts on which this
error has occurred; it has been observed that rebooting or removing a
particular host from the job can sometimes resolve this issue.  

Two MCA parameters can be used to control Open MPI's behavior with
respect to the retry count:

* btl_openib_ib_retry_count - The number of times the sender will
  attempt to retry (defaulted to 7, the maximum value).
* btl_openib_ib_timeout - The local ACK timeout parameter (defaulted
  to 20).  The actual timeout value used is calculated as:

     4.096 microseconds * (2^btl_openib_ib_timeout)

  See the InfiniBand spec 1.2 (section 12.7.34) for more details.

Below is some information about the host that raised the error and the
peer to which it was connected:

  Local host:   ib7-bc2qq42-be01p02
  Local device: mlx4_14
  Peer host:    3

You may need to consult with your system administrator to get this
problem fixed.
--------------------------------------------------------------------------
[[51298,1],0][btl_openib_component.c:3496:handle_wc] from ib7-bc2qq42-be02p02 to: 1 error polling LP CQ with status RETRY EXCEEDED ERROR status number 12 for wr_id 15a4e00 opcode 10979  vendor error 129 qp_idx 0
--------------------------------------------------------------------------
mpirun has exited due to process rank 2 with PID 534 on
node 2 exiting improperly. There are two reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

This may have caused other processes in the application to be
terminated by signals sent by mpirun (as reported here).
--------------------------------------------------------------------------
[ib7-bc2qq42-be02p02:01438] 1 more process has sent help message help-mpi-btl-openib.txt / pp retry exceeded<pre style="margin: 0px; padding: 0px; max-height: 30em; overflow: auto; white-space: pre; word-wrap: normal; word-break: normal; color: rgb(51, 51, 51); font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 16px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(245, 245, 245);"></pre></pre>
    </blockquote>
    * We are using logical names for our targets (which explains Peer
    host: 3 above).<br>
    <br>
    This is reproducible with a simple program which does send+recv
    around a ring and calls<br>
    barrier before each iteration. The problem occurs at the barrier.<br>
    <br>
    When I search for details on what this problem is, all I can find
    are suggestions that this is<br>
    hardware (cabling) related. Our network guys have checked and
    everything appears to be<br>
    set up correctly.<br>
    <br>
    But, when I run the same program build with 1.8.8 and 1.10.0 on the
    same system, the<br>
    problem does not occur (at least for the parameters I am using).<br>
    <br>
    Also, when running with 1.6.5 using IB on another system (openib,
    ConnectX ), I do _not_<br>
    encounter the problem.<br>
    <br>
    Does anyone have some insight into what might be going on? Should I
    really be looking more<br>
    into the hardware? I could begin migrating to &gt;1.6.5, but I am
    concerned that the problem<br>
    would just pop up somewhere else.<br>
    <br>
    Thanks,<br>
    John<br>
  </body>
</html>

