                 MCA btl: parameter "btl_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level of the BTL framework
                 MCA btl: parameter "btl" (current value: <none>, data source: default value)
                          Default selection set of components for the btl framework (<none> means use all components that can be found)
                 MCA btl: parameter "btl_tcp_links" (current value: <1>, data source: default value)
                 MCA btl: parameter "btl_tcp_if_include" (current value: <none>, data source: default value)
                          Comma-delimited list of devices or CIDR notation of networks to use for MPI communication (e.g., "eth0,eth1" or "192.168.0.0/16,10.1.4.0/24").  Mutually exclusive with btl_tcp_if_exclude.
                 MCA btl: parameter "btl_tcp_if_exclude" (current value: <127.0.0.1/8,sppp>, data source: default value)
                          Comma-delimited list of devices or CIDR notation of networks to NOT use for MPI communication -- all devices not matching these specifications will be used (e.g., "eth0,eth1" or "192.168.0.0/16,10.1.4.0/24").  Mutually exclusive with btl_tcp_if_include.
                 MCA btl: parameter "btl_tcp_free_list_num" (current value: <8>, data source: default value)
                 MCA btl: parameter "btl_tcp_free_list_max" (current value: <-1>, data source: default value)
                 MCA btl: parameter "btl_tcp_free_list_inc" (current value: <32>, data source: default value)
                 MCA btl: parameter "btl_tcp_sndbuf" (current value: <131072>, data source: default value)
                 MCA btl: parameter "btl_tcp_rcvbuf" (current value: <131072>, data source: default value)
                 MCA btl: parameter "btl_tcp_endpoint_cache" (current value: <30720>, data source: default value)
                          The size of the internal cache for each TCP connection. This cache is used to reduce the number of syscalls, by replacing them with memcpy. Every read will read the expected data plus the amount of the endpoint_cache
                 MCA btl: parameter "btl_tcp_use_nagle" (current value: <0>, data source: default value)
                          Whether to use Nagle's algorithm or not (using Nagle's algorithm may increase short message latency)
                 MCA btl: parameter "btl_tcp_port_min_v4" (current value: <1024>, data source: default value)
                          The minimum port where the TCP BTL will try to bind (default 1024)
                 MCA btl: parameter "btl_tcp_port_range_v4" (current value: <64511>, data source: default value)
                          The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
                 MCA btl: parameter "btl_tcp_port_min_v6" (current value: <1024>, data source: default value)
                          The minimum port where the TCP BTL will try to bind (default 1024)
                 MCA btl: parameter "btl_tcp_port_range_v6" (current value: <64511>, data source: default value)
                          The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
                 MCA btl: parameter "btl_tcp_exclusivity" (current value: <100>, data source: default value)
                          BTL exclusivity (must be >= 0)
                 MCA btl: parameter "btl_tcp_flags" (current value: <314>, data source: default value)
                          BTL bit flags (general flags: SEND=1, PUT=2, GET=4, SEND_INPLACE=8, RDMA_MATCHED=64, HETEROGENEOUS_RDMA=256; flags only used by the "dr" PML (ignored by others): ACK=16, CHECKSUM=32, RDMA_COMPLETION=128; flags only used by the "bfo" PML (ignored by others): FAILOVER_SUPPORT=512)
                 MCA btl: parameter "btl_tcp_rndv_eager_limit" (current value: <65536>, data source: default value)
                          Size (in bytes) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
                 MCA btl: parameter "btl_tcp_eager_limit" (current value: <65536>, data source: default value)
                          Maximum size (in bytes) of "short" messages (must be >= 1).
                 MCA btl: parameter "btl_tcp_max_send_size" (current value: <131072>, data source: default value)
                          Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
                 MCA btl: parameter "btl_tcp_rdma_pipeline_send_length" (current value: <131072>, data source: default value)
                          Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
                 MCA btl: parameter "btl_tcp_rdma_pipeline_frag_size" (current value: <2147483647>, data source: default value)
                          Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
                 MCA btl: parameter "btl_tcp_min_rdma_pipeline_size" (current value: <0>, data source: default value)
                          Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
                 MCA btl: parameter "btl_tcp_bandwidth" (current value: <100>, data source: default value)
                          Approximate maximum bandwidth of interconnect(0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
                 MCA btl: parameter "btl_tcp_latency" (current value: <100>, data source: default value)
                          Approximate latency of interconnect (must be >= 0)
                 MCA btl: parameter "btl_tcp_disable_family" (current value: <0>, data source: default value)
                 MCA btl: parameter "btl_tcp_if_seq" (current value: <none>, data source: default value)
                          If specified, a comma-delimited list of TCP interfaces.  Interfaces will be assigned, one to each MPI process, in a round-robin fashion on each server.  For example, if the list is "eth0,eth1" and four MPI processes are run on a single server, then local ranks 0 and 2 will use eth0 and local ranks 1 and 3 will use eth1.
                 MCA btl: parameter "btl_tcp_priority" (current value: <0>, data source: default value)
                 MCA btl: information "btl_sm_have_knem_support" (value: <0>, data source: default value)
                          Whether this component supports the knem Linux kernel module or not
                 MCA btl: parameter "btl_sm_use_knem" (current value: <0>, data source: default value)
                          Whether knem support is desired or not (negative = try to enable knem support, but continue even if it is not available, 0 = do not enable knem support, positive = try to enable knem support and fail if it is not available)
                 MCA btl: parameter "btl_sm_knem_dma_min" (current value: <0>, data source: default value)
                          Minimum message size (in bytes) to use the knem DMA mode; ignored if knem does not support DMA mode (0 = do not use the knem DMA mode)
                 MCA btl: parameter "btl_sm_knem_max_simultaneous" (current value: <0>, data source: default value)
                          Max number of simultaneous ongoing knem operations to support (0 = do everything synchronously, which probably gives the best large message latency; >0 means to do all operations asynchronously, which supports better overlap for simultaneous large message sends)
                 MCA btl: parameter "btl_sm_free_list_num" (current value: <8>, data source: default value)
                 MCA btl: parameter "btl_sm_free_list_max" (current value: <-1>, data source: default value)
                 MCA btl: parameter "btl_sm_free_list_inc" (current value: <64>, data source: default value)
                 MCA btl: parameter "btl_sm_max_procs" (current value: <-1>, data source: default value)
                 MCA btl: parameter "btl_sm_mpool" (current value: <sm>, data source: default value)
                 MCA btl: parameter "btl_sm_fifo_size" (current value: <4096>, data source: default value)
                 MCA btl: parameter "btl_sm_num_fifos" (current value: <1>, data source: default value)
                 MCA btl: parameter "btl_sm_fifo_lazy_free" (current value: <120>, data source: default value)
                 MCA btl: parameter "btl_sm_sm_extra_procs" (current value: <0>, data source: default value)
                 MCA btl: parameter "btl_sm_exclusivity" (current value: <65535>, data source: default value)
                          BTL exclusivity (must be >= 0)
                 MCA btl: parameter "btl_sm_flags" (current value: <1>, data source: default value)
                          BTL bit flags (general flags: SEND=1, PUT=2, GET=4, SEND_INPLACE=8, RDMA_MATCHED=64, HETEROGENEOUS_RDMA=256; flags only used by the "dr" PML (ignored by others): ACK=16, CHECKSUM=32, RDMA_COMPLETION=128; flags only used by the "bfo" PML (ignored by others): FAILOVER_SUPPORT=512)
                 MCA btl: parameter "btl_sm_rndv_eager_limit" (current value: <4096>, data source: default value)
                          Size (in bytes) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
                 MCA btl: parameter "btl_sm_eager_limit" (current value: <4096>, data source: default value)
                          Maximum size (in bytes) of "short" messages (must be >= 1).
                 MCA btl: parameter "btl_sm_max_send_size" (current value: <32768>, data source: default value)
                          Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
                 MCA btl: parameter "btl_sm_bandwidth" (current value: <9000>, data source: default value)
                          Approximate maximum bandwidth of interconnect(0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
                 MCA btl: parameter "btl_sm_latency" (current value: <1>, data source: default value)
                          Approximate latency of interconnect (must be >= 0)
                 MCA btl: parameter "btl_sm_priority" (current value: <0>, data source: default value)
                 MCA btl: parameter "btl_self_free_list_num" (current value: <0>, data source: default value)
                          Number of fragments by default
                 MCA btl: parameter "btl_self_free_list_max" (current value: <-1>, data source: default value)
                          Maximum number of fragments
                 MCA btl: parameter "btl_self_free_list_inc" (current value: <32>, data source: default value)
                          Increment by this number of fragments
                 MCA btl: parameter "btl_self_exclusivity" (current value: <65536>, data source: default value)
                          BTL exclusivity (must be >= 0)
                 MCA btl: parameter "btl_self_flags" (current value: <10>, data source: default value)
                          BTL bit flags (general flags: SEND=1, PUT=2, GET=4, SEND_INPLACE=8, RDMA_MATCHED=64, HETEROGENEOUS_RDMA=256; flags only used by the "dr" PML (ignored by others): ACK=16, CHECKSUM=32, RDMA_COMPLETION=128; flags only used by the "bfo" PML (ignored by others): FAILOVER_SUPPORT=512)
                 MCA btl: parameter "btl_self_rndv_eager_limit" (current value: <131072>, data source: default value)
                          Size (in bytes) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
                 MCA btl: parameter "btl_self_eager_limit" (current value: <131072>, data source: default value)
                          Maximum size (in bytes) of "short" messages (must be >= 1).
                 MCA btl: parameter "btl_self_max_send_size" (current value: <262144>, data source: default value)
                          Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
                 MCA btl: parameter "btl_self_rdma_pipeline_send_length" (current value: <2147483647>, data source: default value)
                          Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
                 MCA btl: parameter "btl_self_rdma_pipeline_frag_size" (current value: <2147483647>, data source: default value)
                          Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
                 MCA btl: parameter "btl_self_min_rdma_pipeline_size" (current value: <0>, data source: default value)
                          Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
                 MCA btl: parameter "btl_self_bandwidth" (current value: <100>, data source: default value)
                          Approximate maximum bandwidth of interconnect(0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
                 MCA btl: parameter "btl_self_latency" (current value: <0>, data source: default value)
                          Approximate latency of interconnect (must be >= 0)
                 MCA btl: parameter "btl_self_priority" (current value: <0>, data source: default value)
                 MCA btl: parameter "btl_base_include" (current value: <none>, data source: default value)
                 MCA btl: parameter "btl_base_exclude" (current value: <none>, data source: default value)
                 MCA btl: parameter "btl_base_warn_component_unused" (current value: <1>, data source: default value)
                          This parameter is used to turn on warning messages when certain NICs are not used
