<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta content="text/html; charset=ISO-8859-1"
      http-equiv="Content-Type">
  </head>
  <body bgcolor="#ffffff" text="#000000">
    Sorry, I am still trying to grok all your email as what the problem
    you are trying to solve.&nbsp; So is the issue is trying to have two jobs
    having processes on the same node be able to bind there processes on
    different resources.&nbsp; Like core 1 for the first job and core 2 and 3
    for the 2nd job?<br>
    <br>
    --td<br>
    <br>
    On 11/15/2010 09:29 AM, Chris Jewell wrote:
    <blockquote
      cite="mid:9E57FF46-5E36-4787-B023-EA94B089F451@warwick.ac.uk"
      type="cite">
      <pre wrap="">Hi,

</pre>
      <blockquote type="cite">
        <blockquote type="cite">
          <pre wrap="">If, indeed, it is not possible currently to implement this type of core-binding in tightly integrated OpenMPI/GE, then a solution might lie in a custom script run in the parallel environment's 'start proc args'. This script would have to find out which slots are allocated where on the cluster, and write an OpenMPI rankfile. 
</pre>
        </blockquote>
        <pre wrap="">
Exactly this should work. 

If you use "binding_instance" "pe" and reformat the information in the $PE_HOSTFILE to a "rankfile", it should work to get the desired allocation. Maybe you can share the script with this list once you got it working. 
</pre>
      </blockquote>
      <pre wrap="">

As far as I can see, that's not going to work.  This is because, exactly like "binding_instance" "set", for -binding pe linear:n you get n cores bound per node.  This is easily verifiable by using a long job and examining the pe_hostfile.  For example, I submit a job with:

$ qsub -pe mpi 8 -binding pe linear:1 myScript.com

and my pe_hostfile looks like:

exec6.cluster.stats.local 2 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec6.cluster.stats.local">batch.q@exec6.cluster.stats.local</a> 0,1
exec1.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec1.cluster.stats.local">batch.q@exec1.cluster.stats.local</a> 0,1
exec7.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec7.cluster.stats.local">batch.q@exec7.cluster.stats.local</a> 0,1
exec5.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec5.cluster.stats.local">batch.q@exec5.cluster.stats.local</a> 0,1
exec4.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec4.cluster.stats.local">batch.q@exec4.cluster.stats.local</a> 0,1
exec3.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec3.cluster.stats.local">batch.q@exec3.cluster.stats.local</a> 0,1
exec2.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec2.cluster.stats.local">batch.q@exec2.cluster.stats.local</a> 0,1

Notice that, because I have specified the -binding pe linear:1, each execution node binds processes for the job_id to one core.  If I have -binding pe linear:2, I get:

exec6.cluster.stats.local 2 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec6.cluster.stats.local">batch.q@exec6.cluster.stats.local</a> 0,1:0,2
exec1.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec1.cluster.stats.local">batch.q@exec1.cluster.stats.local</a> 0,1:0,2
exec7.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec7.cluster.stats.local">batch.q@exec7.cluster.stats.local</a> 0,1:0,2
exec4.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec4.cluster.stats.local">batch.q@exec4.cluster.stats.local</a> 0,1:0,2
exec3.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec3.cluster.stats.local">batch.q@exec3.cluster.stats.local</a> 0,1:0,2
exec2.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec2.cluster.stats.local">batch.q@exec2.cluster.stats.local</a> 0,1:0,2
exec5.cluster.stats.local 1 <a class="moz-txt-link-abbreviated" href="mailto:batch.q@exec5.cluster.stats.local">batch.q@exec5.cluster.stats.local</a> 0,1:0,2

So the pe_hostfile still doesn't give an accurate representation of the binding allocation for use by OpenMPI.  Question: is there a system file or command that I could use to check which processors are "occupied"?

Chris

--
Dr Chris Jewell
Department of Statistics
University of Warwick
Coventry
CV4 7AL
UK
Tel: +44 (0)24 7615 0778






_______________________________________________
users mailing list
<a class="moz-txt-link-abbreviated" href="mailto:users@open-mpi.org">users@open-mpi.org</a>
<a class="moz-txt-link-freetext" href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a>
</pre>
    </blockquote>
    <br>
    <br>
    <div class="moz-signature">-- <br>
      <meta http-equiv="content-type" content="text/html;
        charset=ISO-8859-1">
      <title></title>
      <img src="cid:part1.06050109.00070008@oracle.com" alt="Oracle"><br>
      Terry D. Dontje | Principal Software Engineer<br>
      <font size="2" color="#666666" face="Verdana">Developer Tools
        Engineering | +1.781.442.2631<br>
      </font> <font size="2" color="#ff0000" face="Verdana">Oracle </font><font
        size="2" color="#666666" face="Verdana"><b> - Performance
          Technologies</b></font><br>
      <font size="2" color="#666666" face="Verdana"> 95 Network Drive,
        Burlington, MA 01803<br>
        Email <a href="mailto:terry.dontje@oracle.com">terry.dontje@oracle.com</a><br>
      </font>
      <div class="moz-signature"><br>
        <div class="moz-signature">
          <div class="moz-signature">
            <div class="moz-signature">
              <div class="moz-signature">
                <div class="moz-signature"> </div>
              </div>
            </div>
          </div>
        </div>
        <br>
        <br>
      </div>
    </div>
  </body>
</html>

