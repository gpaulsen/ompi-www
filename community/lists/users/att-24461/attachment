<div dir="ltr">In my codes, I am using MPI_Send and MPI_Recv functions to notify P0 that every other process have finished their own calculations. Maybe you cal also use the same method and keep P0 in waiting until it receives some data from other processes?</div>

<div class="gmail_extra"><br><br><div class="gmail_quote">On Fri, May 23, 2014 at 4:39 PM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">

Hmmm...that is a bit of a problem. I&#39;ve added a note to see if we can turn down the aggressiveness of the MPI layer once we hit finalize, but that won&#39;t solve your immediate problem.<br>
<br>
Our usual suggestion is that you have each proc call finalize before going on to do other things. This avoids the situation you are describing - after all, if the MPI phase is done, there really isn&#39;t any reason to not call MPI_Finalize before moving on to other things. You don&#39;t have to delay the call until the end of the program.<br>


<span class="HOEnZb"><font color="#888888"><br>
Ralph<br>
</font></span><div class="HOEnZb"><div class="h5"><br>
On May 23, 2014, at 1:45 AM, Iván Cores González &lt;<a href="mailto:ivan.coresg@udc.es">ivan.coresg@udc.es</a>&gt; wrote:<br>
<br>
&gt; Hi all,<br>
&gt; I have a performance problem with the next code.<br>
&gt;<br>
&gt; int main( int argc, char *argv[] )<br>
&gt; {<br>
&gt;       MPI_Init(&amp;argc, &amp;argv);<br>
&gt;<br>
&gt;       int myid;<br>
&gt;       MPI_Comm_rank(MPI_COMM_WORLD, &amp;myid);<br>
&gt;<br>
&gt;       //Imagine some important job here, but P0 ends first.<br>
&gt;       if (myid != 0)<br>
&gt;       {<br>
&gt;               sleep(20);<br>
&gt;       }<br>
&gt;<br>
&gt;       printf(&quot;Calling MPI_Finalize() ...\n&quot;);<br>
&gt;       // Process 0 maintain core load at 100%.<br>
&gt;       MPI_Finalize();<br>
&gt;       printf(&quot;Ok\n&quot;);<br>
&gt;<br>
&gt;       return 0;<br>
&gt; }<br>
&gt;<br>
&gt; If some MPI threads call MPI_Finalize() while others threads are still<br>
&gt; &quot;working&quot;, the MPI_Finalize() function maintains the core load in 100%<br>
&gt; and not allows other threads or jobs in the processor to run faster.<br>
&gt;<br>
&gt; Any idea to avoid the load or force the P0 to sleep?<br>
&gt;<br>
&gt; Thanks,<br>
&gt; Ivan Cores.<br>
&gt; _______________________________________________<br>
&gt; users mailing list<br>
&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
<br>
_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
</div></div></blockquote></div><br><br clear="all"><div><br></div>-- <br><div dir="ltr">Özgür Pekçağlıyan<div>Computer Engineer (M.Sc.)</div></div>
</div>

