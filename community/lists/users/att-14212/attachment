
<br><font size=2 face="sans-serif">The difference is that MPI_Barrier or
even MPI_Ibarrier is a crude tool for the job. It is likely to leave resources
idle that could be doing productive work.</font>
<br>
<br><font size=2 face="sans-serif">I agree it is part of the tool kit but
if this kind of problem is significant enough so a textbook should cover
it then I would advocate that people be taught where to look for the problem
and to consider which tool to use. </font>
<br>
<br><font size=2 face="sans-serif">The first step is to look for way to
improve load balance. &nbsp;The second step is to look for ways to impede
as few processes as possible and only when they must be impeded. </font>
<br>
<br><font size=2 face="sans-serif">I am also suggesting that there is a
middle class of application that improves with semantically redundant barrier.
Applications with a significant design flaw that it would be better to
find and fix than to mask.</font>
<br>
<br><font size=2 face="sans-serif">The MPI standard provides for a flow
control to prevent eager message flooding but it does not provide a flow
control for descriptor flooding. Descriptor flooding may even bring down
a job and the standard does not oblige the MPI implementation to prevent
that. &nbsp;This problem was understood from the beginning but it cannot
be solved within the semantic rules for non-blocking Send/Recv. The options
were to give the problem to the application writer or to say &quot;A non-blocking
operation will return promptly unless there is a resource shortage&quot;.</font>
<br>
<br><font size=2 face="sans-serif">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; Dick </font>
<br>
<br>
<br><font size=2 face="sans-serif">Dick Treumann &nbsp;- &nbsp;MPI Team
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
IBM Systems &amp; Technology Group<br>
Dept X2ZA / MS P963 -- 2455 South Road -- Poughkeepsie, NY 12601<br>
Tele (845) 433-7846 &nbsp; &nbsp; &nbsp; &nbsp; Fax (845) 433-8363<br>
</font>
<br>
<br><tt><font size=2>users-bounces@open-mpi.org wrote on 09/10/2010 10:27:02
AM:<br>
<br>
&gt; [image removed] </font></tt>
<br><tt><font size=2>&gt; <br>
&gt; Re: [OMPI users] MPI_Reduce performance</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; Eugene Loh </font></tt>
<br><tt><font size=2>&gt; <br>
&gt; to:</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; Open MPI Users</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; 09/10/2010 10:30 AM</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; Sent by:</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; users-bounces@open-mpi.org</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; Please respond to Open MPI Users</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; Richard Treumann wrote: </font></tt>
<br><tt><font size=2>&gt; <br>
&gt; Hi Ashley <br>
&gt; <br>
&gt; I understand the problem with descriptor flooding can be serious in
<br>
&gt; an application with unidirectional data dependancy. Perhaps we have
<br>
&gt; a different perception of how common that is. </font></tt>
<br><tt><font size=2>&gt; Ashley speculated it was a &quot;significant
minority.&quot; &nbsp;I don't know <br>
&gt; what that means, but it seems like it is a minority (most <br>
&gt; computations have causal relationships among the processes holding
<br>
&gt; unbounded imbalances in check) and yet we end up seeing these exceptions.</font></tt>
<br><tt><font size=2>&gt; I think that adding some flow control to the
application is a better<br>
&gt; solution than semantically redundant barrier.</font></tt>
<br><tt><font size=2>&gt; It seems to me there is no difference. &nbsp;Flow
control, at this level,<br>
&gt; is just semantically redundant synchronization. &nbsp;A barrier is
just a<br>
&gt; special case of that._______________________________________________<br>
&gt; users mailing list<br>
&gt; users@open-mpi.org<br>
&gt; </font></tt><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users"><tt><font size=2>http://www.open-mpi.org/mailman/listinfo.cgi/users</font></tt></a>
