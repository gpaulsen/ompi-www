I think there is still some problem.<br>I create different datatypes by resizing MPI_SHORT with <br>different negative lower bounds (depending on the rank)<br>and the same extent (only depending on the number of processes).
<br><br>However, I get an error as soon as&nbsp; MPI_File_set_view is called with my new datatype:<br><br>Error: Unsupported datatype passed to ADIOI_Count_contiguous_blocks<br>[aim-nano_02:22229] MPI_ABORT invoked on rank 0 in communicator MPI_COMM_WORLD with errorcode 1
<br><br>The same error occurs, if i set the lower bounds to 0.<br>Is it perhaps not possible to use resized datatypes in MPI_File_set_view?<br><br><br>Here&#39;s my code:<br><br>#include &lt;stdio.h&gt;<br>#include &quot;
mpi.h&quot;<br><br>//-----------------------------------------------------------------------------<br>// main<br>//&nbsp;&nbsp; <br>//<br>int main(int iArgC, char *apArgV[]) {<br><br>&nbsp;&nbsp;&nbsp; int iNumProcs;<br>&nbsp;&nbsp;&nbsp; int iID;<br>&nbsp;<br>&nbsp;&nbsp;&nbsp; MPI_Init(&amp;iArgC, &amp;apArgV);
<br><br>&nbsp;&nbsp;&nbsp; MPI_Comm_size(MPI_COMM_WORLD, &amp;iNumProcs);<br>&nbsp;&nbsp;&nbsp; MPI_Comm_rank(MPI_COMM_WORLD, &amp;iID);<br><br>&nbsp;&nbsp;&nbsp; // get the size of a MPI_SHORT<br>&nbsp;&nbsp;&nbsp; MPI_Aint lbs;<br>&nbsp;&nbsp;&nbsp; MPI_Aint exts;<br>&nbsp;&nbsp;&nbsp; MPI_Type_get_extent(MPI_SHORT, &amp;lbs, &amp;exts);
<br><br>&nbsp;&nbsp;&nbsp; // resize the MPI_SHORT datatype<br>&nbsp;&nbsp;&nbsp; // same extent but differennt position of the MPI_SHORT<br>&nbsp;&nbsp;&nbsp; MPI_Datatype dtWHoles;<br>&nbsp;&nbsp;&nbsp; MPI_Aint lb&nbsp; = -iID * exts;<br>&nbsp;&nbsp;&nbsp; MPI_Aint ext =&nbsp; iNumProcs * exts;<br>&nbsp;&nbsp;&nbsp; MPI_Type_create_resized(MPI_SHORT, lb, ext, &amp;dtWHoles);
<br>&nbsp;<br>&nbsp;&nbsp;&nbsp; // commit the datatype<br>&nbsp;&nbsp;&nbsp; MPI_Type_commit(&amp;dtWHoles);<br><br>&nbsp;&nbsp;&nbsp; // open the file for writing<br>&nbsp;&nbsp;&nbsp; MPI_File fh;<br>&nbsp;&nbsp;&nbsp; MPI_File_open(MPI_COMM_WORLD, &quot;testwrite.dat&quot;, MPI_MODE_WRONLY | MPI_MODE_CREATE, MPI_INFO_NULL, &amp;fh);
<br><br>&nbsp;&nbsp;&nbsp; // set the file view<br>&nbsp;&nbsp;&nbsp; MPI_File_set_view(fh, 0, MPI_SHORT, dtWHoles, &quot;native&quot;, MPI_INFO_NULL);<br><br>&nbsp;&nbsp;&nbsp; // here we would do some writing<br><br>&nbsp;&nbsp;&nbsp; // close the file<br>&nbsp;&nbsp;&nbsp; MPI_File_close(&amp;fh);
<br><br>&nbsp;&nbsp;&nbsp; // clean&nbsp; up<br>&nbsp;&nbsp;&nbsp; MPI_Type_free(&amp;dtWHoles);<br><br>&nbsp;&nbsp;&nbsp; MPI_Finalize();<br>}<br><br><br><div><span class="gmail_quote">On 7/10/07, <b class="gmail_sendername">George Bosilca</b> &lt;<a href="mailto:bosilca@cs.utk.edu">
bosilca@cs.utk.edu</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">MPI_LB and MPI_UB is what you&#39;re looking for. Or better, for MPI-2
<br>compliant libraries such as Open MPI and MPICH2, you can use<br>MPI_Type_create_resized. This will allow you to create the gap at the<br>beginning and/or the end of a data-type description.<br><br>&nbsp;&nbsp; george.<br><br>On Jul 10, 2007, at 10:53 AM, jody wrote:
<br><br>&gt; hi<br>&gt; I want to create datatypes of the form<br>&gt; XX000000...<br>&gt; 00XX0000...<br>&gt; 0000XX00...<br>&gt; etc.<br>&gt;<br>&gt; I tried MPI_Type_indexed(1, ais, ait, MPI_SHORT, &amp;dtNewType)<br>&gt; where ais= {2} and ait = {2} but this only gives me a datatype of
<br>&gt; the form<br>&gt; 00XX, i.e. no holes at the end.<br>&gt;<br>&gt; I guess MPI_Type_vector won&#39;t work, because there seems to be<br>&gt; no way to create holes at the beginning of the datatype<br>&gt;<br>&gt;<br>
&gt; I need these datatypes to let each process write its data into the<br>&gt; file<br>&gt; in the following way:<br>&gt; XXYYZZXXYYZZXXYYZZ....<br>&gt; (X is data from proc 0, Y is data from proc 1,&nbsp;&nbsp;Z is data from proc 2)
<br>&gt;<br>&gt; My intended approach was to define&nbsp;&nbsp;datatypes of the form XX0000,<br>&gt; 00XX00, 0000XX<br>&gt; for the respective processors, and then&nbsp;&nbsp;call&nbsp;&nbsp;MPI_File_set_view<br>&gt; with displacement 0 and the respective datatypes fo the &quot;filetype&quot;
<br>&gt; parameter,<br>&gt; and finally let each&nbsp;&nbsp;processor write its stuff to file<br>&gt; sequentially using MPI_File_write.<br>&gt;<br>&gt; However, my plan failed since i am unable to create datatypes with<br>&gt; holes in front and at the end.
<br>&gt;<br>&gt; What function should i use to create the desired datatypes?<br>&gt;<br>&gt; Thank You<br>&gt;<br>&gt;&nbsp;&nbsp; Jody<br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a href="mailto:users@open-mpi.org">
users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br><br>_______________________________________________<br>users mailing list
<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div><br>

