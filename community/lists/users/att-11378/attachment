<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Hmm....if you are willing to keep trying, could you perhaps let it run for a brief time, ctrl-z it, and then do an ls on a directory from a process that has already terminated? The pids will be in order, so just look for an early number (not mpirun or the parent, of course).<div><br></div><div>It would help if you could give us the contents of a directory from a child process that has terminated - would tell us what subsystem is failing to properly cleanup.<div><br></div><div>Thanks - and sorry for the problem.</div><div><br><div><div>On Dec 2, 2009, at 2:11 PM, Nicolas Bock wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><br><br><div class="gmail_quote">On Wed, Dec 2, 2009 at 12:12, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">

<div style="word-wrap: break-word;"><br><div><div><div></div><div class="h5"><div>On Dec 2, 2009, at 10:24 AM, Nicolas Bock wrote:</div><br><blockquote type="cite"><br><br><div class="gmail_quote">On Tue, Dec 1, 2009 at 20:58, Nicolas Bock <span dir="ltr">&lt;<a href="mailto:nicolasbock@gmail.com" target="_blank">nicolasbock@gmail.com</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">

<br><br><div class="gmail_quote"><div>On Tue, Dec 1, 2009 at 18:03, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">




<div style="word-wrap: break-word;">You may want to check your limits as defined by the shell/system. I can also run this for as long as I'm willing to let it run, so something else appears to be going on.<div><br></div>




<div><br></div></div></blockquote></div><div><br>Is that with 1.3.3? I found that with 1.3.4 I can run the example much longer until I hit this error message:<br><br><br>[master] (31996) forking processes<br>[mujo:14273] opal_os_dirpath_create: Error: Unable to create the sub-directory (/tmp/.private/nbock/openmpi-sessions-nbock@mujo_0/13386/31998) of (/tmp/.private/nbock/openmpi-sessions-nbock@mujo_0/13386/31998/0), mkdir failed [1]<br>




[mujo:14273] [[13386,31998],0] ORTE_ERROR_LOG: Error in file util/session_dir.c at line 101<br>[mujo:14273] [[13386,31998],0] ORTE_ERROR_LOG: Error in file util/session_dir.c at line 425<br>[mujo:14273] [[13386,31998],0] ORTE_ERROR_LOG: Error in file base/ess_base_std_app.c at line 132<br>




--------------------------------------------------------------------------<br>It looks like orte_init failed for some reason; your parallel process is<br>likely to abort.&nbsp; There are many reasons that a parallel process can<br>




fail during orte_init; some of which are due to configuration or<br>environment problems.&nbsp; This failure appears to be an internal failure;<br>here's some additional information (which may only be relevant to an<br>Open MPI developer):<br>




<br>&nbsp; orte_session_dir failed<br>&nbsp; --&gt; Returned value Error (-1) instead of ORTE_SUCCESS<br><br></div></div></blockquote></div><br>After some googling I found that this is apparently an ext3 filesystem limitation, i.e. there can be only 31998 subdirectories in a directory. Why is openmpi creating all of these directories in the first place? Is there a way to "recycle" them?<br>

</blockquote><div><br></div></div></div><div>The session directories are built to house shared memory backing files, plus other potential entries depending upon options. They should be deleted upon finalize of each process, so you shouldn't be running out of them.</div>

<div><br></div><div>I can check to see that the code is cleaning them out (or at least, attempting to do so). Not sure if there is something about ext3 that might retain the directory entries until the "parent" process terminates, even though the files have been deleted.</div>

<div><br></div><div>If you do an ls on the directory tree, do you see 32k subdirectories? Or do you only see the ones for the active processes?</div><br></div></div></blockquote><div>That's a good point. As the master process is running I can see the directory fill up. When I Ctrl-C the master, the directory completely disappears. When I let it run all the way to 32K directories, the directory does not disappear and contains 32K directories even after master gets killed by MPI.<br>

<br>Some process must not be closing some file in these directories which would prevent them from being unlinked, if I understand ext3 correctly.<br><br>nick<br></div></div>
_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>http://www.open-mpi.org/mailman/listinfo.cgi/users</blockquote></div><br></div></div></body></html>
