<HTML>
<HEAD>
<TITLE>Re: [OMPI users] MPI Java Bindings on Mac OSX</TITLE>
</HEAD>
<BODY>
<FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:11pt'>Greetings Chuck, <BR>
I tend to agree with Doug. &nbsp;It hope to be able to test soon OpenMPI under Lion/Mountain Lion. &nbsp;If someone has already done so, especially with Java, that could be quite handy.<BR>
<BR>
V/R,<BR>
<BR>
</SPAN></FONT><FONT SIZE="2"><FONT FACE="Consolas, Courier New, Courier"><SPAN STYLE='font-size:10pt'>Daniel Beatty, Ph.D.<BR>
Computer Scientist, Detonation Sciences Branch<BR>
Code 474300D<BR>
1 Administration Circle M/S 1109<BR>
China Lake, CA 93555<BR>
<a href="daniel.beatty@navy.mil">daniel.beatty@navy.mil</a><BR>
(LandLine) (760)939-7097 <BR>
(iPhone) (806)438-6620<BR>
</SPAN></FONT></FONT><FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:10.5pt'><BR>
&nbsp;<BR>
<BR>
<BR>
On 1/3/13 9:49 AM, &quot;Ralph Castain&quot; &lt;<a href="rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<BR>
<BR>
</SPAN></FONT><BLOCKQUOTE><FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:10.5pt'>Hi Doug<BR>
<BR>
What modules software do you use on the Mac? Would be nice to know :-)<BR>
<BR>
<BR>
On Jan 3, 2013, at 8:34 AM, Doug Reeder &lt;<a href="dlr1@centurylink.net">dlr1@centurylink.net</a>&gt; wrote:<BR>
<BR>
</SPAN></FONT><BLOCKQUOTE><FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:10.5pt'>Chuck,<BR>
<BR>
In step 4 you might want to consider the following<BR>
<BR>
--prefix=/usr/local/openmpi-1.7rc5<BR>
<BR>
and use the modules software to select which version of openmpi to use. I have to have multiple versions of openmpi available on my macs and this approach has worked well for me.<BR>
<BR>
Doug Reeder<BR>
On Jan 3, 2013, at 9:22 AM, Chuck Mosher wrote:<BR>
<BR>
</SPAN></FONT><BLOCKQUOTE><FONT FACE="Times New Roman"><SPAN STYLE='font-size:12pt'>Hi,<BR>
<BR>
I've been trying to get a working version of the MPI java bindings on Mac OSX (10.6.8 with Java 1.6.0_37).<BR>
<BR>
I ran into a number of issues along the way that I thought I would record here for others who might be foolish enough to try the same ;-)<BR>
<BR>
The issues I had to spend time with were:<BR>
<BR>
1. Installing a C compiler that can run from the command line<BR>
</SPAN><FONT SIZE="4"><SPAN STYLE='font-size:14pt'>2. Finding and installing an appropriate Java JDK for my OS version<BR>
</SPAN></FONT><SPAN STYLE='font-size:12pt'>3. Building and installing OpenMPI for the first time on a Mac<BR>
4. Conflicts with the existing OpenMPI version 1.2.8 that was installed already on my Mac<BR>
5. Figuring out syntax for using the mpirun command line to run java<BR>
6. Odd behavior when trying to use &quot;localhost&quot; or the output from `hostname` on the command line or in a hostfile<BR>
<BR>
Resolution for each of these in order:<BR>
<BR>
<B>1. Installing a C compiler for the command line<BR>
</B>Found a good resource here:<BR>
<a href="http://www.macobserver.com/tmo/article/install_the_command_line_c_compilers_in_os_x_lion">http://www.macobserver.com/tmo/article/install_the_command_line_c_compilers_in_os_x_lion</a> &lt;<a href="http://www.macobserver.com/tmo/article/install_the_command_line_c_compilers_in_os_x_lion">http://www.macobserver.com/tmo/article/install_the_command_line_c_compilers_in_os_x_lion</a>&gt; <BR>
The solution is to install XCode, then enable command line compilers from the XCode console.<BR>
<BR>
<B>2. Finding and installing an appropriate Java JDK for my OS version<BR>
</B>Used this resource to eventually figure out what to do:<BR>
<a href="http://www.wikihow.com/Install-the-JDK-(Java-Development-Kit)-on-Mac-OS-X">http://www.wikihow.com/Install-the-JDK-(Java-Development-Kit)-on-Mac-OS-X</a> &lt;<a href="http://www.wikihow.com/Install-the-JDK-(Java-Development-Kit)-on-Mac-OS-X">http://www.wikihow.com/Install-the-JDK-(Java-Development-Kit)-on-Mac-OS-X</a>&gt; <BR>
It didn't exactly match my setup, but had enough clues.<BR>
The solution is to first find your java version (java -version, 1.6.0_37 in my case) and then match that version number to the Apple Java update version (11 in my case). <BR>
The key document is:<BR>
<a href="http://developer.apple.com/library/mac/#technotes/tn2002/tn2110.html">http://developer.apple.com/library/mac/#technotes/tn2002/tn2110.html</a><BR>
Which is a table relating java version numbers to the appropriate &quot;Java for Mac OS X xx.x Update xx&quot;.<BR>
Once you know the update number, you can download the JDK installer from<BR>
<a href="https://developer.apple.com/downloads/index.action">https://developer.apple.com/downloads/index.action</a><BR>
where you of course have to have an Apple developer ID to access.<BR>
Enter &quot;java&quot; in the search bar on the left and find the matching java update, and you're good to go.<BR>
<BR>
<B>3. Building and installing OpenMPI for the first time on a Mac<BR>
</B>After the usual false starts with a new installation on a new OS, I managed to get a working build of openmpi-1.7rc5 with Java bindings.<BR>
I could only find the java bindings in the 1.7 pre-release.<BR>
I used the defaults as much as possible. <BR>
<BR>
After downloading from:<BR>
<a href="http://www.open-mpi.org/software/ompi/v1.7/">http://www.open-mpi.org/software/ompi/v1.7/</a><BR>
and unarchiving to Downloads, open a Terminal window.<BR>
<BR>
</SPAN></FONT><SPAN STYLE='font-size:12pt'><FONT FACE="Lucida Console">cd Downloads/openmpi-1.7rc5<BR>
./configure --enable-java --prefix=/usr/local<BR>
make all<BR>
sudo make install<BR>
</FONT><FONT FACE="Times New Roman"><BR>
Verify that you can run the commands and examples:<BR>
<BR>
</FONT><FONT FACE="Lucida Console">chuck-&gt; /usr/local/bin/mpirun -version<BR>
mpirun (Open MPI) 1.7rc5<BR>
<BR>
chuck-&gt; cd examples<BR>
chuck-&gt; make<BR>
chuck-&gt; /usr/local/bin/mpirun -np 2 hello_c<BR>
Hello, world, I am 0 of 2, (Open MPI v1.7rc5, package: Open MPI <a href="chuck@chucks-iMac.local">chuck@chucks-iMac.local</a> Distribution, ident: 1.7rc5, Oct 30, 2012, 111)<BR>
Hello, world, I am 1 of 2, (Open MPI v1.7rc5, package: Open MPI <a href="chuck@chucks-iMac.local">chuck@chucks-iMac.local</a> Distribution, ident: 1.7rc5, Oct 30, 2012, 111)<BR>
</FONT><FONT FACE="Times New Roman"><BR>
<B>4. Conflicts with the existing OpenMPI version 1.2.8 that was installed already on my Mac<BR>
</B>OpenMPI Version 1.2.8 was already installed for my OS in /usr/bin<BR>
So, if you accidentally type:<BR>
<BR>
</FONT><FONT FACE="Lucida Console">chuck-&gt; mpirun -np 2 hello_c<BR>
--------------------------------------------------------------------------<BR>
A requested component was not found, or was unable to be opened<BR>
...<BR>
</FONT><FONT FACE="Times New Roman"><BR>
you picked up the wrong &quot;mpirun&quot; and you will get a bunch of error output complaining about sockets or mis-matched shared library versions.<BR>
<BR>
I dealt with this moving the existing OpenMPI related commands to a subdirectory, and then created symbolic links from /usr/local/bin to /usr/bin for the commands I needed.<BR>
<BR>
<B>5. Figuring out syntax for using the mpirun command line to run java<BR>
</B>First be sure you can run Java<BR>
</FONT><FONT FACE="Lucida Console"><BR>
chuck-&gt; /usr/bin/java -version<BR>
java version &quot;1.6.0_37&quot;<BR>
Java(TM) SE Runtime Environment (build 1.6.0_37-b06-434-10M3909)<BR>
Java HotSpot(TM) 64-Bit Server VM (build 20.12-b01-434, mixed mode)<BR>
<BR>
</FONT><FONT FACE="Times New Roman">Then be sure you can run your java class from the command line as well. To figure this out I created a couple of simple java files in a temp directory:<BR>
<BR>
</FONT><FONT FACE="Lucida Console">chuck-&gt; cd ~/tmp<BR>
chuck-&gt; mkdir classes<BR>
chuck -&gt; cat HelloWorld.java<BR>
<BR>
public class HelloWorld {<BR>
&nbsp;&nbsp;public static void main(String[] args) {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;Hello World, from Java !&quot;);<BR>
&nbsp;&nbsp;}<BR>
}<BR>
<BR>
chuck-&gt; javac -d classes HelloWorld.java<BR>
chuck-&gt; java -cp ./classes HelloWorld<BR>
<BR>
Hello World, from Java !<BR>
<BR>
</FONT><FONT FACE="Times New Roman">No sense going further until you can get the code above to run.<BR>
If you have that working, then you can try the MPI version of HelloWorld:<BR>
<BR>
</FONT><FONT FACE="Lucida Console">chuck-&gt; cat HelloWorldMPI.java<BR>
<BR>
import mpi.*;<BR>
class HelloWorldMPI {<BR>
&nbsp;&nbsp;public static void main(String[] args) throws MPIException {<BR>
&nbsp;&nbsp;&nbsp;&nbsp;MPI.Init(args);<BR>
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;Hello world from rank &quot; + <BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MPI.COMM_WORLD.Rank() + &quot; of &quot; +<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MPI.COMM_WORLD.Size() );<BR>
&nbsp;&nbsp;&nbsp;&nbsp;MPI.Finalize();<BR>
&nbsp;&nbsp;}<BR>
}<BR>
<BR>
chuck-&gt; /usr/local/bin/mpijavac -d classes HelloWorldMPI.java<BR>
/usr/local/bin/mpirun -np 2 /usr/bin/java -cp ./classes HelloWorldMPI<BR>
<BR>
Hello world from rank 0 of 2<BR>
Hello world from rank 1 of 2<BR>
<BR>
</FONT><FONT FACE="Times New Roman">And you're ready to go !<BR>
Except for one last thing ...<BR>
<BR>
<B>6. Odd behavior when trying to use &quot;localhost&quot; or the output from `hostname` on the command line or in a hostfile<BR>
</B>You will note in the examples above no host names, hostifle, or appfile was used.<BR>
I found that trying to use &quot;-host localhost&quot; or &quot;-hostfile hostfile&quot; which contained &quot;localhost&quot; would not work:<BR>
<BR>
</FONT><FONT FACE="Lucida Console">mpirun -host localhost -np 2 ...<BR>
<BR>
</FONT><FONT FACE="Times New Roman">in the examples above would not work, returning:<BR>
<BR>
</FONT><FONT FACE="Lucida Console">chuck$ /usr/local/bin/mpirun -host localhost -np 2 /usr/bin/java -cp ./classes HelloWorldMPI<BR>
--------------------------------------------------------------------------<BR>
All nodes which are allocated for this job are already filled.<BR>
--------------------------------------------------------------------------<BR>
<BR>
</FONT><FONT FACE="Times New Roman">I posted this in a previous e-mail to this list, and it looks like a bug.<BR>
You can get around it by using the output from `hostname -s` which provides a trimmed name:<BR>
<BR>
</FONT><FONT FACE="Lucida Console">chuck-&gt; /usr/local/bin/mpirun -host `hostname -s` -np 2 /usr/bin/java -cp ./classes HelloWorldMPI<BR>
Hello world from rank 0 of 2<BR>
Hello world from rank 1 of 2<BR>
</FONT><FONT FACE="Times New Roman"><BR>
You will also need to use this name in any hostfiles or appfiles as well until the bug is fixed.<BR>
<BR>
Thanks to all for this great product !<BR>
<BR>
Chuck Mosher for JavaSeis.org &lt;<a href="http://javaseis.org/">http://javaseis.org/</a>&gt; <BR>
<BR>
<BR>
</FONT></SPAN><FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:11pt'>_______________________________________________<BR>
users mailing list<BR>
<a href="users@open-mpi.org">users@open-mpi.org</a><BR>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><BR>
</SPAN></FONT></BLOCKQUOTE><FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:11pt'><BR>
_______________________________________________<BR>
users mailing list<BR>
<a href="users@open-mpi.org">users@open-mpi.org</a><BR>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><BR>
</SPAN></FONT></BLOCKQUOTE><FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:11pt'><BR>
<BR>
<HR ALIGN=CENTER SIZE="3" WIDTH="95%"></SPAN></FONT><FONT SIZE="2"><FONT FACE="Consolas, Courier New, Courier"><SPAN STYLE='font-size:10pt'>_______________________________________________<BR>
users mailing list<BR>
<a href="users@open-mpi.org">users@open-mpi.org</a><BR>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><BR>
</SPAN></FONT></FONT></BLOCKQUOTE>
</BODY>
</HTML>


