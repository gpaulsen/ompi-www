<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta content="text/html; charset=ISO-8859-1"
      http-equiv="Content-Type">
  </head>
  <body bgcolor="#ffffff" text="#000000">
    Do you have a stack of where exactly things are seg faulting in
    blacs_pinfo?&nbsp; <br>
    <br>
    --td<br>
    <br>
    On 1/13/2012 8:12 AM, Conn ORourke wrote:
    <blockquote
      cite="mid:1326460321.20517.YahooMailNeo@web28507.mail.ukl.yahoo.com"
      type="cite">
      <div style="color: rgb(0, 0, 0); background-color: rgb(255, 255,
        255); font-family: times new roman,new york,times,serif;
        font-size: 12pt;">
        <div>Dear Openmpi Users,</div>
        <div><br>
        </div>
        <div>I am reserving several processors with SGE upon which I
          want to run a number of openmpi jobs, all of which
          individually (and combined) use less than the reserved number
          of processors. The code I am using uses BLACS, and when
          blacs_pinfo is called I get a seg fault. If the code doesn't
          call blacs_pinfo it runs fine being submitted in this manner.
          blacs_pinfo simply returns the number of available processors,
          so I suspect this is an issue with SGE and openmpi and the
          requested node number being different to that given to mpirun.<br>
        </div>
        <div><br>
        </div>
        <div>Can anyone explain why this would happen with openmpi jobs
          using BLACS&nbsp; on the SGE? And suggest maybe a way around it?<br>
        </div>
        <div><br>
        </div>
        <div>Many thanks<br>
        </div>
        <div>Conn<br>
        </div>
        <div style="font-weight: bold; color: rgb(0, 0, 191);"><br>
        </div>
        <div style="font-weight: bold; color: rgb(0, 0, 191);">example
          submission script:</div>
        <pre class="lang-bsh prettyprint"><code><span class="com">#!/bin/bash -f -l</span><span class="pln">
</span><span class="com">#$ -V </span><span class="pln">
</span><span class="com">#$ -N test </span><span class="pln">
</span><span class="com">#$ -S /bin/bash</span><span class="pln">
</span><span class="com">#$ -cwd</span><span class="pln">
</span><span class="com">#$ -l vf=1800M</span><span class="pln">
</span><span class="com">#$ -pe ib-ompi 12 </span><span class="pln">
</span><span class="com">#$ -q infiniband.q</span><span class="pln">


&nbsp; &nbsp; BIN</span><span class="pun">=~/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">program
&nbsp; &nbsp; </span><span class="kwd">for</span><span class="pln"> i </span><span class="kwd">in</span><span class="pln"> XPOL</span><span class="pun">,</span><span class="pln">YPOL</span><span class="pun">,</span><span class="pln">ZPOL</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">do</span><span class="pln">
&nbsp; &nbsp; &nbsp; &nbsp;mkdir $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="lit">4ZP</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp; &nbsp; &nbsp;mkdir $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="lit">4ZP</span><span class="pun">/</span><span class="pln">$i</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp; &nbsp; &nbsp;cp </span><span class="pun">./</span><span class="lit">4ZP</span><span class="pun">/</span><span class="pln">$i</span><span class="pun">/*</span><span class="pln"> $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="lit">4ZP</span><span class="pun">/</span><span class="pln">$i</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp; </span><span class="kwd">done</span><span class="pln">

&nbsp; &nbsp; cd $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="lit">4ZP</span><span class="pun">/</span><span class="pln">XPOL</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp; mpirun </span><span class="pun">-</span><span class="pln">np </span><span class="lit">4</span><span class="pln"> </span><span class="pun">-</span><span class="pln">machinefile $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="pln">machines $BIN </span><span class="pun">&gt;</span><span class="pln"> output </span><span class="pun">&amp;</span><span class="pln">
&nbsp; &nbsp; cd $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="lit">4ZP</span><span class="pun">/</span><span class="pln">YPOL</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp; mpirun </span><span class="pun">-</span><span class="pln">np </span><span class="lit">4</span><span class="pln"> </span><span class="pun">-</span><span class="pln">machinefile $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="pln">machines $BIN </span><span class="pun">&gt;</span><span class="pln"> output </span><span class="pun">&amp;</span><span class="pln">
&nbsp; &nbsp; cd $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="lit">4ZP</span><span class="pun">/</span><span class="pln">ZPOL</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp; mpirun </span><span class="pun">-</span><span class="pln">np </span><span class="lit">4</span><span class="pln"> </span><span class="pun">-</span><span class="pln">machinefile $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="pln">machines $BIN </span><span class="pun">&gt;</span><span class="pln"> output </span><span class="pun">;</span><span class="pln">

&nbsp; &nbsp; </span><span class="kwd">for</span><span class="pln"> i </span><span class="kwd">in</span><span class="pln"> &nbsp;XPOL YPOL ZPOL &nbsp;</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">do</span><span class="pln">
&nbsp; &nbsp; &nbsp;cp $</span><span class="pun">{</span><span class="pln">TMPDIR</span><span class="pun">}/</span><span class="lit">4ZP</span><span class="pun">/</span><span class="pln">$i</span><span class="pun">/*</span><span class="pln"> $</span><span class="pun">{</span><span class="pln">HOME</span><span class="pun">}/</span><span class="lit">4ZP</span><span class="pun">/</span><span class="pln">$i</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp; </span><span class="kwd">done</span><span class="pln">


<span style="color: rgb(0, 0, 191);">blacs_pinfo.c:</span>
</span></code><code><span class="com">#include "Bdef.h"</span><span class="pln">

</span><span class="com">#if (INTFACE == C_CALL)</span><span class="pln">
void </span><span class="typ">Cblacs_pinfo</span><span class="pun">(</span><span class="pln">int </span><span class="pun">*</span><span class="pln">mypnum</span><span class="pun">,</span><span class="pln"> int </span><span class="pun">*</span><span class="pln">nprocs</span><span class="pun">)</span><span class="pln">
</span><span class="com">#else</span><span class="pln">
F_VOID_FUNC blacs_pinfo_</span><span class="pun">(</span><span class="pln">int </span><span class="pun">*</span><span class="pln">mypnum</span><span class="pun">,</span><span class="pln"> int </span><span class="pun">*</span><span class="pln">nprocs</span><span class="pun">)</span><span class="pln">
</span><span class="com">#endif</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
&nbsp; &nbsp;int ierr</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp;extern int BI_Iam</span><span class="pun">,</span><span class="pln"> BI_Np</span><span class="pun">;</span><span class="pln">

</span><span class="pun">/*</span><span class="pln">
&nbsp;</span><span class="pun">*</span><span class="pln"> </span><span class="typ">If</span><span class="pln"> this is our first call</span><span class="pun">,</span><span class="pln"> will need to </span><span class="kwd">set</span><span class="pln"> up some stuff
&nbsp;</span><span class="pun">*/</span><span class="pln">
&nbsp; &nbsp;</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">BI_F77_MPI_COMM_WORLD </span><span class="pun">==</span><span class="pln"> NULL</span><span class="pun">)</span><span class="pln">
&nbsp; &nbsp;</span><span class="pun">{</span><span class="pln">
</span><span class="pun">/*</span><span class="pln">
&nbsp;</span><span class="pun">*</span><span class="pln"> &nbsp; &nbsp;</span><span class="typ">The</span><span class="pln"> BLACS always call f77</span><span class="str">'s mpi_init. &nbsp;If the user is using C, he should
&nbsp;* &nbsp; &nbsp;explicitly call MPI_Init . . .
&nbsp;*/
&nbsp; &nbsp; &nbsp; MPI_Initialized(nprocs);
#ifdef MainInF77
&nbsp; &nbsp; &nbsp; if (!(*nprocs)) bi_f77_init_();
#else
&nbsp; &nbsp; &nbsp; if (!(*nprocs))
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;BI_BlacsErr(-1, -1, __FILE__,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "Users with C main programs must explicitly call MPI_Init");
#endif
&nbsp; &nbsp; &nbsp; BI_F77_MPI_COMM_WORLD = (int *) malloc(sizeof(int));
#ifdef UseF77Mpi
&nbsp; &nbsp; &nbsp; BI_F77_MPI_CONSTANTS = (int *)
 malloc(23*sizeof(int));
&nbsp; &nbsp; &nbsp; ierr = 1;
&nbsp; &nbsp; &nbsp; bi_f77_get_constants_(BI_F77_MPI_COMM_WORLD, &amp;ierr, BI_F77_MPI_CONSTANTS);
#else
&nbsp; &nbsp; &nbsp; ierr = 0;
&nbsp; &nbsp; &nbsp; bi_f77_get_constants_(BI_F77_MPI_COMM_WORLD, &amp;ierr, nprocs);
#endif
&nbsp; &nbsp; &nbsp; BI_MPI_Comm_size(BI_MPI_COMM_WORLD, &amp;BI_Np, ierr);
&nbsp; &nbsp; &nbsp; BI_MPI_Comm_rank(BI_MPI_COMM_WORLD, &amp;BI_Iam, ierr);
&nbsp; &nbsp;}
&nbsp; &nbsp;*mypnum = BI_Iam;
&nbsp; &nbsp;*nprocs = BI_Np;
}</span></code>
</pre>
        <span id="btn-forecolor" class="btn left lg menu"
          data-action="menu"></span></div>
      <pre wrap="">
<fieldset class="mimeAttachmentHeader"></fieldset>
_______________________________________________
users mailing list
<a class="moz-txt-link-abbreviated" href="mailto:users@open-mpi.org">users@open-mpi.org</a>
<a class="moz-txt-link-freetext" href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a></pre>
    </blockquote>
    <br>
    <div class="moz-signature">-- <br>
      <meta content="text/html; charset=ISO-8859-1"
        http-equiv="Content-Type">
      <div class="moz-signature">
        <meta http-equiv="content-type" content="text/html;
          charset=ISO-8859-1">
        <title></title>
        <img moz-do-not-send="false"
          src="cid:part1.02050905.00090605@oracle.com" alt="Oracle"><br>
        <div class="moz-signature">
          <div class="moz-signature">
            <div class="moz-signature">
              <div class="moz-signature">Terry D. Dontje | Principal
                Software Engineer<br>
                <div class="moz-signature"><font color="#666666"
                    face="Verdana" size="2">Developer
                    Tools
                    Engineering | +1.781.442.2631<br>
                  </font>
                  <font color="#ff0000" face="Verdana" size="2">Oracle
                  </font><font color="#666666" face="Verdana" size="2"><b>
                      - Performance
                      Technologies</b></font><br>
                  <font color="#666666" face="Verdana" size="2">
                    95 Network Drive, Burlington, MA 01803<br>
                    Email <a moz-do-not-send="true"
                      href="mailto:terry.dontje@oracle.com">terry.dontje@oracle.com</a><br>
                  </font><br>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <br>
      <br>
    </div>
  </body>
</html>

