<div dir="ltr">&quot;MPI-3.0 (and later) compliant Fortran bindings are not only a property of the MPI library itself, but rather a property of an MPI library together with the Fortran compiler suite for which it is compiled.&quot; (MPI 3.1 Section 17.1.7).<div><br></div><div>Of course, implementations can provide support in excess of the minimum required by the standard, provided that support remains compliant with the standard.<br><div><div><br></div><div>Jeff <br><br>On Mon, Feb 8, 2016 at 9:21 PM, George Bosilca &lt;<a href="mailto:bosilca@icl.utk.edu">bosilca@icl.utk.edu</a>&gt; wrote:<br>&gt;<br>&gt; Sorry to spoil the fun here, but this proposal is a very bad idea. It is mandated by the MPI standard, page 25 line 27 (v3.1), not only to provide all predefined datatypes, but to have support for them. There are optional datatypes, but MPI_DOUBLE_PRECISION (which is explicitly the base predefined datatype for MPI_2DOUBLE_PRECISION) is not one of them.<br>&gt;<br>&gt; Now we can argue if DOUBLE PRECISION in Fortran is a double in C. As these languages are interoperable, and there is no explicit conversion function, it is safe to assume this is the case. Thus, is seems to me absolutely legal to provide the MPI-required support for DOUBLE PRECISION despite the fact that Fortran support is not enabled.<br>&gt;<br>&gt; Now taking a closer look at the op, I see nothing in the standard the would require to provide the op if the corresponding language is not supported. While it could be nice (as a convenience for the users and also because there is no technical reason not to) to enable the loc op, on non native datatypes, this is not mandatory. Thus, the current behavior exposed by Open MPI is acceptable from the standard perspective.<br>&gt;<br>&gt;   George.<br>&gt;<br>&gt;<br>&gt; On Mon, Feb 8, 2016 at 4:35 PM, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Awesome; thanks Gilles.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; &gt; On Feb 8, 2016, at 9:29 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@gmail.com">gilles.gouaillardet@gmail.com</a>&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; ok, will do<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Cheers,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Gilles<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; On Monday, February 8, 2016, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>&gt;&gt; &gt; I like your suggestion better -- if we can somehow report during the compile/link that the reason for the error is because Open MPI was not compiled with Fortran support, that would definitely be preferable.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; FWIW: my suggestion was because I wanted to convey the *reason* for the error (i.e., that OMPI has no Fortran support), and a pragma-based solution didn&#39;t occur to me.  I didn&#39;t want to follow Gilles&#39; suggestion of just removing the symbols, because that will lead to other confusion (e.g., &quot;Hey, Open MPI is not compliant because it doesn&#39;t have Fortran datatypes available in C!&quot;).<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Gilles: do you want to poke around and see if you can make any of Jeff&#39;s suggestions work out nicely?  (i.e., give some kind of compile/link error that states that Open MPI was not built with Fortran support?)<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; On Feb 8, 2016, at 8:55 AM, Jeff Hammond &lt;<a href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a>&gt; wrote:<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; Waiting until runtime to issue this error is a terrible idea, because then the PETSc team (among others) will disparage you for allowing a user to successfully build against an unusable library.  They are on-record numerous times in the past as to the evils of e.g. no-op symbols in MPI or other runtime libraries, since this means that compile- and link-based tests pass, even though nothing good will happen when the user employs them in an application.<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; The right thing to do is what Gilles proposed: do not define the types in mpi.h so that it is impossible to compile C code with Fortran datatypes, if Fortran datatypes are not supported.  There are more and less effective ways to do this, in terms of letting the user know what is happening.  For example, you can just not define them, which might confuse novices who don&#39;t know how to read error messages (HPC users are frequent offenders).<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; You could use e.g.:<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; #define MPI_DOUBLE_PRECISION choke me No Fortran support when library was compiled!<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; Unfortunately, Clang colorized output emphasizes the wrong problem here, and ICC doesn&#39;t even echo the message at all in its error message.  GCC issues the same error four times, and makes it relatively hard to miss the message.<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; If the following GCC extension is supported, along with C99/C++11, you could do this:<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; #define MPI_DOUBLE_PRECISION _Pragma(&quot;GCC error \&quot;MPI was not compiled with Fortran support\&quot;&quot;)<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; For the _functions_ that require Fortran support, you can use e.g. __attribute__((error(&quot;no Fortran&quot;))) on the function declaration, although neither ICC nor Clang support this, and it ends up throwing two error messages when compiled (only one - the right one - when only preprocessed), which might confuse the same folks that it is trying to help.<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; Best,<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; Jeff<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; On Mon, Feb 8, 2016 at 5:14 AM, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>&gt;&gt; &gt; &gt; The issue at hand is trying to help the user figure out that they have an open MPI built without fortran support.<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; Perhaps we should improve the error reporting at run time to display something about the fact that you used a fortran data type but have an OMPI that was compiled without fortran support.<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; Sent from my phone. No type good.<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; On Feb 8, 2016, at 4:00 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@gmail.com">gilles.gouaillardet@gmail.com</a>&gt; wrote:<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt;&gt; That being said, should we remove these fortran types from include files and libs when ompi is configure&#39;d without fortran support ?<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; Cheers,<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; Gilles<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; Jeff Hammond &lt;<a href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a>&gt; wrote:<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; &gt; BTW: is there a reason you don&#39;t want to just use the C datatypes?  The fundamental output of the index is an integer value -- casting it to a float of some flavor doesn&#39;t fundamentally change its value.<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; The code in question is not mine.  I have suggested to the developers that they should use the correct C types.  The reason I became aware of this issue is that one of my colleagues compiled and ran this code on a system where OpenMPI was built without Fortran support and the code started failing with errors from MPI which were not seen on other systems.<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; If you use an MPI library compiled without Fortran support, you should expect precisely nothing related to Fortran to work.  You might get more than this because the universe is being nice to you, but you should treat it as serendipity when something works, not a bug when something doesn&#39;t.<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; Jeff<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; --<br>&gt;&gt; &gt; &gt;&gt; Jeff Hammond<br>&gt;&gt; &gt; &gt;&gt; <a href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a><br>&gt;&gt; &gt; &gt;&gt; <a href="http://jeffhammond.github.io/">http://jeffhammond.github.io/</a><br>&gt;&gt; &gt; &gt;&gt; _______________________________________________<br>&gt;&gt; &gt; &gt;&gt; users mailing list<br>&gt;&gt; &gt; &gt;&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt;&gt; &gt; &gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt; &gt; &gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28459.php">http://www.open-mpi.org/community/lists/users/2016/02/28459.php</a><br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; _______________________________________________<br>&gt;&gt; &gt; &gt; users mailing list<br>&gt;&gt; &gt; &gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt;&gt; &gt; &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt; &gt; &gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28460.php">http://www.open-mpi.org/community/lists/users/2016/02/28460.php</a><br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; --<br>&gt;&gt; &gt; &gt; Jeff Hammond<br>&gt;&gt; &gt; &gt; <a href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a><br>&gt;&gt; &gt; &gt; <a href="http://jeffhammond.github.io/">http://jeffhammond.github.io/</a><br>&gt;&gt; &gt; &gt; _______________________________________________<br>&gt;&gt; &gt; &gt; users mailing list<br>&gt;&gt; &gt; &gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt;&gt; &gt; &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt; &gt; &gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28461.php">http://www.open-mpi.org/community/lists/users/2016/02/28461.php</a><br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; --<br>&gt;&gt; &gt; Jeff Squyres<br>&gt;&gt; &gt; <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>&gt;&gt; &gt; For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; users mailing list<br>&gt;&gt; &gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt;&gt; &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt; &gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28463.php">http://www.open-mpi.org/community/lists/users/2016/02/28463.php</a><br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; users mailing list<br>&gt;&gt; &gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt;&gt; &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt; &gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28465.php">http://www.open-mpi.org/community/lists/users/2016/02/28465.php</a><br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; Jeff Squyres<br>&gt;&gt; <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>&gt;&gt; For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; users mailing list<br>&gt;&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28466.php">http://www.open-mpi.org/community/lists/users/2016/02/28466.php</a><br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/02/28469.php">http://www.open-mpi.org/community/lists/users/2016/02/28469.php</a><br><br><br><br><br>--<br>Jeff Hammond<br><a href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a><br><a href="http://jeffhammond.github.io/">http://jeffhammond.github.io/</a><br><div class="gmail_extra">
</div></div></div></div></div>

