--- atlas3_ompi_info.txt
+++ ppc64_ompi_info.txt
@@ -1,4 +1,4 @@
-                 Package: Open MPI root@atlas3.asicdesigners.com Distribution
+                 Package: Open MPI root@ppc64-rhel71.asicdesigners.com Distribution
                 Open MPI: 1.8.4
   Open MPI repo revision: v1.8.3-330-g0344f04
    Open MPI release date: Dec 19, 2014
@@ -28,14 +28,14 @@
               Pkgdatadir: /usr/mpi/gcc/openmpi-1.8.4/share/openmpi
                Pkglibdir: /usr/mpi/gcc/openmpi-1.8.4/lib64/openmpi
            Pkgincludedir: /usr/mpi/gcc/openmpi-1.8.4/include/openmpi
- Configured architecture: x86_64-unknown-linux-gnu
-          Configure host: atlas3.asicdesigners.com
+ Configured architecture: powerpc64-unknown-linux-gnu
+          Configure host: ppc64-rhel71.asicdesigners.com
            Configured by: root
-           Configured on: Tue May 19 01:42:02 PDT 2015
-          Configure host: atlas3.asicdesigners.com
+           Configured on: Tue May 19 01:41:13 PDT 2015
+          Configure host: ppc64-rhel71.asicdesigners.com
                 Built by: root
-                Built on: Tue May 19 01:46:01 PDT 2015
-              Built host: atlas3.asicdesigners.com
+                Built on: Tue May 19 01:47:22 PDT 2015
+              Built host: ppc64-rhel71.asicdesigners.com
               C bindings: yes
             C++ bindings: yes
              Fort mpif.h: yes (all)
@@ -49,7 +49,7 @@
               C compiler: gcc
      C compiler absolute: /usr/bin/gcc
   C compiler family name: GNU
-      C compiler version: 4.4.7
+      C compiler version: 4.8.3
              C char size: 1
              C bool size: 1
             C short size: 2
@@ -71,7 +71,7 @@
    Fort 08 assumed shape: no
       Fort optional args: no
           Fort INTERFACE: yes
-    Fort ISO_FORTRAN_ENV: no
+    Fort ISO_FORTRAN_ENV: yes
        Fort STORAGE_SIZE: no
       Fort BIND(C) (all): no
       Fort ISO_C_BINDING: yes
@@ -96,10 +96,10 @@
      Fort have integer16: no
          Fort have real4: yes
          Fort have real8: yes
-        Fort have real16: no
+        Fort have real16: yes
       Fort have complex8: yes
      Fort have complex16: yes
-     Fort have complex32: no
+     Fort have complex32: yes
       Fort integer1 size: 1
       Fort integer2 size: 2
       Fort integer4 size: 4
@@ -108,13 +108,13 @@
           Fort real size: 4
          Fort real4 size: 4
          Fort real8 size: 8
-        Fort real16 size: -1
+        Fort real16 size: 16
       Fort dbl prec size: 8
           Fort cplx size: 8
       Fort dbl cplx size: 16
          Fort cplx8 size: 8
         Fort cplx16 size: 16
-        Fort cplx32 size: -1
+        Fort cplx32 size: 32
       Fort integer align: 4
      Fort integer1 align: 1
      Fort integer2 align: 2
@@ -124,13 +124,13 @@
          Fort real align: 4
         Fort real4 align: 4
         Fort real8 align: 8
-       Fort real16 align: -1
+       Fort real16 align: 16
      Fort dbl prec align: 8
          Fort cplx align: 4
      Fort dbl cplx align: 8
         Fort cplx8 align: 4
        Fort cplx16 align: 8
-       Fort cplx32 align: -1
+       Fort cplx32 align: 16
              C profiling: yes
            C++ profiling: yes
    Fort mpif.h profiling: yes
@@ -148,7 +148,7 @@
   Wrapper extra CXXFLAGS: -pthread
    Wrapper extra FCFLAGS: -pthread
    Wrapper extra LDFLAGS: -Wl,-rpath -Wl,@{libdir} -Wl,--enable-new-dtags
-      Wrapper extra LIBS: -lm -lnuma -ldl -lutil
+      Wrapper extra LIBS: -lm -ldl -lutil
   Internal debug support: no
   MPI interface warnings: yes
      MPI parameter check: runtime
@@ -896,7 +896,7 @@
                 MCA bcol: parameter "bcol_basesmuma_k_nomial_radix" (current value: "3", data source: default, level: 9 dev/all, type: int)
                 MCA bcol: parameter "bcol_basesmuma_num_to_probe" (current value: "10", data source: default, level: 9 dev/all, type: int)
                 MCA bcol: parameter "bcol_basesmuma_scatter_kary_radix" (current value: "4", data source: default, level: 9 dev/all, type: int)
-                MCA bcol: parameter "bcol_basesmuma_min_frag_size" (current value: "4096", data source: default, level: 9 dev/all, type: int)
+                MCA bcol: parameter "bcol_basesmuma_min_frag_size" (current value: "65536", data source: default, level: 9 dev/all, type: int)
                 MCA bcol: parameter "bcol_basesmuma_max_frag_size" (current value: "-1", data source: default, level: 9 dev/all, type: int)
                 MCA bcol: parameter "bcol_basesmuma_can_use_user_buffers" (current value: "false", data source: default, level: 9 dev/all, type: bool)
                           Valid values: 0: f|false|disabled, 1: t|true|enabled
@@ -919,7 +919,7 @@
                           Algoritm selection for bcast large messages known root(1 - Binomial scatther-gather, 2 - N-array scather, K-nomial gather)
                 MCA bcol: parameter "bcol_ptpcoll_barrier_alg" (current value: "1", data source: default, level: 9 dev/all, type: int)
                           Algoritm selection for Barrier(1 - Recursive doubling, 2 - Recursive K-ing)
-                MCA bcol: parameter "bcol_ptpcoll_min_frag_size" (current value: "4096", data source: default, level: 9 dev/all, type: int)
+                MCA bcol: parameter "bcol_ptpcoll_min_frag_size" (current value: "65536", data source: default, level: 9 dev/all, type: int)
                           Minimum fragment size
                 MCA bcol: parameter "bcol_ptpcoll_max_frag_size" (current value: "-1", data source: default, level: 9 dev/all, type: int)
                           Maximum fragment size
@@ -1212,59 +1212,6 @@
                  MCA btl: parameter "btl_tcp_disable_family" (current value: "0", data source: default, level: 2 user/detail, type: int)
                  MCA btl: parameter "btl_tcp_if_seq" (current value: "", data source: default, level: 9 dev/all, type: string)
                           If specified, a comma-delimited list of TCP interfaces.  Interfaces will be assigned, one to each MPI process, in a round-robin fashion on each server.  For example, if the list is "eth0,eth1" and four MPI processes are run on a single server, then local ranks 0 and 2 will use eth0 and local ranks 1 and 3 will use eth1.
-                 MCA btl: parameter "btl_usnic_max_btls" (current value: "0", data source: default, level: 2 user/detail, type: int)
-                          Maximum number of usNICs to use (default: 0 = as many as are available)
-                 MCA btl: parameter "btl_usnic_if_include" (current value: "", data source: default, level: 1 user/basic, type: string)
-                          Comma-delimited list of devices/networks to be used (e.g. "usnic_0,10.10.0.0/16"; empty value means to use all available usNICs).  Mutually exclusive with btl_usnic_if_exclude.
-                 MCA btl: parameter "btl_usnic_if_exclude" (current value: "", data source: default, level: 1 user/basic, type: string)
-                          Comma-delimited list of devices/networks to be excluded (empty value means to not exclude any usNICs).  Mutually exclusive with btl_usnic_if_include.
-                 MCA btl: parameter "btl_usnic_stats" (current value: "0", data source: default, level: 4 tuner/basic, type: int)
-                          A non-negative integer specifying the frequency at which each USNIC BTL will output statistics (default: 0 seconds, meaning that statistics are disabled)
-                 MCA btl: parameter "btl_usnic_stats_relative" (current value: "0", data source: default, level: 4 tuner/basic, type: int)
-                          If stats are enabled, output relative stats between the timestemps (vs. cumulative stats since the beginning of the job) (default: 0 -- i.e., absolute)
-                 MCA btl: parameter "btl_usnic_mpool" (current value: "grdma", data source: default, level: 5 tuner/detail, type: string)
-                          Name of the memory pool to be used
-                 MCA btl: parameter "btl_usnic_want_numa_device_assignment" (current value: "1", data source: default, level: 5 tuner/detail, type: int)
-                          If 1, use only Cisco VIC ports thare are a minimum NUMA distance from the MPI process for short messages.  If 0, use all available Cisco VIC ports for short messages.  This parameter is meaningless (and ignored) unless MPI proceses are bound to processor cores.  Defaults to 1 if NUMA support is included in Open MPI; -1 otherwise.
-                 MCA btl: parameter "btl_usnic_sd_num" (current value: "-1", data source: default, level: 5 tuner/detail, type: int)
-                          Maximum send descriptors to post (-1 = pre-set defaults; depends on number and type of devices available)
-                 MCA btl: parameter "btl_usnic_rd_num" (current value: "-1", data source: default, level: 5 tuner/detail, type: int)
-                          Number of pre-posted receive buffers (-1 = pre-set defaults; depends on number and type of devices available)
-                 MCA btl: parameter "btl_usnic_prio_sd_num" (current value: "-1", data source: default, level: 5 tuner/detail, type: int)
-                          Maximum priority send descriptors to post (-1 = pre-set defaults; depends on number and type of devices available)
-                 MCA btl: parameter "btl_usnic_prio_rd_num" (current value: "-1", data source: default, level: 5 tuner/detail, type: int)
-                          Number of pre-posted priority receive buffers (-1 = pre-set defaults; depends on number and type of devices available)
-                 MCA btl: parameter "btl_usnic_cq_num" (current value: "-1", data source: default, level: 5 tuner/detail, type: int)
-                          Number of completion queue entries (-1 = pre-set defaults; depends on number and type of devices available; will error if (sd_num+rd_num)>cq_num)
-                 MCA btl: parameter "btl_usnic_retrans_timeout" (current value: "1000", data source: default, level: 5 tuner/detail, type: int)
-                          Number of microseconds before retransmitting a frame
-                 MCA btl: parameter "btl_usnic_priority_limit" (current value: "0", data source: default, level: 5 tuner/detail, type: int)
-                          Max size of "priority" messages (0 = use pre-set defaults; depends on number and type of devices available)
-                 MCA btl: parameter "btl_usnic_eager_limit" (current value: "0", data source: default, level: 5 tuner/detail, type: int)
-                          Eager send limit (0 = use pre-set defaults; depends on number and type of devices available)
-                 MCA btl: parameter "btl_usnic_rndv_eager_limit" (current value: "0", data source: default, level: 5 tuner/detail, type: int)
-                          Eager rendezvous limit (0 = use pre-set defaults; depends on number and type of devices available)
-                 MCA btl: parameter "btl_usnic_pack_lazy_threshold" (current value: "16384", data source: default, level: 5 tuner/detail, type: int)
-                          Convertor packing on-the-fly threshold (-1 = always pack eagerly, 0 = always pack lazily, otherwise will pack on the fly if fragment size is > limit)
-                 MCA btl: parameter "btl_usnic_arp_timeout" (current value: "10", data source: default, level: 6 tuner/all, type: int)
-                          Timeout, in seconds, for the maximum delay between ARP replies when using the usNIC/UDP transport (ignored when using the usNIC/L2 transport, must be >=1)
-                 MCA btl: parameter "btl_usnic_max_short_packets" (current value: "25", data source: default, level: 5 tuner/detail, type: int)
-                          Number of abnormally-short packets received before outputting a warning (0 = never show the warning)
-                 MCA btl: parameter "btl_usnic_show_route_failures" (current value: "true", data source: default, level: 3 user/all, type: bool)
-                          Whether to show a warning when route failures between MPI process peers are detected (default = 1, enabled; 0 = disabled)
-                          Valid values: 0: f|false|disabled, 1: t|true|enabled
-                 MCA btl: parameter "btl_usnic_connectivity_check" (current value: "true", data source: default, level: 3 user/all, type: bool)
-                          Whether to enable the usNIC connectivity check upon first send (default = 1, enabled; 0 = disabled)
-                          Valid values: 0: f|false|disabled, 1: t|true|enabled
-                 MCA btl: parameter "btl_usnic_connectivity_ack_timeout" (current value: "250", data source: default, level: 3 user/all, type: int)
-                          Timeout, in milliseconds, while waiting for an ACK while verification connectivity between usNIC devices.  If 0, the connectivity check is disabled (must be >=0).
-                 MCA btl: parameter "btl_usnic_connectivity_error_num_retries" (current value: "40", data source: default, level: 3 user/all, type: int)
-                          Number of times to retry usNIC connectivity verification before aborting the MPI job (must be >0).
-                 MCA btl: parameter "btl_usnic_connectivity_map" (current value: "", data source: default, level: 3 user/all, type: string)
-                          Display the usNIC connectivity map.  If this parameter is specified, it is the filename prefix emitted by each MPI process.  The full filename emitted by each process is of the form: <prefix>-<hostname>.<pid>.<jobid>.<MCW rank>.txt.
-                 MCA btl: parameter "btl_usnic_warn_nonexistent_if" (current value: "true", data source: default, level: 9 dev/all, type: bool, synonym of: ompi_common_verbs_warn_nonexistent_if)
-                          Warn if non-existent devices and/or ports are specified in device include/exclude MCA parameters (0 = do not warn; any other value = warn)
-                          Valid values: 0: f|false|disabled, 1: t|true|enabled
                  MCA btl: parameter "btl_vader_free_list_num" (current value: "8", data source: default, level: 9 dev/all, type: int)
                           Initial number of fragments to allocate for shared memory communication.
                  MCA btl: parameter "btl_vader_free_list_max" (current value: "4096", data source: default, level: 9 dev/all, type: int)
@@ -1273,7 +1220,7 @@
                           Number of fragments to create on each allocation.
                  MCA btl: parameter "btl_vader_memcpy_limit" (current value: "524288", data source: default, level: 5 tuner/detail, type: int)
                           Message size to switch from using memove to memcpy. The relative speed of these two routines can vary by size.
-                 MCA btl: parameter "btl_vader_segment_size" (current value: "4194304", data source: default, level: 5 tuner/detail, type: int)
+                 MCA btl: parameter "btl_vader_segment_size" (current value: "0", data source: default, level: 5 tuner/detail, type: int)
                           Maximum size of all shared memory buffers (default: 4M)
                  MCA btl: parameter "btl_vader_max_inline_send" (current value: "256", data source: default, level: 5 tuner/detail, type: unsigned)
                           Maximum size to transfer using copy-in copy-out semantics
