Thanks, Ralph. Yes, I have taking that into account. The problem is not to compare two proc with one proc, but the &quot;multi-threading effect&quot;. Multi-threading is good on the first machine for one and two proc, but on the second machine, it disappears for two proc.<div>
<br></div><div>To narrow down the problem, I reinstalled the operating system on the second machine from SUSE 11(kernel 2.6.32.12, gcc 4.3.4) to Red Hat 5.4 (kernel 2.6.18, gcc 4.1.2) which is similar to the first machine (Cent OS 5.3, kernel 2.6.18, gcc 4.1.2). Then the problem disappears. So the problem must lies somewhere in OS kernel or GCC version. Any suggestions? Thanks.</div>
<div><br></div><div>--</div><div>Huiwei Lv<br><div><br><div class="gmail_quote">On Tue, Oct 25, 2011 at 3:11 PM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;"><div style="word-wrap:break-word">Okay - thanks for testing it.<div><br></div><div>Of course, one obvious difference is that there isn&#39;t any communication when you run only one proc, but there is when you run two or more, assuming your application has MPI send/recv (or calls collective and other functions that communicate) calls in it. Communication to yourself is very fast as no bits actually move - sending messages to another proc is considerably slower.</div>
<div><br></div><div>Are you taking that into account?</div><div><br></div><div><br><div><div><div></div><div class="h5"><div>On Oct 24, 2011, at 8:47 PM, 吕慧伟 wrote:</div><br></div></div><blockquote type="cite"><div><div></div>
<div class="h5">No. There&#39;s a difference between &quot;mpirun -np 1 ./my_hybrid_app...&quot; and &quot;mpirun -np 2 ./...&quot;. <div>
<br></div><div>Run &quot;mpirun -np 1 ./my_hybrid_app...&quot; will increase the performance with more number of threads, but run &quot;mpirun -np 2 ./...&quot; decrease the performance.</div>
<div><br></div><div>--</div><div>Huiwei Lv<br><br><div class="gmail_quote">On Tue, Oct 25, 2011 at 12:00 AM,  <span dir="ltr">&lt;<a href="mailto:users-request@open-mpi.org" target="_blank">users-request@open-mpi.org</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><br>
Date: Mon, 24 Oct 2011 07:14:21 -0600<br>
From: Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;<br>
Subject: Re: [OMPI users] Hybrid MPI/Pthreads program behaves<br>
        differently on  two different machines with same hardware<br>
To: Open MPI Users &lt;<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a>&gt;<br>
Message-ID: &lt;<a href="mailto:42C53D0B-1586-4001-B9D2-D77AF0033961@open-mpi.org" target="_blank">42C53D0B-1586-4001-B9D2-D77AF0033961@open-mpi.org</a>&gt;<br>
Content-Type: text/plain; charset=&quot;utf-8&quot;<br>
<br>
Does the difference persist if you run the single process using mpirun? In other words, does &quot;mpirun -np 1 ./my_hybrid_app...&quot; behave the same as &quot;mpirun -np 2 ./...&quot;?<br>
<br>
There is a slight difference in the way procs start when run as singletons. It shouldn&#39;t make a difference here, but worth testing.<br>
<br>
On Oct 24, 2011, at 12:37 AM, ??? wrote:<br>
<br>
&gt; Dear List,<br>
&gt;<br>
&gt; I have a hybrid MPI/Pthreads program named &quot;my_hybrid_app&quot;, this program is memory-intensive and take advantage of multi-threading to improve memory throughput. I run &quot;my_hybrid_app&quot; on two machines, which have same hardware configuration but different OS and GCC. The problem is: when I run &quot;my_hybrid_app&quot; with one process, two machines behaves the same: the more number of threads, the better the performance; however, when I run &quot;my_hybrid_app&quot; with two or more processes. The first machine still increase performance with more threads, the second machine degrades in performance with more threads.<br>


&gt;<br>
&gt; Since running &quot;my_hybrid_app&quot; with one process behaves correctly, I suspect my linking to MPI library has some problem. Would somebody point me in the right direction? Thanks in advance.<br>
&gt;<br>
&gt; Attached are the commandline used, my machine informantion and link informantion.<br>
&gt; p.s. 1: Commandline<br>
&gt; single process: ./my_hybrid_app &lt;number of threads&gt;<br>
&gt; multiple process: mpirun -np 2 ./my_hybrid_app &lt;number of threads&gt;<br>
&gt;<br>
&gt; p.s. 2: Machine Informantion<br>
&gt; The first machine is CentOS 5.3 with GCC 4.1.2:<br>
&gt; Target: x86_64-redhat-linux<br>
&gt; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-libgcj-multifile --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --enable-plugin --with-java-home=/usr/lib/jvm/java-1.4.2-gcj-1.4.2.0/jre --with-cpu=generic --host=x86_64-redhat-linux<br>


&gt; Thread model: posix<br>
&gt; gcc version 4.1.2 20080704 (Red Hat 4.1.2-44)<br>
&gt; The second machine is SUSE Enterprise Server 11 with GCC 4.3.4:<br>
&gt; Target: x86_64-suse-linux<br>
&gt; Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,java,ada --enable-checking=release --with-gxx-include-dir=/usr/include/c++/4.3 --enable-ssp --disable-libssp --with-bugurl=<a href="http://bugs.opensuse.org/" target="_blank">http://bugs.opensuse.org/</a> --with-pkgversion=&#39;SUSE Linux&#39; --disable-libgcj --disable-libmudflap --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --program-suffix=-4.3 --enable-linux-futex --without-system-libunwind --with-cpu=generic --build=x86_64-suse-linux<br>


&gt; Thread model: posix<br>
&gt; gcc version 4.3.4 [gcc-4_3-branch revision 152973] (SUSE Linux)<br>
&gt;<br>
&gt; p.s. 3: ldd Informantion<br>
&gt; The first machine:<br>
&gt; $ ldd my_hybrid_app<br>
&gt;         libm.so.6 =&gt; /lib64/libm.so.6 (0x000000358d400000)<br>
&gt;         libmpi.so.0 =&gt; /usr/local/openmpi/lib/libmpi.so.0 (0x00002af0d53a7000)<br>
&gt;         libopen-rte.so.0 =&gt; /usr/local/openmpi/lib/libopen-rte.so.0 (0x00002af0d564a000)<br>
&gt;         libopen-pal.so.0 =&gt; /usr/local/openmpi/lib/libopen-pal.so.0 (0x00002af0d5895000)<br>
&gt;         libdl.so.2 =&gt; /lib64/libdl.so.2 (0x000000358d000000)<br>
&gt;         libnsl.so.1 =&gt; /lib64/libnsl.so.1 (0x000000358f000000)<br>
&gt;         libutil.so.1 =&gt; /lib64/libutil.so.1 (0x000000359a600000)<br>
&gt;         libgomp.so.1 =&gt; /usr/lib64/libgomp.so.1 (0x00002af0d5b07000)<br>
&gt;         libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x000000358d800000)<br>
&gt;         libc.so.6 =&gt; /lib64/libc.so.6 (0x000000358cc00000)<br>
&gt;         /lib64/ld-linux-x86-64.so.2 (0x000000358c800000)<br>
&gt;         librt.so.1 =&gt; /lib64/librt.so.1 (0x000000358dc00000)<br>
&gt; The second machine:<br>
&gt; $ ldd my_hybrid_app<br>
&gt;         linux-vdso.so.1 =&gt;  (0x00007fff3eb5f000)<br>
&gt;         libmpi.so.0 =&gt; /root/opt/openmpi/lib/libmpi.so.0 (0x00007f68627a1000)<br>
&gt;         libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f686254b000)<br>
&gt;         libopen-rte.so.0 =&gt; /root/opt/openmpi/lib/libopen-rte.so.0 (0x00007f68622fc000)<br>
&gt;         libopen-pal.so.0 =&gt; /root/opt/openmpi/lib/libopen-pal.so.0 (0x00007f68620a5000)<br>
&gt;         libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f6861ea1000)<br>
&gt;         libnsl.so.1 =&gt; /lib64/libnsl.so.1 (0x00007f6861c89000)<br>
&gt;         libutil.so.1 =&gt; /lib64/libutil.so.1 (0x00007f6861a86000)<br>
&gt;         libgomp.so.1 =&gt; /usr/lib64/libgomp.so.1 (0x00007f686187d000)<br>
&gt;         libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f6861660000)<br>
&gt;         libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f6861302000)<br>
&gt;         /lib64/ld-linux-x86-64.so.2 (0x00007f6862a58000)<br>
&gt;         librt.so.1 =&gt; /lib64/librt.so.1 (0x00007f68610f9000)<br>
&gt; I installed openmpi-1.4.2 to a user directory /root/opt/openmpi and use &quot;-L/root/opt/openmpi -Wl,-rpath,/root/opt/openmpi&quot; when linking.<br>
&gt; --<br>
&gt; Huiwei Lv<br>
&gt; PhD. student at Institute of Computing Technology,<br>
&gt; Beijing, China<br>
&gt; <a href="http://asg.ict.ac.cn/lhw" target="_blank">http://asg.ict.ac.cn/lhw</a></blockquote></div></div></div></div></blockquote></div></div></div></blockquote></div>
</div></div>

