<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="Content-Type">
  <title></title>
</head>
<body bgcolor="#ffffff" text="#000000">
On 8/12/2010 3:27 PM, Ralph Castain wrote:
<blockquote cite="mid:63FF222C-CBBC-4A1C-8CC5-9A3CB35D475C@open-mpi.org"
 type="cite">Ick - talk about confusing! I suppose there must be -some-
rational reason why someone would want to do this, but I can't imagine
what it would be....
  <div><br>
  </div>
  <div>I'm no expert on compiler vs lib confusion, but some of my own
experience would say that this is a bad idea regardless of whether or
not OMPI is involved. Compiler version interoperability is usually
questionable, depending upon how far apart the rev levels are.</div>
  <div><br>
  </div>
  <div>Only answer I can offer is that you would have to try it. It
will undoubtedly be a case-by-case basis: some combinations might work,
others might fail.</div>
  <div><br>
  </div>
  <div><br>
  <div>
  <div>On Aug 12, 2010, at 3:53 PM, Michael E. Thomadakis wrote:</div>
  <br class="Apple-interchange-newline">
  <blockquote type="cite">
    <div text="#000000" bgcolor="#ffffff"> Hello OpenMPI,<br>
    <br>
we have deployed OpenMPI 1.4.1 and 1.4.2 on our Intel Nehalem cluster
using Intel compilers V 11.1.059 and 11.1.072 respectively, and one
user has the following request:<br>
    <br>
Can we build OpenMPI version say O.1 against Intel compilers version
say I.1 but&nbsp; then built an application with OpenMPI O.1 BUT then use a
DIFFERENT Intel compiler version say I.2 to built and run this MPI
application?<br>
    <br>
I suggested to him to 1) simply try to built and run the application
with O.1 but use Intel compilers version I.X whatever this X is and see
if it has any issues. <br>
    <br>
OR 2) If the above does not work, I would build OpenMPI O.1 against
Intel version I.X so he can use THIS combination for his hypothetical
application. <br>
    <br>
He insists that I build OpenMPI O.1 with some version of Intel
compilers I.Y but then at run time he would like to use <b>different</b>
Intel run time libs at will I.Z &lt;&gt; I.X. <br>
    <br>
Can you provide me with a suggestion for a sane solution to this ? <span
 class="moz-smiley-s1"><span> :-) </span></span><br>
    <br>
Best regards<br>
    <br>
Michael<br>
    </div>
  </blockquote>
  </div>
  </div>
</blockquote>
Guessing at what is meant here, if you build MPI with a given version
of Intel compilers, it ought to work when the application is built with
a similar or more recent Intel compiler, or when the run-time
LD_LIBRARY_PATH refers to a similar or newer library (within reason).
There are similar constraints on glibc version.&nbsp; "Within reason" works
over a more restricted range when C++ is involved.&nbsp; Note that the Intel
linux compilers link to the gcc and glibc libraries as well as those
which come with the compiler, and the MPI could be built with a
combination of gcc and ifort to work with icc or gcc and ifort.&nbsp;
gfortran and ifort libraries, however, are incompatible, except that
libgomp calls can be supported by libiomp5.<br>
The "rational" use I can see is that an application programmer would
likely wish to test a range of compilers without rebuilding MPI.&nbsp; Intel
documentation says there is forward compatibility testing of libraries,
at least to the extent that a build made with 10.1 would work with 11.1
libraries.<br>
The most recent Intel library compatibility break was between MKL 9 and
10.<br>
<br>
<br>
<br>
<pre class="moz-signature" cols="72">-- 
Tim Prince</pre>
</body>
</html>

