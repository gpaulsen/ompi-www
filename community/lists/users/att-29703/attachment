<div dir="ltr"><div>







<p class=""><span class="">ompi_info -h indicates that -c shows configuration options, ie configure arguments:</span></p><p class=""><span class="">$ /home/projects/x86-64-knl/openmpi/1.10.2/intel/17.0.042/bin/ompi_info -h</span></p>
<p class=""><span class="">--------------------------------------------------------------------------</span></p>
<p class=""><span class="">The ompi_info command can be used to provide detailed information on</span></p>
<p class=""><span class="">your Open MPI installation.  Syntax:</span></p>
<p class=""><span class=""></span><br></p>
<p class=""><span class="">-a|--all                 Show all configuration options and MCA parameters</span></p>
<p class=""><span class="">   -am &lt;arg0&gt;            Aggregate MCA parameter set file list</span></p>
<p class=""><span class="">   --arch                Show architecture Open MPI was compiled on</span></p>
<p class=""><span class="">-c|--config              Show configuration options</span></p></div><div><br></div><div><br></div><div>So I expect something like what mpichversion gives me, which I find incredibly useful:</div>







<p class=""><span class="">$ ~/MPICH/install-ch3-ofi-psm2/bin/mpichversion </span></p>
<p class=""><span class="">MPICH Version:    <span class="">	</span>3.2</span></p>
<p class=""><span class="">MPICH Release date:<span class="">	</span>unreleased development copy</span></p>
<p class=""><span class="">MPICH Device:    <span class="">	</span>ch3:nemesis</span></p>
<p class=""><span class="">MPICH configure: <span class="">	</span>CC=icc CXX=icpc FC=ifort F77=ifort --with-ofi=~/OFI/install-psm2 --with-device=ch3:nemesis:ofi --prefix=~/MPICH/install-ch3-ofi-psm2</span></p>
<p class=""><span class="">MPICH CC: <span class="">	</span>icc    -O2</span></p>
<p class=""><span class="">MPICH CXX: <span class="">	</span>icpc   -O2</span></p>
<p class=""><span class="">MPICH F77: <span class="">	</span>ifort   -O2</span></p>
<p class=""><span class="">MPICH FC: <span class="">	</span>ifort   -O2</span></p>
<p class=""><br></p><p class="">Unfortunately, I see nothing that is directly convertible to configure arguments in the following:</p><p class=""><span class="">$ /home/projects/x86-64-knl/openmpi/1.10.2/intel/17.0.042/bin/ompi_info -c</span></p>
<p class=""><span class="">           Configured by: XXX</span></p>
<p class=""><span class="">           Configured on: Mon Apr 18 18:47:25 EDT 2016</span></p>
<p class=""><span class="">          Configure host: XXX</span></p>
<p class=""><span class="">                Built by: XXX</span></p>
<p class=""><span class="">                Built on: Mon Apr 18 19:16:55 EDT 2016</span></p>
<p class=""><span class="">              Built host: XXX</span></p>
<p class=""><span class="">              C bindings: yes</span></p>
<p class=""><span class="">            C++ bindings: yes</span></p>
<p class=""><span class="">             Fort mpif.h: yes (all)</span></p>
<p class=""><span class="">            Fort use mpi: yes (full: ignore TKR)</span></p>
<p class=""><span class="">       Fort use mpi size: deprecated-ompi-info-value</span></p>
<p class=""><span class="">        Fort use mpi_f08: yes</span></p>
<p class=""><span class=""> Fort mpi_f08 compliance: The mpi_f08 module is available, but due to</span></p>
<p class=""><span class="">                          limitations in the</span></p>
<p class=""><span class="">                          /home/projects/x86-64-knl/intel/compilers/2017-beta/compilers_and_libraries_2017.0.042/linux/bin/intel64/ifort</span></p>
<p class=""><span class="">                          compiler, does not support the following: array</span></p>
<p class=""><span class="">                          subsections, direct passthru (where possible) to</span></p>
<p class=""><span class="">                          underlying Open MPI&#39;s C functionality</span></p>
<p class=""><span class="">  Fort mpi_f08 subarrays: no</span></p>
<p class=""><span class="">           Java bindings: yes</span></p>
<p class=""><span class="">  Wrapper compiler rpath: runpath</span></p>
<p class=""><span class="">              C compiler: /home/projects/x86-64-knl/intel/compilers/2017-beta/compilers_and_libraries_2017.0.042/linux/bin/intel64/icc</span></p>
<p class=""><span class="">     C compiler absolute: </span></p>
<p class=""><span class="">  C compiler family name: INTEL</span></p>
<p class=""><span class="">      C compiler version: 1700.20160315</span></p>
<p class=""><span class="">             C char size: 1</span></p>
<p class=""><span class="">             C bool size: 1</span></p>
<p class=""><span class="">            C short size: 2</span></p>
<p class=""><span class="">              C int size: 4</span></p>
<p class=""><span class="">             C long size: 8</span></p>
<p class=""><span class="">            C float size: 4</span></p>
<p class=""><span class="">           C double size: 8</span></p>
<p class=""><span class="">          C pointer size: 8</span></p>
<p class=""><span class="">            C char align: 1</span></p>
<p class=""><span class="">            C bool align: 1</span></p>
<p class=""><span class="">             C int align: 4</span></p>
<p class=""><span class="">           C float align: 4</span></p>
<p class=""><span class="">          C double align: 8</span></p>
<p class=""><span class="">            C++ compiler: /home/projects/x86-64-knl/intel/compilers/2017-beta/compilers_and_libraries_2017.0.042/linux/bin/intel64/icpc</span></p>
<p class=""><span class="">   C++ compiler absolute: none</span></p>
<p class=""><span class="">           Fort compiler: /home/projects/x86-64-knl/intel/compilers/2017-beta/compilers_and_libraries_2017.0.042/linux/bin/intel64/ifort</span></p>
<p class=""><span class="">       Fort compiler abs: </span></p>
<p class=""><span class="">         Fort ignore TKR: yes (!DEC$ ATTRIBUTES NO_ARG_CHECK ::)</span></p>
<p class=""><span class="">   Fort 08 assumed shape: yes</span></p>
<p class=""><span class="">      Fort optional args: yes</span></p>
<p class=""><span class="">          Fort INTERFACE: yes</span></p>
<p class=""><span class="">    Fort ISO_FORTRAN_ENV: yes</span></p>
<p class=""><span class="">       Fort STORAGE_SIZE: yes</span></p>
<p class=""><span class="">      Fort BIND(C) (all): yes</span></p>
<p class=""><span class="">      Fort ISO_C_BINDING: yes</span></p>
<p class=""><span class=""> Fort SUBROUTINE BIND(C): yes</span></p>
<p class=""><span class="">       Fort TYPE,BIND(C): yes</span></p>
<p class=""><span class=""> Fort T,BIND(C,name=&quot;a&quot;): yes</span></p>
<p class=""><span class="">            Fort PRIVATE: yes</span></p>
<p class=""><span class="">          Fort PROTECTED: yes</span></p>
<p class=""><span class="">           Fort ABSTRACT: yes</span></p>
<p class=""><span class="">       Fort ASYNCHRONOUS: yes</span></p>
<p class=""><span class="">          Fort PROCEDURE: yes</span></p>
<p class=""><span class="">         Fort USE...ONLY: yes</span></p>
<p class=""><span class="">           Fort C_FUNLOC: yes</span></p>
<p class=""><span class=""> Fort f08 using wrappers: yes</span></p>
<p class=""><span class="">         Fort MPI_SIZEOF: yes</span></p>
<p class=""><span class="">       Fort integer size: 4</span></p>
<p class=""><span class="">       Fort logical size: 4</span></p>
<p class=""><span class=""> Fort logical value true: -1</span></p>
<p class=""><span class="">      Fort have integer1: yes</span></p>
<p class=""><span class="">      Fort have integer2: yes</span></p>
<p class=""><span class="">      Fort have integer4: yes</span></p>
<p class=""><span class="">      Fort have integer8: yes</span></p>
<p class=""><span class="">     Fort have integer16: no</span></p>
<p class=""><span class="">         Fort have real4: yes</span></p>
<p class=""><span class="">         Fort have real8: yes</span></p>
<p class=""><span class="">        Fort have real16: yes</span></p>
<p class=""><span class="">      Fort have complex8: yes</span></p>
<p class=""><span class="">     Fort have complex16: yes</span></p>
<p class=""><span class="">     Fort have complex32: yes</span></p>
<p class=""><span class="">      Fort integer1 size: 1</span></p>
<p class=""><span class="">      Fort integer2 size: 2</span></p>
<p class=""><span class="">      Fort integer4 size: 4</span></p>
<p class=""><span class="">      Fort integer8 size: 8</span></p>
<p class=""><span class="">     Fort integer16 size: -1</span></p>
<p class=""><span class="">          Fort real size: 4</span></p>
<p class=""><span class="">         Fort real4 size: 4</span></p>
<p class=""><span class="">         Fort real8 size: 8</span></p>
<p class=""><span class="">        Fort real16 size: 16</span></p>
<p class=""><span class="">      Fort dbl prec size: 8</span></p>
<p class=""><span class="">          Fort cplx size: 8</span></p>
<p class=""><span class="">      Fort dbl cplx size: 16</span></p>
<p class=""><span class="">         Fort cplx8 size: 8</span></p>
<p class=""><span class="">        Fort cplx16 size: 16</span></p>
<p class=""><span class="">        Fort cplx32 size: 32</span></p>
<p class=""><span class="">      Fort integer align: 1</span></p>
<p class=""><span class="">     Fort integer1 align: 1</span></p>
<p class=""><span class="">     Fort integer2 align: 1</span></p>
<p class=""><span class="">     Fort integer4 align: 1</span></p>
<p class=""><span class="">     Fort integer8 align: 1</span></p>
<p class=""><span class="">    Fort integer16 align: -1</span></p>
<p class=""><span class="">         Fort real align: 1</span></p>
<p class=""><span class="">        Fort real4 align: 1</span></p>
<p class=""><span class="">        Fort real8 align: 1</span></p>
<p class=""><span class="">       Fort real16 align: 1</span></p>
<p class=""><span class="">     Fort dbl prec align: 1</span></p>
<p class=""><span class="">         Fort cplx align: 1</span></p>
<p class=""><span class="">     Fort dbl cplx align: 1</span></p>
<p class=""><span class="">        Fort cplx8 align: 1</span></p>
<p class=""><span class="">       Fort cplx16 align: 1</span></p>
<p class=""><span class="">       Fort cplx32 align: 1</span></p>
<p class=""><span class="">             C profiling: yes</span></p>
<p class=""><span class="">           C++ profiling: yes</span></p>
<p class=""><span class="">   Fort mpif.h profiling: yes</span></p>
<p class=""><span class="">  Fort use mpi profiling: yes</span></p>
<p class=""><span class="">   Fort use mpi_f08 prof: yes</span></p>
<p class=""><span class="">          C++ exceptions: no</span></p>
<p class=""><span class="">          Thread support: posix (MPI_THREAD_MULTIPLE: yes, OPAL support: yes,</span></p>
<p class=""><span class="">                          OMPI progress: no, ORTE progress: yes, Event lib:</span></p>
<p class=""><span class="">                          yes)</span></p>
<p class=""><span class="">           Sparse Groups: no</span></p>
<p class=""><span class="">            Build CFLAGS: -O3 -DNDEBUG -finline-functions</span></p>
<p class=""><span class="">                          -fno-strict-aliasing -restrict</span></p>
<p class=""><span class="">                          -Qoption,cpp,--extended_float_types -pthread</span></p>
<p class=""><span class="">          Build CXXFLAGS: -O3 -DNDEBUG -finline-functions -pthread</span></p>
<p class=""><span class="">           Build FCFLAGS: </span></p>
<p class=""><span class="">           Build LDFLAGS: -L/home/projects/x86-64-knl/hwloc/1.11.3/lib</span></p>
<p class=""><span class="">              Build LIBS: -lrt -lutil   -lhwloc</span></p>
<p class=""><span class="">    Wrapper extra CFLAGS: -pthread</span></p>
<p class=""><span class="">  Wrapper extra CXXFLAGS: -pthread</span></p>
<p class=""><span class="">   Wrapper extra FCFLAGS: </span></p>
<p class=""><span class="">   Wrapper extra LDFLAGS: -Wl,-rpath -Wl,@{libdir} -Wl,--enable-new-dtags</span></p>
<p class=""><span class="">      Wrapper extra LIBS: -ldl -lutil</span></p>
<p class=""><span class="">  Internal debug support: no</span></p>
<p class=""><span class="">  MPI interface warnings: yes</span></p>
<p class=""><span class="">     MPI parameter check: runtime</span></p>
<p class=""><span class="">Memory profiling support: no</span></p>
<p class=""><span class="">Memory debugging support: no</span></p>
<p class=""><span class="">              dl support: yes</span></p>
<p class=""><span class="">   Heterogeneous support: no</span></p>
<p class=""><span class=""> mpirun default --prefix: no</span></p>
<p class=""><span class="">         MPI I/O support: yes</span></p>
<p class=""><span class="">       MPI_WTIME support: gettimeofday</span></p>
<p class=""><span class="">     Symbol vis. support: yes</span></p>
<p class=""><span class="">   Host topology support: yes</span></p>
<p class=""><span class="">          MPI extensions: </span></p>
<p class=""><span class="">   FT Checkpoint support: no (checkpoint thread: no)</span></p>
<p class=""><span class="">   C/R Enabled Debugging: no</span></p>
<p class=""><span class="">     VampirTrace support: yes</span></p>
<p class=""><span class="">  MPI_MAX_PROCESSOR_NAME: 256</span></p>
<p class=""><span class="">    MPI_MAX_ERROR_STRING: 256</span></p>
<p class=""><span class="">     MPI_MAX_OBJECT_NAME: 64</span></p>
<p class=""><span class="">        MPI_MAX_INFO_KEY: 36</span></p>
<p class=""><span class="">        MPI_MAX_INFO_VAL: 256</span></p>
<p class=""><span class="">       MPI_MAX_PORT_NAME: 1024</span></p>
<p class=""><span class="">  MPI_MAX_DATAREP_STRING: 128</span></p><div><br></div><div>How do I extract configure arguments from an OpenMPI installation?  I am trying to reproduce a build exactly and I do not have access to config.log from the origin build.</div><div><br></div><div>Thanks,</div><div><br>Jeff</div><div><br></div>-- <br><div class="gmail_signature" data-smartmail="gmail_signature">Jeff Hammond<br><a href="mailto:jeff.science@gmail.com" target="_blank">jeff.science@gmail.com</a><br><a href="http://jeffhammond.github.io/" target="_blank">http://jeffhammond.github.io/</a></div>
</div>

