<html><head><meta http-equiv="Content-Type" content="text/html charset=utf-8"><base></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;">Hmmm...couple of things here:<div><br></div><div>1. Intel packages Intel MPI in their compiler, and so there is in fact an mpiexec and MPI libraries in your path before us. I would advise always putting the OMPI path at the start of your path envars to avoid potential conflict</div><div><br></div><div>2. I'm having trouble understanding your command line because of all the variable definitions. Could you please tell me what the mpirun cmd line is? I suspect I know the problem, but need to see the actual cmd line to confirm it</div><div><br></div><div>Thanks</div><div>Ralph</div><div><br><div><div>On Jul 4, 2014, at 1:38 AM, Timur Ismagilov &lt;<a href="mailto:tismagilov@mail.ru">tismagilov@mail.ru</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><p>There is only one path to mpi lib.<br>echo $LD_LIBRARY_PATH<span class="Apple-converted-space">&nbsp;</span><br>/opt/intel/composer_xe_2013.2.146/mkl/lib/intel64:/opt/intel/composer_xe_2013.2.146/compiler/lib/intel64:/home/users/semenov/BFD/lib:/home/users/semenov/local/lib:/usr/lib64/:/mnt/data/users/dm2/vol3/semenov/_scratch/openmpi-1.9.0_mxm-3.0/lib<br><br>This one also looks correct.<br>$ldd&nbsp;hybrid-hello<br></p><p>linux-vdso.so.1 =&gt; (0x00007fff8b983000)<br>libmpi.so.0 =&gt; /mnt/data/users/dm2/vol3/semenov/_scratch/openmpi-1.9.0_mxm-3.0/lib/libmpi.so.0 (0x00007f58c95cb000)<br>libm.so.6 =&gt; /lib64/libm.so.6 (0x000000338ac00000)<br>libiomp5.so =&gt; /opt/intel/composer_xe_2013.2.146/compiler/lib/intel64/libiomp5.so (0x00007f58c92a2000)<br>libstdc++.so.6 =&gt; /usr/lib64/libstdc++.so.6 (0x000000338d400000)<br>libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x000000338cc00000)<br>libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x000000338b800000)<br>libc.so.6 =&gt; /lib64/libc.so.6 (0x000000338b000000)<br>libdl.so.2 =&gt; /lib64/libdl.so.2 (0x000000338b400000)<br>libopen-rte.so.0 =&gt; /mnt/data/users/dm2/vol3/semenov/_scratch/openmpi-1.9.0_mxm-3.0/lib/libopen-rte.so.0 (0x00007f58c9009000)<br>libopen-pal.so.0 =&gt; /mnt/data/users/dm2/vol3/semenov/_scratch/openmpi-1.9.0_mxm-3.0/lib/libopen-pal.so.0 (0x00007f58c8d05000)<br>libnuma.so.1 =&gt; /usr/lib64/libnuma.so.1 (0x00007f58c8afb000)<br>librt.so.1 =&gt; /lib64/librt.so.1 (0x000000338c000000)<br>libnsl.so.1 =&gt; /lib64/libnsl.so.1 (0x0000003393800000)<br>libutil.so.1 =&gt; /lib64/libutil.so.1 (0x000000339b600000)<br>libimf.so =&gt; /opt/intel/composer_xe_2013.2.146/compiler/lib/intel64/libimf.so (0x00007f58c863e000)<br>libsvml.so =&gt; /opt/intel/composer_xe_2013.2.146/compiler/lib/intel64/libsvml.so (0x00007f58c7c73000)<br>libirng.so =&gt; /opt/intel/composer_xe_2013.2.146/compiler/lib/intel64/libirng.so (0x00007f58c7a6b000)<br>libintlc.so.5 =&gt; /opt/intel/composer_xe_2013.2.146/compiler/lib/intel64/libintlc.so.5 (0x00007f58c781d000)<br>/lib64/ld-linux-x86-64.so.2 (0x000000338a800000)</p>open mpi 1.5.5 was preinstalled to "/opt/mpi/openmpi-1.5.5-icc/".<br><br>Here is an output after adding "--mca rmaps_base_verbose 20" and "--map-by slot:pe=8".<br><ul><li>outfile:<br><p>--------------------------------------------------------------------------<br>Your job failed to map. Either no mapper was available, or none<br>of the available mappers was able to perform the requested<br>mapping operation. This can happen if you request a map type<br>(e.g., loadbalance) and the corresponding mapper was not built.<br>--------------------------------------------------------------------------</p><br></li><li>errfile:<br><p>[node1-128-29:21477] mca: base: components_register: registering rmaps components<br>[node1-128-29:21477] mca: base: components_register: found loaded component lama<br>[node1-128-29:21477] mca:rmaps:lama: Priority 0<br>[node1-128-29:21477] mca:rmaps:lama: Map : NULL<br>[node1-128-29:21477] mca:rmaps:lama: Bind : NULL<br>[node1-128-29:21477] mca:rmaps:lama: MPPR : NULL<br>[node1-128-29:21477] mca:rmaps:lama: Order : NULL<br>[node1-128-29:21477] mca: base: components_register: component lama register function successful<br>[node1-128-29:21477] mca: base: components_register: found loaded component mindist<br>[node1-128-29:21477] mca: base: components_register: component mindist register function successful<br>[node1-128-29:21477] mca: base: components_register: found loaded component ppr<br>[node1-128-29:21477] mca: base: components_register: component ppr register function successful<br>[node1-128-29:21477] mca: base: components_register: found loaded component rank_file<br>[node1-128-29:21477] mca: base: components_register: component rank_file register function successful<br>[node1-128-29:21477] mca: base: components_register: found loaded component resilient<br>[node1-128-29:21477] mca: base: components_register: component resilient register function successful<br>[node1-128-29:21477] mca: base: components_register: found loaded component round_robin<br>[node1-128-29:21477] mca: base: components_register: component round_robin register function successful<br>[node1-128-29:21477] mca: base: components_register: found loaded component seq<br>[node1-128-29:21477] mca: base: components_register: component seq register function successful<br>[node1-128-29:21477] mca: base: components_register: found loaded component staged<br>[node1-128-29:21477] mca: base: components_register: component staged has no register or open function<br>[node1-128-29:21477] [[26215,0],0] rmaps:base set policy with slot:pe=8<br>[node1-128-29:21477] [[26215,0],0] rmaps:base policy slot modifiers pe=8 provided<br>[node1-128-29:21477] [[26215,0],0] rmaps:base check modifiers with pe=8<br>[node1-128-29:21477] [[26215,0],0] rmaps:base setting pe/rank to 8<br>[node1-128-29:21477] mca: base: components_open: opening rmaps components<br>[node1-128-29:21477] mca: base: components_open: found loaded component lama<br>[node1-128-29:21477] mca: base: components_open: found loaded component mindist<br>[node1-128-29:21477] mca: base: components_open: component mindist open function successful<br>[node1-128-29:21477] mca: base: components_open: found loaded component ppr<br>[node1-128-29:21477] mca: base: components_open: component ppr open function successful<br>[node1-128-29:21477] mca: base: components_open: found loaded component rank_file<br>[node1-128-29:21477] mca: base: components_open: component rank_file open function successful<br>[node1-128-29:21477] mca: base: components_open: found loaded component resilient<br>[node1-128-29:21477] mca: base: components_open: component resilient open function successful<br>[node1-128-29:21477] mca: base: components_open: found loaded component round_robin<br>[node1-128-29:21477] mca: base: components_open: component round_robin open function successful<br>[node1-128-29:21477] mca: base: components_open: found loaded component seq<br>[node1-128-29:21477] mca: base: components_open: component seq open function successful<br>[node1-128-29:21477] mca: base: components_open: found loaded component staged<br>[node1-128-29:21477] mca: base: components_open: component staged open function successful<br>[node1-128-29:21477] mca:rmaps:select: checking available component lama<br>[node1-128-29:21477] mca:rmaps:select: Querying component [lama]<br>[node1-128-29:21477] mca:rmaps:select: checking available component mindist<br>[node1-128-29:21477] mca:rmaps:select: Querying component [mindist]<br>[node1-128-29:21477] mca:rmaps:select: checking available component ppr<br>[node1-128-29:21477] mca:rmaps:select: Querying component [ppr]<br>[node1-128-29:21477] mca:rmaps:select: checking available component rank_file<br>[node1-128-29:21477] mca:rmaps:select: Querying component [rank_file]<br>[node1-128-29:21477] mca:rmaps:select: checking available component resilient<br>[node1-128-29:21477] mca:rmaps:select: Querying component [resilient]<br>[node1-128-29:21477] mca:rmaps:select: checking available component round_robin<br>[node1-128-29:21477] mca:rmaps:select: Querying component [round_robin]<br>[node1-128-29:21477] mca:rmaps:select: checking available component seq<br>[node1-128-29:21477] mca:rmaps:select: Querying component [seq]<br>[node1-128-29:21477] mca:rmaps:select: checking available component staged<br>[node1-128-29:21477] mca:rmaps:select: Querying component [staged]<br>[node1-128-29:21477] [[26215,0],0]: Final mapper priorities<br>[node1-128-29:21477] Mapper: ppr Priority: 90<br>[node1-128-29:21477] Mapper: seq Priority: 60<br>[node1-128-29:21477] Mapper: resilient Priority: 40<br>[node1-128-29:21477] Mapper: mindist Priority: 20<br>[node1-128-29:21477] Mapper: round_robin Priority: 10<br>[node1-128-29:21477] Mapper: staged Priority: 5<br>[node1-128-29:21477] Mapper: lama Priority: 0<br>[node1-128-29:21477] Mapper: rank_file Priority: 0<br>[node1-128-29:21477] mca:rmaps: mapping job [26215,1]<br>[node1-128-29:21477] mca:rmaps: creating new map for job [26215,1]<br>[node1-128-29:21477] mca:rmaps: nprocs 0<br>[node1-128-29:21477] mca:rmaps mapping given - using default<br>[node1-128-29:21477] mca:rmaps:ppr: job [26215,1] not using ppr mapper<br>[node1-128-29:21477] mca:rmaps:seq: job [26215,1] not using seq mapper<br>[node1-128-29:21477] mca:rmaps:resilient: cannot perform initial map of job [26215,1] - no fault groups<br>[node1-128-29:21477] mca:rmaps:mindist: job [26215,1] not using mindist mapper<br>[node1-128-29:21477] mca:rmaps:rr: mapping job [26215,1]<br>[node1-128-29:21477] AVAILABLE NODES FOR MAPPING:<br>[node1-128-29:21477] node: node1-128-29 daemon: 0<br>[node1-128-29:21477] mca:rmaps:rr: mapping by slot for job [26215,1] slots 1 num_procs 0<br>[node1-128-29:21477] mca:rmaps:rr:slot working node node1-128-29<br>[node1-128-29:21477] mca:rmaps:rr:slot assigning 0 procs to node node1-128-29<br>[node1-128-29:21477] mca:rmaps:base: computing vpids by slot for job [26215,1]<br>[node1-128-29:21477] mca: base: close: unloading component lama<br>[node1-128-29:21477] mca: base: close: component mindist closed<br>[node1-128-29:21477] mca: base: close: unloading component mindist<br>[node1-128-29:21477] mca: base: close: component ppr closed<br>[node1-128-29:21477] mca: base: close: unloading component ppr<br>[node1-128-29:21477] mca: base: close: component rank_file closed<br>[node1-128-29:21477] mca: base: close: unloading component rank_file<br>[node1-128-29:21477] mca: base: close: component resilient closed<br>[node1-128-29:21477] mca: base: close: unloading component resilient<br>[node1-128-29:21477] mca: base: close: component round_robin closed<br>[node1-128-29:21477] mca: base: close: unloading component round_robin<br>[node1-128-29:21477] mca: base: close: component seq closed<br>[node1-128-29:21477] mca: base: close: unloading component seq<br>[node1-128-29:21477] mca: base: close: component staged closed<br>[node1-128-29:21477] mca: base: close: unloading component staged</p></li></ul>Here is an output after adding "--mca rmaps_base_verbose 20" and &nbsp;<span style="color: rgb(191, 0, 0);"><strong>WITHOUT</strong></span>&nbsp;"--map-by slot:pe=8".<br><ul><li>outfile:<br>nothing</li><li>errfile:<br><p>[node1-128-29:21569] mca: base: components_register: registering rmaps components<br>[node1-128-29:21569] mca: base: components_register: found loaded component lama<br>[node1-128-29:21569] mca:rmaps:lama: Priority 0<br>[node1-128-29:21569] mca:rmaps:lama: Map : NULL<br>[node1-128-29:21569] mca:rmaps:lama: Bind : NULL<br>[node1-128-29:21569] mca:rmaps:lama: MPPR : NULL<br>[node1-128-29:21569] mca:rmaps:lama: Order : NULL<br>[node1-128-29:21569] mca: base: components_register: component lama register function successful<br>[node1-128-29:21569] mca: base: components_register: found loaded component mindist<br>[node1-128-29:21569] mca: base: components_register: component mindist register function successful<br>[node1-128-29:21569] mca: base: components_register: found loaded component ppr<br>[node1-128-29:21569] mca: base: components_register: component ppr register function successful<br>[node1-128-29:21569] mca: base: components_register: found loaded component rank_file<br>[node1-128-29:21569] mca: base: components_register: component rank_file register function successful<br>[node1-128-29:21569] mca: base: components_register: found loaded component resilient<br>[node1-128-29:21569] mca: base: components_register: component resilient register function successful<br>[node1-128-29:21569] mca: base: components_register: found loaded component round_robin<br>[node1-128-29:21569] mca: base: components_register: component round_robin register function successful<br>[node1-128-29:21569] mca: base: components_register: found loaded component seq<br>[node1-128-29:21569] mca: base: components_register: component seq register function successful<br>[node1-128-29:21569] mca: base: components_register: found loaded component staged<br>[node1-128-29:21569] mca: base: components_register: component staged has no register or open function<br>[node1-128-29:21569] [[25027,0],0] rmaps:base set policy with NULL<br>[node1-128-29:21569] mca: base: components_open: opening rmaps components<br>[node1-128-29:21569] mca: base: components_open: found loaded component lama<br>[node1-128-29:21569] mca: base: components_open: found loaded component mindist<br>[node1-128-29:21569] mca: base: components_open: component mindist open function successful<br>[node1-128-29:21569] mca: base: components_open: found loaded component ppr<br>[node1-128-29:21569] mca: base: components_open: component ppr open function successful<br>[node1-128-29:21569] mca: base: components_open: found loaded component rank_file<br>[node1-128-29:21569] mca: base: components_open: component rank_file open function successful<br>[node1-128-29:21569] mca: base: components_open: found loaded component resilient<br>[node1-128-29:21569] mca: base: components_open: component resilient open function successful<br>[node1-128-29:21569] mca: base: components_open: found loaded component round_robin<br>[node1-128-29:21569] mca: base: components_open: component round_robin open function successful<br>[node1-128-29:21569] mca: base: components_open: found loaded component seq<br>[node1-128-29:21569] mca: base: components_open: component seq open function successful<br>[node1-128-29:21569] mca: base: components_open: found loaded component staged<br>[node1-128-29:21569] mca: base: components_open: component staged open function successful<br>[node1-128-29:21569] mca:rmaps:select: checking available component lama<br>[node1-128-29:21569] mca:rmaps:select: Querying component [lama]<br>[node1-128-29:21569] mca:rmaps:select: checking available component mindist<br>[node1-128-29:21569] mca:rmaps:select: Querying component [mindist]<br>[node1-128-29:21569] mca:rmaps:select: checking available component ppr<br>[node1-128-29:21569] mca:rmaps:select: Querying component [ppr]<br>[node1-128-29:21569] mca:rmaps:select: checking available component rank_file<br>[node1-128-29:21569] mca:rmaps:select: Querying component [rank_file]<br>[node1-128-29:21569] mca:rmaps:select: checking available component resilient<br>[node1-128-29:21569] mca:rmaps:select: Querying component [resilient]<br>[node1-128-29:21569] mca:rmaps:select: checking available component round_robin<br>[node1-128-29:21569] mca:rmaps:select: Querying component [round_robin]<br>[node1-128-29:21569] mca:rmaps:select: checking available component seq<br>[node1-128-29:21569] mca:rmaps:select: Querying component [seq]<br>[node1-128-29:21569] mca:rmaps:select: checking available component staged<br>[node1-128-29:21569] mca:rmaps:select: Querying component [staged]<br>[node1-128-29:21569] [[25027,0],0]: Final mapper priorities<br>[node1-128-29:21569] Mapper: ppr Priority: 90<br>[node1-128-29:21569] Mapper: seq Priority: 60<br>[node1-128-29:21569] Mapper: resilient Priority: 40<br>[node1-128-29:21569] Mapper: mindist Priority: 20<br>[node1-128-29:21569] Mapper: round_robin Priority: 10<br>[node1-128-29:21569] Mapper: staged Priority: 5<br>[node1-128-29:21569] Mapper: lama Priority: 0<br>[node1-128-29:21569] Mapper: rank_file Priority: 0<br>[node1-128-29:21569] mca:rmaps: mapping job [25027,1]<br>[node1-128-29:21569] mca:rmaps: creating new map for job [25027,1]<br>[node1-128-29:21569] mca:rmaps: nprocs 0<br>[node1-128-29:21569] mca:rmaps mapping not given - using bycore<br>[node1-128-29:21569] mca:rmaps:ppr: job [25027,1] not using ppr mapper<br>[node1-128-29:21569] mca:rmaps:seq: job [25027,1] not using seq mapper<br>[node1-128-29:21569] mca:rmaps:resilient: cannot perform initial map of job [25027,1] - no fault groups<br>[node1-128-29:21569] mca:rmaps:mindist: job [25027,1] not using mindist mapper<br>[node1-128-29:21569] mca:rmaps:rr: mapping job [25027,1]<br>[node1-128-29:21569] AVAILABLE NODES FOR MAPPING:<br>[node1-128-29:21569] node: node1-128-29 daemon: 0<br>[node1-128-29:21569] mca:rmaps:rr: mapping no-span by Core for job [25027,1] slots 1 num_procs 1<br>[node1-128-29:21569] mca:rmaps:rr: found 8 Core objects on node node1-128-29<br>[node1-128-29:21569] mca:rmaps:rr: calculated nprocs 1<br>[node1-128-29:21569] mca:rmaps:rr: assigning nprocs 1<br>[node1-128-29:21569] mca:rmaps:rr: assigning proc to object 0<br>[node1-128-29:21569] mca:rmaps:base: computing vpids by slot for job [25027,1]<br>[node1-128-29:21569] mca:rmaps:base: assigning rank 0 to node node1-128-29<br>[node1-128-29:21569] mca:rmaps: compute bindings for job [25027,1] with policy CORE<br>[node1-128-29:21569] mca:rmaps: bindings for job [25027,1] - bind in place<br>[node1-128-29:21569] mca:rmaps: bind in place for job [25027,1] with bindings CORE<br>[node1-128-29:21569] [[25027,0],0] reset_usage: node node1-128-29 has 1 procs on it<br>[node1-128-29:21569] [[25027,0],0] reset_usage: ignoring proc [[25027,1],0]<br>[node1-128-29:21569] BINDING PROC [[25027,1],0] TO Core NUMBER 0<br>[node1-128-29:21569] [[25027,0],0] BOUND PROC [[25027,1],0] TO 0,8[Core:0] on node node1-128-29<br>[node1-128-29:21571] mca: base: components_register: component sbgp / ibnet register function failed<br>Main 21.366504 secs total /1<br>Computation 21.048671 secs total /1000<br>[node1-128-29:21569] mca: base: close: unloading component lama<br>[node1-128-29:21569] mca: base: close: component mindist closed<br>[node1-128-29:21569] mca: base: close: unloading component mindist<br>[node1-128-29:21569] mca: base: close: component ppr closed<br>[node1-128-29:21569] mca: base: close: unloading component ppr<br>[node1-128-29:21569] mca: base: close: component rank_file closed<br>[node1-128-29:21569] mca: base: close: unloading component rank_file<br>[node1-128-29:21569] mca: base: close: component resilient closed<br>[node1-128-29:21569] mca: base: close: unloading component resilient<br>[node1-128-29:21569] mca: base: close: component round_robin closed<br>[node1-128-29:21569] mca: base: close: unloading component round_robin<br>[node1-128-29:21569] mca: base: close: component seq closed<br>[node1-128-29:21569] mca: base: close: unloading component seq<br>[node1-128-29:21569] mca: base: close: component staged closed<br>[node1-128-29:21569] mca: base: close: unloading component staged</p></li></ul>Regards,<br>Timur.<br><br>Thu, 3 Jul 2014 06:10:26 -0700 от Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt;:<br><blockquote style="border-left-width: 1px; border-left-style: solid; border-left-color: rgb(8, 87, 166); margin: 10px; padding: 0px 0px 0px 10px;"><div id=""><div class="js-helper js-readmsg-msg"><base target="_self" href="https://e.mail.ru/"><div id="style_14043930330000000231_BODY">This looks to me like a message from some older version of OMPI. Please check your LD_LIBRARY_PATH and ensure that the 1.9 installation is at the *front* of that list.<div><br></div><div>Of course, I'm also assuming that you installed the two versions into different locations - yes?</div><div><br></div><div>Also, add "--mca rmaps_base_verbose 20" to your cmd line - this will tell us what mappers are being considered.</div><div><br></div><div><br><div><div>On Jul 3, 2014, at 1:31 AM, Timur Ismagilov &lt;<a href="x-msg://e.mail.ru/compose/?mailto=mailto%3atismagilov@mail.ru" target="_blank">tismagilov@mail.ru</a>&gt; wrote:</div><br><blockquote type="cite"><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;">When i used --map-by slot:pe=8, i got the same message&nbsp;<br><br><p>Your job failed to map. Either no mapper was available, or none<br>of the available mappers was able to perform the requested<br>mapping operation. This can happen if you request a map type<br>(e.g., loadbalance) and the corresponding mapper was not built.<br>...</p><br><br>Wed, 2 Jul 2014 07:36:48 -0700 от Ralph Castain &lt;<a href="x-msg://e.mail.ru/compose/?mailto=mailto%3arhc@open%2dmpi.org" target="_blank">rhc@open-mpi.org</a>&gt;:<br><blockquote style="border-left-width: 1px; border-left-style: solid; border-left-color: rgb(8, 87, 166); margin: 10px; padding: 0px 0px 0px 10px;">Let's keep this on the user list so others with similar issues can find it.<div><br></div><div>My guess is that the $OMP_NUM_THREADS syntax isn't quite right, so it didn't pick up the actual value there. Since it doesn't hurt to have extra cpus, just set it to 8 for your test case and that should be fine, so adding a little clarity:</div><div><br></div><div>--map-by slot:pe=8</div><div><br></div><div>I'm not aware of any slurm utility similar to top, but there is no reason you can't just submit this as an interactive job and use top itself, is there?</div><div><br></div><div>As for that sbgp warning - you can probably just ignore it. Not sure why that is failing, but it just means that component will disqualify itself. If you want to eliminate it, just add</div><div><br></div><div>-mca sbgp ^ibnet</div><div><br></div><div>to your cmd line</div><div><br></div><div><br><div><div>On Jul 2, 2014, at 7:29 AM, Timur Ismagilov &lt;<a target="_blank">tismagilov@mail.ru</a>&gt; wrote:</div><br><blockquote type="cite"><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><p>Thanks, Ralph!</p><p>With '--map-by :pe=$OMP_NUM_THREADS' &nbsp;i got:<br></p><p>--------------------------------------------------------------------------<br>Your job failed to map. Either no mapper was available, or none<br>of the available mappers was able to perform the requested<br>mapping operation. This can happen if you request a map type<br>(e.g., loadbalance) and the corresponding mapper was not built.<br><br>What does it mean?</p><p>With '--bind-to socket' everything looks better, but performance still worse..( but better than it was)<br></p><ul><li>1 thread 0.028 sec</li><li>2 thread 0.018 sec</li><li>4 thread 0.020 sec&nbsp;</li><li>8 thread 0.021 sec</li></ul><p>Do i have utility similar to the 'top'&nbsp;with sbatch?<br><br>Also, every time, &nbsp;i got the message in ompi 1.9:<br>mca: base: components_register: component sbgp / ibnet register function failed<br>Is it bad?<br><br>Regards,&nbsp;<br>Timur<br><br>Wed, 2 Jul 2014 05:53:44 -0700 от Ralph Castain &lt;<a target="_blank">rhc@open-mpi.org</a>&gt;:<br></p><blockquote style="border-left-width: 1px; border-left-style: solid; border-left-color: rgb(8, 87, 166); margin: 10px; padding: 0px 0px 0px 10px;">OMPI started binding by default during the 1.7 series. You should add the following to your cmd line:<div><br></div><div>--map-by :pe=$OMP_NUM_THREADS</div><div><br></div><div>This will give you a dedicated core for each thread. Alternatively, you could instead add</div><div><br></div><div>--bind-to socket</div><div><br></div><div>OMPI 1.5.5 doesn't bind at all unless directed to do so, which is why you are getting the difference in behavior.</div><div><br></div><div><br></div><div><div><div>On Jul 2, 2014, at 12:33 AM, Timur Ismagilov &lt;<a target="_blank">tismagilov@mail.ru</a>&gt; wrote:</div><br><blockquote type="cite"><div><p>Hello!</p><p>I have open mpi&nbsp;1.9a1r32104 and open mpi 1.5.5.<br>I have much better perfomance in open mpi 1.5.5 with openMP on 8 cores<br><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">in &nbsp;the program:<br></span></p><p data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">....<br><br><span style="font-family: arial, helvetica; font-size: 12px; line-height: normal;">#define N 10000000</span></p><div><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"></span></span><br></div><p>int main(int argc, char *argv[]) {<br>...............<br>MPI_Init(&amp;argc, &amp;argv);<br>...............<br>for (i = 0; i &lt; N; i++) {<br>a[i] = i * 1.0;<br>b[i] = i * 2.0;<br>}<br><br>#pragma omp parallel for shared(a, b, c) private(i)<br>for (i = 0; i &lt; N; i++) {<br>c[i] = a[i] + b[i];<br>}<br>.............<br>MPI_Finalize();<br>}</p><p><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">I got on 1 node<span>&nbsp;</span><br>(for i in 1 2 4 8 ; do export OMP_NUM_THREADS=$i; sbatch -p test -t 5 --exclusive -N 1 -o hybrid-hello_omp$i.out -e hybrid-hello_omp$i.err ompi_mxm3.0 ./hybrid-hello; done)</span><br></p><div style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><br></div><ul><li data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><span data-mce-type="bookmark" data-mce-style="overflow:hidden;line-height:0px" style="overflow: hidden; line-height: 0px;">﻿</span>open mpi 1.5.5 (Data for node: node1-128-17 Num slots: 8 Max slots: 0):&nbsp;<ul><li data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">8 threads&nbsp;0.014527 sec</li><li data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">4 threads 0.016138 sec</li><li data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">2 threads&nbsp;0.018764 sec</li><li data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">1 thread &nbsp; 0.029963 sec<br></span></li></ul></li></ul><ul><li><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">openmpi 1.9a1r32104 (<span style="font-family: arial, helvetica; font-size: 12px; line-height: normal;">node1-128-29: slots=8 max_slots=0 slots_inuse=0 state=UP</span></span></span></span></span><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">):</span><ul><li><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">8 threads&nbsp;0.035055 sec</span></li><li><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">4 threads&nbsp;0.029859 sec&nbsp;</span></li><li><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">2 threads&nbsp;0.019564 sec&nbsp;<span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">(same as&nbsp;</span><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">open mpi 1.5.5</span><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">)</span></span></li><li><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">1 thread &nbsp;&nbsp;0.028394 sec (same as<span>&nbsp;</span><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">open mpi 1.5.5</span>)<br></span></li></ul></li></ul><p><span data-mce-style="font-family: Arial, Tahoma, Verdana, sans-serif;font-size: 13px;line-height: 18.200000762939453px;" style="font-family: Arial, Tahoma, Verdana, sans-serif; font-size: 13px; line-height: 18.200000762939453px;">So, it looks like, that open mpi 1.9 use only 2 cores from 8.</span><br><br>What can i do with this?<br><br>$cat ompi_mxm3.0<br></p><p>#!/bin/sh</p><p>[ x"$TMPDIR" == x"" ] &amp;&amp; TMPDIR=/tmp</p><p>HOSTFILE=${TMPDIR}/hostfile.${SLURM_JOB_ID}<br>srun hostname -s|sort|uniq -c|awk '{print $2" slots="$1}' &gt; $HOSTFILE || { rm -f $HOSTFILE; exit 255; }<br>LD_PRELOAD=/mnt/data/users/dm2/vol3/semenov/_scratch/mxm/mxm-3.0/lib/libmxm.so mpirun -x LD_PRELOAD -x MXM_SHM_KCOPY_MODE=off --display-allocation --hostfile $HOSTFILE "$@"<br>rc=$?<br>rm -f $HOSTFILE</p><p>exit $rc<br><br>For open mpi 1.5.5 i remove LD_PRELOAD from run script.</p></div>_______________________________________________<br>users mailing list<br><a target="_blank">users@open-mpi.org</a><br>Subscription:<span>&nbsp;</span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>Link to this post:<span>&nbsp;</span><a href="http://www.open-mpi.org/community/lists/users/2014/07/24738.php" target="_blank">http://www.open-mpi.org/community/lists/users/2014/07/24738.php</a></blockquote></div><br></div></blockquote><br><br></div></blockquote></div><br></div></blockquote><br><br></div></blockquote></div></div></div></div></div></blockquote></div></blockquote></div><br></div></body></html>
