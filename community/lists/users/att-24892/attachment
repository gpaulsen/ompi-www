<div dir="ltr"><div><div>Hi Howard,<br><br></div>The attached file &quot;config,out&quot; has the output of configure.<br><br></div>Output of ompi_info command:<br>                 Package: Open MPI padmanac@polaris-4 Distribution<br>
                Open MPI: 1.8.1<br>  Open MPI repo revision: r31483<br>   Open MPI release date: Apr 22, 2014<br>                Open RTE: 1.8.1<br>  Open RTE repo revision: r31483<br>   Open RTE release date: Apr 22, 2014<br>
                    OPAL: 1.8.1<br>      OPAL repo revision: r31483<br>       OPAL release date: Apr 22, 2014<br>                 MPI API: 3.0<br>            Ident string: 1.8.1<br>                  Prefix: /home/padmanac/openmpi181<br>
 Configured architecture: x86_64-unknown-linux-gnu<br>          Configure host: polaris-4<br>           Configured by: padmanac<br>           Configured on: Tue Jul 29 11:41:12 PDT 2014<br>          Configure host: polaris-4<br>
                Built by: padmanac<br>                Built on: Tue Jul 29 11:57:53 PDT 2014<br>              Built host: polaris-4<br>              C bindings: yes<br>            C++ bindings: yes<br>             Fort mpif.h: yes (all)<br>
            Fort use mpi: yes (limited: overloading)<br>       Fort use mpi size: deprecated-ompi-info-value<br>        Fort use mpi_f08: no<br> Fort mpi_f08 compliance: The mpi_f08 module was not built<br>  Fort mpi_f08 subarrays: no<br>
           Java bindings: no<br>  Wrapper compiler rpath: runpath<br>              C compiler: gcc<br>     C compiler absolute: /opt/gcc/bin/gcc<br>  C compiler family name: GNU<br>      C compiler version: 4.8.2<br>            C++ compiler: g++<br>
   C++ compiler absolute: /opt/gcc/bin/g++<br>           Fort compiler: gfortran<br>       Fort compiler abs: /opt/gcc/bin/gfortran<br>         Fort ignore TKR: no<br>   Fort 08 assumed shape: no<br>      Fort optional args: no<br>
      Fort BIND(C) (all): no<br>      Fort ISO_C_BINDING: no<br> Fort SUBROUTINE BIND(C): no<br>       Fort TYPE,BIND(C): no<br> Fort T,BIND(C,name=&quot;a&quot;): no<br>            Fort PRIVATE: no<br>          Fort PROTECTED: no<br>
           Fort ABSTRACT: no<br>       Fort ASYNCHRONOUS: no<br>          Fort PROCEDURE: no<br> Fort f08 using wrappers: no<br>             C profiling: yes<br>           C++ profiling: yes<br>   Fort mpif.h profiling: yes<br>
  Fort use mpi profiling: yes<br>   Fort use mpi_f08 prof: no<br>          C++ exceptions: no<br>          Thread support: posix (MPI_THREAD_MULTIPLE: no, OPAL support: yes,<br>                          OMPI progress: no, ORTE progress: yes, Event lib:<br>
                          yes)<br>           Sparse Groups: no<br>  Internal debug support: no<br>  MPI interface warnings: yes<br>     MPI parameter check: runtime<br>Memory profiling support: no<br>Memory debugging support: no<br>
         libltdl support: yes<br>   Heterogeneous support: no<br> mpirun default --prefix: no<br>         MPI I/O support: yes<br>       MPI_WTIME support: gettimeofday<br>     Symbol vis. support: yes<br>   Host topology support: yes<br>
          MPI extensions:<br>   FT Checkpoint support: no (checkpoint thread: no)<br>   C/R Enabled Debugging: no<br>     VampirTrace support: yes<br>  MPI_MAX_PROCESSOR_NAME: 256<br>    MPI_MAX_ERROR_STRING: 256<br>     MPI_MAX_OBJECT_NAME: 64<br>
        MPI_MAX_INFO_KEY: 36<br>        MPI_MAX_INFO_VAL: 256<br>       MPI_MAX_PORT_NAME: 1024<br>  MPI_MAX_DATAREP_STRING: 128<br>           MCA backtrace: execinfo (MCA v2.0, API v2.0, Component v1.8.1)<br>            MCA compress: bzip (MCA v2.0, API v2.0, Component v1.8.1)<br>
            MCA compress: gzip (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA crs: none (MCA v2.0, API v2.0, Component v1.8.1)<br>                  MCA db: hash (MCA v2.0, API v1.0, Component v1.8.1)<br>                  MCA db: print (MCA v2.0, API v1.0, Component v1.8.1)<br>
               MCA event: libevent2021 (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA hwloc: hwloc172 (MCA v2.0, API v2.0, Component v1.8.1)<br>                  MCA if: posix_ipv4 (MCA v2.0, API v2.0, Component v1.8.1)<br>
                  MCA if: linux_ipv6 (MCA v2.0, API v2.0, Component v1.8.1)<br>         MCA installdirs: env (MCA v2.0, API v2.0, Component v1.8.1)<br>         MCA installdirs: config (MCA v2.0, API v2.0, Component v1.8.1)<br>
              MCA memory: linux (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA pstat: linux (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA sec: basic (MCA v2.0, API v1.0, Component v1.8.1)<br>
               MCA shmem: mmap (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA shmem: posix (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA shmem: sysv (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA timer: linux (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA dfs: app (MCA v2.0, API v1.0, Component v1.8.1)<br>                 MCA dfs: orted (MCA v2.0, API v1.0, Component v1.8.1)<br>                 MCA dfs: test (MCA v2.0, API v1.0, Component v1.8.1)<br>              MCA errmgr: default_app (MCA v2.0, API v3.0, Component v1.8.1)<br>
              MCA errmgr: default_hnp (MCA v2.0, API v3.0, Component v1.8.1)<br>              MCA errmgr: default_orted (MCA v2.0, API v3.0, Component<br>                          v1.8.1)<br>              MCA errmgr: default_tool (MCA v2.0, API v3.0, Component v1.8.1)<br>
                 MCA ess: env (MCA v2.0, API v3.0, Component v1.8.1)<br>                 MCA ess: hnp (MCA v2.0, API v3.0, Component v1.8.1)<br>                 MCA ess: singleton (MCA v2.0, API v3.0, Component v1.8.1)<br>
                 MCA ess: slurm (MCA v2.0, API v3.0, Component v1.8.1)<br>                 MCA ess: tool (MCA v2.0, API v3.0, Component v1.8.1)<br>               MCA filem: raw (MCA v2.0, API v2.0, Component v1.8.1)<br>             MCA grpcomm: bad (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA iof: hnp (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA iof: mr_hnp (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA iof: mr_orted (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA iof: orted (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA iof: tool (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA odls: default (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA oob: tcp (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA plm: isolated (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA plm: rsh (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA plm: slurm (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA ras: loadleveler (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA ras: simulator (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA ras: slurm (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA rmaps: lama (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA rmaps: mindist (MCA v2.0, API v2.0, Component v1.8.1)<br>
               MCA rmaps: ppr (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA rmaps: rank_file (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA rmaps: resilient (MCA v2.0, API v2.0, Component v1.8.1)<br>
               MCA rmaps: round_robin (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA rmaps: seq (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA rmaps: staged (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA rml: oob (MCA v2.0, API v2.0, Component v1.8.1)<br>              MCA routed: binomial (MCA v2.0, API v2.0, Component v1.8.1)<br>              MCA routed: debruijn (MCA v2.0, API v2.0, Component v1.8.1)<br>
              MCA routed: direct (MCA v2.0, API v2.0, Component v1.8.1)<br>              MCA routed: radix (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA state: app (MCA v2.0, API v1.0, Component v1.8.1)<br>
               MCA state: hnp (MCA v2.0, API v1.0, Component v1.8.1)<br>               MCA state: novm (MCA v2.0, API v1.0, Component v1.8.1)<br>               MCA state: orted (MCA v2.0, API v1.0, Component v1.8.1)<br>               MCA state: staged_hnp (MCA v2.0, API v1.0, Component v1.8.1)<br>
               MCA state: staged_orted (MCA v2.0, API v1.0, Component v1.8.1)<br>               MCA state: tool (MCA v2.0, API v1.0, Component v1.8.1)<br>           MCA allocator: basic (MCA v2.0, API v2.0, Component v1.8.1)<br>
           MCA allocator: bucket (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA bcol: basesmuma (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA bcol: ptpcoll (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA bml: r2 (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA btl: openib (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA btl: self (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA btl: sm (MCA v2.0, API v2.0, Component v1.8.1)<br>
                 MCA btl: tcp (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA btl: vader (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA coll: basic (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA coll: hierarch (MCA v2.0, API v2.0, Component v1.8.1)<br>
                MCA coll: inter (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA coll: libnbc (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA coll: ml (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA coll: self (MCA v2.0, API v2.0, Component v1.8.1)<br>
                MCA coll: sm (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA coll: tuned (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA dpm: orte (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA fbtl: posix (MCA v2.0, API v2.0, Component v1.8.1)<br>
               MCA fcoll: dynamic (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA fcoll: individual (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA fcoll: static (MCA v2.0, API v2.0, Component v1.8.1)<br>
               MCA fcoll: two_phase (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA fcoll: ylib (MCA v2.0, API v2.0, Component v1.8.1)<br>                  MCA fs: ufs (MCA v2.0, API v2.0, Component v1.8.1)<br>
                  MCA io: ompio (MCA v2.0, API v2.0, Component v1.8.1)<br>                  MCA io: romio (MCA v2.0, API v2.0, Component v1.8.1)<br>               MCA mpool: grdma (MCA v2.0, API v2.0, Component v1.8.1)<br>
               MCA mpool: sm (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA mtl: psm (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA osc: rdma (MCA v2.0, API v3.0, Component v1.8.1)<br>                 MCA osc: sm (MCA v2.0, API v3.0, Component v1.8.1)<br>
                 MCA pml: v (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA pml: bfo (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA pml: cm (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA pml: ob1 (MCA v2.0, API v2.0, Component v1.8.1)<br>
              MCA pubsub: orte (MCA v2.0, API v2.0, Component v1.8.1)<br>              MCA rcache: vma (MCA v2.0, API v2.0, Component v1.8.1)<br>                 MCA rte: orte (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA sbgp: basesmsocket (MCA v2.0, API v2.0, Component v1.8.1)<br>
                MCA sbgp: basesmuma (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA sbgp: p2p (MCA v2.0, API v2.0, Component v1.8.1)<br>            MCA sharedfp: individual (MCA v2.0, API v2.0, Component v1.8.1)<br>
            MCA sharedfp: lockedfile (MCA v2.0, API v2.0, Component v1.8.1)<br>            MCA sharedfp: sm (MCA v2.0, API v2.0, Component v1.8.1)<br>                MCA topo: basic (MCA v2.0, API v2.1, Component v1.8.1)<br>
           MCA vprotocol: pessimist (MCA v2.0, API v2.0, Component v1.8.1)<br><br><br><div><br>The command  &#39;rpm -qa | grep ibverbs&#39; lists following libraries.<br>libibverbs-devel-static-1.1.7-1.x86_64<br>libibverbs-devel-1.1.7-1.x86_64<br>
libibverbs-1.1.7-1.x86_64<br>libibverbs-debuginfo-1.1.7-1.x86_64<br>libibverbs-utils-1.1.7-1.x86_64<br><br></div><div>Please let me know what i am missing.<br><br></div><div>Regards,<br></div><div>Chaitra<br></div></div><div class="gmail_extra">
<br><br><div class="gmail_quote">On Wed, Jul 30, 2014 at 8:13 AM, Howard Pritchard <span dir="ltr">&lt;<a href="mailto:hppritcha@gmail.com" target="_blank">hppritcha@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
<div dir="ltr">Hi Chaitra,<div><br></div><div>Could you send the output from your configure and output from ompi_info?</div><div>Could you also send the output from the node where you are building ompi</div><div>of</div><div>









<p>rpm -qa | grep ibverbs</p><p>If this command indicates an libibverbs-devel was installed on the system,<br>you should check to see if it was installed in the default location or for some<br>reason was relocated.  If you don&#39;t see that a libibverbs-devel rpm was installed,<br>

then you need a sysadmin to install it.</p><p><br></p></div></div><div class="gmail_extra"><br><br><div class="gmail_quote">2014-07-29 19:35 GMT-06:00 Chaitra Kumar <span dir="ltr">&lt;<a href="mailto:chaitragkumar@gmail.com" target="_blank">chaitragkumar@gmail.com</a>&gt;</span>:<br>

<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div class="h5"><div dir="ltr"><div><div><div>Hi Team,<br><br></div>I am trying to setup openmpi 1.8.1 on a system with infiniband.<br>

<br></div>Am using the default configure options. I am not using any multithreading option.<br><br></div>
<div>After installation, no openib components are available.<br><br><br></div><div>I tried even with flag: &#39;--with-verbs&#39;, still no use.<br><br><br></div><div>Should i use any other flag to enable openib? am I missing any step?<br>


<br></div><div>Regards,<br>Chaitra<br></div></div>
<br></div></div>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2014/07/24889.php" target="_blank">http://www.open-mpi.org/community/lists/users/2014/07/24889.php</a><br></blockquote></div><br></div>
<br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2014/07/24891.php" target="_blank">http://www.open-mpi.org/community/lists/users/2014/07/24891.php</a><br></blockquote></div><br></div>
