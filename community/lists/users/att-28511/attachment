<html><body><div style="font-family: arial,helvetica,sans-serif; font-size: 12pt; color: #000000"><div>Thanks Jeff, that was an interesting result. The pointers are here well defined, also for the zero size segment.</div><div>However I can't reproduce your output. I still get null pointers (output below).<br></div><div>(I tried both 1.8.5 and 1.10.2 versions)<br></div><div>What could be the difference?<br></div><div><br></div><div>Peter<br></div><div><br></div><div> mpirun -np 4 a.out<br>query: me=0, them=0, size=0, disp=1, base=(nil)<br>query: me=0, them=1, size=4, disp=1, base=0x2aee280030d0<br>query: me=0, them=2, size=4, disp=1, base=0x2aee280030d4<br>query: me=0, them=3, size=4, disp=1, base=0x2aee280030d8<br>query: me=0, them=PROC_NULL, size=4, disp=1, base=0x2aee280030d0<br>query: me=1, them=0, size=0, disp=1, base=(nil)<br>query: me=1, them=1, size=4, disp=1, base=0x2aabbb9ce0d0<br>query: me=1, them=2, size=4, disp=1, base=0x2aabbb9ce0d4<br>query: me=1, them=3, size=4, disp=1, base=0x2aabbb9ce0d8<br>query: me=1, them=PROC_NULL, size=4, disp=1, base=0x2aabbb9ce0d0<br>query: me=2, them=0, size=0, disp=1, base=(nil)<br>query: me=2, them=1, size=4, disp=1, base=0x2b1579dd40d0<br>query: me=2, them=2, size=4, disp=1, base=0x2b1579dd40d4<br>query: me=2, them=3, size=4, disp=1, base=0x2b1579dd40d8<br>query: me=2, them=PROC_NULL, size=4, disp=1, base=0x2b1579dd40d0<br>query: me=3, them=0, size=0, disp=1, base=(nil)<br>query: me=3, them=1, size=4, disp=1, base=0x2ac8d2c350d0<br>query: me=3, them=2, size=4, disp=1, base=0x2ac8d2c350d4<br>query: me=3, them=3, size=4, disp=1, base=0x2ac8d2c350d8<br>query: me=3, them=PROC_NULL, size=4, disp=1, base=0x2ac8d2c350d0<br><br><br></div><div><br></div><hr id="zwchr"><blockquote style="border-left:2px solid #1010FF;margin-left:5px;padding-left:5px;color:#000;font-weight:normal;font-style:normal;text-decoration:none;font-family:Helvetica,Arial,sans-serif;font-size:12pt;" data-mce-style="border-left: 2px solid #1010FF; margin-left: 5px; padding-left: 5px; color: #000; font-weight: normal; font-style: normal; text-decoration: none; font-family: Helvetica,Arial,sans-serif; font-size: 12pt;"><div dir="ltr">See attached.&nbsp; Output below.&nbsp; Note that the base you get for ranks 0 and 1 is the same, so you need to use the fact that size=0 at rank=0 to know not to dereference that pointer and expect to be writing into rank 0's memory, since you will write into rank 1's.<div><br></div><div>I would probably add "if (size==0) base=NULL;" for good measure.<br><div><br></div><div>Jeff<br><div><br></div><div><p class=""><span class="">$</span><span class=""> mpirun -n 4 ./a.out</span></p><p class=""><span class="">query: me=0, them=0, size=0, disp=1, base=0x10bd64000</span></p><p class=""><span class="">query: me=0, them=1, size=4, disp=1, base=0x10bd64000</span></p><p class=""><span class="">query: me=0, them=2, size=4, disp=1, base=0x10bd64004</span></p><p class=""><span class="">query: me=0, them=3, size=4, disp=1, base=0x10bd64008</span></p><p class=""><span class="">query: me=0, them=PROC_NULL, size=4, disp=1, base=0x10bd64000</span></p><p class=""><span class="">query: me=1, them=0, size=0, disp=1, base=0x102d3b000</span></p><p class=""><span class="">query: me=1, them=1, size=4, disp=1, base=0x102d3b000</span></p><p class=""><span class="">query: me=1, them=2, size=4, disp=1, base=0x102d3b004</span></p><p class=""><span class="">query: me=1, them=3, size=4, disp=1, base=0x102d3b008</span></p><p class=""><span class="">query: me=1, them=PROC_NULL, size=4, disp=1, base=0x102d3b000</span></p><p class=""><span class="">query: me=2, them=0, size=0, disp=1, base=0x10aac1000</span></p><p class=""><span class="">query: me=2, them=1, size=4, disp=1, base=0x10aac1000</span></p><p class=""><span class="">query: me=2, them=2, size=4, disp=1, base=0x10aac1004</span></p><p class=""><span class="">query: me=2, them=3, size=4, disp=1, base=0x10aac1008</span></p><p class=""><span class="">query: me=2, them=PROC_NULL, size=4, disp=1, base=0x10aac1000</span></p><p class=""><span class="">query: me=3, them=0, size=0, disp=1, base=0x100fa2000</span></p><p class=""><span class="">query: me=3, them=1, size=4, disp=1, base=0x100fa2000</span></p><p class=""><span class="">query: me=3, them=2, size=4, disp=1, base=0x100fa2004</span></p><p class=""><span class="">query: me=3, them=3, size=4, disp=1, base=0x100fa2008</span></p><p class=""><span class="">query: me=3, them=PROC_NULL, size=4, disp=1, base=0x100fa2000</span></p></div></div></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Thu, Feb 11, 2016 at 8:55 AM, Jeff Hammond <span dir="ltr">&lt;<a href="mailto:jeff.science@gmail.com" target="_blank" data-mce-href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex" data-mce-style="margin: 0 0 0 .8ex; border-left: 1px #ccc solid; padding-left: 1ex;"><div dir="ltr"><span class=""><span class=""><br></span></span><div><br></div><span class=""><span class="">On Thu, Feb 11, 2016 at 8:46 AM, Nathan Hjelm &lt;<a href="mailto:hjelmn@lanl.gov" target="_blank" data-mce-href="mailto:hjelmn@lanl.gov">hjelmn@lanl.gov</a>&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Thu, Feb 11, 2016 at 02:17:40PM +0000, Peter Wind wrote:<br>&gt; &gt; &nbsp; &nbsp;I would add that the present situation is bound to give problems for some<br>&gt; &gt; &nbsp; &nbsp;users.<br>&gt; &gt; &nbsp; &nbsp;It is natural to divide an array in segments, each process treating its<br>&gt; &gt; &nbsp; &nbsp;own segment, but needing to read adjacent segments too.<br>&gt; &gt; &nbsp; &nbsp;MPI_Win_allocate_shared seems to be designed for this.<br>&gt; &gt; &nbsp; &nbsp;This will work fine as long as no segment as size zero. It can also be<br>&gt; &gt; &nbsp; &nbsp;expected that most testing would be done with all segments larger than<br>&gt; &gt; &nbsp; &nbsp;zero.<br>&gt; &gt; &nbsp; &nbsp;The document adding "size = 0 is valid", would also make people confident<br>&gt; &gt; &nbsp; &nbsp;that it will be consistent for that special case too.<br>&gt;<br>&gt; Nope, that statement says its ok for a rank to specify that the local<br>&gt; shared memory segment is 0 bytes. Nothing more. The standard<br>&gt; unfortunately does not define what pointer value is returned for a rank<br>&gt; that specifies size = 0. Not sure if the RMA working group intentionally<br>&gt; left that undefine... Anyway, Open MPI does not appear to be out of<br>&gt; compliance with the standard here.<br>&gt;<br></span></span><div><br></div>MPI_Alloc_mem doesn't say what happens if you pass size=0 either.&nbsp; The RMA working group intentionally tries to maintain consistency with the rest of the MPI standard whenever possible, so we did not create a new semantic here.<br><div><br></div>MPI_Win_shared_query text includes this:<div><br>"If all processes in the group attached to the window specified size = 0, then the call returns size = 0 and a baseptr as if MPI_ALLOC_MEM was called with size = 0."<span class=""><span class=""><br>&nbsp;<br>&gt;<br>&gt; To be safe you should use MPI_Win_shared_query as suggested. You can<br>&gt; pass MPI_PROC_NULL as the rank to get the pointer for the first non-zero<br>&gt; sized segment in the shared memory window.<br></span></span><div><br></div>Indeed!&nbsp; I forgot about that.&nbsp; MPI_Win_shared_query solves this problem for the user brilliantly.<span class="HOEnZb"><span class="HOEnZb"><span style="color: #888888;" data-mce-style="color: #888888;" color="#888888"><br></span></span></span><div><br></div><span class="HOEnZb"><span style="color: #888888;" data-mce-style="color: #888888;" color="#888888">Jeff</span></span><span class=""><span class=""><br></span></span><div><br></div><span class="">--<br>Jeff Hammond<br><a href="mailto:jeff.science@gmail.com" target="_blank" data-mce-href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a><br><a href="http://jeffhammond.github.io/" target="_blank" data-mce-href="http://jeffhammond.github.io/">http://jeffhammond.github.io/</a></span><br data-mce-bogus="1"></div></div></blockquote></div><br><br clear="all"><div><br></div>-- <br><div class="gmail_signature">Jeff Hammond<br><a href="mailto:jeff.science@gmail.com" target="_blank" data-mce-href="mailto:jeff.science@gmail.com">jeff.science@gmail.com</a><br><a href="http://jeffhammond.github.io/" target="_blank" data-mce-href="http://jeffhammond.github.io/">http://jeffhammond.github.io/</a><br data-mce-bogus="1"></div></div><br>_______________________________________________<br>users mailing list<br>users@open-mpi.org<br>Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/users<br>Link to this post: http://www.open-mpi.org/community/lists/users/2016/02/28508.php</blockquote><div><br></div></div></body></html>
