<html><body><div style="color:#000; background-color:#fff; font-family:times new roman, new york, times, serif;font-size:12pt"><h1 itemprop="name"><a href="http://stackoverflow.com/questions/15227933/cluster-hangs-shows-error-while-executing-simple-mpi-program-in-c" class="question-hyperlink">Cluster hangs/shows error while executing simple MPI program in C</a></h1><div>I am trying to run a simple MPI program(multiple array addition), it 
runs perfectly in my PC but simply hangs or shows the following error in
 the cluster.</div><div> 
I am using open mpi and the following command to execute
 .</div><div>
    <strong>mpirun -machinefile machine -np 4 ./array_sum</strong> <br></div><div style="color: rgb(0, 0, 0); font-size: 16px; font-family: times new roman,new york,times,serif; background-color: transparent; font-style: normal;"><br></div><div style="color: rgb(0, 0, 0); font-size: 16px; font-family: times new roman,new york,times,serif; background-color: transparent; font-style: normal;">error code:
 <strong>[[22877,1],0][btl_tcp_endpoint.c:638:mca_btl_tcp_endpoint_complete_connect]
 connect() to 192.168.122.1 failed: Connection refused (111)</strong></div><div style="color: rgb(0, 0, 0); font-size: 16px; font-family: times new roman,new york,times,serif; background-color: transparent; font-style: normal;"><br><strong></strong></div><pre style="" class="lang-c prettyprint prettyprinted"><code><span class="com">#include</span><span class="pln">    </span><span class="str">&lt;mpi.h&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln">    </span><span class="str">&lt;stdio.h&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln">    </span><span class="str">&lt;stdlib.h&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln">    </span><span class="str">&lt;string.h&gt;</span><span class="pln">
</span><span class="com">#define</span><span class="pln">     group           MPI_COMM_WORLD
</span><span class="com">#define</span><span class="pln">     root            </span><span class="lit">0</span><span class="pln">
</span><span class="com">#define</span><span class="pln">     size            </span><span class="lit">100</span><span class="pln">

</span><span class="typ">int</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> argc</span><span class="pun">,</span><span class="kwd">char</span><span class="pln"> </span><span class="pun">*</span><span class="pln">argv</span><span class="pun">[])</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
</span><span class="typ">int</span><span class="pln"> no_tasks</span><span class="pun">,</span><span class="pln">task_id</span><span class="pun">,</span><span class="pln">i</span><span class="pun">;</span><span class="pln">
MPI_Init</span><span class="pun">(&amp;</span><span class="pln">argc</span><span class="pun">,&amp;</span><span class="pln">argv</span><span class="pun">);</span><span class="pln">
MPI_Comm_size</span><span class="pun">(</span><span class="pln">group</span><span class="pun">,&amp;</span><span class="pln">no_tasks</span><span class="pun">);</span><span class="pln">
MPI_Comm_rank</span><span class="pun">(</span><span class="pln">group</span><span class="pun">,&amp;</span><span class="pln">task_id</span><span class="pun">);</span><span class="pln">
</span><span class="typ">int</span><span class="pln"> arr1</span><span class="pun">[</span><span class="pln">size</span><span class="pun">],</span><span class="pln">arr2</span><span class="pun">[</span><span class="pln">size</span><span class="pun">],</span><span class="pln">local1</span><span class="pun">[</span><span class="pln">size</span><span class="pun">],</span><span class="pln">local2</span><span class="pun">[</span><span class="pln">size</span><span class="pun">];</span><span class="pln">
</span><span class="kwd">if</span><span class="pun">(</span><span class="pln">task_id</span><span class="pun">==</span><span class="pln">root</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">for</span><span class="pun">(</span><span class="pln">i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">size</span><span class="pun">;</span><span class="pln">i</span><span class="pun">++)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        arr1</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]=</span><span class="pln">arr2</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]=</span><span class="pln">i</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
MPI_Scatter</span><span class="pun">(</span><span class="pln">arr1</span><span class="pun">,</span><span class="pln">size</span><span class="pun">/</span><span class="pln">no_tasks</span><span class="pun">,</span><span class="pln">MPI_INT</span><span class="pun">,</span><span class="pln">local1</span><span class="pun">,</span><span class="pln">size</span><span class="pun">/</span><span class="pln">no_tasks</span><span class="pun">,</span><span class="pln">MPI_INT</span><span class="pun">,</span><span class="pln">root</span><span class="pun">,</span><span class="pln">group</span><span class="pun">);</span><span class="pln">
MPI_Scatter</span><span class="pun">(</span><span class="pln">arr2</span><span class="pun">,</span><span class="pln">size</span><span class="pun">/</span><span class="pln">no_tasks</span><span class="pun">,</span><span class="pln">MPI_INT</span><span class="pun">,</span><span class="pln">local2</span><span class="pun">,</span><span class="pln">size</span><span class="pun">/</span><span class="pln">no_tasks</span><span class="pun">,</span><span class="pln">MPI_INT</span><span class="pun">,</span><span class="pln">root</span><span class="pun">,</span><span class="pln">group</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">for</span><span class="pun">(</span><span class="pln">i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">size</span><span class="pun">/</span><span class="pln">no_tasks</span><span class="pun">;</span><span class="pln">i</span><span class="pun">++)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    local1</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]+=</span><span class="pln">local2</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
MPI_Gather</span><span class="pun">(</span><span class="pln">local1</span><span class="pun">,</span><span class="pln">size</span><span class="pun">/</span><span class="pln">no_tasks</span><span class="pun">,</span><span class="pln">MPI_INT</span><span class="pun">,</span><span class="pln">arr1</span><span class="pun">,</span><span class="pln">size</span><span class="pun">/</span><span class="pln">no_tasks</span><span class="pun">,</span><span class="pln">MPI_INT</span><span class="pun">,</span><span class="pln">root</span><span class="pun">,</span><span class="pln">group</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">if</span><span class="pun">(</span><span class="pln">task_id</span><span class="pun">==</span><span class="pln">root</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">       
    printf</span><span class="pun">(</span><span class="str">"The Array Sum Is\n"</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">for</span><span class="pun">(</span><span class="pln">i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">size</span><span class="pun">;</span><span class="pln">i</span><span class="pun">++)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        printf</span><span class="pun">(</span><span class="str">"%d  "</span><span class="pun">,</span><span class="pln">arr1</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
MPI_Finalize</span><span class="pun">();</span><span class="pln">
</span><span class="kwd">return</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre></div></body></html>
