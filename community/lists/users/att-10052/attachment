<br><br><div class="gmail_quote">On Thu, Jul 23, 2009 at 3:03 PM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
It depends on which network fails. If you lose all TCP connectivity, Open MPI should abort the job as the out-of-band system will detect the loss of connection. If you only lose the MPI connection (whether TCP or some other interconnect), then I believe the system will eventually generate an error after it retries sending the message a specified number of times, though it may not abort.<div>
<div></div><div class="h5"><br>
</div></div></blockquote></div><br>Thank you Ralph,<br><br>From your reply I came to know that the question I posted earlier was not reflecting the problem properly.<br><br>I can&#39;t use blocking communication routines in my main program ( &quot;masterprocess&quot;) because any type of network failure( may be due to physical connectivity or TCP connectivity or MPI connection as you told) may occur. So I am using non blocking point to point communication routines, and TEST later for completion of that Request. Once I enter a TEST loop I will test for Request complition till TIMEOUT. Suppose TIMEOUT has occured, In this case first I will check whether<br>
<br> 1:  Slave machine is reachable or not,  (How I will do that ??? Given - I have IP address and Host Name of Slave machine.)<br><br> 2:  if reachable, check whether program(orted and &quot;slaveprocess&quot;) is alive or not.<br>
<br>I don&#39;t want to abort my master process in case 1 and hope that network connection will come up in future. Fortunately OpenMPI doesn&#39;t abort any process. Both processes can run independently without communicating. <br>
<br><br clear="all">Thanks and Regards,<br>-- <br>Vipin K.<br>Research Engineer,<br>C-DOTB, India<br>

