i have openmpi 1.3.3 installed on my linux fedora 10 system, i have a cluster of two nodes node0(ip 10.1.7.125) and node1(ip 10.1.7.138) among them passwordless ssh is set and a directory is nfs mounted <br><br>when i run a simple test code without and MPI_Send or MPI_Recv it works for any number of process with the command <br>

mpirun -np 2 --hostfile host a.out <br>--------------------------------------------------------------------------<br>  #include &quot;mpi.h&quot;<br>   #include &lt;stdio.h&gt;<br><br>   int main(argc,argv)<br>   int argc;<br>

   char *argv[]; {<br>   int  numtasks, rank, rc;<br>   int x;<br>   rc = MPI_Init(&amp;argc,&amp;argv);<br>   if (rc != MPI_SUCCESS) {<br>     printf (&quot;Error starting MPI program. Terminating.\n&quot;);<br>     MPI_Abort(MPI_COMM_WORLD, rc);<br>

     }<br><br>   MPI_Comm_size(MPI_COMM_WORLD,&amp;numtasks);<br>   MPI_Comm_rank(MPI_COMM_WORLD,&amp;rank);<br>   printf (&quot;\nNumber of tasks= %d \t  My rank= %d&quot;, numtasks,rank);<br><br>   /*******  do some work *******/<br>

<br>   if(rank == 0)<br>    { <br>        printf(&quot;\t This is primary&quot;);<br>        x = 9;  <br>        }<br>    else  <br>        x = 1;<br>   printf(&quot;\t%d\n&quot;,x);<br>   MPI_Finalize(); <br>   }         <br>

--------------------------------------------------------------------------<br clear="all">but when i run another code with MPI_Send or MPI_Recv<br>it give the follwing error <br><br>[node0][[17948,1],0][../../../../../ompi/mca/btl/tcp/btl_tcp_endpoint.c:638:mca_btl_tcp_endpoint_complete_connect] connect() to 10.1.7.138 failed: No route to host (113)<br>

^Cmpirun: killing job...<br><br><br>mpirun was unable to cleanly terminate the daemons on the nodes shown<br>below. Additional manual cleanup may be required - please refer to<br>the &quot;orte-clean&quot; tool for assistance.<br>

<br>    node1<br>--------------------------------------------------------------------------<br>#include &quot;mpi.h&quot;<br>#include &quot;string.h&quot;<br>#include &quot;stdio.h&quot;<br>main( argc, argv )<br>int argc;<br>

char **argv;<br>{<br>    char message[20];<br>    int myrank;<br>    MPI_Status status;<br>    MPI_Init( &amp;argc, &amp;argv );<br>    MPI_Comm_rank( MPI_COMM_WORLD, &amp;myrank );<br>    if (myrank == 0)    /* code for process zero */<br>

    {<br>        strcpy(message,&quot;Hello, there&quot;);<br>        MPI_Send(message, strlen(message)+1, MPI_CHAR, 1, 99, MPI_COMM_WORLD);<br>    }<br>    else if (myrank == 1) /* code for process one */<br>    {<br>        MPI_Recv(message, 20, MPI_CHAR, 0, 99, MPI_COMM_WORLD, &amp;status);<br>

        printf(&quot;received :%s:\n&quot;, message);<br>    }<br>    MPI_Finalize();<br>}<br>--------------------------------------------------------------------------<br><br>please help<br><br>regards<br><br>-- <br>Ankur Pachauri.<br>

Research Scholar,<br>software engineering.<br>Department of Mathematics<br>Dayalbagh Educational Institute<br>Dayalbagh,<br>AGRA<br>

