<html><head><meta http-equiv="Content-Type" content="text/html charset=utf-8"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class="">Sadly, no - there was some possibility of using a file monitor we had for awhile, but that isn’t in the 1.6 series. So I fear your best bet is to periodically output some kind of marker, and have a separate process that monitors to see if it is being updated. Either way would require modifying code and that seems to be outside the desired scope of the solution.<div class=""><br class=""></div><div class="">Afraid I don’t know how to accomplish what you seek without code modification.<br class=""><div class=""><br class=""><div><blockquote type="cite" class=""><div class="">On Jun 16, 2016, at 10:16 PM, Alex Kaiser &lt;<a href="mailto:adkaiser@gmail.com" class="">adkaiser@gmail.com</a>&gt; wrote:</div><br class="Apple-interchange-newline"><div class=""><div dir="ltr" class="">Dear Dr. Castain,&nbsp;<div class=""><br class=""></div><div class="">I'm using 1.6.5, which is pre-built on NYU's cluster. Is there any other info which would be helpful? Partial output follows.</div><div class=""><br class=""></div><div class="">Thanks,&nbsp;</div><div class="">Alex&nbsp;</div><div class=""><br class=""></div>-bash-4.1$ ompi_info<br class=""><blockquote style="margin:0 0 0 40px;border:none;padding:0px" class="">Package: Open MPI <a href="mailto:leak@soho.es.its.nyu.edu" class="">leak@soho.es.its.nyu.edu</a> Distribution<br class="">Open MPI: 1.6.5<br class="">...<br class="">C compiler family name: GNU<br class="">C compiler version: 4.8.2</blockquote></div><div class="gmail_extra"><br class=""><div class="gmail_quote">On Thu, Jun 16, 2016 at 8:44 PM, Gus Correa <span dir="ltr" class="">&lt;<a href="mailto:gus@ldeo.columbia.edu" target="_blank" class="">gus@ldeo.columbia.edu</a>&gt;</span> wrote:<br class=""><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi Alex<br class="">
<br class="">
You know all this, but just in case ...<br class="">
<br class="">
Restartable code goes like this:<br class="">
<br class="">
*****************************<br class="">
.start<br class="">
<br class="">
read the initial/previous configuration from a file<br class="">
...<br class="">
final_step = first_step + nsteps<br class="">
time_step = first_step<br class="">
while ( time_step .le. final_step )<br class="">
&nbsp; ... march in time ...<br class="">
&nbsp; time_step = time_step +1<br class="">
end<br class="">
<br class="">
save the final_step configuration (or phase space) to a file<br class="">
[depending on the algorithm you may need to save the<br class="">
previous config also, or perhaps a few more]<br class="">
<br class="">
.end<br class="">
************************************************<br class="">
<br class="">
Then restart the job time and again, until the desired<br class="">
number of time steps is completed.<br class="">
<br class="">
Job queue systems/resource managers allow a job to resubmit itself,<br class="">
so unless a job fails it feels like a single time integration.<br class="">
<br class="">
If a job fails in the middle, you don't lose all work,<br class="">
just restart from the previous saved configuration.<br class="">
That is the only situation where you need to "monitor" the code.<br class="">
Resource managers/ queue systems can also email you in<br class="">
case the job fails, warning you to do manual intervention.<br class="">
<br class="">
The time granularity per job (nsteps) is up to you.<br class="">
Normally it is adjusted to the max walltime of job queues<br class="">
(in a shared computer/cluster),<br class="">
but in your case it can be adjusted to how often the program fails.<br class="">
<br class="">
All atmosphere/ocean/climate/weather_forecast models work<br class="">
this way (that's what we mostly run here).<br class="">
I guess most CFD, computational Chemistry, etc, programs also do.<br class="">
<br class="">
I hope this helps,<br class="">
Gus Correa<div class=""><div class="h5"><br class="">
<br class="">
<br class="">
On 06/16/2016 05:25 PM, Alex Kaiser wrote:<br class="">
</div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div class=""><div class="h5">
Hello,<br class="">
<br class="">
I have an MPI code which sometimes hangs, simply stops running. It is<br class="">
not clear why and it uses many large third party libraries so I do not<br class="">
want to try to fix it. The code is easy to restart, but then it needs to<br class="">
be monitored closely by me, and I'd prefer to do it automatically.<br class="">
<br class="">
Is there a way, within an MPI process, to detect the hang and abort if so?<br class="">
<br class="">
In psuedocode, I would like to do something like<br class="">
<br class="">
&nbsp; &nbsp; for (all time steps)<br class="">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;step<br class="">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (nothing has happened for x minutes)<br class="">
<br class="">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;call mpi abort to return control to the shell<br class="">
<br class="">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;endif<br class="">
<br class="">
&nbsp; &nbsp; endfor<br class="">
<br class="">
This structure does not work however, as it can no longer do anything,<br class="">
including check itself, when it is stuck.<br class="">
<br class="">
<br class="">
Thank you,<br class="">
Alex<br class="">
<br class="">
<br class="">
<br class=""></div></div><span class="">
_______________________________________________<br class="">
users mailing list<br class="">
<a href="mailto:users@open-mpi.org" target="_blank" class="">users@open-mpi.org</a><br class="">
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank" class="">https://www.open-mpi.org/mailman/listinfo.cgi/users</a><br class="">
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/06/29471.php" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/community/lists/users/2016/06/29471.php</a><br class="">
<br class="">
</span></blockquote><span class="">
<br class="">
_______________________________________________<br class="">
users mailing list<br class="">
<a href="mailto:users@open-mpi.org" target="_blank" class="">users@open-mpi.org</a><br class="">
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank" class="">https://www.open-mpi.org/mailman/listinfo.cgi/users</a><br class=""></span>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/06/29473.php" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/community/lists/users/2016/06/29473.php</a><br class="">
</blockquote></div><br class=""></div>
_______________________________________________<br class="">users mailing list<br class=""><a href="mailto:users@open-mpi.org" class="">users@open-mpi.org</a><br class="">Subscription: https://www.open-mpi.org/mailman/listinfo.cgi/users<br class="">Link to this post: http://www.open-mpi.org/community/lists/users/2016/06/29474.php</div></blockquote></div><br class=""></div></div></body></html>
