<html>
<head>
<style><!--
.hmmessage P
{
margin:0px;
padding:0px
}
body.hmmessage
{
font-size: 10pt;
font-family:Tahoma
}
--></style>
</head>
<body class='hmmessage'>
I have verified that&nbsp;disabling UAC does not fix the problem. xhlp.exe starts, threads spin up on both machines, CPU usage is at 80-90% but no progress is ever made.<BR>
&nbsp;<BR>
>From this state, Ctrl-break&nbsp;on the&nbsp;head node&nbsp;yields the following output:<BR>
<BR>[REMOTEMACHINE:02032] [[20816,1],0]-[[20816,0],0] mca_oob_tcp_msg_recv: readv failed: Unknown error (108)<BR>[REMOTEMACHINE:05064] [[20816,1],1]-[[20816,0],0] mca_oob_tcp_msg_recv: readv failed: Unknown error (108)<BR>[REMOTEMACHINE:05420] [[20816,1],2]-[[20816,0],0] mca_oob_tcp_msg_recv: readv failed: Unknown error (108)<BR>[REMOTEMACHINE:03852] [[20816,1],3]-[[20816,0],0] mca_oob_tcp_msg_recv: readv failed: Unknown error (108)<BR>[REMOTEMACHINE:05436] [[20816,1],4]-[[20816,0],0] mca_oob_tcp_msg_recv: readv failed: Unknown error (108)<BR>[REMOTEMACHINE:04416] [[20816,1],5]-[[20816,0],0] mca_oob_tcp_msg_recv: readv failed: Unknown error (108)<BR>[REMOTEMACHINE:02032] [[20816,1],0] routed:binomial: Connection to lifeline [[20816,0],0] lost<BR>[REMOTEMACHINE:05064] [[20816,1],1] routed:binomial: Connection to lifeline [[20816,0],0] lost<BR>[REMOTEMACHINE:05420] [[20816,1],2] routed:binomial: Connection to lifeline [[20816,0],0] lost<BR>[REMOTEMACHINE:03852] [[20816,1],3] routed:binomial: Connection to lifeline [[20816,0],0] lost<BR>[REMOTEMACHINE:05436] [[20816,1],4] routed:binomial: Connection to lifeline [[20816,0],0] lost<BR>[REMOTEMACHINE:04416] [[20816,1],5] routed:binomial: Connection to lifeline [[20816,0],0] lost<BR>&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&gt; From: users-request@open-mpi.org<BR>&gt; Subject: users Digest, Vol 1911, Issue 1<BR>&gt; To: users@open-mpi.org<BR>&gt; Date: Fri, 20 May 2011 08:14:13 -0400<BR>&gt; <BR>&gt; Send users mailing list submissions to<BR>&gt; users@open-mpi.org<BR>&gt; <BR>&gt; To subscribe or unsubscribe via the World Wide Web, visit<BR>&gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; or, via email, send a message with subject or body 'help' to<BR>&gt; users-request@open-mpi.org<BR>&gt; <BR>&gt; You can reach the person managing the list at<BR>&gt; users-owner@open-mpi.org<BR>&gt; <BR>&gt; When replying, please edit your Subject line so it is more specific<BR>&gt; than "Re: Contents of users digest..."<BR>&gt; <BR>&gt; <BR>&gt; Today's Topics:<BR>&gt; <BR>&gt; 1. Re: Error: Entry Point Not Found (Zhangping Wei)<BR>&gt; 2. Re: Problem with MPI_Request, MPI_Isend/recv and<BR>&gt; MPI_Wait/Test (George Bosilca)<BR>&gt; 3. Re: v1.5.3-x64 does not work on Windows 7 workgroup (Jeff Squyres)<BR>&gt; 4. Re: Error: Entry Point Not Found (Jeff Squyres)<BR>&gt; 5. Re: openmpi (1.2.8 or above) and Intel composer XE 2011 (aka<BR>&gt; 12.0) (Jeff Squyres)<BR>&gt; 6. Re: Openib with &gt; 32 cores per node (Jeff Squyres)<BR>&gt; 7. Re: MPI_COMM_DUP freeze with OpenMPI 1.4.1 (Jeff Squyres)<BR>&gt; 8. Re: Trouble with MPI-IO (Jeff Squyres)<BR>&gt; 9. Re: Trouble with MPI-IO (Tom Rosmond)<BR>&gt; 10. Re: Problem with MPI_Request, MPI_Isend/recv and<BR>&gt; MPI_Wait/Test (David B?ttner)<BR>&gt; 11. Re: Trouble with MPI-IO (Jeff Squyres)<BR>&gt; 12. Re: MPI_Alltoallv function crashes when np &gt; 100 (Jeff Squyres)<BR>&gt; 13. Re: MPI_ERR_TRUNCATE with MPI_Allreduce() error, but only<BR>&gt; sometimes... (Jeff Squyres)<BR>&gt; 14. Re: Trouble with MPI-IO (Jeff Squyres)<BR>&gt; <BR>&gt; <BR>&gt; ----------------------------------------------------------------------<BR>&gt; <BR>&gt; Message: 1<BR>&gt; Date: Thu, 19 May 2011 09:13:53 -0700 (PDT)<BR>&gt; From: Zhangping Wei &lt;zhangping_wei@yahoo.com&gt;<BR>&gt; Subject: Re: [OMPI users] Error: Entry Point Not Found<BR>&gt; To: users@open-mpi.org<BR>&gt; Message-ID: &lt;101342.7961.qm@web111818.mail.gq1.yahoo.com&gt;<BR>&gt; Content-Type: text/plain; charset="gb2312"<BR>&gt; <BR>&gt; Dear Paul,<BR>&gt; <BR>&gt; I checked the way 'mpirun -np N &lt;cmd&gt;' you mentioned, but it was the same <BR>&gt; problem.<BR>&gt; <BR>&gt; I guess it may related to the system I used, because I have used it correctly in <BR>&gt; another XP 32 bit system.<BR>&gt; <BR>&gt; I look forward to more advice.Thanks.<BR>&gt; <BR>&gt; Zhangping <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ________________________________<BR>&gt; ???????? "users-request@open-mpi.org" &lt;users-request@open-mpi.org&gt;<BR>&gt; ???????? users@open-mpi.org<BR>&gt; ?????????? 2011/5/19 (????) 11:00:02 ????<BR>&gt; ?? ???? users Digest, Vol 1910, Issue 2<BR>&gt; <BR>&gt; Send users mailing list submissions to<BR>&gt; users@open-mpi.org<BR>&gt; <BR>&gt; To subscribe or unsubscribe via the World Wide Web, visit<BR>&gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; or, via email, send a message with subject or body 'help' to<BR>&gt; users-request@open-mpi.org<BR>&gt; <BR>&gt; You can reach the person managing the list at<BR>&gt; users-owner@open-mpi.org<BR>&gt; <BR>&gt; When replying, please edit your Subject line so it is more specific<BR>&gt; than "Re: Contents of users digest..."<BR>&gt; <BR>&gt; <BR>&gt; Today's Topics:<BR>&gt; <BR>&gt; 1. Re: Error: Entry Point Not Found (Paul van der Walt)<BR>&gt; 2. Re: Openib with &gt; 32 cores per node (Robert Horton)<BR>&gt; 3. Re: Openib with &gt; 32 cores per node (Samuel K. Gutierrez)<BR>&gt; <BR>&gt; <BR>&gt; ----------------------------------------------------------------------<BR>&gt; <BR>&gt; Message: 1<BR>&gt; Date: Thu, 19 May 2011 16:14:02 +0100<BR>&gt; From: Paul van der Walt &lt;paul@denknerd.nl&gt;<BR>&gt; Subject: Re: [OMPI users] Error: Entry Point Not Found<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;BANLkTinjZ0CNtchQJCZYhfGSnR51jPuP7w@mail.gmail.com&gt;<BR>&gt; Content-Type: text/plain; charset=UTF-8<BR>&gt; <BR>&gt; Hi,<BR>&gt; <BR>&gt; On 19 May 2011 15:54, Zhangping Wei &lt;zhangping_wei@yahoo.com&gt; wrote:<BR>&gt; &gt; 4, I use command window to run it in this way: ?mpirun ?n 4 ?**.exe ?,then I<BR>&gt; <BR>&gt; Probably not the problem, but shouldn't that be 'mpirun -np N &lt;cmd&gt;' ?<BR>&gt; <BR>&gt; Paul<BR>&gt; <BR>&gt; -- <BR>&gt; O&lt; ascii ribbon campaign - stop html mail - www.asciiribbon.org<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 2<BR>&gt; Date: Thu, 19 May 2011 16:37:56 +0100<BR>&gt; From: Robert Horton &lt;r.horton@qmul.ac.uk&gt;<BR>&gt; Subject: Re: [OMPI users] Openib with &gt; 32 cores per node<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;1305819476.9663.148.camel@moelwyn&gt;<BR>&gt; Content-Type: text/plain; charset="UTF-8"<BR>&gt; <BR>&gt; On Thu, 2011-05-19 at 08:27 -0600, Samuel K. Gutierrez wrote:<BR>&gt; &gt; Hi,<BR>&gt; &gt; <BR>&gt; &gt; Try the following QP parameters that only use shared receive queues.<BR>&gt; &gt; <BR>&gt; &gt; -mca btl_openib_receive_queues S,12288,128,64,32:S,65536,128,64,32<BR>&gt; &gt; <BR>&gt; <BR>&gt; Thanks for that. If I run the job over 2 x 48 cores it now works and the<BR>&gt; performance seems reasonable (I need to do some more tuning) but when I<BR>&gt; go up to 4 x 48 cores I'm getting the same problem:<BR>&gt; <BR>&gt; [compute-1-7.local][[14383,1],86][../../../../../ompi/mca/btl/openib/connect/btl_openib_connect_oob.c:464:qp_create_one]<BR>&gt; error creating qp errno says Cannot allocate memory<BR>&gt; [compute-1-7.local:18106] *** An error occurred in MPI_Isend<BR>&gt; [compute-1-7.local:18106] *** on communicator MPI_COMM_WORLD<BR>&gt; [compute-1-7.local:18106] *** MPI_ERR_OTHER: known error not in list<BR>&gt; [compute-1-7.local:18106] *** MPI_ERRORS_ARE_FATAL (your MPI job will now abort)<BR>&gt; <BR>&gt; Any thoughts?<BR>&gt; <BR>&gt; Thanks,<BR>&gt; Rob<BR>&gt; -- <BR>&gt; Robert Horton<BR>&gt; System Administrator (Research Support) - School of Mathematical Sciences<BR>&gt; Queen Mary, University of London<BR>&gt; r.horton@qmul.ac.uk - +44 (0) 20 7882 7345<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 3<BR>&gt; Date: Thu, 19 May 2011 09:59:13 -0600<BR>&gt; From: "Samuel K. Gutierrez" &lt;samuel@lanl.gov&gt;<BR>&gt; Subject: Re: [OMPI users] Openib with &gt; 32 cores per node<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;B3E83138-9AF0-48C0-871C-DBBB2E712E12@lanl.gov&gt;<BR>&gt; Content-Type: text/plain; charset=us-ascii<BR>&gt; <BR>&gt; Hi,<BR>&gt; <BR>&gt; On May 19, 2011, at 9:37 AM, Robert Horton wrote<BR>&gt; <BR>&gt; &gt; On Thu, 2011-05-19 at 08:27 -0600, Samuel K. Gutierrez wrote:<BR>&gt; &gt;&gt; Hi,<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Try the following QP parameters that only use shared receive queues.<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; -mca btl_openib_receive_queues S,12288,128,64,32:S,65536,128,64,32<BR>&gt; &gt;&gt; <BR>&gt; &gt; <BR>&gt; &gt; Thanks for that. If I run the job over 2 x 48 cores it now works and the<BR>&gt; &gt; performance seems reasonable (I need to do some more tuning) but when I<BR>&gt; &gt; go up to 4 x 48 cores I'm getting the same problem:<BR>&gt; &gt; <BR>&gt; &gt;[compute-1-7.local][[14383,1],86][../../../../../ompi/mca/btl/openib/connect/btl_openib_connect_oob.c:464:qp_create_one]<BR>&gt; &gt;] error creating qp errno says Cannot allocate memory<BR>&gt; &gt; [compute-1-7.local:18106] *** An error occurred in MPI_Isend<BR>&gt; &gt; [compute-1-7.local:18106] *** on communicator MPI_COMM_WORLD<BR>&gt; &gt; [compute-1-7.local:18106] *** MPI_ERR_OTHER: known error not in list<BR>&gt; &gt; [compute-1-7.local:18106] *** MPI_ERRORS_ARE_FATAL (your MPI job will now <BR>&gt; &gt;abort)<BR>&gt; &gt; <BR>&gt; &gt; Any thoughts?<BR>&gt; <BR>&gt; How much memory does each node have? Does this happen at startup?<BR>&gt; <BR>&gt; Try adding:<BR>&gt; <BR>&gt; -mca btl_openib_cpc_include rdmacm<BR>&gt; <BR>&gt; I'm not sure if your version of OFED supports this feature, but maybe using XRC <BR>&gt; may help. I **think** other tweaks are needed to get this going, but I'm not <BR>&gt; familiar with the details.<BR>&gt; <BR>&gt; Hope that helps,<BR>&gt; <BR>&gt; Samuel K. Gutierrez<BR>&gt; Los Alamos National Laboratory<BR>&gt; <BR>&gt; <BR>&gt; &gt; <BR>&gt; &gt; Thanks,<BR>&gt; &gt; Rob<BR>&gt; &gt; -- <BR>&gt; &gt; Robert Horton<BR>&gt; &gt; System Administrator (Research Support) - School of Mathematical Sciences<BR>&gt; &gt; Queen Mary, University of London<BR>&gt; &gt; r.horton@qmul.ac.uk - +44 (0) 20 7882 7345<BR>&gt; &gt; <BR>&gt; &gt; _______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; _______________________________________________<BR>&gt; users mailing list<BR>&gt; users@open-mpi.org<BR>&gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; End of users Digest, Vol 1910, Issue 2<BR>&gt; **************************************<BR>&gt; -------------- next part --------------<BR>&gt; HTML attachment scrubbed and removed<BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 2<BR>&gt; Date: Thu, 19 May 2011 08:48:03 -0800<BR>&gt; From: George Bosilca &lt;bosilca@eecs.utk.edu&gt;<BR>&gt; Subject: Re: [OMPI users] Problem with MPI_Request, MPI_Isend/recv and<BR>&gt; MPI_Wait/Test<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;FCAC66F9-FDB5-48BB-A800-263D8A4F9337@eecs.utk.edu&gt;<BR>&gt; Content-Type: text/plain; charset=iso-8859-1<BR>&gt; <BR>&gt; David,<BR>&gt; <BR>&gt; I do not see any mechanism for protecting the accesses to the requests to a single thread? What is the thread model you're using?<BR>&gt; <BR>&gt; &gt;From an implementation perspective, your code is correct only if you initialize the MPI library with MPI_THREAD_MULTIPLE and if the library accepts. Otherwise, there is an assumption that the application is single threaded, or that the MPI behavior is implementation dependent. Please read the MPI standard regarding to MPI_Init_thread for more details.<BR>&gt; <BR>&gt; Regards,<BR>&gt; george.<BR>&gt; <BR>&gt; On May 19, 2011, at 02:34 , David B?ttner wrote:<BR>&gt; <BR>&gt; &gt; Hello,<BR>&gt; &gt; <BR>&gt; &gt; I am working on a hybrid MPI (OpenMPI 1.4.3) and Pthread code. I am using MPI_Isend and MPI_Irecv for communication and MPI_Test/MPI_Wait to check if it is done. I do this repeatedly in the outer loop of my code. The MPI_Test is used in the inner loop to check if some function can be called which depends on the received data.<BR>&gt; &gt; The program regularly crashed (only when not using printf...) and after debugging it I figured out the following problem:<BR>&gt; &gt; <BR>&gt; &gt; In MPI_Isend I have an invalid read of memory. I fixed the problem with not re-using a<BR>&gt; &gt; <BR>&gt; &gt; MPI_Request req_s, req_r;<BR>&gt; &gt; <BR>&gt; &gt; but by using<BR>&gt; &gt; <BR>&gt; &gt; MPI_Request* req_s;<BR>&gt; &gt; MPI_Request* req_r<BR>&gt; &gt; <BR>&gt; &gt; and re-allocating them before the MPI_Isend/recv.<BR>&gt; &gt; <BR>&gt; &gt; The documentation says, that in MPI_Wait and MPI_Test (if successful) the request-objects are deallocated and set to MPI_REQUEST_NULL.<BR>&gt; &gt; It also says, that in MPI_Isend and MPI_Irecv, it allocates the Objects and associates it with the request object.<BR>&gt; &gt; <BR>&gt; &gt; As I understand this, this either means I can use a pointer to MPI_Request which I don't have to initialize for this (it doesn't work but crashes), or that I can use a MPI_Request pointer which I have initialized with malloc(sizeof(MPI_REQUEST)) (or passing the address of a MPI_Request req), which is set and unset in the functions. But this version crashes, too.<BR>&gt; &gt; What works is using a pointer, which I allocate before the MPI_Isend/recv and which I free after MPI_Wait in every iteration. In other words: It only uses if I don't reuse any kind of MPI_Request. Only if I recreate one every time.<BR>&gt; &gt; <BR>&gt; &gt; Is this, what is should be like? I believe that a reuse of the memory would be a lot more efficient (less calls to malloc...). Am I missing something here? Or am I doing something wrong?<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; Let me provide some more detailed information about my problem:<BR>&gt; &gt; <BR>&gt; &gt; I am running the program on a 30 node infiniband cluster. Each node has 4 single core Opteron CPUs. I am running 1 MPI Rank per node and 4 threads per rank (-&gt; one thread per core).<BR>&gt; &gt; I am compiling with mpicc of OpenMPI using gcc below.<BR>&gt; &gt; Some pseudo-code of the program can be found at the end of this e-mail.<BR>&gt; &gt; <BR>&gt; &gt; I was able to reproduce the problem using different amount of nodes and even using one node only. The problem does not arise when I put printf-debugging information into the code. This pointed me into the direction that I have some memory problem, where some write accesses some memory it is not supposed to.<BR>&gt; &gt; I ran the tests using valgrind with --leak-check=full and --show-reachable=yes, which pointed me either to MPI_Isend or MPI_Wait depending on whether I had the threads spin in a loop for MPI_Test to return success or used MPI_Wait respectively.<BR>&gt; &gt; <BR>&gt; &gt; I would appreciate your help with this. Am I missing something important here? Is there a way to re-use the request in the different iterations other than I thought it should work?<BR>&gt; &gt; Or is there a way to re-initialize the allocated memory before the MPI_Isend/recv so that I at least don't have to call free and malloc each time?<BR>&gt; &gt; <BR>&gt; &gt; Thank you very much for your help!<BR>&gt; &gt; Kind regards,<BR>&gt; &gt; David B?ttner<BR>&gt; &gt; <BR>&gt; &gt; _____________________<BR>&gt; &gt; Pseudo-Code of program:<BR>&gt; &gt; <BR>&gt; &gt; MPI_Request* req_s;<BR>&gt; &gt; MPI_Request* req_w;<BR>&gt; &gt; OUTER-LOOP<BR>&gt; &gt; if(0 == threadid)<BR>&gt; &gt; {<BR>&gt; &gt; req_s = malloc(sizeof(MPI_Request));<BR>&gt; &gt; req_r = malloc(sizeof(MPI_Request));<BR>&gt; &gt; MPI_Isend(..., req_s)<BR>&gt; &gt; MPI_Irecv(..., req_r)<BR>&gt; &gt; }<BR>&gt; &gt; pthread_barrier<BR>&gt; &gt; INNER-LOOP (while NOT_DONE or RET)<BR>&gt; &gt; if(TRYLOCK &amp;&amp; NOT_DONE)<BR>&gt; &gt; {<BR>&gt; &gt; if(MPI_TEST(req_r))<BR>&gt; &gt; {<BR>&gt; &gt; Call_Function_A;<BR>&gt; &gt; NOT_DONE = 0;<BR>&gt; &gt; }<BR>&gt; &gt; <BR>&gt; &gt; }<BR>&gt; &gt; RET = Call_Function_B;<BR>&gt; &gt; }<BR>&gt; &gt; pthread_barrier_wait<BR>&gt; &gt; if(0 == threadid)<BR>&gt; &gt; {<BR>&gt; &gt; MPI_WAIT(req_s)<BR>&gt; &gt; MPI_WAIT(req_r)<BR>&gt; &gt; free(req_s);<BR>&gt; &gt; free(req_r);<BR>&gt; &gt; }<BR>&gt; &gt; _____________<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; -- <BR>&gt; &gt; David B?ttner, Informatik, Technische Universit?t M?nchen<BR>&gt; &gt; TUM I-10 - FMI 01.06.059 - Tel. 089 / 289-17676<BR>&gt; &gt; <BR>&gt; &gt; _______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; "To preserve the freedom of the human mind then and freedom of the press, every spirit should be ready to devote itself to martyrdom; for as long as we may think as we will, and speak as we think, the condition of man will proceed in improvement."<BR>&gt; -- Thomas Jefferson, 1799<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 3<BR>&gt; Date: Thu, 19 May 2011 21:22:48 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] v1.5.3-x64 does not work on Windows 7<BR>&gt; workgroup<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;278274F0-BF00-4498-950F-9779E0083C5A@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=us-ascii<BR>&gt; <BR>&gt; Unfortunately, our Windows guy (Shiqing) is off getting married and will be out for a little while. :-(<BR>&gt; <BR>&gt; All that I can cite is the README.WINDOWS.txt file in the top-level directory. I'm afraid that I don't know much else about Windows. :-(<BR>&gt; <BR>&gt; <BR>&gt; On May 18, 2011, at 8:17 PM, Jason Mackay wrote:<BR>&gt; <BR>&gt; &gt; Hi all,<BR>&gt; &gt; <BR>&gt; &gt; My thanks to all those involved for putting together this Windows binary release of OpenMPI! I am hoping to use it in a small Windows based OpenMPI cluster at home.<BR>&gt; &gt; <BR>&gt; &gt; Unfortunately my experience so far has not exactly been trouble free. It seems that, due to the fact that this release is using WMI, there are a number of settings that must be configured on the machines in order to get this to work. These settings are not documented in the distribution at all. I have been experimenting with it for over a week on and off and as soon as I solve one problem, another one arises.<BR>&gt; &gt; <BR>&gt; &gt; Currently, after much searching, reading, and tinkering with DCOM settings etc..., I can remotely start processes on all my machines using mpirun but those processes cannot access network shares (e.g. for binary distribution) and HPL (which works on any one node) does not seem to work if I run it across multiple nodes, also indicating a network issue (CPU sits at 100% in all processes with no network traffic and never terminates). To eliminate premission issues that may be caused by UAC I tried the same setup on two domain machines using an administrative account to launch and the behavior was the same. I have read that WMI processes cannot access network resources and I am at a loss for a solution to this newest of problems. If anyone knows how to make this work I would appreciate the help. I assume that someone has gotten this working and has the answers.<BR>&gt; &gt; <BR>&gt; &gt; I have searched the mailing list archives and I found other users with similar problems but no clear guidance on the threads. Some threads make references to Microsoft KB articles but do not explicitly tell the user what needs to be done, leaving each new user to rediscover the tricks on their own. One thread made it appear that testing had only been done on Windows XP. Needless to say, security has changed dramatically in Windows since XP!<BR>&gt; &gt; <BR>&gt; &gt; I would like to see OpenMPI for Windows be usable by a newcomer without all of this pain.<BR>&gt; &gt; <BR>&gt; &gt; What would be fantastic would be:<BR>&gt; &gt; 1) a step-by-step procedure for how to get OpenMPI 1.5 working on Windows<BR>&gt; &gt; a) preferably in a bare Windows 7 workgroup environment with nothing else (i.e. no Microsoft Cluster Compute Pack, no domain etc...)<BR>&gt; &gt; 2) inclusion of these steps in the binary distribution<BR>&gt; &gt; 3) bonus points for a script which accomplishes these things automatically<BR>&gt; &gt; <BR>&gt; &gt; If someone can help with (1), I would happily volunteer my time to work on (3).<BR>&gt; &gt; <BR>&gt; &gt; Regards,<BR>&gt; &gt; Jason<BR>&gt; &gt; _______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 4<BR>&gt; Date: Thu, 19 May 2011 21:26:43 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] Error: Entry Point Not Found<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;F830EC35-FC9B-4801-B2A3-50F54D2152A4@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=windows-1252<BR>&gt; <BR>&gt; On May 19, 2011, at 10:54 AM, Zhangping Wei wrote:<BR>&gt; <BR>&gt; &gt; 4, I use command window to run it in this way: ?mpirun ?n 4 **.exe ?,then I met the error: ?entry point not found: the procedure entry point inet_pton could not be located in the dynamic link library WS2_32.dll?<BR>&gt; <BR>&gt; Unfortunately our Windows developer/maintainer is out for a little while (he's getting married); he pretty much did the Windows stuff by himself, so none of the rest of us know much about it. :(<BR>&gt; <BR>&gt; inet_pton is a standard function call relating to IP addresses that we use in the internals of OMPI; I'm not sure why it wouldn't be found on Windows XP (Shiqing did cite that the OMPI Windows port should work on Windows XP). <BR>&gt; <BR>&gt; This post seems to imply that inet_ntop is only available on Vista and above:<BR>&gt; <BR>&gt; http://social.msdn.microsoft.com/Forums/en-US/vcgeneral/thread/e40465f2-41b7-4243-ad33-15ae9366f4e6/<BR>&gt; <BR>&gt; So perhaps Shiqing needs to put in some kind of portability workaround for OMPI, and the current binaries won't actually work for XP...?<BR>&gt; <BR>&gt; I can't say that for sure because I really know very little about Windows; we'll unfortunately have to wait until he returns to get a definitive answer. :-(<BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 5<BR>&gt; Date: Thu, 19 May 2011 21:37:49 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] openmpi (1.2.8 or above) and Intel composer<BR>&gt; XE 2011 (aka 12.0)<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Cc: Giovanni Bracco &lt;giovanni.bracco@enea.it&gt;, Agostino Funel<BR>&gt; &lt;agostino.funel@enea.it&gt;, Fiorenzo Ambrosino<BR>&gt; &lt;fiorenzo.ambrosino@enea.it&gt;, Guido Guarnieri<BR>&gt; &lt;guido.guarnieri@enea.it&gt;, Roberto Ciavarella<BR>&gt; &lt;roberto.ciavarella@enea.it&gt;, Salvatore Podda<BR>&gt; &lt;salvatore.podda@enea.it&gt;, Giovanni Ponti &lt;giovanni.ponti@enea.it&gt;<BR>&gt; Message-ID: &lt;45362608-B8B0-4ADE-9959-B35C5690A6F3@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=us-ascii<BR>&gt; <BR>&gt; Sorry for the late reply.<BR>&gt; <BR>&gt; Other users have seen something similar but we have never been able to reproduce it. Is this only when using IB? If you use "mpirun --mca btl_openib_cpc_if_include rdmacm", does the problem go away?<BR>&gt; <BR>&gt; <BR>&gt; On May 11, 2011, at 6:00 PM, Marcus R. Epperson wrote:<BR>&gt; <BR>&gt; &gt; I've seen the same thing when I build openmpi 1.4.3 with Intel 12, but only when I have -O2 or -O3 in CFLAGS. If I drop it down to -O1 then the collectives hangs go away. I don't know what, if anything, the higher optimization buys you when compiling openmpi, so I'm not sure if that's an acceptable workaround or not.<BR>&gt; &gt; <BR>&gt; &gt; My system is similar to yours - Intel X5570 with QDR Mellanox IB running RHEL 5, Slurm, and these openmpi btls: openib,sm,self. I'm using IMB 3.2.2 with a single iteration of Barrier to reproduce the hang, and it happens 100% of the time for me when I invoke it like this:<BR>&gt; &gt; <BR>&gt; &gt; # salloc -N 9 orterun -n 65 ./IMB-MPI1 -npmin 64 -iter 1 barrier<BR>&gt; &gt; <BR>&gt; &gt; The hang happens on the first Barrier (64 ranks) and each of the participating ranks have this backtrace:<BR>&gt; &gt; <BR>&gt; &gt; __poll (...)<BR>&gt; &gt; poll_dispatch () from [instdir]/lib/libopen-pal.so.0<BR>&gt; &gt; opal_event_loop () from [instdir]/lib/libopen-pal.so.0<BR>&gt; &gt; opal_progress () from [instdir]/lib/libopen-pal.so.0<BR>&gt; &gt; ompi_request_default_wait_all () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; ompi_coll_tuned_sendrecv_actual () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; ompi_coll_tuned_barrier_intra_recursivedoubling () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; ompi_coll_tuned_barrier_intra_dec_fixed () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; PMPI_Barrier () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; IMB_barrier ()<BR>&gt; &gt; IMB_init_buffers_iter ()<BR>&gt; &gt; main ()<BR>&gt; &gt; <BR>&gt; &gt; The one non-participating rank has this backtrace:<BR>&gt; &gt; <BR>&gt; &gt; __poll (...)<BR>&gt; &gt; poll_dispatch () from [instdir]/lib/libopen-pal.so.0<BR>&gt; &gt; opal_event_loop () from [instdir]/lib/libopen-pal.so.0<BR>&gt; &gt; opal_progress () from [instdir]/lib/libopen-pal.so.0<BR>&gt; &gt; ompi_request_default_wait_all () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; ompi_coll_tuned_sendrecv_actual () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; ompi_coll_tuned_barrier_intra_bruck () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; ompi_coll_tuned_barrier_intra_dec_fixed () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; PMPI_Barrier () from [instdir]/lib/libmpi.so.0<BR>&gt; &gt; main ()<BR>&gt; &gt; <BR>&gt; &gt; If I use more nodes I can get it to hang with 1ppn, so that seems to rule out the sm btl (or interactions with it) as a culprit at least.<BR>&gt; &gt; <BR>&gt; &gt; I can't reproduce this with openmpi 1.5.3, interestingly.<BR>&gt; &gt; <BR>&gt; &gt; -Marcus<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; On 05/10/2011 03:37 AM, Salvatore Podda wrote:<BR>&gt; &gt;&gt; Dear all,<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; we succeed in building several version of openmpi from 1.2.8 to 1.4.3 <BR>&gt; &gt;&gt; with Intel composer XE 2011 (aka 12.0).<BR>&gt; &gt;&gt; However we found a threshold in the number of cores (depending from the <BR>&gt; &gt;&gt; application: IMB, xhpl or user applications<BR>&gt; &gt;&gt; and form the number of required cores) above which the application hangs <BR>&gt; &gt;&gt; (sort of deadlocks).<BR>&gt; &gt;&gt; The building of openmpi with 'gcc' and 'pgi' does not show the same limits.<BR>&gt; &gt;&gt; There are any known incompatibilities of openmpi with this version of <BR>&gt; &gt;&gt; intel compiilers?<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; The characteristics of our computational infrastructure are:<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Intel processors E7330, E5345, E5530 e E5620<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; CentOS 5.3, CentOS 5.5.<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Intel composer XE 2011<BR>&gt; &gt;&gt; gcc 4.1.2<BR>&gt; &gt;&gt; pgi 10.2-1<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Regards<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Salvatore Podda<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; ENEA UTICT-HPC<BR>&gt; &gt;&gt; Department for Computer Science Development and ICT<BR>&gt; &gt;&gt; Facilities Laboratory for Science and High Performace Computing<BR>&gt; &gt;&gt; C.R. Frascati<BR>&gt; &gt;&gt; Via E. Fermi, 45<BR>&gt; &gt;&gt; PoBox 65<BR>&gt; &gt;&gt; 00044 Frascati (Rome)<BR>&gt; &gt;&gt; Italy<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Tel: +39 06 9400 5342<BR>&gt; &gt;&gt; Fax: +39 06 9400 5551<BR>&gt; &gt;&gt; Fax: +39 06 9400 5735<BR>&gt; &gt;&gt; E-mail: salvatore.podda@enea.it<BR>&gt; &gt;&gt; Home Page: www.cresco.enea.it<BR>&gt; &gt;&gt; _______________________________________________<BR>&gt; &gt;&gt; users mailing list<BR>&gt; &gt;&gt; users@open-mpi.org<BR>&gt; &gt;&gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; &gt;&gt; <BR>&gt; &gt; <BR>&gt; &gt; _______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 6<BR>&gt; Date: Thu, 19 May 2011 22:01:00 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] Openib with &gt; 32 cores per node<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;C18C4827-D305-484A-9DAE-290902D40DB3@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=us-ascii<BR>&gt; <BR>&gt; What Sam is alluding to is that the OpenFabrics driver code in OMPI is sucking up oodles of memory for each IB connection that you're using. The receive_queues param that he sent tells OMPI to use all shared receive queues (instead of defaulting to one per-peer receive queue and the rest shared receive queues -- the per-peer RQ sucks up all the memory when you multiple it by N peers).<BR>&gt; <BR>&gt; <BR>&gt; On May 19, 2011, at 11:59 AM, Samuel K. Gutierrez wrote:<BR>&gt; <BR>&gt; &gt; Hi,<BR>&gt; &gt; <BR>&gt; &gt; On May 19, 2011, at 9:37 AM, Robert Horton wrote<BR>&gt; &gt; <BR>&gt; &gt;&gt; On Thu, 2011-05-19 at 08:27 -0600, Samuel K. Gutierrez wrote:<BR>&gt; &gt;&gt;&gt; Hi,<BR>&gt; &gt;&gt;&gt; <BR>&gt; &gt;&gt;&gt; Try the following QP parameters that only use shared receive queues.<BR>&gt; &gt;&gt;&gt; <BR>&gt; &gt;&gt;&gt; -mca btl_openib_receive_queues S,12288,128,64,32:S,65536,128,64,32<BR>&gt; &gt;&gt;&gt; <BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Thanks for that. If I run the job over 2 x 48 cores it now works and the<BR>&gt; &gt;&gt; performance seems reasonable (I need to do some more tuning) but when I<BR>&gt; &gt;&gt; go up to 4 x 48 cores I'm getting the same problem:<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; [compute-1-7.local][[14383,1],86][../../../../../ompi/mca/btl/openib/connect/btl_openib_connect_oob.c:464:qp_create_one] error creating qp errno says Cannot allocate memory<BR>&gt; &gt;&gt; [compute-1-7.local:18106] *** An error occurred in MPI_Isend<BR>&gt; &gt;&gt; [compute-1-7.local:18106] *** on communicator MPI_COMM_WORLD<BR>&gt; &gt;&gt; [compute-1-7.local:18106] *** MPI_ERR_OTHER: known error not in list<BR>&gt; &gt;&gt; [compute-1-7.local:18106] *** MPI_ERRORS_ARE_FATAL (your MPI job will now abort)<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Any thoughts?<BR>&gt; &gt; <BR>&gt; &gt; How much memory does each node have? Does this happen at startup?<BR>&gt; &gt; <BR>&gt; &gt; Try adding:<BR>&gt; &gt; <BR>&gt; &gt; -mca btl_openib_cpc_include rdmacm<BR>&gt; &gt; <BR>&gt; &gt; I'm not sure if your version of OFED supports this feature, but maybe using XRC may help. I **think** other tweaks are needed to get this going, but I'm not familiar with the details.<BR>&gt; &gt; <BR>&gt; &gt; Hope that helps,<BR>&gt; &gt; <BR>&gt; &gt; Samuel K. Gutierrez<BR>&gt; &gt; Los Alamos National Laboratory<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; Thanks,<BR>&gt; &gt;&gt; Rob<BR>&gt; &gt;&gt; -- <BR>&gt; &gt;&gt; Robert Horton<BR>&gt; &gt;&gt; System Administrator (Research Support) - School of Mathematical Sciences<BR>&gt; &gt;&gt; Queen Mary, University of London<BR>&gt; &gt;&gt; r.horton@qmul.ac.uk - +44 (0) 20 7882 7345<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; _______________________________________________<BR>&gt; &gt;&gt; users mailing list<BR>&gt; &gt;&gt; users@open-mpi.org<BR>&gt; &gt;&gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; _______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 7<BR>&gt; Date: Thu, 19 May 2011 22:04:46 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] MPI_COMM_DUP freeze with OpenMPI 1.4.1<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;0DCF20B8-CA5C-4746-8187-A2DFF39B15DD@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=us-ascii<BR>&gt; <BR>&gt; On May 13, 2011, at 8:31 AM, francoise.roch@obs.ujf-grenoble.fr wrote:<BR>&gt; <BR>&gt; &gt; Here is the MUMPS portion of code (in zmumps_part1.F file) where the slaves call MPI_COMM_DUP , id%PAR and MASTER are initialized to 0 before :<BR>&gt; &gt; <BR>&gt; &gt; CALL MPI_COMM_SIZE(id%COMM, id%NPROCS, IERR )<BR>&gt; <BR>&gt; I re-indented so that I could read it better:<BR>&gt; <BR>&gt; CALL MPI_COMM_SIZE(id%COMM, id%NPROCS, IERR )<BR>&gt; IF ( id%PAR .eq. 0 ) THEN<BR>&gt; IF ( id%MYID .eq. MASTER ) THEN<BR>&gt; color = MPI_UNDEFINED<BR>&gt; ELSE<BR>&gt; color = 0<BR>&gt; END IF<BR>&gt; CALL MPI_COMM_SPLIT( id%COMM, color, 0,<BR>&gt; &amp; id%COMM_NODES, IERR )<BR>&gt; id%NSLAVES = id%NPROCS - 1<BR>&gt; ELSE<BR>&gt; CALL MPI_COMM_DUP( id%COMM, id%COMM_NODES, IERR )<BR>&gt; id%NSLAVES = id%NPROCS<BR>&gt; END IF<BR>&gt; <BR>&gt; IF (id%PAR .ne. 0 .or. id%MYID .NE. MASTER) THEN<BR>&gt; CALL MPI_COMM_DUP( id%COMM_NODES, id%COMM_LOAD, IERR<BR>&gt; ENDIF<BR>&gt; <BR>&gt; That doesn't look right -- both MPI_COMM_SPLIT and MPI_COMM_DUP are collective, meaning that all processes in the communicator must call them. In the first case, only some processes are calling MPI_COMM_SPLIT. Is there some other logic that forces the rest of the processes to call MPI_COMM_SPLIT, too?<BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 8<BR>&gt; Date: Thu, 19 May 2011 22:30:03 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] Trouble with MPI-IO<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;EEFB638F-72F1-4208-8EA2-4F25F610C47B@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=us-ascii<BR>&gt; <BR>&gt; Props for that testio script. I think you win the award for "most easy to reproduce test case." :-)<BR>&gt; <BR>&gt; I notice that some of the lines went over 72 columns, so I renamed the file x.f90 and changed all the comments from "c" to "!" and joined the two &amp;-split lines. The error about implicit type for lenr went away, but then when I enabled better type checking by using "use mpi" instead of "include 'mpif.h'", I got the following:<BR>&gt; <BR>&gt; x.f90:99.77:<BR>&gt; <BR>&gt; call mpi_type_indexed(lenij,ijlena,ijdisp,mpi_real,ij_vector_type,ierr)<BR>&gt; 1 <BR>&gt; Error: There is no specific subroutine for the generic 'mpi_type_indexed' at (1)<BR>&gt; <BR>&gt; I looked at our mpi F90 module and see the following:<BR>&gt; <BR>&gt; interface MPI_Type_indexed<BR>&gt; subroutine MPI_Type_indexed(count, array_of_blocklengths, array_of_displacements, oldtype, newtype, ierr)<BR>&gt; integer, intent(in) :: count<BR>&gt; integer, dimension(*), intent(in) :: array_of_blocklengths<BR>&gt; integer, dimension(*), intent(in) :: array_of_displacements<BR>&gt; integer, intent(in) :: oldtype<BR>&gt; integer, intent(out) :: newtype<BR>&gt; integer, intent(out) :: ierr<BR>&gt; end subroutine MPI_Type_indexed<BR>&gt; end interface<BR>&gt; <BR>&gt; I don't quite grok the syntax of the "allocatable" type ijdisp, so that might be the problem here...?<BR>&gt; <BR>&gt; Regardless, I'm not entirely sure if the problem is the &gt;72 character lines, but then when that is gone, I'm not sure how the allocatable stuff fits in... (I'm not enough of a Fortran programmer to know)<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; On May 10, 2011, at 7:14 PM, Tom Rosmond wrote:<BR>&gt; <BR>&gt; &gt; I would appreciate someone with experience with MPI-IO look at the<BR>&gt; &gt; simple fortran program gzipped and attached to this note. It is<BR>&gt; &gt; imbedded in a script so that all that is necessary to run it is do:<BR>&gt; &gt; 'testio' from the command line. The program generates a small 2-D input<BR>&gt; &gt; array, sets up an MPI-IO environment, and write a 2-D output array<BR>&gt; &gt; twice, with the only difference being the displacement arrays used to<BR>&gt; &gt; construct the indexed datatype. For the first write, simple<BR>&gt; &gt; monotonically increasing displacements are used, for the second the<BR>&gt; &gt; displacements are 'shuffled' in one dimension. They are printed during<BR>&gt; &gt; the run.<BR>&gt; &gt; <BR>&gt; &gt; For the first case the file is written properly, but for the second the<BR>&gt; &gt; program hangs on MPI_FILE_WRITE_AT_ALL and must be aborted manually.<BR>&gt; &gt; Although the program is compiled as an mpi program, I am running on a<BR>&gt; &gt; single processor, which makes the problem more puzzling.<BR>&gt; &gt; <BR>&gt; &gt; The program should be relatively self-explanatory, but if more<BR>&gt; &gt; information is needed, please ask. I am on an 8 core Xeon based Dell<BR>&gt; &gt; workstation running Scientific Linux 5.5, Intel fortran 12.0.3, and<BR>&gt; &gt; OpenMPI 1.5.3. I have also attached output from 'ompi_info'.<BR>&gt; &gt; <BR>&gt; &gt; T. Rosmond<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; &lt;testio.gz&gt;&lt;info_ompi.gz&gt;_______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 9<BR>&gt; Date: Thu, 19 May 2011 20:24:25 -0700<BR>&gt; From: Tom Rosmond &lt;rosmond@reachone.com&gt;<BR>&gt; Subject: Re: [OMPI users] Trouble with MPI-IO<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;1305861865.4284.104.camel@cedar.reachone.com&gt;<BR>&gt; Content-Type: text/plain<BR>&gt; <BR>&gt; Thanks for looking at my problem. Sounds like you did reproduce my<BR>&gt; problem. I have added some comments below<BR>&gt; <BR>&gt; On Thu, 2011-05-19 at 22:30 -0400, Jeff Squyres wrote:<BR>&gt; &gt; Props for that testio script. I think you win the award for "most easy to reproduce test case." :-)<BR>&gt; &gt; <BR>&gt; &gt; I notice that some of the lines went over 72 columns, so I renamed the file x.f90 and changed all the comments from "c" to "!" and joined the two &amp;-split lines. The error about implicit type for lenr went away, but then when I enabled better type checking by using "use mpi" instead of "include 'mpif.h'", I got the following:<BR>&gt; <BR>&gt; What fortran compiler did you use?<BR>&gt; <BR>&gt; In the original script my Intel compile used the -132 option, <BR>&gt; allowing up to that many columns per line. I still think in<BR>&gt; F77 fortran much of the time, and use 'c' for comments out<BR>&gt; of habit. The change to '!' doesn't make any difference.<BR>&gt; <BR>&gt; <BR>&gt; &gt; x.f90:99.77:<BR>&gt; &gt; <BR>&gt; &gt; call mpi_type_indexed(lenij,ijlena,ijdisp,mpi_real,ij_vector_type,ierr)<BR>&gt; &gt; 1 <BR>&gt; &gt; Error: There is no specific subroutine for the generic 'mpi_type_indexed' at (1)<BR>&gt; <BR>&gt; Hmmm, very strange, since I am looking right at the MPI standard<BR>&gt; documents with that routine documented. I too get this compile failure<BR>&gt; when I switch to 'use mpi'. Could that be a problem with the Open MPI<BR>&gt; fortran libraries???<BR>&gt; &gt; <BR>&gt; &gt; I looked at our mpi F90 module and see the following:<BR>&gt; &gt; <BR>&gt; &gt; interface MPI_Type_indexed<BR>&gt; &gt; subroutine MPI_Type_indexed(count, array_of_blocklengths, array_of_displacements, oldtype, newtype, ierr)<BR>&gt; &gt; integer, intent(in) :: count<BR>&gt; &gt; integer, dimension(*), intent(in) :: array_of_blocklengths<BR>&gt; &gt; integer, dimension(*), intent(in) :: array_of_displacements<BR>&gt; &gt; integer, intent(in) :: oldtype<BR>&gt; &gt; integer, intent(out) :: newtype<BR>&gt; &gt; integer, intent(out) :: ierr<BR>&gt; &gt; end subroutine MPI_Type_indexed<BR>&gt; &gt; end interface<BR>&gt; &gt; <BR>&gt; &gt; I don't quite grok the syntax of the "allocatable" type ijdisp, so that might be the problem here...?<BR>&gt; <BR>&gt; Just a standard F90 'allocatable' statement. I've written thousands<BR>&gt; just like it.<BR>&gt; &gt; <BR>&gt; &gt; Regardless, I'm not entirely sure if the problem is the &gt;72 character lines, but then when that is gone, I'm not sure how the allocatable stuff fits in... (I'm not enough of a Fortran programmer to know)<BR>&gt; &gt; <BR>&gt; Anyone else out that who can comment????<BR>&gt; <BR>&gt; <BR>&gt; T. Rosmond<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; &gt; <BR>&gt; &gt; On May 10, 2011, at 7:14 PM, Tom Rosmond wrote:<BR>&gt; &gt; <BR>&gt; &gt; &gt; I would appreciate someone with experience with MPI-IO look at the<BR>&gt; &gt; &gt; simple fortran program gzipped and attached to this note. It is<BR>&gt; &gt; &gt; imbedded in a script so that all that is necessary to run it is do:<BR>&gt; &gt; &gt; 'testio' from the command line. The program generates a small 2-D input<BR>&gt; &gt; &gt; array, sets up an MPI-IO environment, and write a 2-D output array<BR>&gt; &gt; &gt; twice, with the only difference being the displacement arrays used to<BR>&gt; &gt; &gt; construct the indexed datatype. For the first write, simple<BR>&gt; &gt; &gt; monotonically increasing displacements are used, for the second the<BR>&gt; &gt; &gt; displacements are 'shuffled' in one dimension. They are printed during<BR>&gt; &gt; &gt; the run.<BR>&gt; &gt; &gt; <BR>&gt; &gt; &gt; For the first case the file is written properly, but for the second the<BR>&gt; &gt; &gt; program hangs on MPI_FILE_WRITE_AT_ALL and must be aborted manually.<BR>&gt; &gt; &gt; Although the program is compiled as an mpi program, I am running on a<BR>&gt; &gt; &gt; single processor, which makes the problem more puzzling.<BR>&gt; &gt; &gt; <BR>&gt; &gt; &gt; The program should be relatively self-explanatory, but if more<BR>&gt; &gt; &gt; information is needed, please ask. I am on an 8 core Xeon based Dell<BR>&gt; &gt; &gt; workstation running Scientific Linux 5.5, Intel fortran 12.0.3, and<BR>&gt; &gt; &gt; OpenMPI 1.5.3. I have also attached output from 'ompi_info'.<BR>&gt; &gt; &gt; <BR>&gt; &gt; &gt; T. Rosmond<BR>&gt; &gt; &gt; <BR>&gt; &gt; &gt; <BR>&gt; &gt; &gt; &lt;testio.gz&gt;&lt;info_ompi.gz&gt;_______________________________________________<BR>&gt; &gt; &gt; users mailing list<BR>&gt; &gt; &gt; users@open-mpi.org<BR>&gt; &gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 10<BR>&gt; Date: Fri, 20 May 2011 09:25:14 +0200<BR>&gt; From: David B?ttner &lt;david.buettner@in.tum.de&gt;<BR>&gt; Subject: Re: [OMPI users] Problem with MPI_Request, MPI_Isend/recv and<BR>&gt; MPI_Wait/Test<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;4DD6175A.1080403@in.tum.de&gt;<BR>&gt; Content-Type: text/plain; charset=ISO-8859-1; format=flowed<BR>&gt; <BR>&gt; Hello,<BR>&gt; <BR>&gt; thanks for the quick answer. I am sorry that I forgot to mention this: I <BR>&gt; did compile OpenMPI with MPI_THREAD_MULTIPLE support and test if <BR>&gt; required == provided after the MPI_Thread_init call.<BR>&gt; <BR>&gt; &gt; I do not see any mechanism for protecting the accesses to the requests to a single thread? What is the thread model you're using?<BR>&gt; &gt;<BR>&gt; Again I am sorry that this was not clear: In the pseudo code below I <BR>&gt; wanted to indicate the access-protection I do by thread-id dependent <BR>&gt; calls if(0 == thread-id) and by using the trylock(...) (using <BR>&gt; pthread-mutexes). In the code all accesses concerning one MPI_Request <BR>&gt; (which are pthread-global-pointers in my case) are protected and called <BR>&gt; in sequential order, i.e. MPI_Isend/recv is returns before any thread is <BR>&gt; allowed to call the corresponding MPI_Test and no-one can call MPI_Test <BR>&gt; any more when a thread is allowed to call MPI_Wait.<BR>&gt; I did this in the same manner before with other MPI implementations, but <BR>&gt; also on the same machine with the same (untouched) OpenMPI <BR>&gt; implementation, also using pthreads and MPI in combination, but I used<BR>&gt; <BR>&gt; MPI_Request req;<BR>&gt; <BR>&gt; instead of<BR>&gt; <BR>&gt; MPI_Request* req;<BR>&gt; (and later)<BR>&gt; req = (MPI_Request*)malloc(sizeof(MPI_Request));<BR>&gt; <BR>&gt; <BR>&gt; In my recent (problem) code, I also tried not using pointers, but got <BR>&gt; the same problem. Also, as I described in the first mail, I tried <BR>&gt; everything concerning the memory allocation of the MPI_Request objects.<BR>&gt; I tried not calling malloc. This I guessed wouldn't work, but the <BR>&gt; OpenMPI documentation says this:<BR>&gt; <BR>&gt; " Nonblocking calls allocate a communication request object and <BR>&gt; associate it with the request handle the argument request). " <BR>&gt; [http://www.open-mpi.org/doc/v1.4/man3/MPI_Isend.3.php] and<BR>&gt; <BR>&gt; " [...] if the communication object was created by a nonblocking send or <BR>&gt; receive, then it is deallocated and the request handle is set to <BR>&gt; MPI_REQUEST_NULL." <BR>&gt; [http://www.open-mpi.org/doc/v1.4/man3/MPI_Test.3.php] and (in slightly <BR>&gt; different words) [http://www.open-mpi.org/doc/v1.4/man3/MPI_Wait.3.php]<BR>&gt; <BR>&gt; So I thought that it might do some kind of optimized memory stuff <BR>&gt; internally.<BR>&gt; <BR>&gt; I also tried allocating req (for each used MPI_Request) once before the <BR>&gt; first use and deallocation after the last use (which I thought was the <BR>&gt; way it was supposed to work), but that crashes also.<BR>&gt; <BR>&gt; I tried replacing the pointers through global variables<BR>&gt; <BR>&gt; MPI_Request req;<BR>&gt; <BR>&gt; which didn't do the job...<BR>&gt; <BR>&gt; The only thing that seems to work is what I mentioned below: Allocate <BR>&gt; every time I am going to need it in the MPI_Isend/recv, use it in <BR>&gt; MPI_Test/Wait and after that deallocate it by hand each time.<BR>&gt; I don't think that this is supposed to be like this since I have to do a <BR>&gt; call to malloc and free so often (for multiple MPI_Request objects in <BR>&gt; each iteration) that it will most likely limit performance...<BR>&gt; <BR>&gt; Anyway I still have the same problem and am still unclear on what kind <BR>&gt; of memory allocation I should be doing for the MPI_Requests. Is there <BR>&gt; anything else (besides MPI_THREAD_MULTIPLE support, thread access <BR>&gt; control, sequential order of MPI_Isend/recv, MPI_Test and MPI_Wait for <BR>&gt; one MPI_Request object) I need to take care of? If not, what could I do <BR>&gt; to find the source of my problem?<BR>&gt; <BR>&gt; Thanks again for any kind of help!<BR>&gt; <BR>&gt; Kind regards,<BR>&gt; David<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; &gt; &gt; From an implementation perspective, your code is correct only if you initialize the MPI library with MPI_THREAD_MULTIPLE and if the library accepts. Otherwise, there is an assumption that the application is single threaded, or that the MPI behavior is implementation dependent. Please read the MPI standard regarding to MPI_Init_thread for more details.<BR>&gt; &gt;<BR>&gt; &gt; Regards,<BR>&gt; &gt; george.<BR>&gt; &gt;<BR>&gt; &gt; On May 19, 2011, at 02:34 , David B?ttner wrote:<BR>&gt; &gt;<BR>&gt; &gt;&gt; Hello,<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; I am working on a hybrid MPI (OpenMPI 1.4.3) and Pthread code. I am using MPI_Isend and MPI_Irecv for communication and MPI_Test/MPI_Wait to check if it is done. I do this repeatedly in the outer loop of my code. The MPI_Test is used in the inner loop to check if some function can be called which depends on the received data.<BR>&gt; &gt;&gt; The program regularly crashed (only when not using printf...) and after debugging it I figured out the following problem:<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; In MPI_Isend I have an invalid read of memory. I fixed the problem with not re-using a<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; MPI_Request req_s, req_r;<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; but by using<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; MPI_Request* req_s;<BR>&gt; &gt;&gt; MPI_Request* req_r<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; and re-allocating them before the MPI_Isend/recv.<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; The documentation says, that in MPI_Wait and MPI_Test (if successful) the request-objects are deallocated and set to MPI_REQUEST_NULL.<BR>&gt; &gt;&gt; It also says, that in MPI_Isend and MPI_Irecv, it allocates the Objects and associates it with the request object.<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; As I understand this, this either means I can use a pointer to MPI_Request which I don't have to initialize for this (it doesn't work but crashes), or that I can use a MPI_Request pointer which I have initialized with malloc(sizeof(MPI_REQUEST)) (or passing the address of a MPI_Request req), which is set and unset in the functions. But this version crashes, too.<BR>&gt; &gt;&gt; What works is using a pointer, which I allocate before the MPI_Isend/recv and which I free after MPI_Wait in every iteration. In other words: It only uses if I don't reuse any kind of MPI_Request. Only if I recreate one every time.<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; Is this, what is should be like? I believe that a reuse of the memory would be a lot more efficient (less calls to malloc...). Am I missing something here? Or am I doing something wrong?<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; Let me provide some more detailed information about my problem:<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; I am running the program on a 30 node infiniband cluster. Each node has 4 single core Opteron CPUs. I am running 1 MPI Rank per node and 4 threads per rank (-&gt; one thread per core).<BR>&gt; &gt;&gt; I am compiling with mpicc of OpenMPI using gcc below.<BR>&gt; &gt;&gt; Some pseudo-code of the program can be found at the end of this e-mail.<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; I was able to reproduce the problem using different amount of nodes and even using one node only. The problem does not arise when I put printf-debugging information into the code. This pointed me into the direction that I have some memory problem, where some write accesses some memory it is not supposed to.<BR>&gt; &gt;&gt; I ran the tests using valgrind with --leak-check=full and --show-reachable=yes, which pointed me either to MPI_Isend or MPI_Wait depending on whether I had the threads spin in a loop for MPI_Test to return success or used MPI_Wait respectively.<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; I would appreciate your help with this. Am I missing something important here? Is there a way to re-use the request in the different iterations other than I thought it should work?<BR>&gt; &gt;&gt; Or is there a way to re-initialize the allocated memory before the MPI_Isend/recv so that I at least don't have to call free and malloc each time?<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; Thank you very much for your help!<BR>&gt; &gt;&gt; Kind regards,<BR>&gt; &gt;&gt; David B?ttner<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; _____________________<BR>&gt; &gt;&gt; Pseudo-Code of program:<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; MPI_Request* req_s;<BR>&gt; &gt;&gt; MPI_Request* req_w;<BR>&gt; &gt;&gt; OUTER-LOOP<BR>&gt; &gt;&gt; if(0 == threadid)<BR>&gt; &gt;&gt; {<BR>&gt; &gt;&gt; req_s = malloc(sizeof(MPI_Request));<BR>&gt; &gt;&gt; req_r = malloc(sizeof(MPI_Request));<BR>&gt; &gt;&gt; MPI_Isend(..., req_s)<BR>&gt; &gt;&gt; MPI_Irecv(..., req_r)<BR>&gt; &gt;&gt; }<BR>&gt; &gt;&gt; pthread_barrier<BR>&gt; &gt;&gt; INNER-LOOP (while NOT_DONE or RET)<BR>&gt; &gt;&gt; if(TRYLOCK&amp;&amp; NOT_DONE)<BR>&gt; &gt;&gt; {<BR>&gt; &gt;&gt; if(MPI_TEST(req_r))<BR>&gt; &gt;&gt; {<BR>&gt; &gt;&gt; Call_Function_A;<BR>&gt; &gt;&gt; NOT_DONE = 0;<BR>&gt; &gt;&gt; }<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; }<BR>&gt; &gt;&gt; RET = Call_Function_B;<BR>&gt; &gt;&gt; }<BR>&gt; &gt;&gt; pthread_barrier_wait<BR>&gt; &gt;&gt; if(0 == threadid)<BR>&gt; &gt;&gt; {<BR>&gt; &gt;&gt; MPI_WAIT(req_s)<BR>&gt; &gt;&gt; MPI_WAIT(req_r)<BR>&gt; &gt;&gt; free(req_s);<BR>&gt; &gt;&gt; free(req_r);<BR>&gt; &gt;&gt; }<BR>&gt; &gt;&gt; _____________<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; -- <BR>&gt; &gt;&gt; David B?ttner, Informatik, Technische Universit?t M?nchen<BR>&gt; &gt;&gt; TUM I-10 - FMI 01.06.059 - Tel. 089 / 289-17676<BR>&gt; &gt;&gt;<BR>&gt; &gt;&gt; _______________________________________________<BR>&gt; &gt;&gt; users mailing list<BR>&gt; &gt;&gt; users@open-mpi.org<BR>&gt; &gt;&gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; &gt; "To preserve the freedom of the human mind then and freedom of the press, every spirit should be ready to devote itself to martyrdom; for as long as we may think as we will, and speak as we think, the condition of man will proceed in improvement."<BR>&gt; &gt; -- Thomas Jefferson, 1799<BR>&gt; &gt;<BR>&gt; &gt;<BR>&gt; &gt; _______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; -- <BR>&gt; David B?ttner, Informatik, Technische Universit?t M?nchen<BR>&gt; TUM I-10 - FMI 01.06.059 - Tel. 089 / 289-17676<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 11<BR>&gt; Date: Fri, 20 May 2011 06:23:21 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] Trouble with MPI-IO<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;A5B121E9-E664-49D0-AE54-2CFE527129D2@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=us-ascii<BR>&gt; <BR>&gt; On May 19, 2011, at 11:24 PM, Tom Rosmond wrote:<BR>&gt; <BR>&gt; &gt; What fortran compiler did you use?<BR>&gt; <BR>&gt; gfortran.<BR>&gt; <BR>&gt; &gt; In the original script my Intel compile used the -132 option, <BR>&gt; &gt; allowing up to that many columns per line. <BR>&gt; <BR>&gt; Gotcha.<BR>&gt; <BR>&gt; &gt;&gt; x.f90:99.77:<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; call mpi_type_indexed(lenij,ijlena,ijdisp,mpi_real,ij_vector_type,ierr)<BR>&gt; &gt;&gt; 1 <BR>&gt; &gt;&gt; Error: There is no specific subroutine for the generic 'mpi_type_indexed' at (1)<BR>&gt; &gt; <BR>&gt; &gt; Hmmm, very strange, since I am looking right at the MPI standard<BR>&gt; &gt; documents with that routine documented. I too get this compile failure<BR>&gt; &gt; when I switch to 'use mpi'. Could that be a problem with the Open MPI<BR>&gt; &gt; fortran libraries???<BR>&gt; <BR>&gt; I think that that error is telling us that there's a compile-time mismatch -- that the signature of what you've passed doesn't match the signature of OMPI's MPI_Type_indexed subroutine.<BR>&gt; <BR>&gt; &gt;&gt; I looked at our mpi F90 module and see the following:<BR>&gt; &gt;&gt; <BR>&gt; &gt;&gt; interface MPI_Type_indexed<BR>&gt; &gt;&gt; subroutine MPI_Type_indexed(count, array_of_blocklengths, array_of_displacements, oldtype, newtype, ierr)<BR>&gt; &gt;&gt; integer, intent(in) :: count<BR>&gt; &gt;&gt; integer, dimension(*), intent(in) :: array_of_blocklengths<BR>&gt; &gt;&gt; integer, dimension(*), intent(in) :: array_of_displacements<BR>&gt; &gt;&gt; integer, intent(in) :: oldtype<BR>&gt; &gt;&gt; integer, intent(out) :: newtype<BR>&gt; &gt;&gt; integer, intent(out) :: ierr<BR>&gt; &gt;&gt; end subroutine MPI_Type_indexed<BR>&gt; &gt;&gt; end interface<BR>&gt; <BR>&gt; Shouldn't ijlena and ijdisp be 1D arrays, not 2D arrays?<BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 12<BR>&gt; Date: Fri, 20 May 2011 07:26:19 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] MPI_Alltoallv function crashes when np &gt; 100<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;F9F71854-B9DD-459F-999D-8A8AEF8D6006@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=GB2312<BR>&gt; <BR>&gt; I missed this email in my INBOX, sorry.<BR>&gt; <BR>&gt; Can you be more specific about what exact error is occurring? You just say that the application crashes...? Please send all the information listed here:<BR>&gt; <BR>&gt; http://www.open-mpi.org/community/help/<BR>&gt; <BR>&gt; <BR>&gt; On Apr 26, 2011, at 10:51 PM, ?????? wrote:<BR>&gt; <BR>&gt; &gt; It seems that the const variable SOMAXCONN who used by listen() system call causes this problem. Can anybody help me resolve this question?<BR>&gt; &gt; <BR>&gt; &gt; 2011/4/25 ?????? &lt;xjun.meng@gmail.com&gt;<BR>&gt; &gt; Dear all,<BR>&gt; &gt; <BR>&gt; &gt; As I mentioned, when I mpiruned an application with the parameter "np = 150(or bigger)", the application who used the MPI_Alltoallv function would carsh. The problem would recur no matter how many nodes we used. <BR>&gt; &gt; <BR>&gt; &gt; The edition of OpenMPI: 1.4.1 or 1.4.3<BR>&gt; &gt; The OS: linux redhat 2.6.32<BR>&gt; &gt; <BR>&gt; &gt; BTW, my nodes had enough memory to run the application, and the MPI_Alltoall function worked well at my environment.<BR>&gt; &gt; Did anybody meet the same problem? Thanks.<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; Best Regards<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; _______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 13<BR>&gt; Date: Fri, 20 May 2011 07:28:28 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] MPI_ERR_TRUNCATE with MPI_Allreduce() error,<BR>&gt; but only sometimes...<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;CAEF632E-757B-49EE-B545-5CCCBC712247@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset=us-ascii<BR>&gt; <BR>&gt; Sorry for the super-late reply. :-\<BR>&gt; <BR>&gt; Yes, ERR_TRUNCATE means that the receiver didn't have a large enough buffer.<BR>&gt; <BR>&gt; Have you tried upgrading to a newer version of Open MPI? 1.4.3 is the current stable release (I have a very dim and not guaranteed to be correct recollection that we fixed something in the internals of collectives somewhere with regards to ERR_TRUNCATE...?).<BR>&gt; <BR>&gt; <BR>&gt; On Apr 25, 2011, at 4:44 PM, Wei Hao wrote:<BR>&gt; <BR>&gt; &gt; Hi:<BR>&gt; &gt; <BR>&gt; &gt; I'm running openmpi 1.2.8. I'm working on a project where one part involves communicating an integer, representing the number of data points I'm keeping track of, to all the processors. The line is simple:<BR>&gt; &gt; <BR>&gt; &gt; MPI_Allreduce(&amp;np,&amp;geo_N,1,MPI_INT,MPI_MAX,MPI_COMM_WORLD);<BR>&gt; &gt; <BR>&gt; &gt; where np and geo_N are integers, np is the result of a local calculation, and geo_N has been declared on all the processors. geo_N is nondecreasing. This line works the first time I call it (geo_N goes from 0 to some other integer), but if I call it later in the program, I get the following error:<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; [woodhen-039:26189] *** An error occurred in MPI_Allreduce<BR>&gt; &gt; [woodhen-039:26189] *** on communicator MPI_COMM_WORLD<BR>&gt; &gt; [woodhen-039:26189] *** MPI_ERR_TRUNCATE: message truncated<BR>&gt; &gt; [woodhen-039:26189] *** MPI_ERRORS_ARE_FATAL (goodbye)<BR>&gt; &gt; <BR>&gt; &gt; <BR>&gt; &gt; As I understand it, MPI_ERR_TRUNCATE means that the output buffer is too small, but I'm not sure where I've made a mistake. It's particularly frustrating because it seems to work fine the first time. Does anyone have any thoughts?<BR>&gt; &gt; <BR>&gt; &gt; Thanks<BR>&gt; &gt; Wei<BR>&gt; &gt; _______________________________________________<BR>&gt; &gt; users mailing list<BR>&gt; &gt; users@open-mpi.org<BR>&gt; &gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; Message: 14<BR>&gt; Date: Fri, 20 May 2011 08:14:07 -0400<BR>&gt; From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<BR>&gt; Subject: Re: [OMPI users] Trouble with MPI-IO<BR>&gt; To: Open MPI Users &lt;users@open-mpi.org&gt;<BR>&gt; Message-ID: &lt;42DB03B3-9CF4-4ACB-AA20-B857E5F76087@cisco.com&gt;<BR>&gt; Content-Type: text/plain; charset="us-ascii"<BR>&gt; <BR>&gt; On May 20, 2011, at 6:23 AM, Jeff Squyres wrote:<BR>&gt; <BR>&gt; &gt; Shouldn't ijlena and ijdisp be 1D arrays, not 2D arrays?<BR>&gt; <BR>&gt; Ok, if I convert ijlena and ijdisp to 1D arrays, I don't get the compile error (even though they're allocatable -- so allocate was a red herring, sorry). That's all that "use mpi" is complaining about -- that the function signatures didn't match.<BR>&gt; <BR>&gt; use mpi is your friend -- even if you don't use F90 constructs much. Compile-time checking is Very Good Thing (you were effectively "getting lucky" by passing in the 2D arrays, I think).<BR>&gt; <BR>&gt; Attached is my final version. And with this version, I see the hang when running it with the "T" parameter.<BR>&gt; <BR>&gt; That being said, I'm not an expert on the MPI IO stuff -- your code *looks* right to me, but I could be missing something subtle in the interpretation of MPI_FILE_SET_VIEW. I tried running your code with MPICH 1.3.2p1 and it also hung.<BR>&gt; <BR>&gt; Rob (ROMIO guy) -- can you comment this code? Is it correct?<BR>&gt; <BR>&gt; -- <BR>&gt; Jeff Squyres<BR>&gt; jsquyres@cisco.com<BR>&gt; For corporate legal information go to:<BR>&gt; http://www.cisco.com/web/about/doing_business/legal/cri/<BR>&gt; -------------- next part --------------<BR>&gt; A non-text attachment was scrubbed...<BR>&gt; Name: x.f90<BR>&gt; Type: application/octet-stream<BR>&gt; Size: 3820 bytes<BR>&gt; Desc: not available<BR>&gt; URL: &lt;http://www.open-mpi.org/MailArchives/users/attachments/20110520/53a5461b/attachment.obj&gt;<BR>&gt; <BR>&gt; ------------------------------<BR>&gt; <BR>&gt; _______________________________________________<BR>&gt; users mailing list<BR>&gt; users@open-mpi.org<BR>&gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR>&gt; <BR>&gt; End of users Digest, Vol 1911, Issue 1<BR>&gt; **************************************<BR> 		 	   		  </body>
</html>
