<div dir="ltr">Tim, thanks for trying this out ...<div><br></div><div style>Now you should be able to let part of the same OpenMPI application run on the host multi-core side and the other part on the MIC. IntelMPI can do this using an MPMD command line where the Xeon binaries run on the host, whereas the MIC ones on MIC card(s). </div>
<div style><br></div><div style>I guess you should be able to directly do this from the same OpenMPI mpirun command line ...</div><div style><br></div><div style>thanks </div><div style>Michael</div></div><div class="gmail_extra">
<br><br><div class="gmail_quote">On Tue, Jul 9, 2013 at 12:18 PM, Tim Carlson <span dir="ltr">&lt;<a href="mailto:tim.carlson@pnl.gov" target="_blank">tim.carlson@pnl.gov</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
On Mon, 8 Jul 2013, Tim Carlson wrote:<br>
<br>
Now that I have gone through this process, I&#39;ll report that it works with the caveat that you can&#39;t use the openmpi wrappers for compiling. Recall that the Phi card does not have either the GNU or Intel compilers installed. While you could build up a tool chain for the GNU compilers, you&#39;re not going to get a native Intel compiler unless Intel decides to support it.<br>

<br>
Here is the process from end to end to get Openmpi to build a native Phi application.<br>
<br>
export PATH=/usr/linux-k1om-4.7/bin:$<u></u>PATH<br>
. /share/apps/intel/composer_xe_<u></u>2013.3.163/bin/iccvars.sh intel64<br>
export CC=&quot;icc -mmic&quot;<br>
export CXX=&quot;icpc -mmic&quot;<br>
<br>
cd ~<br>
tar zxf openmpi-1.6.4.tar.gz<br>
cd openmpi-1.6.4<br>
./configure --prefix=/people/tim/mic/<u></u>openmpi/intel \<br>
--build=x86_64-unknown-linux-<u></u>gnu --host=x86_64-k1om-linux \<br>
--disable-mpi-f77 \<br>
AR=x86_64-k1om-linux-ar RANLIB=x86_64-k1om-linux-<u></u>ranlib LD=x86_64-k1om-linux-ld<br>
make<br>
make install<br>
<br>
That leaves me with a native build of openmpi in /people/tim/mic/openmpi/intel<br>
<br>
It is of course tempting to just do a<br>
export PATH=/people/tim/mic/openmpi/<u></u>intel/bin:$PATH<br>
and start using mpicc to build my code but that does not work because:<br>
<br>
1) If I try this on the host system I am going to get &quot;wrong architecture&quot; because mpicc was build for the Phi and not for the x86_64 host<br>
<br>
2) If I try running it on the Phi, I don&#39;t have access to &quot;icc&quot; because I can&#39;t run the compiler directly on the Phi.<br>
<br>
I can &quot;cheat&quot; and see what the mpicc command really does by using &quot;mpicc --show&quot; for another installation of openmpi and munge the paths correctly. In this case<br>
<br>
icc -mmic cpi.c -I/people/tim/mic/openmpi/<u></u>intel/include -pthread \<br>
-L/people/tim/mic/openmpi/<u></u>intel/lib -lmpi -ldl -lm -Wl,--export-dynamic \<br>
-lrt -lnsl -lutil -lm -ldl -o cpi.x<br>
<br>
That leaves me with a Phi native version of cpi.x which I can then execute on the Phi<br>
<br>
$ ssh phi002-mic0<br>
<br>
( I have NFS mounts on the Phi for all the bits I need )<br>
<br>
~ $ export PATH=/people/tim/mic/openmpi/<u></u>intel/bin/:$PATH<br>
~ $ export LD_LIBRARY_PATH=/share/apps/<u></u>intel/composer_xe_2013.3.163/<u></u>compiler/lib/mic/<br>
~ $ export LD_LIBRARY_PATH=/people/tim/<u></u>mic/openmpi/intel/lib:$LD_<u></u>LIBRARY_PATH<br>
~ $ cd mic<br>
~/mic $ mpirun -np 12 cpi.x<br>
Process 7 on phi002-mic0.local<br>
Process 10 on phi002-mic0.local<br>
Process 2 on phi002-mic0.local<br>
Process 9 on phi002-mic0.local<br>
Process 1 on phi002-mic0.local<br>
Process 3 on phi002-mic0.local<br>
Process 11 on phi002-mic0.local<br>
Process 5 on phi002-mic0.local<br>
Process 8 on phi002-mic0.local<br>
Process 4 on phi002-mic0.local<br>
Process 6 on phi002-mic0.local<br>
Process 0 on phi002-mic0.local<br>
pi is approximately 3.1416009869231245, Error is 0.0000083333333314<br>
wall clock time = 0.001766<div class="HOEnZb"><div class="h5"><br>
<br>
<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
On Mon, 8 Jul 2013, Elken, Tom wrote:<br>
<br>
My mistake on the OFED bits. The host I was installing on did not have all of the MPSS software installed (my cluster admin node and not one of the compute nodes). Adding the intel-mic-ofed-card RPM fixed the problem with compiling the btl:openib bits with both the GNU and Intel compilers using the cross-compiler route (-mmic on the Intel side)<br>

<br>
Still working on getting the resulting mpicc wrapper working on the MIC side. When I get a working example I&#39;ll post the results.<br>
<br>
Thanks!<br>
<br>
Tim<br>
<br>
<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
<br>
  <br>
<br>
 Hi Tim,<br>
<br>
  <br>
<br>
  <br>
<br>
 Well, in general and not on MIC I usually build the MPI stacks using the<br>
 Intel compiler set. Have you ran into s/w that requires GCC instead of<br>
 Intel<br>
 compilers (beside Nvidia Cuda)? Did you try to use Intel compiler to<br>
 produce<br>
 MIC native code (the OpenMPI stack for that matter)? <br>
<br>
 [Tom]<br>
<br>
 Good idea Michael,  With the Intel Compiler, I would use the -mmic flag to<br>
 build MIC code.<br>
<br>
  <br>
<br>
 Tim wrote: “My first pass at doing a cross-compile with the GNU compilers<br>
 failed to produce something with OFED support (not surprising)<br>
<br>
 export PATH=/usr/linux-k1om-4.7/bin:$<u></u>PATH<br>
 ./configure --build=x86_64-unknown-linux-<u></u>gnu --host=x86_64-k1om-linux \<br>
 --disable-mpi-f77<br>
<br>
 checking if MCA component btl:openib can compile... no<br>
<br>
  <br>
<br>
 Regarding a Gnu cross compiler, this worked for one of our engineers<br>
 building for True Scale HCAs and PSM/infinipath.  But it may give useful<br>
 tips for building for btl:openib as well:<br>
<br>
  <br>
<br>
 3. How to configure/compile OpenMPI:<br>
<br>
        a). untar the openmpi tarball.<br>
<br>
        b). edit configure in top directory, add &#39;-linfinipath&#39; after<br>
 &#39;-lpsm_infinipath &quot;<br>
<br>
            but not necessary for messages, only for command lines.<br>
<br>
  <br>
<br>
        c). run the following script,<br>
<br>
 #!/bin/sh<br>
<br>
  <br>
<br>
 ./configure \<br>
<br>
 --host=x86_64-k1om-linux \<br>
<br>
 --enable-mpi-f77=no --enable-mpi-f90=no \<br>
<br>
 --with-psm=/…/psm-7.6 \<br>
<br>
 --prefix=/…/openmpi \<br>
<br>
 CC=x86_64-k1om-linux-gcc  CXX=x86_64-k1om-linux-g++ \<br>
<br>
 AR=x86_64-k1om-linux-ar RANLIB=x86_64-k1om-linux-<u></u>ranlib<br>
<br>
  <br>
<br>
        d). run &#39;make&#39; and &#39;make install&#39;<br>
<br>
  <br>
<br>
 OK, I see that they did not configure for mpi-f77 &amp; mpif90, but perhaps<br>
 this<br>
 is still helpful, if the AR and RANLIB flags are important.<br>
<br>
 -Tom<br>
<br>
  <br>
<br>
  <br>
<br>
  <br>
<br>
 regards<br>
<br>
 Michael<br>
<br>
  <br>
<br>
 On Mon, Jul 8, 2013 at 4:30 PM, Tim Carlson &lt;<a href="mailto:tim.carlson@pnl.gov" target="_blank">tim.carlson@pnl.gov</a>&gt; wrote:<br>
<br>
 On Mon, 8 Jul 2013, Elken, Tom wrote:<br>
<br>
 It isn&#39;t quite so easy.<br>
<br>
 Out of the box, there is no gcc on the Phi card. You can use the cross<br>
 compiler on the host, but you don&#39;t get gcc on the Phi by default.<br>
<br>
 See this post <a href="http://software.intel.com/en-us/forums/topic/382057" target="_blank">http://software.intel.com/en-<u></u>us/forums/topic/382057</a><br>
<br>
 I really think you would need to build and install gcc on the Phi first.<br>
<br>
 My first pass at doing a cross-compile with the GNU compilers failed to<br>
 produce something with OFED support (not surprising)<br>
<br>
 export PATH=/usr/linux-k1om-4.7/bin:$<u></u>PATH<br>
 ./configure --build=x86_64-unknown-linux-<u></u>gnu --host=x86_64-k1om-linux \<br>
 --disable-mpi-f77<br>
<br>
 checking if MCA component btl:openib can compile... no<br>
<br>
<br>
 Tim<br>
<br>
        <br>
<br>
<br>
        <br>
<br>
       Thanks Tom, that sounds good. I will give it a try as soon as<br>
       our Phi host<br>
       here host gets installed. <br>
<br>
        <br>
<br>
       I assume that all the prerequisite libs and bins on the Phi side<br>
       are<br>
       available when we download the Phi s/w stack from Intel&#39;s site,<br>
       right ?<br>
<br>
       [Tom]<br>
<br>
       Right.  When you install Intel’s MPSS (Manycore Platform<br>
       Software Stack),<br>
       including following the section on “OFED Support” in the readme<br>
       file, you<br>
       should have all the prerequisite libs and bins.  Note that I<br>
       have not built<br>
       Open MPI for Xeon Phi for your interconnect, but it seems to me<br>
       that it<br>
       should work.<br>
<br>
        <br>
<br>
       -Tom<br>
<br>
        <br>
<br>
       Cheers<br>
<br>
       Michael<br>
<br>
        <br>
<br>
        <br>
<br>
        <br>
<br>
       On Mon, Jul 8, 2013 at 12:10 PM, Elken, Tom<br>
       &lt;<a href="mailto:tom.elken@intel.com" target="_blank">tom.elken@intel.com</a>&gt; wrote:<br>
<br>
       Do you guys have any plan to support Intel Phi in the future?<br>
       That is,<br>
       running MPI code on the Phi cards or across the multicore and<br>
       Phi, as Intel<br>
       MPI does?<br>
<br>
       [Tom]<br>
<br>
       Hi Michael,<br>
<br>
       Because a Xeon Phi card acts a lot like a Linux host with an x86<br>
       architecture, you can build your own Open MPI libraries to serve<br>
       this<br>
       purpose.<br>
<br>
       Our team has used existing (an older 1.4.3 version of) Open MPI<br>
       source to<br>
       build an Open MPI for running MPI code on Intel Xeon Phi cards<br>
       over Intel’s<br>
       (formerly QLogic’s) True Scale InfiniBand fabric, and it works<br>
       quite well. <br>
       We have not released a pre-built Open MPI as part of any Intel<br>
       software<br>
       release.   But I think if you have a compiler for Xeon Phi<br>
       (Intel Compiler<br>
       or GCC) and an interconnect for it, you should be able to build<br>
       an Open MPI<br>
       that works on Xeon Phi. <br>
<br>
       Cheers,<br>
       Tom Elken<br>
<br>
       thanks...<br>
<br>
       Michael<br>
<br>
        <br>
<br>
       On Sat, Jul 6, 2013 at 2:36 PM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;<br>
       wrote:<br>
<br>
       Rolf will have to answer the question on level of support. The<br>
       CUDA code is<br>
       not in the 1.6 series as it was developed after that series went<br>
       &quot;stable&quot;.<br>
       It is in the 1.7 series, although the level of support will<br>
       likely be<br>
       incrementally increasing as that &quot;feature&quot; series continues to<br>
       evolve.<br>
<br>
<br>
<br>
       On Jul 6, 2013, at 12:06 PM, Michael Thomadakis<br>
       &lt;<a href="mailto:drmichaelt7777@gmail.com" target="_blank">drmichaelt7777@gmail.com</a>&gt;<br>
       wrote:<br>
<br>
&gt;  Hello OpenMPI,<br>
&gt; &gt;  I am wondering what level of support is there for CUDA and<br>
       GPUdirect on<br>
       OpenMPI 1.6.5 and 1.7.2.<br>
&gt; &gt;  I saw the ./configure --with-cuda=CUDA_DIR option in the FAQ.<br>
       However, it<br>
       seems that with configure v1.6.5 it was ignored.<br>
&gt; &gt;  Can you identify GPU memory and send messages from it directly<br>
       without<br>
       copying to host memory first?<br>
&gt; &gt; &gt;  Or in general, what level of CUDA support is there on 1.6.5<br>
       and 1.7.2 ? Do<br>
       you support SDK 5.0 and above?<br>
&gt; &gt;  Cheers ...<br>
&gt;  Michael<br>
<br>
&gt;  ______________________________<u></u>_________________<br>
&gt;  users mailing list<br>
&gt;  <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
&gt;  <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/<u></u>mailman/listinfo.cgi/users</a><br>
<br>
<br>
       ______________________________<u></u>_________________<br>
       users mailing list<br>
       <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
       <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/<u></u>mailman/listinfo.cgi/users</a><br>
<br>
        <br>
<br>
<br>
       ______________________________<u></u>_________________<br>
       users mailing list<br>
       <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
       <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/<u></u>mailman/listinfo.cgi/users</a><br>
<br>
        <br>
<br>
<br>
<br>
 ______________________________<u></u>_________________<br>
 users mailing list<br>
 <a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
 <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/<u></u>mailman/listinfo.cgi/users</a><br>
<br>
  <br>
<br>
<br>
<br>
</blockquote>
<br>
<br>
</blockquote>
<br></div></div><span class="HOEnZb"><font color="#888888">
-- <br>
------------------------------<u></u>-------------<br>
Tim Carlson, PhD<br>
Senior Research Scientist<br>
Environmental Molecular Sciences Laboratory</font></span><br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div><br></div>

