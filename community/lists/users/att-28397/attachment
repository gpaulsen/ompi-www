<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv=Content-Type content="text/html; charset=utf-8"><meta name=Generator content="Microsoft Word 15 (filtered medium)"><style><!--
/* Font Definitions */
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-priority:99;
	color:purple;
	text-decoration:underline;}
p.msonormal0, li.msonormal0, div.msonormal0
	{mso-style-name:msonormal;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;}
span.EmailStyle18
	{mso-style-type:personal-reply;
	font-family:"Calibri",sans-serif;
	color:#1F497D;}
.MsoChpDefault
	{mso-style-type:export-only;
	font-family:"Calibri",sans-serif;
	mso-fareast-language:EN-US;}
@page WordSection1
	{size:612.0pt 792.0pt;
	margin:72.0pt 72.0pt 72.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
--></style><!--[if gte mso 9]><xml>
<o:shapedefaults v:ext="edit" spidmax="1026" />
</xml><![endif]--><!--[if gte mso 9]><xml>
<o:shapelayout v:ext="edit">
<o:idmap v:ext="edit" data="1" />
</o:shapelayout></xml><![endif]--></head><body lang=EN-AU link=blue vlink=purple><div class=WordSection1><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'>Thanks Ralph,<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'>There’s no MCA parameters in my environment at all. Here’s the contents of openmpi-mca-params.conf:<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>mpi_leave_pinned = 0<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>hwloc_base_binding_policy = core<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>rmaps_base_mapping_policy = core<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>hwloc_base_mem_alloc_policy = local_only<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>shmem_mmap_enable_nfs_warning = 0<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>pml = ^yalla<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>mtl = ^mxm<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>mtl_mxm_np = 0<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>coll = ^fca<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>coll_fca_enable = 1<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>coll_fca_np = 0<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'>There are the same as for 1.10.0 (it’s a symlink to the same file). There’s nothing there that I can see that would cause it to think that I was asking for multiple CPUs per proc. Getting rid of all of the ‘policy’ options doesn’t change the behaviour, except it then says<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18193] mca:rmaps:rr: mapping no-span by Socket for job [25745,1] slots 32 num_procs 32<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18193] mca:rmaps:rr: found 2 Socket objects on node r51<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18193] mca:rmaps:rr: assigning proc to object 0<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>--------------------------------------------------------------------------<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>A request for multiple cpus-per-proc was given, but a directive<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>was also give to map to an object level that has less cpus than<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>requested ones:<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>  #cpus-per-proc:  1<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>  number of cpus:  0<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>  map-by:          BYSOCKET:NOOVERSUBSCRIBE<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>Please specify a mapping level that has more cpus, or else let us<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>define a default mapping that will allow multiple cpus-per-proc.<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>--------------------------------------------------------------------------<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'>Forcing it to use ppr instead of rr with ppr:1:core:PE=1 using the MCA parameters above gives this:<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] AVAILABLE NODES FOR MAPPING:<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320]     node: r51 daemon: 0<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320]     node: r58 daemon: 1<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] mca:rmaps:base: computing vpids by slot for job [25616,1]<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] mca:rmaps:base: assigning rank 0 to node r51<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] mca:rmaps:base: assigning rank 1 to node r51<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] mca:rmaps:base: assigning rank 2 to node r58<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] mca:rmaps:base: assigning rank 3 to node r58<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] mca:rmaps: compute bindings for job [25616,1] with policy CORE[4008]<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] [[25616,0],0] reset_usage: node r51 has 2 procs on it<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] [[25616,0],0] reset_usage: ignoring proc [[25616,1],0]<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] [[25616,0],0] reset_usage: ignoring proc [[25616,1],1]<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] [[25616,0],0] bind_depth: 6 map_depth 2<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>[r51:18320] mca:rmaps: bind downward for job [25616,1] with bindings CORE<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>--------------------------------------------------------------------------<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>While computing bindings, we found no available cpus on<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>the following node:<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>  Node:  r51<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>Please check your allocation.<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:Consolas;color:#1F497D;mso-fareast-language:EN-US'>--------------------------------------------------------------------------<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'>(actually, it’s the regardless of if it’s socket, core, or node). If I get rid of the policy options as above, I get the original error.<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'>However, if I do it outside of a PBS job (so no cgroup), it works as I would expect. So have there been any changes in the handling of cpusets?<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'>Cheers,<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'>Ben<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><a name="_MailEndCompose"><span style='font-size:11.0pt;font-family:"Calibri",sans-serif;color:#1F497D;mso-fareast-language:EN-US'><o:p>&nbsp;</o:p></span></a></p><p class=MsoNormal><b><span lang=EN-US style='font-size:11.0pt;font-family:"Calibri",sans-serif'>From:</span></b><span lang=EN-US style='font-size:11.0pt;font-family:"Calibri",sans-serif'> users [mailto:users-bounces@open-mpi.org] <b>On Behalf Of </b>Ralph Castain<br><b>Sent:</b> Friday, 29 January 2016 3:46 AM<br><b>To:</b> Open MPI Users &lt;users@open-mpi.org&gt;<br><b>Subject:</b> Re: [OMPI users] Any changes to rmaps in 1.10.2?<o:p></o:p></span></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><div><p class=MsoNormal>I'm unaware of any change that would impact you here. For some reason, mpirun believes you are requesting multiple cpus-per-proc, and that seems to be the heart of the problem. Is there an MCA parameter in your environment or default param file, perhaps?<o:p></o:p></p><div><p class=MsoNormal><o:p>&nbsp;</o:p></p></div></div><div><p class=MsoNormal><o:p>&nbsp;</o:p></p><div><p class=MsoNormal>On Wed, Jan 27, 2016 at 2:57 PM, Ben Menadue &lt;<a href="mailto:ben.menadue@nci.org.au" target="_blank">ben.menadue@nci.org.au</a>&gt; wrote:<o:p></o:p></p><blockquote style='border:none;border-left:solid #CCCCCC 1.0pt;padding:0cm 0cm 0cm 6.0pt;margin-left:4.8pt;margin-right:0cm'><p class=MsoNormal>Hi,<br><br>Were there any changes to rmaps in going to 1.10.2? An otherwise-identical<br>setup that worked in 1.10.0 fails to launch in 1.10.2, complaining that<br>there's no CPUs available in a socket...<br><br>With 1.10.0:<br><br>$ /apps/openmpi/1.10.0/bin/mpirun -np 2 -mca rmaps_base_verbose 1000<br>hostname<br>[r47:18709] mca: base: components_register: registering rmaps components<br>[r47:18709] mca: base: components_register: found loaded component resilient<br>[r47:18709] mca: base: components_register: component resilient register<br>function successful<br>[r47:18709] mca: base: components_register: found loaded component rank_file<br>[r47:18709] mca: base: components_register: component rank_file register<br>function successful<br>[r47:18709] mca: base: components_register: found loaded component staged<br>[r47:18709] mca: base: components_register: component staged has no register<br>or open function<br>[r47:18709] mca: base: components_register: found loaded component ppr<br>[r47:18709] mca: base: components_register: component ppr register function<br>successful<br>[r47:18709] mca: base: components_register: found loaded component seq<br>[r47:18709] mca: base: components_register: component seq register function<br>successful<br>[r47:18709] mca: base: components_register: found loaded component<br>round_robin<br>[r47:18709] mca: base: components_register: component round_robin register<br>function successful<br>[r47:18709] mca: base: components_register: found loaded component mindist<br>[r47:18709] mca: base: components_register: component mindist register<br>function successful<br>[r47:18709] [[63529,0],0] rmaps:base set policy with core<br>[r47:18709] mca: base: components_open: opening rmaps components<br>[r47:18709] mca: base: components_open: found loaded component resilient<br>[r47:18709] mca: base: components_open: component resilient open function<br>successful<br>[r47:18709] mca: base: components_open: found loaded component rank_file<br>[r47:18709] mca: base: components_open: component rank_file open function<br>successful<br>[r47:18709] mca: base: components_open: found loaded component staged<br>[r47:18709] mca: base: components_open: component staged open function<br>successful<br>[r47:18709] mca: base: components_open: found loaded component ppr<br>[r47:18709] mca: base: components_open: component ppr open function<br>successful<br>[r47:18709] mca: base: components_open: found loaded component seq<br>[r47:18709] mca: base: components_open: component seq open function<br>successful<br>[r47:18709] mca: base: components_open: found loaded component round_robin<br>[r47:18709] mca: base: components_open: component round_robin open function<br>successful<br>[r47:18709] mca: base: components_open: found loaded component mindist<br>[r47:18709] mca: base: components_open: component mindist open function<br>successful<br>[r47:18709] mca:rmaps:select: checking available component resilient<br>[r47:18709] mca:rmaps:select: Querying component [resilient]<br>[r47:18709] mca:rmaps:select: checking available component rank_file<br>[r47:18709] mca:rmaps:select: Querying component [rank_file]<br>[r47:18709] mca:rmaps:select: checking available component staged<br>[r47:18709] mca:rmaps:select: Querying component [staged]<br>[r47:18709] mca:rmaps:select: checking available component ppr<br>[r47:18709] mca:rmaps:select: Querying component [ppr]<br>[r47:18709] mca:rmaps:select: checking available component seq<br>[r47:18709] mca:rmaps:select: Querying component [seq]<br>[r47:18709] mca:rmaps:select: checking available component round_robin<br>[r47:18709] mca:rmaps:select: Querying component [round_robin]<br>[r47:18709] mca:rmaps:select: checking available component mindist<br>[r47:18709] mca:rmaps:select: Querying component [mindist]<br>[r47:18709] [[63529,0],0]: Final mapper priorities<br>[r47:18709]&nbsp; &nbsp; &nbsp;Mapper: ppr Priority: 90<br>[r47:18709]&nbsp; &nbsp; &nbsp;Mapper: seq Priority: 60<br>[r47:18709]&nbsp; &nbsp; &nbsp;Mapper: resilient Priority: 40<br>[r47:18709]&nbsp; &nbsp; &nbsp;Mapper: mindist Priority: 20<br>[r47:18709]&nbsp; &nbsp; &nbsp;Mapper: round_robin Priority: 10<br>[r47:18709]&nbsp; &nbsp; &nbsp;Mapper: staged Priority: 5<br>[r47:18709]&nbsp; &nbsp; &nbsp;Mapper: rank_file Priority: 0<br>[r47:18709] mca:rmaps: mapping job [63529,1]<br>[r47:18709] mca:rmaps: creating new map for job [63529,1]<br>[r47:18709] mca:rmaps: nprocs 2<br>[r47:18709] mca:rmaps mapping given - using default<br>[r47:18709] mca:rmaps:ppr: job [63529,1] not using ppr mapper<br>[r47:18709] mca:rmaps:seq: job [63529,1] not using seq mapper<br>[r47:18709] mca:rmaps:resilient: cannot perform initial map of job [63529,1]<br>- no fault groups<br>[r47:18709] mca:rmaps:mindist: job [63529,1] not using mindist mapper<br>[r47:18709] mca:rmaps:rr: mapping job [63529,1]<br>[r47:18709] AVAILABLE NODES FOR MAPPING:<br>[r47:18709]&nbsp; &nbsp; &nbsp;node: r47 daemon: 0<br>[r47:18709]&nbsp; &nbsp; &nbsp;node: r57 daemon: 1<br>[r47:18709]&nbsp; &nbsp; &nbsp;node: r58 daemon: 2<br>[r47:18709]&nbsp; &nbsp; &nbsp;node: r59 daemon: 3<br>[r47:18709] mca:rmaps:rr: mapping no-span by Core for job [63529,1] slots 64<br>num_procs 2<br>[r47:18709] mca:rmaps:rr: found 16 Core objects on node r47<br>[r47:18709] mca:rmaps:rr: assigning proc to object 0<br>[r47:18709] mca:rmaps:rr: assigning proc to object 1<br>[r47:18709] mca:rmaps: computing ranks by core for job [63529,1]<br>[r47:18709] mca:rmaps:rank_by: found 16 objects on node r47 with 2 procs<br>[r47:18709] mca:rmaps:rank_by: assigned rank 0<br>[r47:18709] mca:rmaps:rank_by: assigned rank 1<br>[r47:18709] mca:rmaps:rank_by: found 16 objects on node r57 with 0 procs<br>[r47:18709] mca:rmaps:rank_by: found 16 objects on node r58 with 0 procs<br>[r47:18709] mca:rmaps:rank_by: found 16 objects on node r59 with 0 procs<br>[r47:18709] mca:rmaps: compute bindings for job [63529,1] with policy<br>CORE[4008]<br>[r47:18709] mca:rmaps: bindings for job [63529,1] - bind in place<br>[r47:18709] mca:rmaps: bind in place for job [63529,1] with bindings CORE<br>[r47:18709] [[63529,0],0] reset_usage: node r47 has 2 procs on it<br>[r47:18709] [[63529,0],0] reset_usage: ignoring proc [[63529,1],0]<br>[r47:18709] [[63529,0],0] reset_usage: ignoring proc [[63529,1],1]<br>[r47:18709] BINDING PROC [[63529,1],0] TO Core NUMBER 0<br>[r47:18709] [[63529,0],0] BOUND PROC [[63529,1],0] TO 0[Core:0] on node r47<br>[r47:18709] BINDING PROC [[63529,1],1] TO Core NUMBER 1<br>[r47:18709] [[63529,0],0] BOUND PROC [[63529,1],1] TO 1[Core:1] on node r47<br>r47<br>r47<br>[r47:18709] mca: base: close: component resilient closed<br>[r47:18709] mca: base: close: unloading component resilient<br>[r47:18709] mca: base: close: component rank_file closed<br>[r47:18709] mca: base: close: unloading component rank_file<br>[r47:18709] mca: base: close: component staged closed<br>[r47:18709] mca: base: close: unloading component staged<br>[r47:18709] mca: base: close: component ppr closed<br>[r47:18709] mca: base: close: unloading component ppr<br>[r47:18709] mca: base: close: component seq closed<br>[r47:18709] mca: base: close: unloading component seq<br>[r47:18709] mca: base: close: component round_robin closed<br>[r47:18709] mca: base: close: unloading component round_robin<br>[r47:18709] mca: base: close: component mindist closed<br>[r47:18709] mca: base: close: unloading component mindist<br><br>With 1.10.2:<br><br>$ /apps/openmpi/1.10.2/bin/mpirun -np 2 -mca rmaps_base_verbose 1000<br>hostname<br>[r47:18733] mca: base: components_register: registering rmaps components<br>[r47:18733] mca: base: components_register: found loaded component resilient<br>[r47:18733] mca: base: components_register: component resilient register<br>function successful<br>[r47:18733] mca: base: components_register: found loaded component rank_file<br>[r47:18733] mca: base: components_register: component rank_file register<br>function successful<br>[r47:18733] mca: base: components_register: found loaded component staged<br>[r47:18733] mca: base: components_register: component staged has no register<br>or open function<br>[r47:18733] mca: base: components_register: found loaded component ppr<br>[r47:18733] mca: base: components_register: component ppr register function<br>successful<br>[r47:18733] mca: base: components_register: found loaded component seq<br>[r47:18733] mca: base: components_register: component seq register function<br>successful<br>[r47:18733] mca: base: components_register: found loaded component<br>round_robin<br>[r47:18733] mca: base: components_register: component round_robin register<br>function successful<br>[r47:18733] mca: base: components_register: found loaded component mindist<br>[r47:18733] mca: base: components_register: component mindist register<br>function successful<br>[r47:18733] [[63505,0],0] rmaps:base set policy with core<br>[r47:18733] mca: base: components_open: opening rmaps components<br>[r47:18733] mca: base: components_open: found loaded component resilient<br>[r47:18733] mca: base: components_open: component resilient open function<br>successful<br>[r47:18733] mca: base: components_open: found loaded component rank_file<br>[r47:18733] mca: base: components_open: component rank_file open function<br>successful<br>[r47:18733] mca: base: components_open: found loaded component staged<br>[r47:18733] mca: base: components_open: component staged open function<br>successful<br>[r47:18733] mca: base: components_open: found loaded component ppr<br>[r47:18733] mca: base: components_open: component ppr open function<br>successful<br>[r47:18733] mca: base: components_open: found loaded component seq<br>[r47:18733] mca: base: components_open: component seq open function<br>successful<br>[r47:18733] mca: base: components_open: found loaded component round_robin<br>[r47:18733] mca: base: components_open: component round_robin open function<br>successful<br>[r47:18733] mca: base: components_open: found loaded component mindist<br>[r47:18733] mca: base: components_open: component mindist open function<br>successful<br>[r47:18733] mca:rmaps:select: checking available component resilient<br>[r47:18733] mca:rmaps:select: Querying component [resilient]<br>[r47:18733] mca:rmaps:select: checking available component rank_file<br>[r47:18733] mca:rmaps:select: Querying component [rank_file]<br>[r47:18733] mca:rmaps:select: checking available component staged<br>[r47:18733] mca:rmaps:select: Querying component [staged]<br>[r47:18733] mca:rmaps:select: checking available component ppr<br>[r47:18733] mca:rmaps:select: Querying component [ppr]<br>[r47:18733] mca:rmaps:select: checking available component seq<br>[r47:18733] mca:rmaps:select: Querying component [seq]<br>[r47:18733] mca:rmaps:select: checking available component round_robin<br>[r47:18733] mca:rmaps:select: Querying component [round_robin]<br>[r47:18733] mca:rmaps:select: checking available component mindist<br>[r47:18733] mca:rmaps:select: Querying component [mindist]<br>[r47:18733] [[63505,0],0]: Final mapper priorities<br>[r47:18733]&nbsp; &nbsp; &nbsp;Mapper: ppr Priority: 90<br>[r47:18733]&nbsp; &nbsp; &nbsp;Mapper: seq Priority: 60<br>[r47:18733]&nbsp; &nbsp; &nbsp;Mapper: resilient Priority: 40<br>[r47:18733]&nbsp; &nbsp; &nbsp;Mapper: mindist Priority: 20<br>[r47:18733]&nbsp; &nbsp; &nbsp;Mapper: round_robin Priority: 10<br>[r47:18733]&nbsp; &nbsp; &nbsp;Mapper: staged Priority: 5<br>[r47:18733]&nbsp; &nbsp; &nbsp;Mapper: rank_file Priority: 0<br>[r47:18733] mca:rmaps: mapping job [63505,1]<br>[r47:18733] mca:rmaps: creating new map for job [63505,1]<br>[r47:18733] mca:rmaps: nprocs 2<br>[r47:18733] mca:rmaps mapping given - using default<br>[r47:18733] mca:rmaps:ppr: job [63505,1] not using ppr mapper<br>[r47:18733] mca:rmaps:seq: job [63505,1] not using seq mapper<br>[r47:18733] mca:rmaps:resilient: cannot perform initial map of job [63505,1]<br>- no fault groups<br>[r47:18733] mca:rmaps:mindist: job [63505,1] not using mindist mapper<br>[r47:18733] mca:rmaps:rr: mapping job [63505,1]<br>[r47:18733] AVAILABLE NODES FOR MAPPING:<br>[r47:18733]&nbsp; &nbsp; &nbsp;node: r47 daemon: 0<br>[r47:18733]&nbsp; &nbsp; &nbsp;node: r57 daemon: 1<br>[r47:18733]&nbsp; &nbsp; &nbsp;node: r58 daemon: 2<br>[r47:18733]&nbsp; &nbsp; &nbsp;node: r59 daemon: 3<br>[r47:18733] mca:rmaps:rr: mapping no-span by Core for job [63505,1] slots 64<br>num_procs 2<br>[r47:18733] mca:rmaps:rr: found 16 Core objects on node r47<br>[r47:18733] mca:rmaps:rr: assigning proc to object 0<br>--------------------------------------------------------------------------<br>A request for multiple cpus-per-proc was given, but a directive<br>was also give to map to an object level that has less cpus than<br>requested ones:<br><br>&nbsp; #cpus-per-proc:&nbsp; 1<br>&nbsp; number of cpus:&nbsp; 0<br>&nbsp; map-by:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BYCORE:NOOVERSUBSCRIBE<br><br>Please specify a mapping level that has more cpus, or else let us<br>define a default mapping that will allow multiple cpus-per-proc.<br>--------------------------------------------------------------------------<br>[r47:18733] mca: base: close: component resilient closed<br>[r47:18733] mca: base: close: unloading component resilient<br>[r47:18733] mca: base: close: component rank_file closed<br>[r47:18733] mca: base: close: unloading component rank_file<br>[r47:18733] mca: base: close: component staged closed<br>[r47:18733] mca: base: close: unloading component staged<br>[r47:18733] mca: base: close: component ppr closed<br>[r47:18733] mca: base: close: unloading component ppr<br>[r47:18733] mca: base: close: component seq closed<br>[r47:18733] mca: base: close: unloading component seq<br>[r47:18733] mca: base: close: component round_robin closed<br>[r47:18733] mca: base: close: unloading component round_robin<br>[r47:18733] mca: base: close: component mindist closed<br>[r47:18733] mca: base: close: unloading component mindist<br><br>There are both in the same PBS Pro job. And the cpuset definitely has all<br>cores available:<br><br>$ cat /cgroup/cpuset/pbspro/4347646.r-man2/cpuset.cpus<br>0-15<br><br>Is there something here I'm missing?<br><br>Cheers,<br>Ben<br><br><br>_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/01/28393.php" target="_blank">http://www.open-mpi.org/community/lists/users/2016/01/28393.php</a><o:p></o:p></p></blockquote></div><p class=MsoNormal><o:p>&nbsp;</o:p></p></div></div></body></html>
