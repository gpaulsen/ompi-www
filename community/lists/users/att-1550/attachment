I have a very simple program which spawns a number of slaves. I am getting erratic results from this program. It seems that all the slave processes are spawned but not all of them complete the MPI_Init() before the main program ends. In addition I get the following error messages for which I haven't been able to find any documentation:
<br><br>[turkana:26736] [0,0,0] ORTE_ERROR_LOG: Not found in file base/soh_base_get_proc_soh.c at line 80<br>[turkana:26736] [0,0,0] ORTE_ERROR_LOG: Not found in file base/oob_base_xcast.c at line 108<br>[turkana:26736] [0,0,0] ORTE_ERROR_LOG: Not found in file base/rmgr_base_stage_gate.c at line 276
<br>[turkana:26736] [0,0,0] ORTE_ERROR_LOG: Not found in file base/soh_base_get_proc_soh.c at line 80<br>[turkana:26736] [0,0,0] ORTE_ERROR_LOG: Not found in file base/oob_base_xcast.c at line 108<br>[turkana:26736] [0,0,0] ORTE_ERROR_LOG: Not found in file base/rmgr_base_stage_gate.c at line 276
<br><br>I am using openmpi 1.1 on FC4 on a dual AMD Athlon machine.<br><br>My program is as follows:<br><br>#include &lt;mpi.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;
string.h&gt;<br><br>int<br>main(int ac, char *av[])<br>{<br>&nbsp;&nbsp;&nbsp; int&nbsp; rank, size;<br>&nbsp;&nbsp;&nbsp; char name[MPI_MAX_PROCESSOR_NAME];<br>&nbsp;&nbsp;&nbsp; int&nbsp; nameLen;<br>&nbsp;&nbsp;&nbsp; int&nbsp; n = 5, i;<br>&nbsp;&nbsp;&nbsp; int&nbsp; slave = 0;<br>&nbsp;&nbsp;&nbsp; int&nbsp; errs[5];<br>&nbsp;&nbsp;&nbsp; char *args[] = { av[0], &quot;-W&quot;, NULL};
<br>&nbsp;&nbsp;&nbsp; MPI_Comm intercomm;<br>&nbsp;&nbsp;&nbsp; int&nbsp; err;<br><br>&nbsp;&nbsp;&nbsp; memset(name, sizeof(name), 0);<br><br>&nbsp;&nbsp;&nbsp; for(i=1; i&lt;ac; i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (strcmp(av[i],&quot;-W&quot;) == 0){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; slave = 1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }<br>
<br>&nbsp;&nbsp;&nbsp; fprintf(stderr, &quot;%s before MPI_Init() in %d\n&quot;, slave?&quot;slave&quot;:&quot;master&quot;, getpid());<br>&nbsp;&nbsp;&nbsp; MPI_Init(&amp;ac, &amp;av);<br>&nbsp;&nbsp;&nbsp; fprintf(stderr, &quot;%s after MPI_Init() in %d\n&quot;, slave?&quot;slave&quot;:&quot;master&quot;, getpid());
<br><br>&nbsp;&nbsp;&nbsp; if (!slave){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; err = MPI_Comm_spawn(av[0], args, n, MPI_INFO_NULL, 0, MPI_COMM_SELF, &amp;intercomm, errs);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (err){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fprintf(stderr, &quot;MPI_Comm_spawn generated error %d.\n&quot;, err);
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; else {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fprintf(stderr, &quot;%s before MPI_Comm_get_parent() in %d\n&quot;, slave?&quot;slave&quot;:&quot;master&quot;, getpid());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MPI_Comm_get_parent(&amp;intercomm);<br>
&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp; MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);<br>&nbsp;&nbsp;&nbsp; MPI_Comm_size(MPI_COMM_WORLD, &amp;size);<br><br>&nbsp;&nbsp;&nbsp; fprintf(stderr, &quot;%s %d (%s) of %d\n&quot;, slave?&quot;slave&quot;:&quot;master&quot;, rank, name, size);
<br><br>&nbsp;&nbsp;&nbsp; MPI_Finalize();<br><br>&nbsp;&nbsp;&nbsp; return 0;<br>}<br><br><br>

