<div dir="ltr">MPI_Wtick is not about the precision but about the resolution of the underlying timer (aka. the best you can hope to get). Thus, the measured time will certainly be larger, but, and this is almost a certainty, it will hardly be smaller. As a result, I am doubtful that an MPI implementation will provide an MPI_Wtime with a practical resolution smaller that whatever the corresponding MPI_Wtick returns.<div><br></div><div><div>  George.</div><div><br><div><br></div><div><div><br></div></div></div></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Fri, Apr 8, 2016 at 2:42 PM, Jeff Hammond <span dir="ltr">&lt;<a href="mailto:jeff.science@gmail.com" target="_blank">jeff.science@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">George:<div><br></div><div>Indeed, MPI_Wtick is not always a good measure of the precision of MPI_Wtime.  The way I would measure resolution is to call MPI_Wtime a few million times.</div><div><br></div><div>For example, on Blue Gene/Q, MPI_Wtime was ~220 cycles per call.  I don&#39;t remember what MPI_Wtick returned, but I guess it was 1./1.6e9, which of course is ~200 times smaller.</div><div><br></div><div>On the other hand, an implementation based on gettimeofday might claim a resolution of 1.e-6 in MPI_Wtick, but could take an arbitrarily long time, depending on how the OS chooses to implement this system call.</div><div><br></div><div>Jeff</div></div><div class="gmail_extra"><br><div class="gmail_quote"><div><div class="h5">On Fri, Apr 8, 2016 at 7:26 AM, Gilles Gouaillardet <span dir="ltr">&lt;<a href="mailto:gilles.gouaillardet@gmail.com" target="_blank">gilles.gouaillardet@gmail.com</a>&gt;</span> wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div class="h5">Dave,<div><br></div><div>gettimeofday() uses (seconds, microseconds) to represent the time, and hence, the resolution is hardcoded to 1 microsecond</div><div>clock_gettine() uses (seconds, nanoseconds) and hence the resolution is hard coded to 1 nanosecond.</div><div>this is the max resolution, and it could be lower than that depending on what gettimeofday() does under the hood.</div><div>/* I remember there was an issue with the first software stack of MPSS, the Xeon phi o/s, and once in a while, the effective time resolution dropped to 100 Hz, and the MPI application has no way to be made aware of that */</div><div><br></div><div>bottom line, in OpenMPI, you should not expect a resolution higher than MPI_Wtick(),</div><div>and yes, it might be (way) worst than that</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles</div><div><div><div><br>On Friday, April 8, 2016, Dave Love &lt;<a href="mailto:d.love@liverpool.ac.uk" target="_blank">d.love@liverpool.ac.uk</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">George Bosilca &lt;<a>bosilca@icl.utk.edu</a>&gt; writes:<br>
<br>
&gt;&gt; Other implementations of MPI have very accurate counters.<br>
&gt;&gt;<br>
&gt;<br>
&gt; This might be a discutable topic. A quick survey of some of the MPI<br>
&gt; libraries available on a Linux cluster give the following precision for<br>
&gt; MPI_Wtime implementation :<br>
&gt;<br>
&gt; mpich-3.1.4: wtick = 1.000000e-06<br>
&gt; Intel(R) MPI Library 5.1.1 for Linux*: wtick = 1.000000e-06<br>
&gt; ompi-1.10.2: wtick = 1.000000e-06<br>
&gt; ompi-master: wtick = 1.000000e-09<br>
<br>
Can you trust wtick anyhow?  OMPI 1.10 says it&#39;s always 10⁻⁶, which<br>
isn&#39;t necessarily realistic even if it uses gettimeofday with a nominal<br>
1μs resolution.  At least with some (older?) Linuxes, and possibly other<br>
kernels, gettimeofday is limited to the kernel tick rate -- a few 100 Hz<br>
if I recall correctly.  I&#39;d need convincing about 1ns generally for the<br>
real time clock too.<br>
<br>
Anyhow, experimentally, RHEL6-packaged mpich 3.1&#39;s wtime calls<br>
gettimeofday and not clock_gettime; likewise impi 4.1.<br>
<br>
Thanks for fixing ompi, by the way.<br>
_______________________________________________<br>
users mailing list<br>
<a>users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/04/28910.php" target="_blank">http://www.open-mpi.org/community/lists/users/2016/04/28910.php</a></blockquote></div>
</div></div><br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></div></div>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/04/28911.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/users/2016/04/28911.php</a><br></blockquote></div><span class=""><br><br clear="all"><div><br></div>-- <br><div>Jeff Hammond<br><a href="mailto:jeff.science@gmail.com" target="_blank">jeff.science@gmail.com</a><br><a href="http://jeffhammond.github.io/" target="_blank">http://jeffhammond.github.io/</a></div>
</span></div>
<br>_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/04/28912.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/users/2016/04/28912.php</a><br></blockquote></div><br></div>

