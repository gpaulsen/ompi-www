<html><head></head><body>Guys,<br>
<br>
Have a look at the MUMPS linear solver code.  They define a dummy MPI interface for their serial version.  That works well and it&#39;s enabled by changing an include path and compiling without mpicc.<br>
<br>
Damien<br>
-- <br>
Sent from my Android phone with K-9 Mail. Please excuse my brevity.<br><br><div class="gmail_quote">Gus Correa &lt;gus@ldeo.columbia.edu&gt; wrote:<blockquote class="gmail_quote" style="margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;">
<pre style="white-space: pre-wrap; word-wrap:break-word; font-family: sans-serif">Hi Gabrielle, Jeff<br /><br />Not sure if my interjection here may help,<br />but user-defined macros like this,<br />appear in many codes we use here, combined with #ifdef<br />pre-processor directives.<br />This is certainly not new.<br />BTW, the name convention varies, I've seen MPI, USE_MPI, SPMD, MPP, etc.<br /><br />Sometimes this programming style can clutter the code quite a bit,<br />particularly when competing and nesting with other #ifdefs associated to<br />other macros (including _OPENMP, but certainly not only that one).<br /><br />Normally the user-MPI macro is defined one step before compilation, in a <br />Makefile or header file, or by configure-type scripts<br />that generate Makefiles, fool around with other directives<br />and header files, etc.<br /><br />To avoid the excess pre-processor #ifdefs on the main code,<br />some even dare to define a "trivial MPI library", via
wrappers<br />to the regular MPI routines, which presumably produce<br />serial code when the MPI macro is not defined.<br />This is perhaps reminiscent of the _OPENMP macro functionality<br />mentioned by Gabrielle.<br /><br />Something like this (I'm not claiming this one works!):<br /><br />my_MPI_Send_wrap(...)<br />#ifdef I_LOVE_MPI<br />MPI_Send(...)<br />#else<br />return<br />#endif<br /><br />I wonder if grand unified serial+parallel code is really<br />worth the effort, or if branching out a serial version is<br />less of a maintenance nightmare, but that may be out of the topic<br />of this discussion.<br /><br />Anyway:<br /><br />Would another macro, say now part of mpi.h, be really helpful?<br /><br />Would it only replicate the functionality (and perhaps conflict with)<br />the user-defined macros I mentioned above, or would it be "smarter"<br />in some sense that I don't realize?<br /><br />Some codes and Makefiles break badly if one replaces the bare compiler<br
/>by the MPI compiler wrapper.<br />Instead, they set the includes and libraries separately.<br />This practice is not uncommon,<br />and may be there because in some MPI implementations<br />the compiler wrappers simply don't exist, as Jeff mentioned.<br />Would the new MPI macro help or harm in such cases?<br /><br />My two cents.<br />Gus Correa<br /><br />Jeff Squyres wrote:<br />&gt; I unfortunately won't be at the next Forum meeting, <br />&gt; but you might want to ask someone to bring it up for you.<br />&gt; <br />&gt; It might not give you exactly what you want, <br />&gt; however, because not all platforms have "mpicc" (or similar) <br />&gt; wrapper compilers.  <br />&gt; I.e., to compile an MPI application on some platforms, <br />&gt; you just "cc ... -lmpi".  Hence, there's no way for the compiler to know whether to #define MPI or not.<br />&gt; <br />&gt; Such a macro *could* be added to mpi.h (but not Fortran), <br />&gt; but then you wouldn't get at least one of
the use cases that <br />&gt; you (assumedly :-) ) want:<br />&gt; <br />&gt; #if MPI<br />&gt; #include &lt;mpi.h&gt;<br />&gt; #endif<br />&gt; <br />&gt; <br />&gt; On Aug 23, 2011, at 7:46 AM, Gabriele Fatigati wrote:<br />&gt; <br />&gt;&gt; Can I suggest to insert this macro in next MPI 3 standard?<br />&gt;&gt;<br />&gt;&gt; I think It's very useful.<br />&gt;&gt;<br />&gt;&gt; 2011/8/23 Jeff Squyres &lt;jsquyres@cisco.com&gt;<br />&gt;&gt; I'm afraid not.  Sorry!  :-(<br />&gt;&gt;<br />&gt;&gt; We have the OPEN_MPI macro -- it'll be defined to 1 if you compile with Open MPI, but that doesn't really help your portability issue.  :-\<br />&gt;&gt;<br />&gt;&gt; On Aug 23, 2011, at 5:19 AM, Gabriele Fatigati wrote:<br />&gt;&gt;<br />&gt;&gt;&gt; Dear OpenMPi users,<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; is there some portable MPI macro to check if a code is compiled with MPI compiler? Something like _OPENMP for OpenMP codes:<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; #ifdef _OPENMP<br
/>&gt;&gt;&gt;<br />&gt;&gt;&gt; ....<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; #endif<br />&gt;&gt;&gt;<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; it exist?<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; #ifdef MPI<br />&gt;&gt;&gt;<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; ....<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; #endif<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; Thanks<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; --<br />&gt;&gt;&gt; Ing. Gabriele Fatigati<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; HPC specialist<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; SuperComputing Applications and Innovation Department<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; Via Magnanelli 6/3, Casalecchio di Reno (BO) Italy<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; <a href="http://www.cineca.it">www.cineca.it</a>                    Tel:   +39 051 6171722<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; g.fatigati [AT] <a href="http://cineca.it">cineca.it</a><br />&gt;&gt;&gt;<hr /><br />&gt;&gt;&gt; users mailing list<br />&gt;&gt;&gt; users@open-mpi.org<br />&gt;&gt;&gt; <a
href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br />&gt;&gt;<br />&gt;&gt; --<br />&gt;&gt; Jeff Squyres<br />&gt;&gt; jsquyres@cisco.com<br />&gt;&gt; For corporate legal information go to:<br />&gt;&gt; <a href="http://www.cisco.com/web/about/doing_business/legal/cri">http://www.cisco.com/web/about/doing_business/legal/cri</a>/<br />&gt;&gt;<br />&gt;&gt;<br />&gt;&gt;<hr /><br />&gt;&gt; users mailing list<br />&gt;&gt; users@open-mpi.org<br />&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br />&gt;&gt;<br />&gt;&gt;<br />&gt;&gt;<br />&gt;&gt; -- <br />&gt;&gt; Ing. Gabriele Fatigati<br />&gt;&gt;<br />&gt;&gt; HPC specialist<br />&gt;&gt;<br />&gt;&gt; SuperComputing Applications and Innovation Department<br />&gt;&gt;<br />&gt;&gt; Via Magnanelli 6/3, Casalecchio di Reno (BO) Italy<br />&gt;&gt;<br />&gt;&gt; <a
href="http://www.cineca.it">www.cineca.it</a>                    Tel:   +39 051 6171722<br />&gt;&gt;<br />&gt;&gt; g.fatigati [AT] <a href="http://cineca.it">cineca.it</a>           <br />&gt;&gt;<hr /><br />&gt;&gt; users mailing list<br />&gt;&gt; users@open-mpi.org<br />&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br />&gt; <br />&gt; <br /><br /><hr /><br />users mailing list<br />users@open-mpi.org<br /><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br /></pre></blockquote></div></body></html>
