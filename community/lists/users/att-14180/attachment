<table cellspacing="0" cellpadding="0" border="0" ><tr><td valign="top" style="font: inherit;"><meta http-equiv="content-type" content="text/html; charset=utf-8"><span class="Apple-style-span" style="font-family: arial, helvetica, clean, sans-serif; border-collapse: collapse; line-height: 26px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px; "><p lang="en-US" style="margin-top: 0px; margin-right: 0px; margin-bottom: 0cm; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 2em; outline-style: none; outline-width: initial; outline-color: initial; display: block; font-style: normal; font-weight: normal; "><font class="Apple-style-span" face="arial" size="3"><span class="Apple-style-span" style="font-size: 12px; line-height: 24px;">

<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">Thanks
for your tip. <br>No I did not use mpi_wait. Because when I use it it
waits forever. I wrote some example that show this behavior.<br>Sorry
for the ugly coding. But it should show my problem.</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">When
using  countR-variable with 800 it works. But when I use 1000 it waits
forever...</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt"><br>#include
&lt;mpi.h&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;iostream&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;sstream&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;fstream&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;queue&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;boost/archive/text_iarchive.hpp&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;boost/archive/text_oarchive.hpp&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;boost/archive/binary_iarchive.hpp&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;boost/archive/binary_oarchive.hpp&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#include
&lt;boost/serialization/deque.hpp&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#define
countS		1</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">#define
countR		1000</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">class
expObj{</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">public:</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	friend
class boost::serialization::access;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">   <font face="arial"><font size="2" style="font-size: 9pt">char
array[countS][countR];</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">   <font face="arial"><font size="2" style="font-size: 9pt">template&lt;class
Archive&gt;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	void
serialize(Archive &amp; ar, const unsigned int version){</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	
       ar &amp; array;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	}</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	expObj(){</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		for
(int i = 0; i &lt; countS; ++i) {</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">			for
(int j = 0; j &lt; countR; ++j) {</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">				array[i][j]
= 'q';</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">			}</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		}</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	}</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">};</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">int
main(int argc, char* argv[])</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">{</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">MPI_Init(&amp;argc,
&amp;argv);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">int
rank;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">MPI_Comm_rank(MPI_COMM_WORLD,
&amp;rank);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">if
(rank == 0) {</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	
 MPI_Request request_bilder_token_ro_multi;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		std::deque&lt;expObj&gt;
senden;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		expObj
bild1;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		bild1.array[0][0]
= 'a';</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		senden.push_back(bild1);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		std::ostringstream
archive_stream1;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		boost::archive::text_oarchive
archive(archive_stream1);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		archive
&lt;&lt; senden;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		std::string
outbound_data_ = archive_stream1.str();</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		std::cout
&lt;&lt; "Send - Size of message: " &lt;&lt;
outbound_data_.size() &lt;&lt; std::endl;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		MPI_Issend(&amp;outbound_data_[0],
static_cast&lt;int&gt;(outbound_data_.size()), MPI_CHAR, 1, 0,
MPI_COMM_WORLD,&amp;request_bilder_token_ro_multi);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">while(true){</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	1/1;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">}</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">}</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">else
if (rank == 1) {</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	
 MPI_Request req;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	
 MPI_Status stat;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	
 int flag = 0; //</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	
 int msglen = 1;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		std::deque&lt;expObj&gt;
receive;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">		expObj
obj;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">std::string
serString;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">do
{</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	MPI_Iprobe(0,
0, MPI_COMM_WORLD, &amp;flag, &amp;stat);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">	}
while (!flag);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	MPI_Get_count(&amp;stat,
MPI_CHAR, &amp;msglen);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	std::cout
&lt;&lt;"Received size: "&lt;&lt; msglen &lt;&lt;std::endl;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	serString.clear();</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	serString.resize(msglen,'a');</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	MPI_Irecv(&amp;serString[0],
msglen, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &amp;req);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	MPI_Wait(&amp;req,&amp;stat);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">        <font face="arial"><font size="2" style="font-size: 9pt">/*do{</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">        <font face="arial"><font size="2" style="font-size: 9pt">	MPI_Test(&amp;req,&amp;flag,&amp;stat);</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">        <font face="arial"><font size="2" style="font-size: 9pt">}while(flag
== 0);*/</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">    <font face="arial"><font size="2" style="font-size: 9pt">	std::cout
&lt;&lt; "Receive: &lt;" &lt;&lt; serString &lt;&lt;"&gt;"&lt;&lt;
std::endl;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">}</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<br>
</p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">std::cout
&lt;&lt; "Rank 1 OK!" &lt;&lt; std::endl;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">MPI_Finalize();</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000">  <font face="arial"><font size="2" style="font-size: 9pt">return
0;</font></font></font></p>
<p lang="en-US" style="margin-bottom: 0cm; font-style: normal; font-weight: normal">
<font color="#000000"><font face="arial"><font size="2" style="font-size: 9pt">}</font></font></font></p>
</span></font></p></span></td></tr></table><br>
