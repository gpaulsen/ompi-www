<div dir="ltr"><div>Sure, I will make the changes and commit to make them OMPI specific.</div><div><br></div><div>I will post forward my problems on the devel list.<br></div><div><br></div><div>I will keep you posted. :)</div></div><div class="gmail_extra"><br><div class="gmail_quote">2014-11-27 13:58 GMT+01:00 Jeff Squyres (jsquyres) <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span>:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><span class="">On Nov 26, 2014, at 2:08 PM, Nick Papior Andersen &lt;<a href="mailto:nickpapior@gmail.com">nickpapior@gmail.com</a>&gt; wrote:<br>
<br>
&gt; Here is my commit-msg:<br>
&gt; &quot;<br>
&gt; We can now split communicators based on hwloc full capabilities up to BOARD.<br>
&gt; I.e.:<br>
&gt; HWTHREAD,CORE,L1CACHE,L2CACHE,L3CACHE,SOCKET,NUMA,NODE,BOARD<br>
&gt; where NODE is the same as SHARED.<br>
&gt; &quot;<br>
&gt;<br>
&gt; Maybe what I did could be useful somehow?<br>
&gt; I mean to achieve the effect one could do:<br>
&gt; comm_split_type(MPI_COMM_TYPE_Node,comm)<br>
&gt; create new group from all nodes not belonging to this group.<br>
&gt; This can even be more fine tuned if one wishes to create a group of &quot;master&quot; cores on each node.<br>
<br>
</span>I will say that there was a lot of debate about this kind of functionality at the MPI Forum.  The problem is that although x86-based clusters are quite common these days, they are not the only kind of machines used for HPC out there, and the exact definitions of these kinds of concepts (hwthread, core, lXcache, socket, numa, ...etc.) can vary between architectures.<br>
<br>
Hence, the compromise was to just have MPI_COMM_TYPE_SHARED, where the resulting communicator contains processes that share a single memory space.<br>
<br>
That being said, since OMPI uses hwloc for all of its supported architectures, it might be worthwhile to have an OMPI extension for OMPI_COMM_TYPE_&lt;foo&gt; for the various different types.  One could/should only use these new constants if the OPEN_MPI macro is defined and is 1.<br>
<br>
And *that* being said, one of the goals of MPI is portability, so anyone using these constants would inherently non-portable.  :-)<br>
<span class=""><br>
&gt; I have not been able to compile it due to my <a href="http://autogen.pl" target="_blank">autogen.pl</a> giving me some errors.<br>
<br>
</span>What kind of errors?  (we might want to move this discussion to the devel list...)<br>
<span class=""><br>
&gt;  However, I think it should compile just fine.<br>
&gt;<br>
&gt; Do you think it could be useful?<br>
&gt;<br>
&gt; If interested you can find my, single commit branch, at: <a href="https://github.com/zerothi/ompi" target="_blank">https://github.com/zerothi/ompi</a><br>
<br>
</span>This looks interesting.<br>
<br>
Can you file a pull requests against the ompi master, and send something to the devel list about this functionality?<br>
<br>
I&#39;d still strongly suggest renaming these constants to the &quot;OMPI_&quot; to differentiate them from standard MPI constants / functionality.<br>
<br>
--<br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<span class=""><br>
_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
</span>Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2014/11/25878.php" target="_blank">http://www.open-mpi.org/community/lists/users/2014/11/25878.php</a><br>
</blockquote></div><br><br clear="all"><br>-- <br><div class="gmail_signature"><div dir="ltr"><div>Kind regards Nick</div></div></div>
</div>

