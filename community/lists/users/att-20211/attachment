<html>
<head>
<style><!--
.hmmessage P
{
margin:0px;
padding:0px
}
body.hmmessage
{
font-size: 10pt;
font-family:Tahoma
}
--></style></head>
<body class='hmmessage'><div dir='ltr'>
Hi,<br><br>My simple test case hangs in solaris 5.10 in openmpi 1.6. It does not have<br>problem in linux. Also, if multiple processes run on the same machine,<br>it does not have problem too. I used debugger to see where it hanged, it<br>appear to be at <br>&nbsp;242&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = ioctl(devpollop-&gt;dpfd, DP_POLL, &amp;dvp);<br>(dbx) where<br>current thread: t@1<br>&nbsp; [1] _ioctl(0x3, 0xd001, 0xffffffff95c00a80, 0xff, 0x1a4336, 0x0), at 0xfffffd7f fe7726da<br>=&gt;[2] devpoll_dispatch(base = ???, arg = ???, tv = ???) (optimized), at 0xfffffd7 fff1efb75 (line ~242) in "devpoll.c"<br>&nbsp; [3] opal_event_base_loop(base = ???, flags = ???) (optimized), at 0xfffffd7fff2 081aa (line ~838) in "event.c"<br>&nbsp; [4] opal_event_loop(flags = ???) (optimized), at 0xfffffd7fff207f99 (line ~766)&nbsp; in "event.c"<br>&nbsp; [5] opal_progress() (optimized), at 0xfffffd7fff2590a3 (line ~189) in "opal_pro gress.c"<br>&nbsp; [6] mca_pml_ob1_recv(addr = ???, count = ???, datatype = ???, src = ???, tag = ???, comm = ???, status = ???) (optimized), at 0xfffffd7ffe19199b (line ~99) in " condition.h"<br>&nbsp; [7] PMPI_Recv(buf = ???, count = ???, type = ???, source = ???, tag = ???, comm&nbsp; = ???, status = ???) (optimized), at 0xfffffd7ffeffedb2 (line ~78) in "precv.c"<br>&nbsp; [8] main(argc = 1, argv = 0xfffffd7fffdff0e8), line 43 in "mpitest.c"<br><br><br>Here is my test program, any clue where I should be looking at? Thanks in advance.<br><br>#include &lt;mpi.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;unistd.h&gt;<br>#define BUFSIZE 128<br>#define TAG 0<br><br>int main(int argc, char *argv[])<br><br>{<br>&nbsp;&nbsp;&nbsp; char idstr[32];<br>&nbsp;&nbsp;&nbsp; char buff[BUFSIZE];<br>&nbsp;&nbsp;&nbsp; int numprocs;<br>&nbsp;&nbsp;&nbsp; int myid;<br>&nbsp;&nbsp;&nbsp; int i;<br>&nbsp;&nbsp;&nbsp; MPI_Status stat;<br>&nbsp;&nbsp;&nbsp; MPI_Init(&amp;argc,&amp;argv); <br>&nbsp;&nbsp;&nbsp; MPI_Comm_size(MPI_COMM_WORLD,&amp;numprocs); <br>&nbsp;&nbsp;&nbsp; MPI_Comm_rank(MPI_COMM_WORLD,&amp;myid); <br><br>&nbsp;&nbsp;&nbsp; if (myid == 0) {<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; for(i=1;i&lt;numprocs;i++) {<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sprintf(buff, "Data from id %d", myid);<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; MPI_Send(buff, BUFSIZE, MPI_CHAR, i, TAG, MPI_COMM_WORLD);<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; for(i=1;i&lt;numprocs;i++) {<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; MPI_Recv(buff, BUFSIZE, MPI_CHAR, i, TAG, MPI_COMM_WORLD, &amp;stat);<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; printf("%s:Received by id %d\n", buff, myid);<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sleep(1);<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; else {<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; /* receive from rank 0: */<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; MPI_Recv(buff, BUFSIZE, MPI_CHAR, 0, TAG, MPI_COMM_WORLD, &amp;stat);<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sprintf(idstr, "%s:Received by id %d:Data from id %d",buff, myid, myid);<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; /* send to rank 0: */<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; MPI_Send(idstr, BUFSIZE, MPI_CHAR, 0, TAG, MPI_COMM_WORLD);<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sleep(5);<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; MPI_Finalize(); <br>&nbsp;&nbsp;&nbsp; return 0;<br>}<br><br><br>Regards,<br><br><br>William<br><br> 		 	   		  </div></body>
</html>
