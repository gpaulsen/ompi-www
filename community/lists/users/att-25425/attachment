<div dir="ltr">Hi there,<br><br>I am using valgrind to help analyse my MPI program.<br><br>I used hdfs file system to read/write data. And if I run the code without valgrind, it works correctly. However, if I run with valgrind, for example, <br clear="all"><div><br><i>mpirun -np 3 /usr/bin/valgrind --tool=callgrind  ./myprogram /input_file /output_file</i><br><br></div><div>it returns with following information<br><br>=========================================================<br><i>Exception in thread &quot;main&quot; java.lang.InternalError: processing event: 535548453<br>    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:506)<br>    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)<br>    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)<br>    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)<br>    at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)<br>    at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)<br>    at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:177)<br>    at org.apache.hadoop.conf.Configuration.loadResource(Configuration.java:1156)<br>    at org.apache.hadoop.conf.Configuration.loadResources(Configuration.java:1107)<br>    at org.apache.hadoop.conf.Configuration.getProps(Configuration.java:1053)<br>    at org.apache.hadoop.conf.Configuration.get(Configuration.java:397)<br>    at org.apache.hadoop.conf.Configuration.getBoolean(Configuration.java:594)<br>    at org.apache.hadoop.security.SecurityUtil.&lt;clinit&gt;(SecurityUtil.java:67)<br>    at org.apache.hadoop.net.NetUtils.makeSocketAddr(NetUtils.java:188)<br>    at org.apache.hadoop.net.NetUtils.createSocketAddr(NetUtils.java:168)<br>    at org.apache.hadoop.hdfs.server.namenode.NameNode.getAddress(NameNode.java:212)<br>    at org.apache.hadoop.hdfs.DistributedFileSystem.initialize(DistributedFileSystem.java:99)<br>    at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:1446)<br>    at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:67)<br>    at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:1464)<br>    at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:263)<br>    at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:118)<br>    at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:116)<br>    at java.security.AccessController.doPrivileged(Native Method)<br>    at javax.security.auth.Subject.doAs(Subject.java:415)<br>    at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1190)<br>    at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:116)<br>Call to org.apache.hadoop.fs.Filesystem::get(URI, Configuration) failed!<br></i><br><br>=========================================================<br></div><div><br></div>By debugging, I found that the exception happens in hdfsConnect(). But I don&#39;t how to fix it. Could anyone give me some advice, please?<br><div><div><br>-- <br><div dir="ltr">Best Regards.<br>---<br>Xing FENG<div>PhD Candidate<br>Database Research Group<br><br></div><div>School of Computer Science and Engineering<div>University of New South Wales<br></div>NSW 2052, Sydney<br></div><div><br></div><div>Phone: (+61) 413 857 288</div></div>
</div></div></div>

