Thanks.<br><br><div><span class="gmail_quote">On 7/18/06, <b class="gmail_sendername">Bert Wesarg</b> &lt;<a href="mailto:wesarg@informatik.uni-halle.de">wesarg@informatik.uni-halle.de</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
hi,<br><br>s anwar wrote:<br>&gt; Thank you for the clarification. Why is MPI_COMM_SELF not the correct<br>&gt; communicator for MPI_Comm_spawn(). My application will have a single<br>&gt; master only.<br>yes for a single master this should be the same, but never try this.
<br>&gt;<br>&gt; Also, can I merge the intercommunicator into an intracommunicator via<br>&gt; MPI_Intercomm_merge(intercomm, 0, &amp;intracomm) and use MPI_Bcast(..., 0,<br>&gt; intracomm) instead of sending MPI_ROOT or 0 (root's rank in local group).
<br>dito, never try this, but it should work<br><br>bye<br>bert wesarg<br>&gt;<br>&gt; Thanks.<br>&gt;<br>&gt; On 7/18/06, *Bert Wesarg* &lt;<a href="mailto:wesarg@informatik.uni-halle.de">wesarg@informatik.uni-halle.de</a>
<br>&gt; &lt;mailto:<a href="mailto:wesarg@informatik.uni-halle.de">wesarg@informatik.uni-halle.de</a>&gt;&gt; wrote:<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; hi,<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; yes sorry for my first reply, my words were to rough.<br>&gt;
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; a bcast for a intercomm works this way (in your words):<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; - your masters want to send a buffer to your slaves<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; - one of the masters must provide the MPI_ROOT as root in the<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; MPI_BCAST call
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; - all slaves must provide the rank of this MPI_ROOT as the root argument<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; - all others ranks from the masters, must provide MPI_PROC_NULL as root<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; so the buffer will be send from MPI_ROOT to all slaves
<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; if this isn't that clear, you should understand the concept of mpi<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; intercomms. a good starting point could be the standard:<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; <a href="http://www.mpi-forum.org/docs/mpi-11-html/node111.html">
http://www.mpi-forum.org/docs/mpi-11-html/node111.html</a><br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;<a href="http://www.mpi-forum.org/docs/mpi-11-html/node111.html">http://www.mpi-forum.org/docs/mpi-11-html/node111.html</a>&gt;<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; by the way:
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; * your one_int is never intitialized<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; * i don't know if the MPI_COMM_SELF is the right comm for the<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; MPI_COMM_SPAWN<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; by<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; bert wesarg<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; s anwar wrote:
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; I don't think I blamed the implementation in any way in my original<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; email. My intent is to gain understanding of why my code<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; does/should not<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; work. I assumed that I was not passing the correct intercommunicator.
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; However, I am at a loss on how to construct a proper<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; intercommunicator<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; in this case. You have mentioned that I haven't defined any group<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; to be<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; the root group. Could you care to elaborate on how can I make a
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; group a<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; root group?<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; Thanks.<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; On 7/18/06, *Bert Wesarg* &lt; <a href="mailto:wesarg@informatik.uni-halle.de">wesarg@informatik.uni-halle.de
</a><br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mailto:<a href="mailto:wesarg@informatik.uni-halle.de">wesarg@informatik.uni-halle.de</a>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; &lt;mailto:<a href="mailto:wesarg@informatik.uni-halle.de">wesarg@informatik.uni-halle.de
</a><br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mailto:<a href="mailto:wesarg@informatik.uni-halle.de">wesarg@informatik.uni-halle.de</a>&gt;&gt;&gt; wrote:<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; Hi,<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; s anwar wrote:
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; Please see attached source file.<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; According to my understanding of MPI_Comm_spawn(), the<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; intercommunicator<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; returned is the same as it is returned by
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; MPI_Comm_get_parent() in<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; the<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; spawned processes. I am assuming that there is one<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; intercommunicator<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; which contains all the (spawned) child processes as well as
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; the parent<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; process. If this is the case, then why does an MPI_Bcast()<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; using<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; such an<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; intercommunicator wait indefinately?<br>
&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; your code from line 75:<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MPI_Bcast(&amp;one_int, 1, MPI_INT, 0, intercomm);<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; from the mpi 2 standard &quot; 
<a href="http://7.3.2.1">7.3.2.1</a> &lt;<a href="http://7.3.2.1">http://7.3.2.1</a>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;<a href="http://7.3.2.1">http://7.3.2.1</a>&gt;. Broadcast&quot;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; &quot;If comm is an intercommunicator, then the call involves all
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; processes in<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; the intercommunicator, but with one group (group A) defining<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; the root<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; process. All processes in the other group (group B) pass the same
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; value in<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; argument root, which is the rank of the root in group A. The<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; root passes<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; the value MPI_ROOT in root. All other processes in group A<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; pass the
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; value<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; MPI_PROC_NULL in root. Data is broadcast from the root to all<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; processes in<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; group B. The receive buffer arguments of the processes in group B
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; must be<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; consistent with the send buffer argument of the root.&quot;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; so, you define no group to be the root group (group A). i<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; don't know
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; what<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; schould happen, when no root group is defined, but your code<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; firstly<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; don't<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; conform to the standard, so don't blame the implementation first.
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; by<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; bert wesarg<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; _______________________________________________<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; users mailing list<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; 
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a> &lt;mailto:<a href="mailto:users@open-mpi.org">users@open-mpi.org</a>&gt; &lt;mailto:<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a> &lt;mailto:
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a>&gt;&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&nbsp;&nbsp;&nbsp;&nbsp; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>
&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; ------------------------------------------------------------------------<br>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; _______________________________________________
<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; users mailing list<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a> &lt;mailto:<a href="mailto:users@open-mpi.org">users@open-mpi.org</a>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">
http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; _______________________________________________<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; users mailing list<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a> &lt;mailto:
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a>&gt;<br>&gt;&nbsp;&nbsp;&nbsp;&nbsp; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>&gt;<br>&gt;<br>&gt;<br>&gt; ------------------------------------------------------------------------
<br>&gt;<br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">
http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">
http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></blockquote></div><br>

