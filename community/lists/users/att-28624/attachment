Florian,<div><br></div><div>which distro are you running on ?</div><div>if you are not using stock gcc and valgrind, can you tell which version you are running ?</div><div>last but not least, how did you configure openmpi ?</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles</div><div><br>On Thursday, March 3, 2016, Florian Lindner &lt;<a href="mailto:mailinglists@xgm.de">mailinglists@xgm.de</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">I am still getting errors, even with your script.<br>
<br>
I will also try to modified build of openmpi that Jeff suggested.<br>
<br>
Best,<br>
Florian<br>
<br>
% mpicxx -std=c++11 -g -O0 -Wall -Wextra -fno-builtin-strlen mpi_gilles.cpp &amp;&amp; mpirun -n 2 ./a.out<br>
Stringlength = 64<br>
123456789012345678901234567890123456789012345678901234567890123<br>
<br>
% LD_PRELOAD=/usr/lib/valgrind/libmpiwrap-amd64-linux.so mpirun -n 2 valgrind ./a.out<br>
==5324== Memcheck, a memory error detector<br>
==5324== Copyright (C) 2002-2015, and GNU GPL&#39;d, by Julian Seward et al.<br>
==5324== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info<br>
==5324== Command: ./a.out<br>
==5324==<br>
==5325== Memcheck, a memory error detector<br>
==5325== Copyright (C) 2002-2015, and GNU GPL&#39;d, by Julian Seward et al.<br>
==5325== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info<br>
==5325== Command: ./a.out<br>
==5325==<br>
valgrind MPI wrappers  5324: Active for pid 5324<br>
valgrind MPI wrappers  5324: Try MPIWRAP_DEBUG=help for possible options<br>
valgrind MPI wrappers  5325: Active for pid 5325<br>
valgrind MPI wrappers  5325: Try MPIWRAP_DEBUG=help for possible options<br>
Stringlength = 64<br>
==5325== Invalid read of size 1<br>
==5325==    at 0x4C2D992: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==5325==    by 0x56852D8: length (char_traits.h:267)<br>
==5325==    by 0x56852D8: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:562)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff800 is on thread 1&#39;s stack<br>
==5325==  in frame #2, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
==5325== Invalid read of size 1<br>
==5325==    at 0x4C2D9A4: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==5325==    by 0x56852D8: length (char_traits.h:267)<br>
==5325==    by 0x56852D8: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:562)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff801 is on thread 1&#39;s stack<br>
==5325==  in frame #2, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
==5325== Invalid read of size 1<br>
==5325==    at 0x60A0FF1: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x5684F75: sputn (streambuf:451)<br>
==5325==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==5325==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==5325==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff83e is on thread 1&#39;s stack<br>
==5325==  in frame #4, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
==5325== Invalid read of size 1<br>
==5325==    at 0x60A100D: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x5684F75: sputn (streambuf:451)<br>
==5325==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==5325==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==5325==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff83d is on thread 1&#39;s stack<br>
==5325==  in frame #4, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
==5325== Invalid read of size 8<br>
==5325==    at 0x4C2F758: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==5325==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x5684F75: sputn (streambuf:451)<br>
==5325==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==5325==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==5325==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff800 is on thread 1&#39;s stack<br>
==5325==  in frame #5, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
==5325== Invalid read of size 8<br>
==5325==    at 0x4C2F766: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==5325==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x5684F75: sputn (streambuf:451)<br>
==5325==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==5325==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==5325==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff810 is on thread 1&#39;s stack<br>
==5325==  in frame #5, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
==5325== Invalid read of size 2<br>
==5325==    at 0x4C2F7B0: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==5325==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x5684F75: sputn (streambuf:451)<br>
==5325==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==5325==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==5325==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff838 is on thread 1&#39;s stack<br>
==5325==  in frame #5, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
==5325== Invalid read of size 2<br>
==5325==    at 0x4C2F7BE: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==5325==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x5684F75: sputn (streambuf:451)<br>
==5325==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==5325==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==5325==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff83c is on thread 1&#39;s stack<br>
==5325==  in frame #5, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
==5325== Invalid read of size 1<br>
==5325==    at 0x4C2F7E8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
==5325==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
==5325==    by 0x5684F75: sputn (streambuf:451)<br>
==5325==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (ostream_insert.h:50)<br>
==5325==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long) (ostream_insert.h:101)<br>
==5325==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
==5325==    by 0x408A45: receive() (mpi_gilles.cpp:22)<br>
==5325==    by 0x408B88: main (mpi_gilles.cpp:44)<br>
==5325==  Address 0xffefff83e is on thread 1&#39;s stack<br>
==5325==  in frame #5, created by receive() (mpi_gilles.cpp:8)<br>
==5325==<br>
123456789012345678901234567890123456789012345678901234567890123<br>
==5325==<br>
==5325== HEAP SUMMARY:<br>
==5325==     in use at exit: 96,351 bytes in 247 blocks<br>
==5325==   total heap usage: 15,007 allocs, 14,760 frees, 13,362,050 bytes allocated<br>
==5325==<br>
==5325== LEAK SUMMARY:<br>
==5325==    definitely lost: 9,154 bytes in 39 blocks<br>
==5325==    indirectly lost: 4,008 bytes in 22 blocks<br>
==5325==      possibly lost: 0 bytes in 0 blocks<br>
==5325==    still reachable: 83,189 bytes in 186 blocks<br>
==5325==         suppressed: 0 bytes in 0 blocks<br>
==5325== Rerun with --leak-check=full to see details of leaked memory<br>
==5325==<br>
==5325== For counts of detected and suppressed errors, rerun with: -v<br>
==5325== ERROR SUMMARY: 138 errors from 9 contexts (suppressed: 0 from 0)<br>
==5324==<br>
==5324== HEAP SUMMARY:<br>
==5324==     in use at exit: 96,351 bytes in 247 blocks<br>
==5324==   total heap usage: 15,028 allocs, 14,781 frees, 13,370,286 bytes allocated<br>
==5324==<br>
==5324== LEAK SUMMARY:<br>
==5324==    definitely lost: 9,154 bytes in 39 blocks<br>
==5324==    indirectly lost: 4,008 bytes in 22 blocks<br>
==5324==      possibly lost: 0 bytes in 0 blocks<br>
==5324==    still reachable: 83,189 bytes in 186 blocks<br>
==5324==         suppressed: 0 bytes in 0 blocks<br>
==5324== Rerun with --leak-check=full to see details of leaked memory<br>
==5324==<br>
==5324== For counts of detected and suppressed errors, rerun with: -v<br>
==5324== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)<br>
<br>
<br>
Am Donnerstag, 3. März 2016, 14:53:24 CET schrieb Gilles Gouaillardet:<br>
&gt; I was unable to reproduce this in my environment.<br>
&gt;<br>
&gt; here is a slightly modified version of your test program.<br>
&gt; buffers are 64 bytes aligned and the string (including the null<br>
&gt; terminator) is 64 bytes long,<br>
&gt; hopefully, strlen will not complain any more.<br>
&gt;<br>
&gt; Cheers,<br>
&gt;<br>
&gt; Gilles<br>
&gt;<br>
&gt; On 3/3/2016 12:51 AM, Florian Lindner wrote:<br>
&gt; &gt; Hello Gilles,<br>
&gt; &gt;<br>
&gt; &gt; Am Mittwoch, 2. März 2016, 23:36:56 CET schrieb Gilles Gouaillardet:<br>
&gt; &gt;&gt; Florian,<br>
&gt; &gt;&gt;<br>
&gt; &gt;&gt; under the hood, strlen() can use vector instructions, and then read memory<br>
&gt; &gt;&gt; above the end of the string. valgrind is extremely picky and does warn<br>
&gt; &gt;&gt; about that.<br>
&gt; &gt;&gt; iirc, there are some filter options not to issue these warnings, but I<br>
&gt; &gt;&gt; forgot the details.<br>
&gt; &gt; Ok, i&#39;ll try to research in that direction.<br>
&gt; &gt;<br>
&gt; &gt;&gt; can you try to send &quot;Bonjour&quot; instead of &quot;Halo&quot; and see if the warning<br>
&gt; &gt;&gt; disappear ?<br>
&gt; &gt; They are still there. But, was this meant as a joke or didn&#39;t I understand?<br>
&gt; &gt;<br>
&gt; &gt; Best,<br>
&gt; &gt; Florian<br>
&gt; &gt;<br>
&gt; &gt;&gt; Cheers,<br>
&gt; &gt;&gt;<br>
&gt; &gt;&gt; Gilles<br>
&gt; &gt;&gt;<br>
&gt; &gt;&gt; PS if it works, do not jump to the erroneous conclusion valgrind likes<br>
&gt; &gt;&gt; French and dislikes German ;-)<br>
&gt; &gt;&gt;<br>
&gt; &gt;&gt; On Wednesday, March 2, 2016, Florian Lindner &lt;<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;mailinglists@xgm.de&#39;)">mailinglists@xgm.de</a>&gt; wrote:<br>
&gt; &gt;&gt;<br>
&gt; &gt;&gt;&gt; Hello,<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; using OpenMPI 1.10.2 and valgrind 3.11.0 I try to use the code below to<br>
&gt; &gt;&gt;&gt; send a c++ string.<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; It works fine, but running through valgrind gives a lot of memory errors,<br>
&gt; &gt;&gt;&gt; invalid read of size...<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; What is going wrong there?<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; Valgrind output, see below.<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; Thanks!<br>
&gt; &gt;&gt;&gt; Florian<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; // Compile with: mpicxx -std=c++11 -g -O0 -Wall -Wextra mpi.cpp<br>
&gt; &gt;&gt;&gt; #include &lt;mpi.h&gt;<br>
&gt; &gt;&gt;&gt; #include &lt;iostream&gt;<br>
&gt; &gt;&gt;&gt; #include &lt;string&gt;<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; using namespace std;<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; void receive() {<br>
&gt; &gt;&gt;&gt;    int length = 0;<br>
&gt; &gt;&gt;&gt;    MPI_Status status;<br>
&gt; &gt;&gt;&gt;    MPI_Probe(MPI_ANY_SOURCE, 0, MPI_COMM_WORLD, &amp;status);<br>
&gt; &gt;&gt;&gt;    MPI_Get_count(&amp;status, MPI_CHAR, &amp;length);<br>
&gt; &gt;&gt;&gt;    cout &lt;&lt; &quot;Stringlength = &quot; &lt;&lt; length &lt;&lt; endl;<br>
&gt; &gt;&gt;&gt;    char cstr[length];<br>
&gt; &gt;&gt;&gt;    MPI_Recv(cstr,<br>
&gt; &gt;&gt;&gt;             length,<br>
&gt; &gt;&gt;&gt;             MPI_CHAR,<br>
&gt; &gt;&gt;&gt;             MPI_ANY_SOURCE,<br>
&gt; &gt;&gt;&gt;             MPI_ANY_TAG,<br>
&gt; &gt;&gt;&gt;             MPI_COMM_WORLD,<br>
&gt; &gt;&gt;&gt;             MPI_STATUS_IGNORE);<br>
&gt; &gt;&gt;&gt;    cout &lt;&lt; cstr &lt;&lt; endl;<br>
&gt; &gt;&gt;&gt; }<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; void send(int rankReceiver) {<br>
&gt; &gt;&gt;&gt;    std::string s = &quot;Hallo&quot;;<br>
&gt; &gt;&gt;&gt;    MPI_Send(s.c_str(),<br>
&gt; &gt;&gt;&gt;             s.size()+1,<br>
&gt; &gt;&gt;&gt;             MPI_CHAR,<br>
&gt; &gt;&gt;&gt;             rankReceiver,<br>
&gt; &gt;&gt;&gt;             0,<br>
&gt; &gt;&gt;&gt;             MPI_COMM_WORLD);<br>
&gt; &gt;&gt;&gt; }<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; int main(int argc, char* argv[])<br>
&gt; &gt;&gt;&gt; {<br>
&gt; &gt;&gt;&gt;    int rank;<br>
&gt; &gt;&gt;&gt;    MPI_Init(&amp;argc, &amp;argv);<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt;    MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);<br>
&gt; &gt;&gt;&gt;    if (rank == 0)<br>
&gt; &gt;&gt;&gt;      send(1);<br>
&gt; &gt;&gt;&gt;    else {<br>
&gt; &gt;&gt;&gt;      receive();<br>
&gt; &gt;&gt;&gt;    }<br>
&gt; &gt;&gt;&gt;    MPI_Finalize();<br>
&gt; &gt;&gt;&gt;    return 0;<br>
&gt; &gt;&gt;&gt; }<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; VALGRIND OUTPUT<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; % mpicxx -std=c++11 -g -O0 -Wall -Wextra mpi.cpp &amp;&amp; mpirun -n 2 ./a.out<br>
&gt; &gt;&gt;&gt; Stringlength = 6<br>
&gt; &gt;&gt;&gt; Hallo<br>
&gt; &gt;&gt;&gt; florian@asaru ~/scratch (git)-[master] %<br>
&gt; &gt;&gt;&gt; LD_PRELOAD=/usr/lib/valgrind/libmpiwrap-amd64-linux.so mpirun -n 2 valgrind<br>
&gt; &gt;&gt;&gt; ./a.out<br>
&gt; &gt;&gt;&gt; ==9290== Memcheck, a memory error detector<br>
&gt; &gt;&gt;&gt; ==9290== Copyright (C) 2002-2015, and GNU GPL&#39;d, by Julian Seward et al.<br>
&gt; &gt;&gt;&gt; ==9290== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info<br>
&gt; &gt;&gt;&gt; ==9290== Command: ./a.out<br>
&gt; &gt;&gt;&gt; ==9290==<br>
&gt; &gt;&gt;&gt; ==9291== Memcheck, a memory error detector<br>
&gt; &gt;&gt;&gt; ==9291== Copyright (C) 2002-2015, and GNU GPL&#39;d, by Julian Seward et al.<br>
&gt; &gt;&gt;&gt; ==9291== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info<br>
&gt; &gt;&gt;&gt; ==9291== Command: ./a.out<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; valgrind MPI wrappers  9290: Active for pid 9290<br>
&gt; &gt;&gt;&gt; valgrind MPI wrappers  9291: Active for pid 9291<br>
&gt; &gt;&gt;&gt; valgrind MPI wrappers  9290: Try MPIWRAP_DEBUG=help for possible options<br>
&gt; &gt;&gt;&gt; valgrind MPI wrappers  9291: Try MPIWRAP_DEBUG=help for possible options<br>
&gt; &gt;&gt;&gt; Stringlength = 6<br>
&gt; &gt;&gt;&gt; ==9291== Invalid read of size 1<br>
&gt; &gt;&gt;&gt; ==9291==    at 0x4C2DBA2: strlen (in<br>
&gt; &gt;&gt;&gt; /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x56852D8: length (char_traits.h:267)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x56852D8: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char,<br>
&gt; &gt;&gt;&gt; std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:562)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408B61: main (mpi.cpp:46)<br>
&gt; &gt;&gt;&gt; ==9291==  Address 0xffefff870 is on thread 1&#39;s stack<br>
&gt; &gt;&gt;&gt; ==9291==  in frame #2, created by receive() (mpi.cpp:8)<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; ==9291== Invalid read of size 1<br>
&gt; &gt;&gt;&gt; ==9291==    at 0x4C2DBB4: strlen (in<br>
&gt; &gt;&gt;&gt; /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x56852D8: length (char_traits.h:267)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x56852D8: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char,<br>
&gt; &gt;&gt;&gt; std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:562)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408B61: main (mpi.cpp:46)<br>
&gt; &gt;&gt;&gt; ==9291==  Address 0xffefff871 is on thread 1&#39;s stack<br>
&gt; &gt;&gt;&gt; ==9291==  in frame #2, created by receive() (mpi.cpp:8)<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; ==9291== Invalid read of size 1<br>
&gt; &gt;&gt;&gt; ==9291==    at 0x60A0FF1: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<br>
&gt; &gt;&gt;&gt; <a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: sputn (streambuf:451)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt;<br>
&gt; &gt;&gt;&gt; (ostream_insert.h:50)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; (std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)<br>
&gt; &gt;&gt;&gt; (ostream_insert.h:101)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char,<br>
&gt; &gt;&gt;&gt; std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408B61: main (mpi.cpp:46)<br>
&gt; &gt;&gt;&gt; ==9291==  Address 0xffefff874 is on thread 1&#39;s stack<br>
&gt; &gt;&gt;&gt; ==9291==  in frame #4, created by receive() (mpi.cpp:8)<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; ==9291== Invalid read of size 1<br>
&gt; &gt;&gt;&gt; ==9291==    at 0x60A100D: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<br>
&gt; &gt;&gt;&gt; <a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: sputn (streambuf:451)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt;<br>
&gt; &gt;&gt;&gt; (ostream_insert.h:50)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; (std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)<br>
&gt; &gt;&gt;&gt; (ostream_insert.h:101)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char,<br>
&gt; &gt;&gt;&gt; std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408B61: main (mpi.cpp:46)<br>
&gt; &gt;&gt;&gt; ==9291==  Address 0xffefff873 is on thread 1&#39;s stack<br>
&gt; &gt;&gt;&gt; ==9291==  in frame #4, created by receive() (mpi.cpp:8)<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; ==9291== Invalid read of size 2<br>
&gt; &gt;&gt;&gt; ==9291==    at 0x4C2F9C0: __GI_memcpy (in<br>
&gt; &gt;&gt;&gt; /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<br>
&gt; &gt;&gt;&gt; <a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: sputn (streambuf:451)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt;<br>
&gt; &gt;&gt;&gt; (ostream_insert.h:50)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; (std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)<br>
&gt; &gt;&gt;&gt; (ostream_insert.h:101)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char,<br>
&gt; &gt;&gt;&gt; std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408B61: main (mpi.cpp:46)<br>
&gt; &gt;&gt;&gt; ==9291==  Address 0xffefff870 is on thread 1&#39;s stack<br>
&gt; &gt;&gt;&gt; ==9291==  in frame #5, created by receive() (mpi.cpp:8)<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; ==9291== Invalid read of size 1<br>
&gt; &gt;&gt;&gt; ==9291==    at 0x4C2F9F8: __GI_memcpy (in<br>
&gt; &gt;&gt;&gt; /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x60A0F3A: _IO_file_xsputn@@GLIBC_2.2.5 (in /usr/lib/<br>
&gt; &gt;&gt;&gt; <a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x6096D1A: fwrite (in /usr/lib/<a href="http://libc-2.23.so" target="_blank">libc-2.23.so</a>)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: sputn (streambuf:451)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: __ostream_write&lt;char, std::char_traits&lt;char&gt; &gt;<br>
&gt; &gt;&gt;&gt; (ostream_insert.h:50)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x5684F75: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; (std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)<br>
&gt; &gt;&gt;&gt; (ostream_insert.h:101)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x56852E6: std::basic_ostream&lt;char, std::char_traits&lt;char&gt;<br>
&gt; &gt;&gt;&gt;&gt; &amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char,<br>
&gt; &gt;&gt;&gt; std::char_traits&lt;char&gt; &gt;&amp;, char const*) (ostream:561)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408A39: receive() (mpi.cpp:22)<br>
&gt; &gt;&gt;&gt; ==9291==    by 0x408B61: main (mpi.cpp:46)<br>
&gt; &gt;&gt;&gt; ==9291==  Address 0xffefff874 is on thread 1&#39;s stack<br>
&gt; &gt;&gt;&gt; ==9291==  in frame #5, created by receive() (mpi.cpp:8)<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; Hallo<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; ==9291== HEAP SUMMARY:<br>
&gt; &gt;&gt;&gt; ==9291==     in use at exit: 96,351 bytes in 247 blocks<br>
&gt; &gt;&gt;&gt; ==9291==   total heap usage: 15,020 allocs, 14,773 frees, 13,362,383 bytes<br>
&gt; &gt;&gt;&gt; allocated<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; ==9291== LEAK SUMMARY:<br>
&gt; &gt;&gt;&gt; ==9291==    definitely lost: 9,154 bytes in 39 blocks<br>
&gt; &gt;&gt;&gt; ==9291==    indirectly lost: 4,008 bytes in 22 blocks<br>
&gt; &gt;&gt;&gt; ==9291==      possibly lost: 0 bytes in 0 blocks<br>
&gt; &gt;&gt;&gt; ==9291==    still reachable: 83,189 bytes in 186 blocks<br>
&gt; &gt;&gt;&gt; ==9291==         suppressed: 0 bytes in 0 blocks<br>
&gt; &gt;&gt;&gt; ==9291== Rerun with --leak-check=full to see details of leaked memory<br>
&gt; &gt;&gt;&gt; ==9291==<br>
&gt; &gt;&gt;&gt; ==9291== For counts of detected and suppressed errors, rerun with: -v<br>
&gt; &gt;&gt;&gt; ==9291== ERROR SUMMARY: 14 errors from 6 contexts (suppressed: 0 from 0)<br>
&gt; &gt;&gt;&gt; ==9290==<br>
&gt; &gt;&gt;&gt; ==9290== HEAP SUMMARY:<br>
&gt; &gt;&gt;&gt; ==9290==     in use at exit: 96,351 bytes in 247 blocks<br>
&gt; &gt;&gt;&gt; ==9290==   total heap usage: 15,018 allocs, 14,771 frees, 13,370,045 bytes<br>
&gt; &gt;&gt;&gt; allocated<br>
&gt; &gt;&gt;&gt; ==9290==<br>
&gt; &gt;&gt;&gt; ==9290== LEAK SUMMARY:<br>
&gt; &gt;&gt;&gt; ==9290==    definitely lost: 9,154 bytes in 39 blocks<br>
&gt; &gt;&gt;&gt; ==9290==    indirectly lost: 4,008 bytes in 22 blocks<br>
&gt; &gt;&gt;&gt; ==9290==      possibly lost: 0 bytes in 0 blocks<br>
&gt; &gt;&gt;&gt; ==9290==    still reachable: 83,189 bytes in 186 blocks<br>
&gt; &gt;&gt;&gt; ==9290==         suppressed: 0 bytes in 0 blocks<br>
&gt; &gt;&gt;&gt; ==9290== Rerun with --leak-check=full to see details of leaked memory<br>
&gt; &gt;&gt;&gt; ==9290==<br>
&gt; &gt;&gt;&gt; ==9290== For counts of detected and suppressed errors, rerun with: -v<br>
&gt; &gt;&gt;&gt; ==9290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)<br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt;&gt;&gt; _______________________________________________<br>
&gt; &gt;&gt;&gt; users mailing list<br>
&gt; &gt;&gt;&gt; <a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;users@open-mpi.org&#39;)">users@open-mpi.org</a> &lt;javascript:;&gt;<br>
&gt; &gt;&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt; &gt;&gt;&gt; Link to this post:<br>
&gt; &gt;&gt;&gt; <a href="http://www.open-mpi.org/community/lists/users/2016/03/28617.php" target="_blank">http://www.open-mpi.org/community/lists/users/2016/03/28617.php</a><br>
&gt; &gt;&gt;&gt;<br>
&gt; &gt; _______________________________________________<br>
&gt; &gt; users mailing list<br>
&gt; &gt; <a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;users@open-mpi.org&#39;)">users@open-mpi.org</a><br>
&gt; &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt; &gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/03/28619.php" target="_blank">http://www.open-mpi.org/community/lists/users/2016/03/28619.php</a><br>
&gt; &gt;<br>
&gt;<br>
&gt;<br>
_______________________________________________<br>
users mailing list<br>
<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;users@open-mpi.org&#39;)">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/03/28623.php" target="_blank">http://www.open-mpi.org/community/lists/users/2016/03/28623.php</a><br>
</blockquote></div>

