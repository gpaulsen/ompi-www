<div dir="ltr">An outside monitor should work. My outline of the monitor script (with advice from the sys admin) has opportunities for bugs with environment variables and such. <div><br></div><div>I w<font size="2"><span style="background-color:rgba(255,255,255,0)">anted to make sure there was not a simpler solution, or one that is less error prone. Modifying the main routine which calls the library or external scripts is no problem, I only meant that I did not want to debug the library internals, which are huge and complicated! </span></font></div><div><span style="background-color:rgba(255,255,255,0)"><br></span></div><div><span style="background-color:rgba(255,255,255,0)">Appreciate the advice. </span>Thank you, <div>Alex <br><br>On Friday, June 17, 2016, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div style="word-wrap:break-word">Sadly, no - there was some possibility of using a file monitor we had for awhile, but that isn’t in the 1.6 series. So I fear your best bet is to periodically output some kind of marker, and have a separate process that monitors to see if it is being updated. Either way would require modifying code and that seems to be outside the desired scope of the solution.<div><br></div><div>Afraid I don’t know how to accomplish what you seek without code modification.<br><div><br><div><blockquote type="cite"><div>On Jun 16, 2016, at 10:16 PM, Alex Kaiser &lt;<a>adkaiser@gmail.com</a>&gt; wrote:</div><br><div><div dir="ltr">Dear Dr. Castain, <div><br></div><div>I&#39;m using 1.6.5, which is pre-built on NYU&#39;s cluster. Is there any other info which would be helpful? Partial output follows.</div><div><br></div><div>Thanks, </div><div>Alex </div><div><br></div>-bash-4.1$ ompi_info<br><blockquote style="margin:0 0 0 40px;border:none;padding:0px">Package: Open MPI <a>leak@soho.es.its.nyu.edu</a> Distribution<br>Open MPI: 1.6.5<br>...<br>C compiler family name: GNU<br>C compiler version: 4.8.2</blockquote></div><div class="gmail_extra"><br><div class="gmail_quote">On Thu, Jun 16, 2016 at 8:44 PM, Gus Correa <span dir="ltr">&lt;<a>gus@ldeo.columbia.edu</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi Alex<br>
<br>
You know all this, but just in case ...<br>
<br>
Restartable code goes like this:<br>
<br>
*****************************<br>
.start<br>
<br>
read the initial/previous configuration from a file<br>
...<br>
final_step = first_step + nsteps<br>
time_step = first_step<br>
while ( time_step .le. final_step )<br>
  ... march in time ...<br>
  time_step = time_step +1<br>
end<br>
<br>
save the final_step configuration (or phase space) to a file<br>
[depending on the algorithm you may need to save the<br>
previous config also, or perhaps a few more]<br>
<br>
.end<br>
************************************************<br>
<br>
Then restart the job time and again, until the desired<br>
number of time steps is completed.<br>
<br>
Job queue systems/resource managers allow a job to resubmit itself,<br>
so unless a job fails it feels like a single time integration.<br>
<br>
If a job fails in the middle, you don&#39;t lose all work,<br>
just restart from the previous saved configuration.<br>
That is the only situation where you need to &quot;monitor&quot; the code.<br>
Resource managers/ queue systems can also email you in<br>
case the job fails, warning you to do manual intervention.<br>
<br>
The time granularity per job (nsteps) is up to you.<br>
Normally it is adjusted to the max walltime of job queues<br>
(in a shared computer/cluster),<br>
but in your case it can be adjusted to how often the program fails.<br>
<br>
All atmosphere/ocean/climate/weather_forecast models work<br>
this way (that&#39;s what we mostly run here).<br>
I guess most CFD, computational Chemistry, etc, programs also do.<br>
<br>
I hope this helps,<br>
Gus Correa<div><div><br>
<br>
<br>
On 06/16/2016 05:25 PM, Alex Kaiser wrote:<br>
</div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div>
Hello,<br>
<br>
I have an MPI code which sometimes hangs, simply stops running. It is<br>
not clear why and it uses many large third party libraries so I do not<br>
want to try to fix it. The code is easy to restart, but then it needs to<br>
be monitored closely by me, and I&#39;d prefer to do it automatically.<br>
<br>
Is there a way, within an MPI process, to detect the hang and abort if so?<br>
<br>
In psuedocode, I would like to do something like<br>
<br>
    for (all time steps)<br>
         step<br>
         if (nothing has happened for x minutes)<br>
<br>
             call mpi abort to return control to the shell<br>
<br>
         endif<br>
<br>
    endfor<br>
<br>
This structure does not work however, as it can no longer do anything,<br>
including check itself, when it is stuck.<br>
<br>
<br>
Thank you,<br>
Alex<br>
<br>
<br>
<br></div></div><span>
_______________________________________________<br>
users mailing list<br>
<a>users@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/06/29471.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/users/2016/06/29471.php</a><br>
<br>
</span></blockquote><span>
<br>
_______________________________________________<br>
users mailing list<br>
<a>users@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/users</a><br></span>
Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/06/29473.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/users/2016/06/29473.php</a><br>
</blockquote></div><br></div>
_______________________________________________<br>users mailing list<br><a>users@open-mpi.org</a><br>Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/06/29474.php" target="_blank">http://www.open-mpi.org/community/lists/users/2016/06/29474.php</a></div></blockquote></div><br></div></div></div></blockquote>
</div></div></div>

