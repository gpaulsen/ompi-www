<html><head><meta http-equiv="Content-Type" content="text/html charset=iso-8859-1"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;">I'm afraid the various MPI implementations are not ABI compatible, so you have to compile against the one you intend to use<div><br><div><div>On Sep 11, 2014, at 11:28 AM, JR Cary &lt;<a href="mailto:cary@txcorp.com">cary@txcorp.com</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite">
  

    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
  
  <div bgcolor="#FFFFFF" text="#000000">
    <br>
    <div class="moz-forward-container">
      <meta http-equiv="content-type" content="text/html;
        charset=ISO-8859-1">
      <font face="Courier New, Courier, monospace">We need to build an
        application on our machine with one mpi (e.g. openmpi),<br>
        but for performance reasons, upon installation, we would like to
        runtime<br>
        link to a different, specialized mpi, such as an SGI
        implementation provided<br>
        for their systems.<br>
        <br>
        Can one expect this to work?<br>
        <br>
        I tried this with openmpi and mpich, building the code against
        shared openmpi<br>
        and then changing the LD_LIBRARY_PATH to point to the shared
        mpich.&nbsp; This<br>
        failed due to the sonames being different.<br>
        <br>
        $ ldd foo&nbsp; | grep mpi<br>
        &nbsp;&nbsp;&nbsp; libmpi_usempi.so.1 =&gt; not found<br>
        &nbsp;&nbsp;&nbsp; libmpi_mpifh.so.2 =&gt; not found<br>
        &nbsp;&nbsp;&nbsp; libmpi.so.1 =&gt; not found<br>
        &nbsp;&nbsp;&nbsp; libmpi_cxx.so.1 =&gt; not found<br>
        <br>
        but in the mpich distribution one has different sonames<br>
        <br>
        libmpi.so.12<br>
        <br>
        so the runtime loader will not load the mpich libraries instead.<br>
        <br>
        and the fortran libraries (which may not matter to us) have
        different<br>
        names,<br>
        <br>
        $ \ls /contrib/mpich-shared/lib/*.so.12<br>
        /contrib/mpich-shared/lib/libmpicxx.so.12<br>
        /contrib/mpich-shared/lib/libmpifort.so.12<br>
        /contrib/mpich-shared/lib/libmpi.so.12<br>
        <br>
        Is there a general approach to this?<br>
        <br>
        Or in practice, must one build on a machine to use that
        machine's MPI?<br>
        <br>
        Thx.....John Cary<br>
      </font> <br>
    </div>
    <br>
  </div>

_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/users<br>Link to this post: http://www.open-mpi.org/community/lists/users/2014/09/25311.php</blockquote></div><br></div></body></html>
