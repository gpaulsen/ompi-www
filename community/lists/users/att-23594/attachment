<div dir="ltr"><div class="gmail_extra"><div class="gmail_quote">On 13 February 2014 15:33, Matthias Troyer <span dir="ltr">&lt;<a href="mailto:troyer@phys.ethz.ch" target="_blank">troyer@phys.ethz.ch</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div dir="auto"><div>Hi,</div><div><br></div><div>In orders to use MPI in a multi-threaded environment, even when only one thread uses MPI, you need to request the necessary level of thread support in the environment constructor. Then you&#39;d an check whether your MPI implementation supports multi threading. Note that using MPI the way you do need not work even though it seems safe at first sight. One reason is that your MPI implementation might use threads internally to support, e.g. nonblocking calls and those threads might not be compatible with your threads.</div>
<div><br></div><div>Matthias</div><div><div class="h5"><div><div><br></div></div></div></div></div></blockquote><div>So in my case, as I have a main thread that doesn&#39;t call MPI, and another purposely created user thread to call MPI  lib, the mode is MPI_THREAD_FUNNELLED ?</div>
<div><br></div><div>as boost 1.54 doesn&#39;t have the level in the enviroment ctor, I need to explicitly call the underlying MPI::Init_thread(MPI_THREAD_FUNNELED).</div><div>once I move to 1.55, I&#39;ll use the env ctor.</div>
<div><br></div><div>thanks</div></div></div></div>

