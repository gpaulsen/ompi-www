&gt;does the gcc bounds checking stuff give you the possibility of saying &quot;this memory is ok&quot;? <br><br>I think yes.<br><br><br><div class="gmail_quote">2008/6/19 Gabriele Fatigati &lt;<a href="mailto:g.fatigati@cineca.it">g.fatigati@cineca.it</a>&gt;:<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">Just a moment:<br><br>i didn&#39;t compile OpenMPI with bounds checking, but only my application. Problems with OMPI compiled with bound checking remains.<br>
<br><br><div class="gmail_quote">2008/6/19 Jeff Squyres &lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;:<div><div></div><div class="Wj3C7c"><br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><div>On Jun 19, 2008, at 11:25 AM, Gabriele Fatigati wrote:<br>
<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
Hi Jeff,<br>
i solved using Gigabit net and eth1 interface!<br>
<br>
So, there are problems beetween Infiniband and gcc with bound checking.<br>
</blockquote>
<br></div>
This is probably not too surprising -- the IB driver gives back memory to the process that didn&#39;t come from malloc or other traditional memory allocators, and this can confuse bounds checkers, leading to false positives.<br>


<br>
In the upcoming v1.3 series, we added a whole pile of stuff to handle these kinds of false positives when running under valgrind. &nbsp;Just curious -- does the gcc bounds checking stuff give you the possibility of saying &quot;this memory is ok&quot;? &nbsp;(valgrind does; we use it for IB-driver allocated or initialized memory)<div>

<div></div><div><br>
<br>
-- <br>
Jeff Squyres<br>
Cisco Systems<br>
<br>
_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org" target="_blank">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
<br>
</div></div></blockquote></div></div></div><br><br clear="all"><div><div></div><div class="Wj3C7c"><br>-- <br>Gabriele Fatigati<br><br>CINECA Systems &amp; Tecnologies Department<br><br>Supercomputing Group<br><br>Via Magnanelli 6/3, Casalecchio di Reno (BO) Italy<br>

<br><a href="http://www.cineca.it" target="_blank">www.cineca.it</a> Tel: +39 051 6171722<br><br><a href="mailto:g.fatigati@cineca.it" target="_blank">g.fatigati@cineca.it</a> 
</div></div></blockquote></div><br><br clear="all"><br>-- <br>Gabriele Fatigati<br><br>CINECA Systems &amp; Tecnologies Department<br><br>Supercomputing Group<br><br>Via Magnanelli 6/3, Casalecchio di Reno (BO) Italy<br>
<br><a href="http://www.cineca.it">www.cineca.it</a> Tel: +39 051 6171722<br><br><a href="mailto:g.fatigati@cineca.it">g.fatigati@cineca.it</a> 

