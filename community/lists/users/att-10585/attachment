According to the OpenMPI FAQ, OpenMPI creates point-to-point socket connections &quot;lazily&quot;, i.e. only when needed.<br><br>I have a few questions about this, and how it affect program performance.<br><br>1) Does this mean that MPI_Send will call connect() if necessary, and MPI_Recv will call accept()?<br>
<br>2) If so, what is the policy for dealing with the race condition where one process calls connect() before the destination process is listening with accept()?  Is there a retry interval?  And if so, how long is the interval and how many times will it retry?  I ask because I want to know how much of a performance impact this has.<br>
<br>3) I&#39;m confused as to something the FAQ says regarding this issue.  The OpenMPI FAQ says &quot;<a name="tcp-sockets">Open MPI opens
sockets as they are required -- so the first time a process sends a
message to a peer and there is a TCP connection between the two, Open
MPI will automatically open a new socket.&quot;  Shouldn&#39;t this read &quot;so the first time a process sends a message to a peer and there is *NO* TCP connection between the two&quot;?  Or am I misunderstanding something here?<br>
<br>I appreciate any feed back regarding this issue.<br>Thanks,<br><br>Charles Salvia<br></a>

