<div dir="ltr"><br><div>Hi Jeff,</div><div><br></div><div>On Mon, Mar 21, 2016 at 2:18 PM, Jeff Hammond <span dir="ltr">&lt;<a href="mailto:jeff.science@gmail.com" target="_blank">jeff.science@gmail.com</a>&gt;</span> wrote:<br></div><div class="gmail_extra"><div class="gmail_quote"><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div>You can consult <a href="http://meetings.mpi-forum.org/mpi3-impl-status-Mar15.pdf" target="_blank">http://meetings.mpi-forum.org/mpi3-impl-status-Mar15.pdf</a> to see the status of all implementations w.r.t. MPI-3 as of one year ago.<br></div></div></blockquote><div><br></div><div>Thank you - that&#39;s something I was curious about, and it&#39;s incredibly helpful.  Some places seem to not update their libraries terribly often, perhaps for stability/reproducibility reasons, and one of the primary systems I&#39;m using still has an MPI2 library as the default.  I suspected, but hadn&#39;t known, that MPI3 versions were already widely available.  Anyone else still have an MPI2 library as the default on their systems?</div><div><br></div><div>Calling from C code is another workable but less-than-elegant solution, since not everyone knows C, even the basics of it, plus it adds a bit of complexity.  I think maybe I&#39;ll just plan on &#39;expecting&#39; MPI3 and using macros to tackle the edge-case of MPI2/2.1.  </div><div><br></div><div>Still, I wish there was an automatic -DMPI_VERSION=30 flag (or something similar) added implicitly by the MPI command line.  Maybe, since MPI_VERSION and MPI_SUBVERSION are taken, an MPI_FEATURES one (eg, -DMPI_FEATURES=30, combining version and subversion)?  I guess it&#39;s rarely needed except in situations where you have new codes on older systems, though.</div><div><br></div><div>Any other perspectives on this?</div><div><br></div><div>Cheers,</div><div>  - Brian</div><div><br></div></div></div></div>

