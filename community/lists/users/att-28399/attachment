<div dir="ltr">Actually, looking at the output, it appears that we are correctly detecting the cpus. It looks instead like there is some other setting that is overriding the discovery.<div><br></div><div>Is your allocation setting a specific cpuset? Or are you allocating the entire node?</div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Thu, Jan 28, 2016 at 3:19 PM,  <span dir="ltr">&lt;<a href="mailto:tmishima@jcity.maeda.co.jp" target="_blank">tmishima@jcity.maeda.co.jp</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi Ben and Ralph, just a very short comment.<br>
<br>
The error message shows the hardware detection doesn&#39;t work well,<br>
because it says the number of cpus is zero.<br>
<span class=""><br>
&gt;<br>
&gt;   #cpus-per-proc:  1<br>
&gt;<br>
&gt;   number of cpus:  0<br>
&gt;<br>
&gt;   map-by:          BYSOCKET:NOOVERSUBSCRIBE<br>
<br>
</span>Regards,<br>
Tetsuya<br>
<div><div class="h5"><br>
&gt; Thanks Ralph,<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; There’s no MCA parameters in my environment at all. Here’s the contents<br>
of openmpi-mca-params.conf:<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; mpi_leave_pinned = 0<br>
&gt;<br>
&gt; hwloc_base_binding_policy = core<br>
&gt;<br>
&gt; rmaps_base_mapping_policy = core<br>
&gt;<br>
&gt; hwloc_base_mem_alloc_policy = local_only<br>
&gt;<br>
&gt; shmem_mmap_enable_nfs_warning = 0<br>
&gt;<br>
&gt; pml = ^yalla<br>
&gt;<br>
&gt; mtl = ^mxm<br>
&gt;<br>
&gt; mtl_mxm_np = 0<br>
&gt;<br>
&gt; coll = ^fca<br>
&gt;<br>
&gt; coll_fca_enable = 1<br>
&gt;<br>
&gt; coll_fca_np = 0<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; There are the same as for 1.10.0 (it’s a symlink to the same file).<br>
There’s nothing there that I can see that would cause it to think that I<br>
was asking for multiple CPUs per proc. Getting rid of all<br>
&gt; of the ‘policy’ options doesn’t change the behaviour, except it then says<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; [r51:18193] mca:rmaps:rr: mapping no-span by Socket for job [25745,1]<br>
slots 32 num_procs 32<br>
&gt;<br>
&gt; [r51:18193] mca:rmaps:rr: found 2 Socket objects on node r51<br>
&gt;<br>
&gt; [r51:18193] mca:rmaps:rr: assigning proc to object 0<br>
&gt;<br>
&gt;<br>
--------------------------------------------------------------------------<br>
&gt;<br>
&gt; A request for multiple cpus-per-proc was given, but a directive<br>
&gt;<br>
&gt; was also give to map to an object level that has less cpus than<br>
&gt;<br>
&gt; requested ones:<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;   #cpus-per-proc:  1<br>
&gt;<br>
&gt;   number of cpus:  0<br>
&gt;<br>
&gt;   map-by:          BYSOCKET:NOOVERSUBSCRIBE<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; Please specify a mapping level that has more cpus, or else let us<br>
&gt;<br>
&gt; define a default mapping that will allow multiple cpus-per-proc.<br>
&gt;<br>
&gt;<br>
--------------------------------------------------------------------------<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; Forcing it to use ppr instead of rr with ppr:1:core:PE=1 using the MCA<br>
parameters above gives this:<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; [r51:18320] AVAILABLE NODES FOR MAPPING:<br>
&gt;<br>
&gt; [r51:18320]     node: r51 daemon: 0<br>
&gt;<br>
&gt; [r51:18320]     node: r58 daemon: 1<br>
&gt;<br>
&gt; [r51:18320] mca:rmaps:base: computing vpids by slot for job [25616,1]<br>
&gt;<br>
&gt; [r51:18320] mca:rmaps:base: assigning rank 0 to node r51<br>
&gt;<br>
&gt; [r51:18320] mca:rmaps:base: assigning rank 1 to node r51<br>
&gt;<br>
&gt; [r51:18320] mca:rmaps:base: assigning rank 2 to node r58<br>
&gt;<br>
&gt; [r51:18320] mca:rmaps:base: assigning rank 3 to node r58<br>
&gt;<br>
&gt; [r51:18320] mca:rmaps: compute bindings for job [25616,1] with policy<br>
CORE[4008]<br>
&gt;<br>
&gt; [r51:18320] [[25616,0],0] reset_usage: node r51 has 2 procs on it<br>
&gt;<br>
&gt; [r51:18320] [[25616,0],0] reset_usage: ignoring proc [[25616,1],0]<br>
&gt;<br>
&gt; [r51:18320] [[25616,0],0] reset_usage: ignoring proc [[25616,1],1]<br>
&gt;<br>
&gt; [r51:18320] [[25616,0],0] bind_depth: 6 map_depth 2<br>
&gt;<br>
&gt; [r51:18320] mca:rmaps: bind downward for job [25616,1] with bindings CORE<br>
&gt;<br>
&gt;<br>
--------------------------------------------------------------------------<br>
&gt;<br>
&gt; While computing bindings, we found no available cpus on<br>
&gt;<br>
&gt; the following node:<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;   Node:  r51<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; Please check your allocation.<br>
&gt;<br>
&gt;<br>
--------------------------------------------------------------------------<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; (actually, it’s the regardless of if it’s socket, core, or node). If I<br>
get rid of the policy options as above, I get the original error.<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; However, if I do it outside of a PBS job (so no cgroup), it works as I<br>
would expect. So have there been any changes in the handling of cpusets?<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; Cheers,<br>
&gt;<br>
&gt; Ben<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; From:users [mailto:<a href="mailto:users-bounces@open-mpi.org">users-bounces@open-mpi.org</a>] On Behalf Of Ralph Castain<br>
&gt; Sent: Friday, 29 January 2016 3:46 AM<br>
&gt; To: Open MPI Users &lt;<a href="mailto:users@open-mpi.org">users@open-mpi.org</a>&gt;<br>
&gt; Subject: Re: [OMPI users] Any changes to rmaps in 1.10.2?<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; I&#39;m unaware of any change that would impact you here. For some reason,<br>
mpirun believes you are requesting multiple cpus-per-proc, and that seems<br>
to be the heart of the problem. Is there an MCA<br>
&gt; parameter in your environment or default param file, perhaps?<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; On Wed, Jan 27, 2016 at 2:57 PM, Ben Menadue &lt;<a href="mailto:ben.menadue@nci.org.au">ben.menadue@nci.org.au</a>&gt;<br>
wrote:<br>
&gt;<br>
&gt; Hi,<br>
&gt;<br>
&gt; Were there any changes to rmaps in going to 1.10.2? An<br>
otherwise-identical<br>
&gt; setup that worked in 1.10.0 fails to launch in 1.10.2, complaining that<br>
&gt; there&#39;s no CPUs available in a socket...<br>
&gt;<br>
&gt; With 1.10.0:<br>
&gt;<br>
&gt; $ /apps/openmpi/1.10.0/bin/mpirun -np 2 -mca rmaps_base_verbose 1000<br>
&gt; hostname<br>
&gt; [r47:18709] mca: base: components_register: registering rmaps components<br>
&gt; [r47:18709] mca: base: components_register: found loaded component<br>
resilient<br>
&gt; [r47:18709] mca: base: components_register: component resilient register<br>
&gt; function successful<br>
&gt; [r47:18709] mca: base: components_register: found loaded component<br>
rank_file<br>
&gt; [r47:18709] mca: base: components_register: component rank_file register<br>
&gt; function successful<br>
&gt; [r47:18709] mca: base: components_register: found loaded component staged<br>
&gt; [r47:18709] mca: base: components_register: component staged has no<br>
register<br>
&gt; or open function<br>
&gt; [r47:18709] mca: base: components_register: found loaded component ppr<br>
&gt; [r47:18709] mca: base: components_register: component ppr register<br>
function<br>
&gt; successful<br>
&gt; [r47:18709] mca: base: components_register: found loaded component seq<br>
&gt; [r47:18709] mca: base: components_register: component seq register<br>
function<br>
&gt; successful<br>
&gt; [r47:18709] mca: base: components_register: found loaded component<br>
&gt; round_robin<br>
&gt; [r47:18709] mca: base: components_register: component round_robin<br>
register<br>
&gt; function successful<br>
&gt; [r47:18709] mca: base: components_register: found loaded component<br>
mindist<br>
&gt; [r47:18709] mca: base: components_register: component mindist register<br>
&gt; function successful<br>
&gt; [r47:18709] [[63529,0],0] rmaps:base set policy with core<br>
&gt; [r47:18709] mca: base: components_open: opening rmaps components<br>
&gt; [r47:18709] mca: base: components_open: found loaded component resilient<br>
&gt; [r47:18709] mca: base: components_open: component resilient open function<br>
&gt; successful<br>
&gt; [r47:18709] mca: base: components_open: found loaded component rank_file<br>
&gt; [r47:18709] mca: base: components_open: component rank_file open function<br>
&gt; successful<br>
&gt; [r47:18709] mca: base: components_open: found loaded component staged<br>
&gt; [r47:18709] mca: base: components_open: component staged open function<br>
&gt; successful<br>
&gt; [r47:18709] mca: base: components_open: found loaded component ppr<br>
&gt; [r47:18709] mca: base: components_open: component ppr open function<br>
&gt; successful<br>
&gt; [r47:18709] mca: base: components_open: found loaded component seq<br>
&gt; [r47:18709] mca: base: components_open: component seq open function<br>
&gt; successful<br>
&gt; [r47:18709] mca: base: components_open: found loaded component<br>
round_robin<br>
&gt; [r47:18709] mca: base: components_open: component round_robin open<br>
function<br>
&gt; successful<br>
&gt; [r47:18709] mca: base: components_open: found loaded component mindist<br>
&gt; [r47:18709] mca: base: components_open: component mindist open function<br>
&gt; successful<br>
&gt; [r47:18709] mca:rmaps:select: checking available component resilient<br>
&gt; [r47:18709] mca:rmaps:select: Querying component [resilient]<br>
&gt; [r47:18709] mca:rmaps:select: checking available component rank_file<br>
&gt; [r47:18709] mca:rmaps:select: Querying component [rank_file]<br>
&gt; [r47:18709] mca:rmaps:select: checking available component staged<br>
&gt; [r47:18709] mca:rmaps:select: Querying component [staged]<br>
&gt; [r47:18709] mca:rmaps:select: checking available component ppr<br>
&gt; [r47:18709] mca:rmaps:select: Querying component [ppr]<br>
&gt; [r47:18709] mca:rmaps:select: checking available component seq<br>
&gt; [r47:18709] mca:rmaps:select: Querying component [seq]<br>
&gt; [r47:18709] mca:rmaps:select: checking available component round_robin<br>
&gt; [r47:18709] mca:rmaps:select: Querying component [round_robin]<br>
&gt; [r47:18709] mca:rmaps:select: checking available component mindist<br>
&gt; [r47:18709] mca:rmaps:select: Querying component [mindist]<br>
&gt; [r47:18709] [[63529,0],0]: Final mapper priorities<br>
&gt; [r47:18709]     Mapper: ppr Priority: 90<br>
&gt; [r47:18709]     Mapper: seq Priority: 60<br>
&gt; [r47:18709]     Mapper: resilient Priority: 40<br>
&gt; [r47:18709]     Mapper: mindist Priority: 20<br>
&gt; [r47:18709]     Mapper: round_robin Priority: 10<br>
&gt; [r47:18709]     Mapper: staged Priority: 5<br>
&gt; [r47:18709]     Mapper: rank_file Priority: 0<br>
&gt; [r47:18709] mca:rmaps: mapping job [63529,1]<br>
&gt; [r47:18709] mca:rmaps: creating new map for job [63529,1]<br>
&gt; [r47:18709] mca:rmaps: nprocs 2<br>
&gt; [r47:18709] mca:rmaps mapping given - using default<br>
&gt; [r47:18709] mca:rmaps:ppr: job [63529,1] not using ppr mapper<br>
&gt; [r47:18709] mca:rmaps:seq: job [63529,1] not using seq mapper<br>
&gt; [r47:18709] mca:rmaps:resilient: cannot perform initial map of job<br>
[63529,1]<br>
&gt; - no fault groups<br>
&gt; [r47:18709] mca:rmaps:mindist: job [63529,1] not using mindist mapper<br>
&gt; [r47:18709] mca:rmaps:rr: mapping job [63529,1]<br>
&gt; [r47:18709] AVAILABLE NODES FOR MAPPING:<br>
&gt; [r47:18709]     node: r47 daemon: 0<br>
&gt; [r47:18709]     node: r57 daemon: 1<br>
&gt; [r47:18709]     node: r58 daemon: 2<br>
&gt; [r47:18709]     node: r59 daemon: 3<br>
&gt; [r47:18709] mca:rmaps:rr: mapping no-span by Core for job [63529,1] slots<br>
64<br>
&gt; num_procs 2<br>
&gt; [r47:18709] mca:rmaps:rr: found 16 Core objects on node r47<br>
&gt; [r47:18709] mca:rmaps:rr: assigning proc to object 0<br>
&gt; [r47:18709] mca:rmaps:rr: assigning proc to object 1<br>
&gt; [r47:18709] mca:rmaps: computing ranks by core for job [63529,1]<br>
&gt; [r47:18709] mca:rmaps:rank_by: found 16 objects on node r47 with 2 procs<br>
&gt; [r47:18709] mca:rmaps:rank_by: assigned rank 0<br>
&gt; [r47:18709] mca:rmaps:rank_by: assigned rank 1<br>
&gt; [r47:18709] mca:rmaps:rank_by: found 16 objects on node r57 with 0 procs<br>
&gt; [r47:18709] mca:rmaps:rank_by: found 16 objects on node r58 with 0 procs<br>
&gt; [r47:18709] mca:rmaps:rank_by: found 16 objects on node r59 with 0 procs<br>
&gt; [r47:18709] mca:rmaps: compute bindings for job [63529,1] with policy<br>
&gt; CORE[4008]<br>
&gt; [r47:18709] mca:rmaps: bindings for job [63529,1] - bind in place<br>
&gt; [r47:18709] mca:rmaps: bind in place for job [63529,1] with bindings CORE<br>
&gt; [r47:18709] [[63529,0],0] reset_usage: node r47 has 2 procs on it<br>
&gt; [r47:18709] [[63529,0],0] reset_usage: ignoring proc [[63529,1],0]<br>
&gt; [r47:18709] [[63529,0],0] reset_usage: ignoring proc [[63529,1],1]<br>
&gt; [r47:18709] BINDING PROC [[63529,1],0] TO Core NUMBER 0<br>
&gt; [r47:18709] [[63529,0],0] BOUND PROC [[63529,1],0] TO 0[Core:0] on node<br>
r47<br>
&gt; [r47:18709] BINDING PROC [[63529,1],1] TO Core NUMBER 1<br>
&gt; [r47:18709] [[63529,0],0] BOUND PROC [[63529,1],1] TO 1[Core:1] on node<br>
r47<br>
&gt; r47<br>
&gt; r47<br>
&gt; [r47:18709] mca: base: close: component resilient closed<br>
&gt; [r47:18709] mca: base: close: unloading component resilient<br>
&gt; [r47:18709] mca: base: close: component rank_file closed<br>
&gt; [r47:18709] mca: base: close: unloading component rank_file<br>
&gt; [r47:18709] mca: base: close: component staged closed<br>
&gt; [r47:18709] mca: base: close: unloading component staged<br>
&gt; [r47:18709] mca: base: close: component ppr closed<br>
&gt; [r47:18709] mca: base: close: unloading component ppr<br>
&gt; [r47:18709] mca: base: close: component seq closed<br>
&gt; [r47:18709] mca: base: close: unloading component seq<br>
&gt; [r47:18709] mca: base: close: component round_robin closed<br>
&gt; [r47:18709] mca: base: close: unloading component round_robin<br>
&gt; [r47:18709] mca: base: close: component mindist closed<br>
&gt; [r47:18709] mca: base: close: unloading component mindist<br>
&gt;<br>
&gt; With 1.10.2:<br>
&gt;<br>
&gt; $ /apps/openmpi/1.10.2/bin/mpirun -np 2 -mca rmaps_base_verbose 1000<br>
&gt; hostname<br>
&gt; [r47:18733] mca: base: components_register: registering rmaps components<br>
&gt; [r47:18733] mca: base: components_register: found loaded component<br>
resilient<br>
&gt; [r47:18733] mca: base: components_register: component resilient register<br>
&gt; function successful<br>
&gt; [r47:18733] mca: base: components_register: found loaded component<br>
rank_file<br>
&gt; [r47:18733] mca: base: components_register: component rank_file register<br>
&gt; function successful<br>
&gt; [r47:18733] mca: base: components_register: found loaded component staged<br>
&gt; [r47:18733] mca: base: components_register: component staged has no<br>
register<br>
&gt; or open function<br>
&gt; [r47:18733] mca: base: components_register: found loaded component ppr<br>
&gt; [r47:18733] mca: base: components_register: component ppr register<br>
function<br>
&gt; successful<br>
&gt; [r47:18733] mca: base: components_register: found loaded component seq<br>
&gt; [r47:18733] mca: base: components_register: component seq register<br>
function<br>
&gt; successful<br>
&gt; [r47:18733] mca: base: components_register: found loaded component<br>
&gt; round_robin<br>
&gt; [r47:18733] mca: base: components_register: component round_robin<br>
register<br>
&gt; function successful<br>
&gt; [r47:18733] mca: base: components_register: found loaded component<br>
mindist<br>
&gt; [r47:18733] mca: base: components_register: component mindist register<br>
&gt; function successful<br>
&gt; [r47:18733] [[63505,0],0] rmaps:base set policy with core<br>
&gt; [r47:18733] mca: base: components_open: opening rmaps components<br>
&gt; [r47:18733] mca: base: components_open: found loaded component resilient<br>
&gt; [r47:18733] mca: base: components_open: component resilient open function<br>
&gt; successful<br>
&gt; [r47:18733] mca: base: components_open: found loaded component rank_file<br>
&gt; [r47:18733] mca: base: components_open: component rank_file open function<br>
&gt; successful<br>
&gt; [r47:18733] mca: base: components_open: found loaded component staged<br>
&gt; [r47:18733] mca: base: components_open: component staged open function<br>
&gt; successful<br>
&gt; [r47:18733] mca: base: components_open: found loaded component ppr<br>
&gt; [r47:18733] mca: base: components_open: component ppr open function<br>
&gt; successful<br>
&gt; [r47:18733] mca: base: components_open: found loaded component seq<br>
&gt; [r47:18733] mca: base: components_open: component seq open function<br>
&gt; successful<br>
&gt; [r47:18733] mca: base: components_open: found loaded component<br>
round_robin<br>
&gt; [r47:18733] mca: base: components_open: component round_robin open<br>
function<br>
&gt; successful<br>
&gt; [r47:18733] mca: base: components_open: found loaded component mindist<br>
&gt; [r47:18733] mca: base: components_open: component mindist open function<br>
&gt; successful<br>
&gt; [r47:18733] mca:rmaps:select: checking available component resilient<br>
&gt; [r47:18733] mca:rmaps:select: Querying component [resilient]<br>
&gt; [r47:18733] mca:rmaps:select: checking available component rank_file<br>
&gt; [r47:18733] mca:rmaps:select: Querying component [rank_file]<br>
&gt; [r47:18733] mca:rmaps:select: checking available component staged<br>
&gt; [r47:18733] mca:rmaps:select: Querying component [staged]<br>
&gt; [r47:18733] mca:rmaps:select: checking available component ppr<br>
&gt; [r47:18733] mca:rmaps:select: Querying component [ppr]<br>
&gt; [r47:18733] mca:rmaps:select: checking available component seq<br>
&gt; [r47:18733] mca:rmaps:select: Querying component [seq]<br>
&gt; [r47:18733] mca:rmaps:select: checking available component round_robin<br>
&gt; [r47:18733] mca:rmaps:select: Querying component [round_robin]<br>
&gt; [r47:18733] mca:rmaps:select: checking available component mindist<br>
&gt; [r47:18733] mca:rmaps:select: Querying component [mindist]<br>
&gt; [r47:18733] [[63505,0],0]: Final mapper priorities<br>
&gt; [r47:18733]     Mapper: ppr Priority: 90<br>
&gt; [r47:18733]     Mapper: seq Priority: 60<br>
&gt; [r47:18733]     Mapper: resilient Priority: 40<br>
&gt; [r47:18733]     Mapper: mindist Priority: 20<br>
&gt; [r47:18733]     Mapper: round_robin Priority: 10<br>
&gt; [r47:18733]     Mapper: staged Priority: 5<br>
&gt; [r47:18733]     Mapper: rank_file Priority: 0<br>
&gt; [r47:18733] mca:rmaps: mapping job [63505,1]<br>
&gt; [r47:18733] mca:rmaps: creating new map for job [63505,1]<br>
&gt; [r47:18733] mca:rmaps: nprocs 2<br>
&gt; [r47:18733] mca:rmaps mapping given - using default<br>
&gt; [r47:18733] mca:rmaps:ppr: job [63505,1] not using ppr mapper<br>
&gt; [r47:18733] mca:rmaps:seq: job [63505,1] not using seq mapper<br>
&gt; [r47:18733] mca:rmaps:resilient: cannot perform initial map of job<br>
[63505,1]<br>
&gt; - no fault groups<br>
&gt; [r47:18733] mca:rmaps:mindist: job [63505,1] not using mindist mapper<br>
&gt; [r47:18733] mca:rmaps:rr: mapping job [63505,1]<br>
&gt; [r47:18733] AVAILABLE NODES FOR MAPPING:<br>
&gt; [r47:18733]     node: r47 daemon: 0<br>
&gt; [r47:18733]     node: r57 daemon: 1<br>
&gt; [r47:18733]     node: r58 daemon: 2<br>
&gt; [r47:18733]     node: r59 daemon: 3<br>
&gt; [r47:18733] mca:rmaps:rr: mapping no-span by Core for job [63505,1] slots<br>
64<br>
&gt; num_procs 2<br>
&gt; [r47:18733] mca:rmaps:rr: found 16 Core objects on node r47<br>
&gt; [r47:18733] mca:rmaps:rr: assigning proc to object 0<br>
&gt;<br>
--------------------------------------------------------------------------<br>
&gt; A request for multiple cpus-per-proc was given, but a directive<br>
&gt; was also give to map to an object level that has less cpus than<br>
&gt; requested ones:<br>
&gt;<br>
&gt;   #cpus-per-proc:  1<br>
&gt;   number of cpus:  0<br>
&gt;   map-by:          BYCORE:NOOVERSUBSCRIBE<br>
&gt;<br>
&gt; Please specify a mapping level that has more cpus, or else let us<br>
&gt; define a default mapping that will allow multiple cpus-per-proc.<br>
&gt;<br>
--------------------------------------------------------------------------<br>
&gt; [r47:18733] mca: base: close: component resilient closed<br>
&gt; [r47:18733] mca: base: close: unloading component resilient<br>
&gt; [r47:18733] mca: base: close: component rank_file closed<br>
&gt; [r47:18733] mca: base: close: unloading component rank_file<br>
&gt; [r47:18733] mca: base: close: component staged closed<br>
&gt; [r47:18733] mca: base: close: unloading component staged<br>
&gt; [r47:18733] mca: base: close: component ppr closed<br>
&gt; [r47:18733] mca: base: close: unloading component ppr<br>
&gt; [r47:18733] mca: base: close: component seq closed<br>
&gt; [r47:18733] mca: base: close: unloading component seq<br>
&gt; [r47:18733] mca: base: close: component round_robin closed<br>
&gt; [r47:18733] mca: base: close: unloading component round_robin<br>
&gt; [r47:18733] mca: base: close: component mindist closed<br>
&gt; [r47:18733] mca: base: close: unloading component mindist<br>
&gt;<br>
&gt; There are both in the same PBS Pro job. And the cpuset definitely has all<br>
&gt; cores available:<br>
&gt;<br>
&gt; $ cat /cgroup/cpuset/pbspro/4347646.r-man2/cpuset.cpus<br>
&gt; 0-15<br>
&gt;<br>
&gt; Is there something here I&#39;m missing?<br>
&gt;<br>
&gt; Cheers,<br>
&gt; Ben<br>
&gt;<br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; users mailing list<br>
&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
&gt; Link to this post:<br>
<a href="http://www.open-mpi.org/community/lists/users/2016/01/28393.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/users/2016/01/28393.php</a><br>
&gt;<br>
&gt;  _______________________________________________<br>
&gt; users mailing list<br>
&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/usersLink" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/usersLink</a> to<br>
</div></div>this post: <a href="http://www.open-mpi.org/community/lists/users/2016/01/28397.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/users/2016/01/28397.php</a><br>
<span class="">_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
</span>Link to this post: <a href="http://www.open-mpi.org/community/lists/users/2016/01/28398.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/users/2016/01/28398.php</a></blockquote></div><br></div>

