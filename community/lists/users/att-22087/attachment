<div dir="ltr">I had to spend a while searching C++ forums until I understood what you meant. Thank you for the &quot;pointer&quot;.<div><br></div><div style>Just for completeness in case anyone gets this post as a Google result:</div>
<div style><br></div><div style>char *data = new char(25);      // pointer to character initialized with 25</div><div style>char *data = new char[25];      // pointer to character array of length 25</div><div style><br></div>
<div style>As I mentioned, I&#39;m relatively &quot;new&quot; to C++. This wasn&#39;t an MPI problem at all. </div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Wed, Jun 12, 2013 at 6:50 PM, Brian Budge <span dir="ltr">&lt;<a href="mailto:brian.budge@gmail.com" target="_blank">brian.budge@gmail.com</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">You appear to be using new and delete[] together.  Instead you should<br>
be using new[] and delete[] and new and delete together.<br>
<br>
  Brian<br>
<div><div class="h5"><br>
On Wed, Jun 12, 2013 at 4:44 PM, Corey Allen<br>
&lt;<a href="mailto:corey.allen@cajkhenderson.com">corey.allen@cajkhenderson.com</a>&gt; wrote:<br>
&gt; I have done a search on this and I haven&#39;t found an explanation. I am not a<br>
&gt; C/C++ nor MPI expert. I am getting a strange error when I use the C++ new<br>
&gt; keyword to allocate memory and then call a file read on OpenMPI. (Tech<br>
&gt; detail: 4-core Intel running Ubuntu 64-bit and OpenMPI 1.4.5. Everything is<br>
&gt; local. Total processes is 5.)<br>
&gt;<br>
&gt; In the source code you can see three different approaches to allocating the<br>
&gt; memory for the char array where the file&#39;s contents will go. With the<br>
&gt; C-style and MPI Alloc choices, there is no error even with buffer sizes in<br>
&gt; the MB range. However, if I use the C++ new keyword, I get an error for any<br>
&gt; read larger than 24 bytes.<br>
&gt;<br>
&gt; As I say, I&#39;m not a C/C++ expert, but if I&#39;m writing C++ code I was under<br>
&gt; the impression it was wise to use the C++ new approach rather than malloc.<br>
&gt; Am I missing something in getting this to work with MPI?<br>
&gt;<br>
&gt; Error (the important bit):<br>
&gt;<br>
&gt; *** glibc detected *** MPIIO_Test: free(): invalid next size (fast):<br>
&gt; 0x00000000015524e0 ***<br>
&gt;<br>
&gt; Code:<br>
&gt;<br>
&gt; int main(int argc, char* argv[]){<br>
&gt;     int  my_rank;<br>
&gt;     MPI_Status status ;<br>
&gt;     int errorCode;<br>
&gt;     MPI_File _filehandle;<br>
&gt;<br>
&gt;     MPI_Init(&amp;argc, &amp;argv);<br>
&gt;     MPI_Comm_rank(MPI_COMM_WORLD, &amp;my_rank);<br>
&gt;<br>
&gt;     // Open File<br>
&gt;     errorCode = MPI_File_open(MPI_COMM_WORLD, &quot;TEST1A&quot;, MPI_MODE_RDONLY,<br>
&gt; MPI_INFO_NULL, &amp;_filehandle);<br>
&gt;<br>
&gt;     if (errorCode != 0)<br>
&gt;     {<br>
&gt;         int errorStringLen;<br>
&gt;         char *errorString = (char*) malloc(MPI_MAX_ERROR_STRING);<br>
&gt;<br>
&gt;         // Get MPI file I/O error string and print it<br>
&gt;         MPI_Error_string(errorCode, errorString, &amp;errorStringLen);<br>
&gt;<br>
&gt;         printf(&quot;MPI Error opening Data File: %s \n&quot;, errorString);<br>
&gt;<br>
&gt;         free(errorString);<br>
&gt;     }<br>
&gt;<br>
&gt;     // Works with new at 24, fails at 25<br>
&gt;     int dataLength = 25, numBytesRead;<br>
&gt;     char *data = NULL;<br>
&gt; //    data = (char*) malloc(dataLength);<br>
&gt;     data = new char(dataLength);<br>
&gt; //    MPI_Alloc_mem(dataLength, MPI_INFO_NULL, &amp;data);<br>
&gt;<br>
&gt;     // File I/O<br>
&gt;     errorCode = MPI_File_read_at(_filehandle, my_rank*dataLength, data,<br>
&gt; dataLength, MPI_CHAR, &amp;status);<br>
&gt;     MPI_Get_count(&amp;status, MPI_CHAR, &amp;numBytesRead);<br>
&gt;     printf(&quot;Rank: %d Start: %d Expected: %d Read: %d \n&quot;, my_rank,<br>
&gt; my_rank*dataLength, dataLength, numBytesRead);<br>
&gt;<br>
&gt;     if (errorCode != 0)<br>
&gt;     {<br>
&gt;         int errorStringLen;<br>
&gt;         char *errorString = (char*) malloc(MPI_MAX_ERROR_STRING);<br>
&gt;<br>
&gt;         // Get MPI file I/O error string and print it<br>
&gt;         MPI_Error_string(errorCode, errorString, &amp;errorStringLen);<br>
&gt;<br>
&gt;         printf(&quot;MPI Error reading from Data File: %s \n&quot;, errorString);<br>
&gt;<br>
&gt;         free(errorString);<br>
&gt;     }<br>
&gt;<br>
&gt;     // Free memory<br>
&gt; //    free(data);<br>
&gt;     delete[] data;<br>
&gt; //    MPI_Free_mem(data);<br>
&gt;<br>
&gt;     // Close file<br>
&gt;     MPI_File_close(&amp;_filehandle);<br>
&gt;<br>
&gt;     MPI_Finalize();<br>
&gt;     return 0;<br>
&gt; }<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
</div></div>&gt; _______________________________________________<br>
&gt; users mailing list<br>
&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
_______________________________________________<br>
users mailing list<br>
<a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br>
</blockquote></div><br></div>

