<div class="gmail_quote">On Tue, May 29, 2012 at 9:05 AM, Jeff Squyres <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span> wrote: <blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
<div class="im"></div><div class="im">
<br>
</div>We&#39;ve tossed around ideas such as having the wrappers always assume dynamic linking (e.g., only include a minimum of libraries), and then add another wrapper option like --wrapper:static (or whatever) to know when to add in all the dependent libraries.  Or possibly even look for some popular linker options like --static, or some such (which we&#39;ve tried to avoid, because that can turn into a slippery slope), but such switches aren&#39;t always necessary for MPI-only-static (vs. completely-100%-static) linking.  It gets even fuzzier when both libmpi.so and libmpi.a are present.  Which way should we assume?<br>

<br>
Another problem is backwards compatibility -- users who are currently statically linking will assume the old behavior (of not needing to specify anything additional).<br>
<div class="im"><br>
&gt; Now I&#39;m not saying that Open MPI should commit to pkg-config instead of wrapper compilers, but the concept of linking differently for static versus shared libraries is something that should be observed.<br>
<br>
</div>Fair enough.  But we&#39;ve never been able to come up with a rational way to do it (note that pkg-config has its own problems -- OMPI provides pkg-config files in addition to wrapper compilers, but they don&#39;t fix everything, either).<br>

<br>
We have users who both --enable-static and --enable-shared (meaning: both libmpi.so and libmpi.a are present).  And therefore we&#39;ve come down on the conservative side of adding in whatever is necessary for static linking.<br>
</blockquote><div><br></div><div>The pkg-config approach is to use pkg-config --static if you want to link that library statically.</div><div> </div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">

<div class="im"><br>
&gt; (Over-linking is an ongoing problem with HPC-oriented packages. We are probably all guilty of it, but tools like pkg-config don&#39;t handle multiple configurations well and I don&#39;t know of a similar system that manages both static/shared and multi-configuration well.)<br>

<br>
</div>I suppose, but it does depend on how you define &quot;problem&quot;.  The linker will ignore any unused libraries -- so it&#39;s a problem like lint is a problem.  It&#39;s annoying, but it doesn&#39;t do any harm.<br>

<br>
...or are there cases where it actually does something harmful?<br></blockquote><div><br></div><div>So the problem is almost exclusively one of binary compatibility. If an app or library is only linked to the interface libs, underlying system libraries can be upgraded to different soname without needing to relink the applications. For example, libhwloc could be upgraded to a different ABI, Open MPI rebuilt, and then the user application and intermediate MPI-based libraries would not need to be rebuilt. This is great for distributions and convenient if you work on projects with lots of dependencies.</div>
<div><br></div><div>It&#39;s not such an issue for HPC applications because we tend to recompile a lot and don&#39;t need binary compatibility for many of the most common use cases. There is also the linker option -Wl,--as-needed that usually does what is desired.</div>
</div>

