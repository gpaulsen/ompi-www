<html><head></head><body bgcolor="#FFFFFF"><div>Mateus,</div><div><br></div><div>MPI guarantee message ordering per communicator per peer. In other words any message going from peer A to peer B in the same communicator will be __matched__ on the receiver in the exact same order as they were sent (this remains true even for multi-threaded libraries). MPI does not mandate any other type of ordering, such as between communicators or between different pairs of processes.</div><div><br></div><div>Now, what I previously said is only true for the matching logic. Completion of message reception is a totally different thing.</div><div><br></div><div>&nbsp; George.<br><br><br></div><div><br>On Jan 24, 2012, at 23:53, Mateus Augusto &lt;<a href="mailto:teleomintos@yahoo.com.br">teleomintos@yahoo.com.br</a>&gt; wrote:<br><br></div><div></div><blockquote type="cite"><div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td valign="top" style="font: inherit;"><div>After a read: <a href="http://blogs.cisco.com/performance/more_traffic/">http://blogs.cisco.com/performance/more_traffic/</a> <br></div>
<div>I&nbsp;understood&nbsp;that if a large message is sent and then a short message is sent, then the short message can reach before. But what if the messages have the same size, and are small enough so that no fragmentation occurs, the ordering in delivery will be guaranteed?<br><br><br></div></td></tr></tbody></table></div></blockquote><blockquote type="cite"><div><span>_______________________________________________</span><br><span>users mailing list</span><br><span><a href="mailto:users@open-mpi.org">users@open-mpi.org</a></span><br><span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users">http://www.open-mpi.org/mailman/listinfo.cgi/users</a></span></div></blockquote></body></html>
