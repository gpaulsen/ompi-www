                  Prefix: /usr/local
             Exec_prefix: /usr/lib64/mpi/gcc/openmpi
                  Bindir: /usr/lib64/mpi/gcc/openmpi/bin
                 Sbindir: /usr/sbin
                  Libdir: /usr/lib64/mpi/gcc/openmpi/lib64
                  Incdir: /usr/lib64/mpi/gcc/openmpi/include
                  Mandir: /usr/lib64/mpi/gcc/openmpi/share/man
               Pkglibdir: /usr/lib64/mpi/gcc/openmpi/lib64/openmpi
              Libexecdir: /usr/lib
             Datarootdir: /usr/local/share
                 Datadir: /usr/lib64/mpi/gcc/openmpi/share
              Sysconfdir: /etc
          Sharedstatedir: /usr/com
           Localstatedir: /var
                 Infodir: /usr/share/info
              Pkgdatadir: /usr/lib64/mpi/gcc/openmpi/share/openmpi
               Pkglibdir: /usr/lib64/mpi/gcc/openmpi/lib64/openmpi
           Pkgincludedir: /usr/lib64/mpi/gcc/openmpi/include/openmpi
 Configured architecture: x86_64-suse-linux-gnu
          Configure host: cloud103
           Configured by: abuild
           Configured on: Sat Sep 28 00:21:41 UTC 2013
          Configure host: cloud103
                Built by: abuild
                Built on: Sat Sep 28 00:30:20 UTC 2013
              Built host: cloud103
              C bindings: yes
            C++ bindings: yes
             Fort mpif.h: yes (all)
            Fort use mpi: yes (limited: overloading)
       Fort use mpi size: deprecated-ompi-info-value
        Fort use mpi_f08: no
 Fort mpi_f08 compliance: The mpi_f08 module was not built
  Fort mpi_f08 subarrays: no
              C compiler: gcc
     C compiler absolute: /usr/bin/gcc
  C compiler family name: GNU
      C compiler version: 4.8.1
             C char size: 1
             C bool size: 1
            C short size: 2
              C int size: 4
             C long size: 8
            C float size: 4
           C double size: 8
          C pointer size: 8
            C char align: 1
            C bool align: 1
             C int align: 4
           C float align: 4
          C double align: 8
            C++ compiler: g++
   C++ compiler absolute: /usr/bin/g++
           Fort compiler: gfortran
       Fort compiler abs: /usr/bin/gfortran
         Fort ignore TKR: no
   Fort 08 assumed shape: no
      Fort optional args: no
            Fort BIND(C): no
            Fort PRIVATE: no
           Fort ABSTRACT: no
       Fort ASYNCHRONOUS: no
          Fort PROCEDURE: no
 Fort f08 using wrappers: yes
       Fort integer size: 4
       Fort logical size: 4
 Fort logical value true: 1
      Fort have integer1: yes
      Fort have integer2: yes
      Fort have integer4: yes
      Fort have integer8: yes
     Fort have integer16: no
         Fort have real4: yes
         Fort have real8: yes
        Fort have real16: yes
      Fort have complex8: yes
     Fort have complex16: yes
     Fort have complex32: yes
      Fort integer1 size: 1
      Fort integer2 size: 2
      Fort integer4 size: 4
      Fort integer8 size: 8
     Fort integer16 size: -1
          Fort real size: 4
         Fort real4 size: 4
         Fort real8 size: 8
        Fort real16 size: 16
      Fort dbl prec size: 8
          Fort cplx size: 8
      Fort dbl cplx size: 16
         Fort cplx8 size: 8
        Fort cplx16 size: 16
        Fort cplx32 size: 32
      Fort integer align: 4
     Fort integer1 align: 1
     Fort integer2 align: 2
     Fort integer4 align: 4
     Fort integer8 align: 8
    Fort integer16 align: -1
         Fort real align: 4
        Fort real4 align: 4
        Fort real8 align: 8
       Fort real16 align: 16
     Fort dbl prec align: 8
         Fort cplx align: 4
     Fort dbl cplx align: 8
        Fort cplx8 align: 4
       Fort cplx16 align: 8
       Fort cplx32 align: 16
             C profiling: yes
           C++ profiling: yes
   Fort mpif.h profiling: yes
  Fort use mpi profiling: yes
   Fort use mpi_f08 prof: no
          C++ exceptions: no
          Thread support: posix (MPI_THREAD_MULTIPLE: no, progress: no)
           Sparse Groups: no
            Build CFLAGS: -DNDEBUG -fmessage-length=0 -grecord-gcc-switches -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -finline-functions -fno-strict-aliasing -pthread
          Build CXXFLAGS: -DNDEBUG -fmessage-length=0 -grecord-gcc-switches -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -finline-functions -pthread
           Build FCFLAGS: 
           Build LDFLAGS: -export-dynamic
              Build LIBS: -lrt -lnsl  -lutil -lm
    Wrapper extra CFLAGS: -pthread
  Wrapper extra CXXFLAGS: -pthread
   Wrapper extra FCFLAGS: -pthread
   Wrapper extra LDFLAGS: 
      Wrapper extra LIBS: -lm -ldl -Wl,--export-dynamic -lrt -lnsl -lutil
  Internal debug support: no
  MPI interface warnings: yes
     MPI parameter check: runtime
Memory profiling support: no
Memory debugging support: no
         libltdl support: yes
   Heterogeneous support: no
 mpirun default --prefix: no
         MPI I/O support: yes
       MPI_WTIME support: gettimeofday
     Symbol vis. support: yes
   Host topology support: yes
          MPI extensions: 
   FT Checkpoint support: no (checkpoint thread: no)
   C/R Enabled Debugging: no
     VampirTrace support: yes
  MPI_MAX_PROCESSOR_NAME: 256
    MPI_MAX_ERROR_STRING: 256
     MPI_MAX_OBJECT_NAME: 64
        MPI_MAX_INFO_KEY: 36
        MPI_MAX_INFO_VAL: 256
       MPI_MAX_PORT_NAME: 1024
  MPI_MAX_DATAREP_STRING: 128
           MCA backtrace: parameter "backtrace" (current value: <none>, data source: default value)
                          Default selection set of components for the backtrace framework (<none> means use all components that can be found)
           MCA backtrace: parameter "backtrace_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the backtrace framework (0 = no verbosity)
           MCA backtrace: parameter "backtrace_execinfo_priority" (current value: <0>, data source: default value)
               MCA event: parameter "event_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level of the event framework
               MCA event: parameter "event" (current value: <none>, data source: default value)
                          Default selection set of components for the event framework (<none> means use all components that can be found)
               MCA event: parameter "event_libevent2019_priority" (current value: <0>, data source: default value)
               MCA hwloc: parameter "hwloc_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level of the hwloc framework
               MCA hwloc: parameter "hwloc_base_mem_alloc_policy" (current value: <none>, data source: default value)
                          General memory allocations placement policy (this is not memory binding). "none" means that no memory policy is applied. "local_only" means that a process' memory allocations will be restricted to its local NUMA node. If using direct launch, this policy will not be in effect until after MPI_INIT. Note that operating system paging policies are unaffected by this setting. For example, if "local_only" is used and local NUMA node memory is exhausted, a new memory allocation may cause paging.
               MCA hwloc: parameter "hwloc_base_mem_bind_failure_action" (current value: <warn>, data source: default value)
                          What Open MPI will do if it explicitly tries to bind memory to a specific NUMA location, and fails.  Note that this is a different case than the general allocation policy described by hwloc_base_alloc_policy.  A value of "silent" means that Open MPI will proceed without comment. A value of "warn" means that Open MPI will warn the first time this happens, but allow the job to continue (possibly with degraded performance).  A value of "error" means that Open MPI will abort the job if this happens.
               MCA hwloc: parameter "hwloc_base_binding_policy" (current value: <none>, data source: default value)
                          Policy for binding processes [none (default) | hwthread | core | l1cache | l2cache | l3cache | socket | numa | board] (supported qualifiers: overload-allowed,if-supported)
               MCA hwloc: parameter "hwloc_base_bind_to_core" (current value: <0>, data source: default value)
                          Bind processes to cores
               MCA hwloc: parameter "hwloc_base_bind_to_socket" (current value: <0>, data source: default value)
                          Bind processes to sockets
               MCA hwloc: parameter "hwloc_base_report_bindings" (current value: <0>, data source: default value)
                          Report bindings to stderr
               MCA hwloc: parameter "hwloc_base_slot_list" (current value: <none>, data source: default value)
                          List of processor IDs to bind processes to [default=NULL]
               MCA hwloc: parameter "hwloc_base_cpu_set" (current value: <none>, data source: default value)
                          Comma-separated list of ranges specifying logical cpus allocated to this job [default: none]
               MCA hwloc: parameter "hwloc" (current value: <none>, data source: default value)
                          Default selection set of components for the hwloc framework (<none> means use all components that can be found)
               MCA hwloc: parameter "hwloc_hwloc152_priority" (current value: <0>, data source: default value)
               MCA hwloc: parameter "hwloc_base_use_hwthreads_as_cpus" (current value: <0>, data source: default value)
                          Use hardware threads as independent cpus
                 MCA mca: parameter "mca_param_files" (current value: </home/lisa/.openmpi/mca-params.conf:/etc/openmpi-mca-params.conf>, data source: default value)
                          Path for MCA configuration files containing default parameter values
                 MCA mca: parameter "mca_base_param_file_prefix" (current value: <none>, data source: default value)
                          Aggregate MCA parameter file sets
                 MCA mca: parameter "mca_base_param_file_path" (current value: </usr/lib64/mpi/gcc/openmpi/share/openmpi/amca-param-sets:/home/lisa/OpenFOAM/lisa-2.2.2/run/modelle_2/Anfangsbedingungen>, data source: default value)
                          Aggregate MCA parameter Search path
                 MCA mca: parameter "mca_base_param_file_path_force" (current value: <none>, data source: default value)
                          Forced Aggregate MCA parameter Search path
                 MCA mca: parameter "mca_component_path" (current value: </usr/lib64/mpi/gcc/openmpi/lib64/openmpi:/home/lisa/.openmpi/components>, data source: default value)
                          Path where to look for Open MPI and ORTE components
                 MCA mca: parameter "mca_component_show_load_errors" (current value: <1>, data source: default value)
                          Whether to show errors for components that failed to load or not
                 MCA mca: parameter "mca_component_disable_dlopen" (current value: <0>, data source: default value)
                          Whether to attempt to disable opening dynamic components or not
                 MCA mca: parameter "mca_verbose" (current value: <stderr>, data source: default value)
                          Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
          MCA memchecker: parameter "memchecker" (current value: <none>, data source: default value)
                          Default selection set of components for the memchecker framework (<none> means use all components that can be found)
              MCA memory: parameter "memory" (current value: <none>, data source: default value)
                          Default selection set of components for the memory framework (<none> means use all components that can be found)
              MCA memory: parameter "memory_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the memory framework (0 = no verbosity)
              MCA memory: information "memory_linux_ptmalloc2_available" (value: <1>, data source: default value)
                          Whether ptmalloc2 support is included in Open MPI or not (1 = yes, 0 = no)
              MCA memory: information "memory_linux_ummunotify_available" (value: <0>, data source: default value)
                          Whether ummunotify support is included in Open MPI or not (1 = yes, 0 = no)
              MCA memory: parameter "memory_linux_ptmalloc2_enable" (current value: <-1>, data source: default value)
                          Whether to enable ptmalloc2 support or not (negative = try to enable, but continue even if support is not available, 0 = do not enable support, positive = try to enable and fail if support is not available)
              MCA memory: parameter "memory_linux_ummunotify_enable" (current value: <-1>, data source: default value)
                          Whether to enable ummunotify support or not (negative = try to enable, but continue even if support is not available, 0 = do not enable support, positive = try to enable and fail if support is not available)
              MCA memory: parameter "memory_linux_disable" (current value: <0>, data source: default value)
                          If this MCA parameter is set to 1 **VIA ENVIRONMENT VARIABLE ONLY*** (this MCA parameter *CANNOT* be set in a file or on the mpirun command line!), this component will be disabled and will not attempt to use either ummunotify or memory hook support
              MCA memory: parameter "memory_linux_priority" (current value: <0>, data source: default value)
              MCA memcpy: parameter "memcpy" (current value: <none>, data source: default value)
                          Default selection set of components for the memcpy framework (<none> means use all components that can be found)
              MCA memcpy: parameter "memcpy_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the memcpy framework (0 = no verbosity)
                MCA opal: parameter "opal_net_private_ipv4" (current value: <10.0.0.0/8;172.16.0.0/12;192.168.0.0/16;169.254.0.0/16>, data source: default value)
                          Semicolon-delimited list of CIDR notation entries specifying what networks are considered "private" (default value based on RFC1918 and RFC3330)
                MCA opal: parameter "opal_signal" (current value: <6,7,8,11>, data source: default value)
                          Comma-delimited list of integer signal numbers to Open MPI to attempt to intercept.  Upon receipt of the intercepted signal, Open MPI will display a stack trace and abort.  Open MPI will *not* replace signals if handlers are already installed by the time MPI_INIT is invoked.  Optionally append ":complain" to any signal number in the comma-delimited list to make Open MPI complain if it detects another signal handler (and therefore does not insert its own).
                MCA opal: parameter "opal_set_max_sys_limits" (current value: <0>, data source: default value)
                          Set to non-zero to automatically set any system-imposed limits to the maximum allowed
                MCA opal: parameter "opal_event_include" (current value: <poll>, data source: default value)
                          Comma-delimited list of libevent subsystems to use (epoll, poll, select -- available on your platform)
                MCA opal: parameter "opal_if_do_not_resolve" (current value: <0>, data source: default value)
                          If nonzero, do not attempt to resolve interfaces
                MCA opal: parameter "opal_if_retain_loopback" (current value: <0>, data source: default value)
                          If nonzero, retain loopback interfaces
               MCA shmem: parameter "shmem_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level of the shmem framework
               MCA shmem: parameter "shmem" (current value: <none>, data source: default value)
                          Default selection set of components for the shmem framework (<none> means use all components that can be found)
               MCA timer: parameter "timer" (current value: <none>, data source: default value)
                          Default selection set of components for the timer framework (<none> means use all components that can be found)
               MCA timer: parameter "timer_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the timer framework (0 = no verbosity)
               MCA timer: parameter "timer_linux_priority" (current value: <0>, data source: default value)
                  MCA db: parameter "db" (current value: <none>, data source: default value)
                          Default selection set of components for the db framework (<none> means use all components that can be found)
                  MCA db: parameter "db_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the db framework (0 = no verbosity)
              MCA errmgr: parameter "errmgr" (current value: <none>, data source: default value)
                          Default selection set of components for the errmgr framework (<none> means use all components that can be found)
              MCA errmgr: parameter "errmgr_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the errmgr framework (0 = no verbosity)
                 MCA ess: parameter "ess" (current value: <none>, data source: default value)
                          Default selection set of components for the ess framework (<none> means use all components that can be found)
                 MCA ess: parameter "ess_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the ess framework (0 = no verbosity)
               MCA filem: parameter "filem" (current value: <none>, data source: default value)
                          Which Filem component to use (empty = auto-select)
               MCA filem: parameter "filem_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the filem framework (0 = no verbosity)
             MCA grpcomm: parameter "grpcomm" (current value: <none>, data source: default value)
                          Default selection set of components for the grpcomm framework (<none> means use all components that can be found)
             MCA grpcomm: parameter "grpcomm_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the grpcomm framework (0 = no verbosity)
                 MCA iof: parameter "iof_base_output_limit" (current value: <-1>, data source: default value)
                          Maximum backlog of output messages [default: unlimited]
                 MCA iof: parameter "iof_base_input_files" (current value: <none>, data source: default value)
                          Comma-separated list of input files to be read and sent to stdin of procs (default: NULL)
                 MCA iof: parameter "iof" (current value: <none>, data source: default value)
                          Default selection set of components for the iof framework (<none> means use all components that can be found)
                 MCA iof: parameter "iof_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the iof framework (0 = no verbosity)
                MCA odls: parameter "odls_base_sigkill_timeout" (current value: <1>, data source: default value)
                          Time to wait for a process to die after issuing a kill signal to it
                MCA odls: parameter "odls" (current value: <none>, data source: default value)
                          Default selection set of components for the odls framework (<none> means use all components that can be found)
                MCA odls: parameter "odls_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the odls framework (0 = no verbosity)
                 MCA oob: parameter "oob" (current value: <none>, data source: default value)
                          Default selection set of components for the oob framework (<none> means use all components that can be found)
                 MCA oob: parameter "oob_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the oob framework (0 = no verbosity)
                MCA orte: parameter "orte_base_help_aggregate" (current value: <1>, data source: default value)
                          If orte_base_help_aggregate is true, duplicate help messages will be aggregated rather than displayed individually.  This can be helpful for parallel jobs that experience multiple identical failures; rather than print out the same help/failure message N times, display it once with a count of how many processes sent the same message.
                MCA orte: parameter "orte_tmpdir_base" (current value: <none>, data source: default value)
                          Base of the session directory tree to be used by all processes
                MCA orte: parameter "orte_local_tmpdir_base" (current value: <none>, data source: default value)
                          Base of the session directory tree to be used by orterun/mpirun
                MCA orte: parameter "orte_remote_tmpdir_base" (current value: <none>, data source: default value)
                          Base of the session directory tree on remote nodes, if required to be different from head node
                MCA orte: parameter "orte_no_session_dirs" (current value: <none>, data source: default value)
                          Prohibited locations for session directories (multiple locations separated by ',', default=NULL)
                MCA orte: parameter "orte_create_session_dirs" (current value: <1>, data source: default value)
                          Create session directories
                MCA orte: parameter "orte_execute_quiet" (current value: <0>, data source: default value)
                          Do not output error and help messages
                MCA orte: parameter "orte_report_silent_errors" (current value: <0>, data source: default value)
                          Report all errors, including silent ones
                MCA orte: parameter "orte_debug" (current value: <0>, data source: default value)
                          Top-level ORTE debug switch (default verbosity: 1)
                MCA orte: parameter "orte_debug_verbose" (current value: <-1>, data source: default value)
                          Verbosity level for ORTE debug messages (default: 1)
                MCA orte: parameter "orte_debug_daemons" (current value: <0>, data source: default value)
                          Whether to debug the ORTE daemons or not
                MCA orte: parameter "orte_debug_daemons_file" (current value: <0>, data source: default value)
                          Whether want stdout/stderr of daemons to go to a file or not
                MCA orte: parameter "orte_leave_session_attached" (current value: <0>, data source: default value)
                          Whether applications and/or daemons should leave their sessions attached so that any output can be received - this allows X forwarding without all the attendant debugging output
                MCA orte: parameter "orte_output_debugger_proctable" (current value: <0>, data source: default value)
                          Whether or not to output the debugger proctable after launch (default: false)
                MCA orte: parameter "orte_debugger_test_daemon" (current value: <none>, data source: default value)
                          Name of the executable to be used to simulate a debugger colaunch (relative or absolute path)
                MCA orte: parameter "orte_debugger_test_attach" (current value: <0>, data source: default value)
                          Test debugger colaunch after debugger attachment
                MCA orte: parameter "orte_debugger_check_rate" (current value: <0>, data source: default value)
                          Set rate (in secs) for auto-detect of debugger attachment (0 => do not check)
                MCA orte: parameter "orte_do_not_launch" (current value: <0>, data source: default value)
                          Perform all necessary operations to prepare to launch the application, but do not actually launch it
                MCA orte: parameter "orte_daemon_spin" (current value: <0>, data source: default value)
                          Have any orteds spin until we can connect a debugger to them
                MCA orte: parameter "orte_daemon_fail" (current value: <-1>, data source: default value)
                          Have the specified orted fail after init for debugging purposes
                MCA orte: parameter "orte_daemon_fail_delay" (current value: <0>, data source: default value)
                          Have the specified orted fail after specified number of seconds (default: 0 => no delay)
                MCA orte: parameter "orte_startup_timeout" (current value: <0>, data source: default value)
                          Seconds/daemon to wait for startup before declaring failed_to_start (default: 0 => do not check)
                MCA orte: parameter "orte_timing" (current value: <0>, data source: default value)
                          Request that critical timing loops be measured
                MCA orte: parameter "orte_timing_details" (current value: <0>, data source: default value)
                          Request that detailed timing data by reported
                MCA orte: parameter "orte_timing_file" (current value: <none>, data source: default value)
                          Name of the file where timing data is to be written (relative or absolute path)
                MCA orte: parameter "orte_base_user_debugger" (current value: <totalview @mpirun@ -a @mpirun_args@ : ddt -n @np@ -start @executable@ @executable_argv@ @single_app@ : fxp @mpirun@ -a @mpirun_args@>, data source: default value)
                          Sequence of user-level debuggers to search for in orterun
                MCA orte: parameter "orte_abort_timeout" (current value: <1>, data source: default value)
                          Max time to wait [in secs] before aborting an ORTE operation (default: 1sec)
                MCA orte: parameter "orte_timeout_step" (current value: <1000>, data source: default value)
                          Time to wait [in usecs/proc] before aborting an ORTE operation (default: 1000 usec/proc)
                MCA orte: parameter "orte_default_hostfile" (current value: <none>, data source: default value)
                          Name of the default hostfile (relative or absolute path, "none" to ignore environmental or default MCA param setting)
                MCA orte: parameter "orte_node_regex" (current value: <none>, data source: default value)
                          Regular expression defining nodes in the system
                MCA orte: parameter "orte_keep_fqdn_hostnames" (current value: <0>, data source: default value)
                          Whether or not to keep FQDN hostnames [default: no]
                MCA orte: parameter "orte_retain_aliases" (current value: <0>, data source: default value)
                          Whether or not to keep aliases for host names [default: no]
                MCA orte: parameter "orte_hostname_alias_index" (current value: <1>, data source: default value)
                          If hostname aliases are being retained, which one to use for the debugger proc table [default: 1st alias]
                MCA orte: parameter "orte_tag_output" (current value: <0>, data source: default value)
                          Tag all output with [job,rank] (default: false)
                MCA orte: parameter "orte_xml_output" (current value: <0>, data source: default value)
                          Display all output in XML format (default: false)
                MCA orte: parameter "orte_xml_file" (current value: <none>, data source: default value)
                          Provide all output in XML format to the specified file
                MCA orte: parameter "orte_timestamp_output" (current value: <0>, data source: default value)
                          Timestamp all application process output (default: false)
                MCA orte: parameter "orte_output_filename" (current value: <none>, data source: default value)
                          Redirect output from application processes into filename.rank [default: NULL]
                MCA orte: parameter "orte_show_resolved_nodenames" (current value: <0>, data source: default value)
                          Display any node names that are resolved to a different name (default: false)
                MCA orte: parameter "orte_hetero_apps" (current value: <0>, data source: default value)
                          Indicates that multiple app_contexts are being provided that are a mix of 32/64 bit binaries (default: false)
                MCA orte: parameter "orte_hetero_nodes" (current value: <0>, data source: default value)
                          Nodes in cluster may differ in topology, so send the topology back from each node [Default = false]
                MCA orte: parameter "orte_launch_agent" (current value: <orted>, data source: default value)
                          Command used to start processes on remote nodes (default: orted)
                MCA orte: parameter "orte_fork_agent" (current value: <none>, data source: default value)
                          Command used to fork processes on remote nodes (default: NULL)
                MCA orte: parameter "orte_allocation_required" (current value: <0>, data source: default value)
                          Whether or not an allocation by a resource manager is required [default: no]
                MCA orte: parameter "orte_xterm" (current value: <none>, data source: default value)
                          Create a new xterm window and display output from the specified ranks there [default: none]
                MCA orte: parameter "orte_map_stddiag_to_stderr" (current value: <0>, data source: default value)
                          Map output from opal_output to stderr of the local process [default: no]
                MCA orte: parameter "orte_forward_job_control" (current value: <0>, data source: default value)
                          Forward SIGTSTP (after converting to SIGSTOP) and SIGCONT signals to the application procs [default: no]
                MCA orte: parameter "orte_report_launch_progress" (current value: <0>, data source: default value)
                          Output a brief periodic report on launch progress [default: no]
                MCA orte: parameter "orte_report_events" (current value: <none>, data source: default value)
                          URI to which events are to be reported (default: NULL)
                MCA orte: parameter "orte_enable_recovery" (current value: <0>, data source: default value)
                          Enable recovery from process failure [Default = disabled]
                MCA orte: parameter "orte_max_restarts" (current value: <0>, data source: default value)
                          Max number of times to restart a failed process
                MCA orte: parameter "orte_abort_on_non_zero_status" (current value: <1>, data source: default value)
                          Abort the job if any process returns a non-zero exit status - no restart in such cases
                MCA orte: parameter "orte_report_child_jobs_separately" (current value: <0>, data source: default value)
                          Return the exit status of the primary job only
                MCA orte: parameter "orte_child_time_to_exit" (current value: <2147483647>, data source: default value)
                          Max time a spawned child job is allowed to run after the primary job has terminated (seconds)
                MCA orte: parameter "orte_stat_history_size" (current value: <1>, data source: default value)
                          Number of stat samples to keep
                MCA orte: parameter "orte_forward_envars" (current value: <none>, data source: default value)
                          Comma-delimited environmental variables to forward, can include value to set
                MCA orte: parameter "orte_preload_binaries" (current value: <0>, data source: default value)
                          Preload the binaries on remote machines before starting remote proceses
                MCA orte: parameter "orte_max_vm_size" (current value: <-1>, data source: default value)
                          Maximum size of virtual machine - used to subdivide allocation
                 MCA plm: parameter "plm" (current value: <none>, data source: default value)
                          Default selection set of components for the plm framework (<none> means use all components that can be found)
                 MCA plm: parameter "plm_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the plm framework (0 = no verbosity)
                 MCA ras: parameter "ras_base_display_alloc" (current value: <0>, data source: default value)
                          Whether to display the allocation after it is determined
                 MCA ras: parameter "ras_base_display_devel_alloc" (current value: <0>, data source: default value)
                          Whether to display a developer-detail allocation after it is determined
                 MCA ras: parameter "ras" (current value: <none>, data source: default value)
                          Default selection set of components for the ras framework (<none> means use all components that can be found)
                 MCA ras: parameter "ras_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the ras framework (0 = no verbosity)
               MCA rmaps: parameter "rmaps_base_mapping_policy" (current value: <none>, data source: default value, synonyms: rmaps_base_schedule_policy)
                          Mapping Policy [slot (default) | hwthread | core | l1cache | l2cache | l3cache | socket | numa | board | node | seq], with allowed modifiers :SPAN,OVERSUBSCRIBE,NOOVERSUBSCRIBE
               MCA rmaps: parameter "rmaps_base_schedule_policy" (current value: <none>, data source: default value, deprecated, synonym of: rmaps_base_mapping_policy)
                          Mapping Policy [slot (default) | hwthread | core | l1cache | l2cache | l3cache | socket | numa | board | node | seq], with allowed modifiers :SPAN,OVERSUBSCRIBE,NOOVERSUBSCRIBE
               MCA rmaps: parameter "rmaps_base_ranking_policy" (current value: <none>, data source: default value)
                          Ranking Policy [slot (default) | hwthread | core | l1cache | l2cache | l3cache | socket | numa | board | node], with modifier :SPAN or :FILL
               MCA rmaps: parameter "rmaps_base_byslot" (current value: <0>, data source: default value)
                          Whether to map and rank processes round-robin by slot
               MCA rmaps: parameter "rmaps_base_bynode" (current value: <0>, data source: default value)
                          Whether to map and rank processes round-robin by node
               MCA rmaps: parameter "rmaps_base_no_schedule_local" (current value: <0>, data source: default value)
                          If false, allow scheduling MPI applications on the same node as mpirun (default).  If true, do not schedule any MPI applications on the same node as mpirun
               MCA rmaps: parameter "rmaps_base_no_oversubscribe" (current value: <0>, data source: default value)
                          If true, then do not allow oversubscription of nodes - mpirun will return an error if there aren't enough nodes to launch all processes without oversubscribing
               MCA rmaps: parameter "rmaps_base_oversubscribe" (current value: <0>, data source: default value)
                          If true, then =allow oversubscription of nodes
               MCA rmaps: parameter "rmaps_base_display_map" (current value: <0>, data source: default value)
                          Whether to display the process map after it is computed
               MCA rmaps: parameter "rmaps_base_display_devel_map" (current value: <0>, data source: default value)
                          Whether to display a developer-detail process map after it is computed
               MCA rmaps: parameter "rmaps_base_display_topo_with_map" (current value: <0>, data source: default value)
                          Whether to display the topology with the map
               MCA rmaps: parameter "rmaps_base_display_diffable_map" (current value: <0>, data source: default value)
                          Whether to display a diffable process map after it is computed
               MCA rmaps: parameter "rmaps" (current value: <none>, data source: default value)
                          Default selection set of components for the rmaps framework (<none> means use all components that can be found)
               MCA rmaps: parameter "rmaps_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the rmaps framework (0 = no verbosity)
                 MCA rml: parameter "rml_wrapper" (current value: <none>, data source: default value)
                          Use a Wrapper component around the selected RML component
                 MCA rml: parameter "rml" (current value: <none>, data source: default value)
                          Default selection set of components for the rml framework (<none> means use all components that can be found)
                 MCA rml: parameter "rml_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the rml framework (0 = no verbosity)
              MCA routed: parameter "routed" (current value: <none>, data source: default value)
                          Default selection set of components for the routed framework (<none> means use all components that can be found)
              MCA routed: parameter "routed_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the routed framework (0 = no verbosity)
               MCA state: parameter "state" (current value: <none>, data source: default value)
                          Default selection set of components for the state framework (<none> means use all components that can be found)
               MCA state: parameter "state_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the state framework (0 = no verbosity)
           MCA allocator: parameter "allocator" (current value: <none>, data source: default value)
                          Default selection set of components for the allocator framework (<none> means use all components that can be found)
           MCA allocator: parameter "allocator_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the allocator framework (0 = no verbosity)
                 MCA btl: parameter "btl_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level of the BTL framework
                 MCA btl: parameter "btl" (current value: <none>, data source: default value)
                          Default selection set of components for the btl framework (<none> means use all components that can be found)
                 MCA btl: parameter "btl_base_include" (current value: <none>, data source: default value)
                 MCA btl: parameter "btl_base_exclude" (current value: <none>, data source: default value)
                 MCA btl: parameter "btl_base_warn_component_unused" (current value: <1>, data source: default value)
                          This parameter is used to turn on warning messages when certain NICs are not used
                MCA coll: parameter "coll" (current value: <none>, data source: default value)
                          Default selection set of components for the coll framework (<none> means use all components that can be found)
                MCA coll: parameter "coll_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the coll framework (0 = no verbosity)
                 MCA dpm: parameter "dpm" (current value: <none>, data source: default value)
                          Default selection set of components for the dpm framework (<none> means use all components that can be found)
                 MCA dpm: parameter "dpm_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the dpm framework (0 = no verbosity)
                MCA fbtl: parameter "fbtl" (current value: <none>, data source: default value)
                          Default selection set of components for the fbtl framework (<none> means use all components that can be found)
                MCA fbtl: parameter "fbtl_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the fbtl framework (0 = no verbosity)
               MCA fcoll: parameter "fcoll" (current value: <none>, data source: default value)
                          Default selection set of components for the fcoll framework (<none> means use all components that can be found)
               MCA fcoll: parameter "fcoll_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the fcoll framework (0 = no verbosity)
                  MCA fs: parameter "fs" (current value: <none>, data source: default value)
                          Default selection set of components for the fs framework (<none> means use all components that can be found)
                  MCA fs: parameter "fs_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the fs framework (0 = no verbosity)
                  MCA io: parameter "io_base_freelist_initial_size" (current value: <16>, data source: default value)
                          Initial MPI-2 IO request freelist size
                  MCA io: parameter "io_base_freelist_max_size" (current value: <64>, data source: default value)
                          Max size of the MPI-2 IO request freelist
                  MCA io: parameter "io_base_freelist_increment" (current value: <16>, data source: default value)
                          Increment size of the MPI-2 IO request freelist
                  MCA io: parameter "io" (current value: <none>, data source: default value)
                          Default selection set of components for the io framework (<none> means use all components that can be found)
                  MCA io: parameter "io_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the io framework (0 = no verbosity)
                 MCA mpi: parameter "mpi_param_check" (current value: <1>, data source: default value)
                          Whether you want MPI API parameters checked at run-time or not.  Possible values are 0 (no checking) and 1 (perform checking at run-time)
                 MCA mpi: parameter "mpi_yield_when_idle" (current value: <-1>, data source: default value)
                          Yield the processor when waiting for MPI communication (for MPI processes, will default to 1 when oversubscribing nodes)
                 MCA mpi: parameter "mpi_event_tick_rate" (current value: <-1>, data source: default value)
                          How often to progress TCP communications (0 = never, otherwise specified in microseconds)
                 MCA mpi: parameter "mpi_show_handle_leaks" (current value: <0>, data source: default value)
                          Whether MPI_FINALIZE shows all MPI handles that were not freed or not
                 MCA mpi: parameter "mpi_no_free_handles" (current value: <0>, data source: default value)
                          Whether to actually free MPI objects when their handles are freed
                 MCA mpi: parameter "mpi_show_mpi_alloc_mem_leaks" (current value: <0>, data source: default value)
                          If >0, MPI_FINALIZE will show up to this many instances of memory allocated by MPI_ALLOC_MEM that was not freed by MPI_FREE_MEM
                 MCA mpi: parameter "mpi_show_mca_params" (current value: <none>, data source: default value)
                          Whether to show all MCA parameter values during MPI_INIT or not (good for reproducability of MPI jobs for debug purposes). Accepted values are all, default, file, api, and enviro - or a comma delimited combination of them
                 MCA mpi: parameter "mpi_show_mca_params_file" (current value: <none>, data source: default value)
                          If mpi_show_mca_params is true, setting this string to a valid filename tells Open MPI to dump all the MCA parameter values into a file suitable for reading via the mca_param_files parameter (good for reproducability of MPI jobs)
                 MCA mpi: parameter "mpi_keep_peer_hostnames" (current value: <1>, data source: default value)
                          If nonzero, save the string hostnames of all MPI peer processes (mostly for error / debugging output messages).  This can add quite a bit of memory usage to each MPI process.
                 MCA mpi: parameter "mpi_abort_delay" (current value: <0>, data source: default value)
                          If nonzero, print out an identifying message when MPI_ABORT is invoked (hostname, PID of the process that called MPI_ABORT) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
                 MCA mpi: parameter "mpi_abort_print_stack" (current value: <0>, data source: default value)
                          If nonzero, print out a stack trace when MPI_ABORT is invoked
                 MCA mpi: parameter "mpi_leave_pinned" (current value: <-1>, data source: default value)
                          Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (0 = do not use "leave pinned" protocol, 1 = use "leave pinned" protocol, -1 = allow network to choose at runtime).
                 MCA mpi: parameter "mpi_leave_pinned_pipeline" (current value: <0>, data source: default value)
                          Whether to use the "leave pinned pipeline" protocol or not.
                 MCA mpi: parameter "mpi_warn_on_fork" (current value: <1>, data source: default value)
                          If nonzero, issue a warning if program forks under conditions that could cause system errors
                 MCA mpi: information "mpi_have_sparse_group_storage" (value: <0>, data source: default value)
                          Whether this Open MPI installation supports storing of data in MPI groups in "sparse" formats (good for extremely large process count MPI jobs that create many communicators/groups)
                 MCA mpi: parameter "mpi_use_sparse_group_storage" (current value: <0>, data source: default value)
                          Whether to use "sparse" storage formats for MPI groups (only relevant if mpi_have_sparse_group_storage is 1)
               MCA mpool: parameter "mpool" (current value: <none>, data source: default value)
                          Default selection set of components for the mpool framework (<none> means use all components that can be found)
               MCA mpool: parameter "mpool_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the mpool framework (0 = no verbosity)
                 MCA mtl: parameter "mtl" (current value: <none>, data source: default value)
                          Default selection set of components for the mtl framework (<none> means use all components that can be found)
                 MCA mtl: parameter "mtl_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the mtl framework (0 = no verbosity)
                  MCA op: parameter "op_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level of the op framework
                  MCA op: parameter "op" (current value: <none>, data source: default value)
                          Default selection set of components for the op framework (<none> means use all components that can be found)
                 MCA osc: parameter "osc" (current value: <none>, data source: default value)
                          Default selection set of components for the osc framework (<none> means use all components that can be found)
                 MCA osc: parameter "osc_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the osc framework (0 = no verbosity)
                 MCA pml: parameter "pml_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level of the PML framework
                 MCA pml: parameter "pml" (current value: <none>, data source: default value)
                          Default selection set of components for the pml framework (<none> means use all components that can be found)
                 MCA pml: parameter "pml_v_priority" (current value: <-1>, data source: default value)
                 MCA pml: parameter "pml_v_output" (current value: <stderr>, data source: default value)
                 MCA pml: parameter "pml_v_verbose" (current value: <0>, data source: default value)
              MCA pubsub: parameter "pubsub" (current value: <none>, data source: default value)
                          Default selection set of components for the pubsub framework (<none> means use all components that can be found)
              MCA pubsub: parameter "pubsub_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the pubsub framework (0 = no verbosity)
              MCA rcache: parameter "rcache" (current value: <none>, data source: default value)
                          Default selection set of components for the rcache framework (<none> means use all components that can be found)
              MCA rcache: parameter "rcache_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the rcache framework (0 = no verbosity)
            MCA sharedfp: parameter "sharedfp" (current value: <none>, data source: default value)
                          Default selection set of components for the sharedfp framework (<none> means use all components that can be found)
            MCA sharedfp: parameter "sharedfp_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the sharedfp framework (0 = no verbosity)
                MCA topo: parameter "topo" (current value: <none>, data source: default value)
                          Default selection set of components for the topo framework (<none> means use all components that can be found)
                MCA topo: parameter "topo_base_verbose" (current value: <0>, data source: default value)
                          Verbosity level for the topo framework (0 = no verbosity)
