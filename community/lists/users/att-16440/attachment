<table cellspacing="0" cellpadding="0" border="0" ><tr><td valign="top" style="font: inherit;">Sorry, I meant to say:<div>- on each node there is 1 listener and 1 worker.</div><div>- all workers act together when any of the listeners send them a request.</div><div>- currently I must use an extra clearinghouse process to receive from any of the listeners and bcast to workers, this is unfortunate because of the potential scaling issues</div><div><br></div><div>I think you have answered this in that I must wait for&nbsp;<meta charset="utf-8">MPI-3's non-blocking collectives.</div><div><br></div><div>Can anyone suggest another way? &nbsp;I don't like the serial clearinghouse approach.</div><div><br><br>--- On <b>Wed, 4/5/11, Jeff Squyres <i>&lt;jsquyres@cisco.com&gt;</i></b> wrote:<br><blockquote style="border-left: 2px solid rgb(16, 16, 255); margin-left: 5px; padding-left: 5px;"><br>From: Jeff Squyres &lt;jsquyres@cisco.com&gt;<br>Subject: Re: [OMPI users]
 is there an equiv of iprove for bcast?<br>To: randolph_pullen@yahoo.com.au, "Open MPI Users" &lt;users@open-mpi.org&gt;<br>Received: Wednesday, 4 May, 2011, 11:19 AM<br><br><div class="plainMail">I don't quite understand your architecture enough to answer your question.&nbsp; E.g., someone pointed out to me off-list that if you only have 1 listener, a send is effectively the same thing as a broadcast (for which you could test/wait on a non-blocking receive, for example).<br><br>MPI broadcasts only work on fixed communicators -- meaning that you effectively have to know the root and the receivers ahead of time.&nbsp; If the receivers don't know who the root will be beforehand, that's unfortunately not a good match for the MPI_Bcast operation.<br><br><br><br>On May 3, 2011, at 4:07 AM, Randolph Pullen wrote:<br><br>&gt; <br>&gt; From: Randolph Pullen &lt;<a ymailto="mailto:randolph_pullen@yahoo.com.au"
 href="/mc/compose?to=randolph_pullen@yahoo.com.au">randolph_pullen@yahoo.com.au</a>&gt;<br>&gt; Subject: Re: Re: [OMPI users] is there an equiv of iprove for bcast?<br>&gt; To: <a ymailto="mailto:users@open-mpi.or" href="/mc/compose?to=users@open-mpi.or">users@open-mpi.or</a><br>&gt; Received: Monday, 2 May, 2011, 12:53 PM<br>&gt; <br>&gt; Non blocking Bcasts or tests would do it.<br>&gt; I currently have the clearing-house solution working but it is unsatisfying because of its serial node. - As it scales it will overload this node.<br>&gt; <br>&gt; The problem rephrased:<br>&gt; Instead of n*2 processes, I am having to use n*2+1 with the extra process serially receiving listener messages on behalf of the workers before transmitting these messages to workers in its comm_group.<br>&gt; <br>&gt; Is there a way to Bcast directly from each listener to the worker pool?&nbsp; (listeners must monitor their ports most of the time and cant participate in global
 bcasts)<br>&gt; Not knowing which listener is going to transmit prevents the correct comm_group being used with Bcast calls.<br>&gt; <br>&gt; --- On Sat, 30/4/11, Jeff Squyres &lt;<a ymailto="mailto:jsquyres@cisco.com" href="/mc/compose?to=jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>&gt; <br>&gt; From: Jeff Squyres &lt;<a ymailto="mailto:jsquyres@cisco.com" href="/mc/compose?to=jsquyres@cisco.com">jsquyres@cisco.com</a>&gt;<br>&gt; Subject: Re: [OMPI users] is there an equiv of iprove for bcast?<br>&gt; To: <a ymailto="mailto:randolph_pullen@yahoo.com.au" href="/mc/compose?to=randolph_pullen@yahoo.com.au">randolph_pullen@yahoo.com.au</a>, "Open MPI Users" &lt;<a ymailto="mailto:users@open-mpi.org" href="/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a>&gt;<br>&gt; Received: Saturday, 30 April, 2011, 7:17 AM<br>&gt; <br>&gt; On Apr 29, 2011, at 1:21 AM, Randolph Pullen wrote:<br>&gt; <br>&gt; &gt; I am having a design issue:<br>&gt;
 &gt; My server application has 2 processes per node, 1 listener and 1 worker.<br>&gt; &gt; Each listener monitors a specified port for incoming TCP connections with the goal that on receipt of a request it will distribute it over the workers in a SIMD fashion.<br>&gt; &gt; <br>&gt; &gt; My problem is this: how can I get the workers to accept work from any of the listeners?<br>&gt; &gt; Making a separate communicator does not help as the sender is unknown.&nbsp; Other than making a serial 'clearing house' process I cant think of a way&nbsp; - Iprobe for Bcast would be useful.<br>&gt; <br>&gt; I'm not quite sure I understand your question.<br>&gt; <br>&gt; There currently is no probe for collectives, but MPI-3 has non-blocking collectives which you could MPI_Test for.&nbsp; There's a 3rd party library implementation called libNBC (non-blocking collectives) that you could use until such things become natively available.<br>&gt; <br>&gt; -- <br>&gt; Jeff
 Squyres<br>&gt; <a ymailto="mailto:jsquyres@cisco.com" href="/mc/compose?to=jsquyres@cisco.com">jsquyres@cisco.com</a><br>&gt; For corporate legal information go to:<br>&gt; <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>&gt; <br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a ymailto="mailto:users@open-mpi.org" href="/mc/compose?to=users@open-mpi.org">users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><br><br><br>-- <br>Jeff Squyres<br><a ymailto="mailto:jsquyres@cisco.com" href="/mc/compose?to=jsquyres@cisco.com">jsquyres@cisco.com</a><br>For corporate legal information go to:<br><a href="http://www.cisco.com/web/about/doing_business/legal/cri/"
 target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br><br></div></blockquote></div></td></tr></table>
