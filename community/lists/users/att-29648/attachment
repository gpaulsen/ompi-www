<div dir="ltr">Dear OpenMPI developers,
<div>we found a strange behavior when using MPI-RMA passive target and OpenMPI (versions 1.8.3 and 1.10.2). We don&#39;t see any problem when using MPICH.</div><div><br></div><div>This is a small example on what we want to do:</div><div><br></div><div>===================</div><div><div>program rma_openmpi</div><div>  use mpi</div><div>  integer :: nproc, rank, ierr</div><div>  integer :: win, request, size</div><div>  INTEGER(kind=mpi_address_kind) :: size_aint, disp_aint     </div><div>  integer, DIMENSION(:), ALLOCATABLE :: meta, recv</div><div><br></div><div>  call MPI_INIT(ierr)</div><div>  call MPI_COMM_SIZE(MPI_COMM_WORLD, nproc, ierr)</div><div>  call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)</div><div><br></div><div>  size=100</div><div>  ALLOCATE(meta(size),recv(size))</div><div>  meta(:) = rank</div><div>  recv(:) = -1</div><div>  size_aint = size*4</div><div><br></div><div>  call MPI_WIN_CREATE(meta,size_aint,4,MPI_INFO_NULL,MPI_COMM_WORLD,win,ierr)</div><div>  call MPI_WIN_LOCK_ALL(MPI_MODE_NOCHECK, win, ierr)</div><div><br></div><div>  disp_aint = 0</div><div>  CALL MPI_RGET(recv,size,MPI_INTEGER,MOD(rank+1,2),disp_aint,&amp;</div><div>       size,MPI_INTEGER,win,request,ierr)</div><div>  IF (ierr .NE. 0) STOP &quot;error mpi_rget&quot;</div><div><br></div><div>  CALL MPI_WAIT(request,MPI_STATUS_IGNORE,ierr)</div><div>  IF (ierr .NE. 0) STOP &quot;error mpi_wait&quot;</div><div><br></div><div>!  call MPI_Win_flush_all(win,ierr)                                                                                     </div><div>  print *,rank,&quot;=&quot;,recv(1)</div><div><br></div><div>  call MPI_WIN_UNLOCK_ALL(win, ierr)</div><div>  call MPI_WIN_FREE(win,ierr)</div><div><br></div><div>  DEALLOCATE(meta)</div><div>  call MPI_FINALIZE(ierr)</div><div>end program rma_openmpi<br></div></div><div><br></div><div>===================<br></div><div><br></div><div>You can run with 2 ranks. </div><div>As you can see it is a simple rget operation from the neighbor rank. However, it seems that the communications doesn&#39;t complete after the mpi_wait. Indeed we get:</div><div><br></div><div><div>          0 =          -1</div><div>          1 =          -1</div></div><div>while it should be:</div><div><br></div><div><div>           0 =           1</div><div>           1 =           0</div></div><div><br></div><div>The code works as we want by uncommenting the flush operation, but we would expect the same behavior with such a synchronization.</div><div><br></div><div>Thanks for your help!</div><div><br></div><div>Best regards,</div><div><br></div><div>Alfio</div><div><br></div></div>

