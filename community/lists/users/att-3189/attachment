<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="Generator" CONTENT="MS Exchange Server version 6.5.7651.59">
<TITLE>Valgrind and openmpi</TITLE>
</HEAD>
<BODY>
<!-- Converted from text/rtf format -->

<P><FONT SIZE=2 FACE="Arial">I was wondering if it is expected to have error messages from valgrind when checking openmpi code?</FONT>
</P>

<P><FONT SIZE=2 FACE="Arial">For instance, I have following trivial code:</FONT>
</P>

<P><FONT SIZE=2 FACE="Arial">#include &lt;mpi.h&gt;</FONT>

<BR><FONT SIZE=2 FACE="Arial">#include &lt;iostream&gt;</FONT>
</P>

<P><FONT SIZE=2 FACE="Arial">template &lt;typename T&gt;</FONT>

<BR><FONT SIZE=2 FACE="Arial">void distribute_val(T&amp; val, int _procid, int _np) </FONT>

<BR><FONT SIZE=2 FACE="Arial">{</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">MPI_Bcast(&amp;val, sizeof(T), MPI_CHAR, 0, MPI_COMM_WORLD); </FONT>

<BR><FONT SIZE=2 FACE="Arial">}</FONT>
</P>

<P><FONT SIZE=2 FACE="Arial">using namespace std;</FONT>
</P>
<BR>

<P><FONT SIZE=2 FACE="Arial">int main(int argc, char** argv)</FONT>

<BR><FONT SIZE=2 FACE="Arial">{</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">int procid;</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">int nproc;</FONT>
</P>

<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">MPI_Init(&amp;argc, &amp;argv);</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">MPI_Comm_rank (MPI_COMM_WORLD, &amp;procid);</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">MPI_Comm_size (MPI_COMM_WORLD, &amp;nproc);</FONT>

<BR><FONT SIZE=2 FACE="Arial">&nbsp;&nbsp;&nbsp; double val = 0;</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">if(procid == 0)</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">val = 3.14159;</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">distribute_val(val, procid, nproc);</FONT>
</P>

<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">cout &lt;&lt; &quot;ProcID=\t&quot; &lt;&lt; procid &lt;&lt; &quot;\tval=&quot; &lt;&lt; val &lt;&lt; endl;</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">MPI_Finalize();</FONT>

<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FONT SIZE=2 FACE="Arial">return 0;</FONT>

<BR><FONT SIZE=2 FACE="Arial">}</FONT>
</P>

<P><FONT SIZE=2 FACE="Arial">Which produces errors in valgrind if I run it on 2 processors connected by network.</FONT>

<BR><FONT SIZE=2 FACE="Arial">If I run it on 2 pocessors located on the same node then I get no errors from valgrind.</FONT>

<BR><FONT SIZE=2 FACE="Arial">In both cases code runs as expected, but I am still worried about causes of valgrind errors.</FONT>
</P>

<P><FONT SIZE=2 FACE="Arial">Below is the output from valgrind:</FONT>

<BR><FONT SIZE=2 FACE="Arial">&gt; mpiCC -g -Wall test.cpp -o test</FONT>

<BR><FONT SIZE=2 FACE="Arial">&gt; mpirun -np 2 --machinefile ./mpd.2 --prefix /toolbox/openmpi valgrind --leak-check=full ./test</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== Memcheck, a memory error detector.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== Using LibVEX rev 1732, a library for dynamic binary translation.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== Using valgrind-3.2.3, a dynamic binary instrumentation framework.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== For more details, rerun with: -v</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== Memcheck, a memory error detector.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== Using LibVEX rev 1732, a library for dynamic binary translation.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== Using valgrind-3.2.3, a dynamic binary instrumentation framework.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== For more details, rerun with: -v</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545==</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== Syscall param writev(vector[...]) points to uninitialised byte(s)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; at 0x59BFA86: do_writev (in /lib64/tls/libc.so.6)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x831771E: mca_btl_tcp_frag_send (in /toolbox64/openmpi/lib/openmpi/mca_btl_tcp.so)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x83160C9: mca_btl_tcp_endpoint_send_handler (in /toolbox64/openmpi/lib/openmpi/mca_btl_tcp.so)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x4F50951: opal_event_base_loop (in /toolbox64/openmpi/lib/libopen-pal.so.0.0.0)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x4F509E4: opal_event_loop (in /toolbox64/openmpi/lib/libopen-pal.so.0.0.0)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x4F4AE50: opal_progress (in /toolbox64/openmpi/lib/libopen-pal.so.0.0.0)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x4C8014B: ompi_request_wait_all (in /toolbox64/openmpi/lib/libmpi.so.0.0.0)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x873412D: ompi_coll_tuned_bcast_intra_generic (in /toolbox64/openmpi/lib/openmpi/mca_coll_tuned.so)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x8734293: ompi_coll_tuned_bcast_intra_binomial (in /toolbox64/openmpi/lib/openmpi/mca_coll_tuned.so)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x872EA9F: ompi_coll_tuned_bcast_intra_dec_fixed (in /toolbox64/openmpi/lib/openmpi/mca_coll_tuned.so)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x4C957BA: PMPI_Bcast (in /toolbox64/openmpi/lib/libmpi.so.0.0.0)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; by 0x408A9D: void distribute_val&lt;double&gt;(double&amp;, int, int) (test.cpp:7)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp; Address 0x41EEE2C is not stack'd, malloc'd or (recently) free'd</FONT>

<BR><FONT SIZE=2 FACE="Arial">ProcID= 0&nbsp; val=3.14159</FONT>

<BR><FONT SIZE=2 FACE="Arial">ProcID= 1&nbsp; val=3.14159</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545==</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 5)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== malloc/free: in use at exit: 1,920 bytes in 1 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== malloc/free: 1 allocs, 0 frees, 1,920 bytes allocated.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== For counts of detected errors, rerun with: -v</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== searching for pointers to 1 not-freed blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== checked 1,155,400 bytes.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545==</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== LEAK SUMMARY:</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545==&nbsp;&nbsp;&nbsp; definitely lost: 0 bytes in 0 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; possibly lost: 0 bytes in 0 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545==&nbsp;&nbsp;&nbsp; still reachable: 1,920 bytes in 1 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; suppressed: 0 bytes in 0 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== Reachable blocks (those to which a pointer was found) are not shown.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==13545== To see them, rerun with: --leak-check=full --show-reachable=yes</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 7 from 4)</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== malloc/free: in use at exit: 1,920 bytes in 1 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== malloc/free: 1 allocs, 0 frees, 1,920 bytes allocated.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== For counts of detected errors, rerun with: -v</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== searching for pointers to 1 not-freed blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== checked 1,158,440 bytes.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== LEAK SUMMARY:</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; definitely lost: 0 bytes in 0 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; possibly lost: 0 bytes in 0 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp; still reachable: 1,920 bytes in 1 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; suppressed: 0 bytes in 0 blocks.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== Reachable blocks (those to which a pointer was found) are not shown.</FONT>

<BR><FONT SIZE=2 FACE="Arial">==14823== To see them, rerun with: --leak-check=full --show-reachable=yes </FONT>
</P>


<P>------------------------------------------------------------------------------<br>
Notice:  This e-mail message, together with any attachments, contains<br>
information of Merck & Co., Inc. (One Merck Drive, Whitehouse Station,<br>
New Jersey, USA 08889), and/or its affiliates (which may be known<br>
outside the United States as Merck Frosst, Merck Sharp & Dohme or MSD<br>
and in Japan, as Banyu - direct contact information for affiliates is <br>
available at http://www.merck.com/contact/contacts.html) that may be <br>
confidential, proprietary copyrighted and/or legally privileged. It is <br>
intended solely for the use of the individual or entity named on this <br>
message. If you are not the intended recipient, and have received this <br>
message in error, please notify us immediately by reply e-mail and then <br>
delete it from your system.<br>
<br>
<br>
------------------------------------------------------------------------------</P></BODY>
</HTML>
