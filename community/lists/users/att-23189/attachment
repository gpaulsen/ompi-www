<div dir="ltr">Hello,<br><br>I am having difficulties with compiling openMPI with CUDA support. I have followed this (<a href="http://www.open-mpi.org/faq/?category=building#build-cuda" target="_blank">http://www.open-mpi.org/faq/?category=building#build-cuda</a>) faq entry. As below;<br>


<br>$ cd openmpi-1.7.3/<div>$ ./configure --with-cuda=/urs/local/cuda-5.5<br>$ make all install<br><br>everything goes perfect during compilation. But when I try to execute simplest mpi hello world application I got following error;</div>

<div><br></div><div>$ mpicc hello.c -o hello<br>$ mpirun -np 2 hello<br></div><div><br></div><div><div>hello: symbol lookup error: /usr/local/lib/openmpi/mca_pml_ob1.so: undefined symbol: progress_one_cuda_htod_event</div>

<div>hello: symbol lookup error: /usr/local/lib/openmpi/mca_pml_ob1.so: undefined symbol: progress_one_cuda_htod_event</div><div>--------------------------------------------------------------------------</div><div>mpirun has exited due to process rank 0 with PID 30329 on</div>

<div>node cudalab1 exiting improperly. There are three reasons this could occur:</div><div><br></div><div>1. this process did not call &quot;init&quot; before exiting, but others in</div><div>the job did. This can cause a job to hang indefinitely while it waits</div>

<div>for all processes to call &quot;init&quot;. By rule, if one process calls &quot;init&quot;,</div><div>then ALL processes must call &quot;init&quot; prior to termination.</div><div><br></div><div>2. this process called &quot;init&quot;, but exited without calling &quot;finalize&quot;.</div>

<div>By rule, all processes that call &quot;init&quot; MUST call &quot;finalize&quot; prior to</div><div>exiting or it will be considered an &quot;abnormal termination&quot;</div><div><br></div><div>3. this process called &quot;MPI_Abort&quot; or &quot;orte_abort&quot; and the mca parameter</div>

<div>orte_create_session_dirs is set to false. In this case, the run-time cannot</div><div>detect that the abort call was an abnormal termination. Hence, the only</div><div>error message you will receive is this one.</div>

<div><br></div><div>This may have caused other processes in the application to be</div><div>terminated by signals sent by mpirun (as reported here).</div><div><br></div><div>You can avoid this message by specifying -quiet on the mpirun command line.</div>

<div><br></div><div>--------------------------------------------------------------------------</div></div><div><br></div><div>$ mpirun -np 1 hello<br></div><div><br><div>hello: symbol lookup error: /usr/local/lib/openmpi/mca_pml_ob1.so: undefined symbol: progress_one_cuda_htod_event</div>

<div>--------------------------------------------------------------------------</div><div>mpirun has exited due to process rank 0 with PID 30327 on</div><div>node cudalab1 exiting improperly. There are three reasons this could occur:</div>

<div><br></div><div>1. this process did not call &quot;init&quot; before exiting, but others in</div><div>the job did. This can cause a job to hang indefinitely while it waits</div><div>for all processes to call &quot;init&quot;. By rule, if one process calls &quot;init&quot;,</div>

<div>then ALL processes must call &quot;init&quot; prior to termination.</div><div><br></div><div>2. this process called &quot;init&quot;, but exited without calling &quot;finalize&quot;.</div><div>By rule, all processes that call &quot;init&quot; MUST call &quot;finalize&quot; prior to</div>

<div>exiting or it will be considered an &quot;abnormal termination&quot;</div><div><br></div><div>3. this process called &quot;MPI_Abort&quot; or &quot;orte_abort&quot; and the mca parameter</div><div>orte_create_session_dirs is set to false. In this case, the run-time cannot</div>

<div>detect that the abort call was an abnormal termination. Hence, the only</div><div>error message you will receive is this one.</div><div><br></div><div>This may have caused other processes in the application to be</div>

<div>terminated by signals sent by mpirun (as reported here).</div><div><br></div><div>You can avoid this message by specifying -quiet on the mpirun command line.</div><div><br></div><div>--------------------------------------------------------------------------</div>

<div><br></div><div><br></div><div>Any suggestions?</div>I have two PCs with Intel I3 CPUs and Geforce GTX 480 GPUs.<br><br><br>And here is the hello.c file;<br><br><div>#include &lt;stdio.h&gt;</div><div>#include &lt;mpi.h&gt;</div>

<div><br></div><div><br></div><div>int main (int argc, char **argv)</div><div>{</div><div>  int rank, size;</div><div><br></div><div>  MPI_Init (&amp;argc, &amp;argv);<span class="" style="white-space:pre">	</span>/* starts MPI */</div>

<div>  MPI_Comm_rank (MPI_COMM_WORLD, &amp;rank);<span class="" style="white-space:pre">	</span>/* get current process id */</div><div>  MPI_Comm_size (MPI_COMM_WORLD, &amp;size);<span class="" style="white-space:pre">	</span>/* get number of processes */</div>

<div>  printf( &quot;Hello world from process %d of %d\n&quot;, rank, size );</div><div>  MPI_Finalize();</div><div>  return 0;</div><div>}</div><div><br></div>
<br><br><div><br></div>-- <br><div dir="ltr">Özgür Pekçağlıyan<div>B.Sc. in Computer Engineering</div><div>M.Sc. in Computer Engineering</div></div>
</div></div>

