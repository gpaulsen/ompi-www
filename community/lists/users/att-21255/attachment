<font face="courier new,monospace"></font><br><div class="gmail_quote">On Wed, Jan 30, 2013 at 3:02 AM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div style="word-wrap:break-word"><div><br></div><div>If your node hardware is the problem, or you decide you do want/need to pursue an FT solution, then you might look at the OMPI-based solutions from parties such as <a href="http://fault-tolerance.org" target="_blank">http://fault-tolerance.org</a> or the MPICH2 folks.</div>
</div></blockquote><div><br>Just as Ralph said, you may look into alternatives. From what I have seen, MPICH2 provides fault tolerance using BLCR. <br>The same goes for Intel&#39;s MPI (<a href="http://software.intel.com/en-us/forums/topic/296300">http://software.intel.com/en-us/forums/topic/296300</a>). Though not free, you may try it during <br>
a 30-day evaluation period (<a href="http://software.intel.com/en-us/intel-mpi-library/">http://software.intel.com/en-us/intel-mpi-library/</a>). <br>It can be interesting to see how the two MPI fair wrt to BLCR-based FT.<br>
<br>Another alternative which may be worth considering is DMTCP (<a href="http://dmtcp.sourceforge.net/">http://dmtcp.sourceforge.net/</a>) from Northeastern University <br>for which there has been an interesting podcast recently (<a href="http://www.rce-cast.com/Podcast/rce-76-distributed-multithreaded-checkpointing.html">http://www.rce-cast.com/Podcast/rce-76-distributed-multithreaded-checkpointing.html</a>) :-)<br>
<br>Finally, depending on the application, you may be interested in adding checkpoint-based fault tolerance at the application level with the help of <br>libraries such as SCR (<a href="http://sourceforge.net/projects/scalablecr/">http://sourceforge.net/projects/scalablecr/</a>). Though you&#39;ll need to spend some time modifying the application source code, <br>
it may be better than system-level based alternatives in the long run.<br><br>--<br>Constantinos<br><br></div></div>

