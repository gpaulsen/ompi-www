<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns="http://www.w3.org/TR/REC-html40"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii"><meta name=Generator content="Microsoft Word 14 (filtered medium)"><style><!--
/* Font Definitions */
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-priority:99;
	color:purple;
	text-decoration:underline;}
span.EmailStyle17
	{mso-style-type:personal-reply;
	font-family:"Calibri","sans-serif";
	color:#1F497D;}
.MsoChpDefault
	{mso-style-type:export-only;
	font-family:"Calibri","sans-serif";}
@page WordSection1
	{size:612.0pt 792.0pt;
	margin:70.85pt 70.85pt 2.0cm 70.85pt;}
div.WordSection1
	{page:WordSection1;}
--></style><!--[if gte mso 9]><xml>
<o:shapedefaults v:ext="edit" spidmax="1026" />
</xml><![endif]--><!--[if gte mso 9]><xml>
<o:shapelayout v:ext="edit">
<o:idmap v:ext="edit" data="1" />
</o:shapelayout></xml><![endif]--></head><body lang=EN-US link=blue vlink=purple><div class=WordSection1><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>Hello,<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>At the moment I&#8217;m building them manually but I am also thinking of a measurement framework to do it automatically in the future.<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>Best regards,<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>Hristo<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>--<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>Hristo Iliev, Ph.D. -- High Performance Computing<o:p></o:p></span></p><p class=MsoNormal><span style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>RWTH Aachen University, Center for Computing and Communication<o:p></o:p></span></p><p class=MsoNormal><span lang=DE style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>Rechen- und Kommunikationszentrum der RWTH Aachen<o:p></o:p></span></p><p class=MsoNormal><span lang=DE style='font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>Seffenter Weg 23,&nbsp; D 52074&nbsp; Aachen (Germany)<o:p></o:p></span></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><div style='border:none;border-left:solid blue 1.5pt;padding:0cm 0cm 0cm 4.0pt'><div><div style='border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0cm 0cm 0cm'><p class=MsoNormal><b><span style='font-size:10.0pt;font-family:"Tahoma","sans-serif"'>From:</span></b><span style='font-size:10.0pt;font-family:"Tahoma","sans-serif"'> users-bounces@open-mpi.org [mailto:users-bounces@open-mpi.org] <b>On Behalf Of </b>Pavel Mezentsev<br><b>Sent:</b> Monday, September 24, 2012 3:09 PM<br><b>To:</b> Open MPI Users<br><b>Subject:</b> Re: [OMPI users] Algorithms used in MPI_BCast<o:p></o:p></span></p></div></div><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>Hello,<o:p></o:p></p><div><p class=MsoNormal><o:p>&nbsp;</o:p></p></div><div><p class=MsoNormal>Are you making these rules manually or in some automated way?<o:p></o:p></p></div><div><p class=MsoNormal><o:p>&nbsp;</o:p></p></div><div><p class=MsoNormal style='margin-bottom:12.0pt'>Regards, Pavel Mezentsev.<o:p></o:p></p><div><p class=MsoNormal>2012/9/21 Iliev, Hristo &lt;<a href="mailto:iliev@rz.rwth-aachen.de" target="_blank">iliev@rz.rwth-aachen.de</a>&gt;<o:p></o:p></p><p class=MsoNormal>Hi,<br><br>Open MPI uses several different algorithms depending on which module from<br>the &quot;coll&quot; framework is selected to perform the logic of the broadcast<br>operation. The &quot;tuned&quot; module which usually gets selected on cluster<br>installations uses a heuristic rule, based on the message size and the size<br>of the communicator, to choose between building a pipeline, binomial tree or<br>split binary tree. There are also other algorithms that go unused by the<br>default rule logic, but you can force them with MCA parameters if you'd<br>like.<br><br>The default rules might not be optimal for your hardware. You can reevaluate<br>each algorithm and create a rule file that you can then give to Open MPI.<br>That's what I'm doing now on our cluster.<br><br>Kind regards,<br>Hristo<br>--<br>Hristo Iliev, Ph.D. -- High Performance Computing<br>RWTH Aachen University, Center for Computing and Communication<br>Rechen- und Kommunikationszentrum der RWTH Aachen<br>Seffenter Weg 23, &nbsp;D 52074 &nbsp;Aachen (Germany)<br>Tel: +49 241 80 24367 -- Fax/UMS: +49 241 80 624367<o:p></o:p></p><div><div><p class=MsoNormal><br><br>&gt; -----Original Message-----<br>&gt; From: <a href="mailto:users-bounces@open-mpi.org">users-bounces@open-mpi.org</a> [mailto:<a href="mailto:users-bounces@open-mpi.org">users-bounces@open-mpi.org</a>]<br>&gt; On Behalf Of Mohammed El Mehdi DIOURI<br>&gt; Sent: Friday, September 21, 2012 2:13 AM<br>&gt; To: <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt; Cc: Mohammed El Mehdi DIOURI<br>&gt; Subject: [OMPI users] Algorithms used in MPI_BCast<br>&gt;<br>&gt; Hi,<br>&gt;<br>&gt; I would like to know what are the algorithms used in MPI_BCast() in the<br>&gt; OpenMPI implementation.<br>&gt;<br>&gt; For example, in MPICH2, depending on the number of processes and the size<br>&gt; of data to broadcast, the broadcasting algorithm used can be different : a<br>&gt; binomial tree if the message is short or MPI_Scatter followed by<br>&gt; MPI_AllGather if the message to broadcast is long.<br>&gt;<br>&gt; Is it the same for OpenMPI ?<br>&gt; It doesn't seem to be the case since the broadcasting time is different<br>when I<br>&gt; use OpenMPI or MPICH2.<br>&gt;<br>&gt; Thanks for your help,<br>&gt;<br>&gt; Mehdi.<br>&gt; _______________________________________________<br>&gt; users mailing list<br>&gt; <a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><o:p></o:p></p></div></div><p class=MsoNormal><br>_______________________________________________<br>users mailing list<br><a href="mailto:users@open-mpi.org">users@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/users</a><o:p></o:p></p></div><p class=MsoNormal><o:p>&nbsp;</o:p></p></div></div></div></body></html>
