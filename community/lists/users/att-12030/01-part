#include <mpi.h>
#include <stdio.h>
#include <stdlib.h>

int main(int argc,char **argv)
{
  int        ierr,i,size,rank;
  int        cnt = 433438806;
  MPI_Status status;
  long long  *cols;

  MPI_Init(&argc,&argv);
  ierr = MPI_Comm_size(MPI_COMM_WORLD,&size);
  ierr = MPI_Comm_rank(MPI_COMM_WORLD,&rank);
  if (size != 2) {
    fprintf(stderr,"[%d] usage: mpiexec -n 2 %s\n",rank,argv[0]);
    MPI_Abort(MPI_COMM_WORLD,1);
  }

  cols = malloc(cnt*sizeof(long long));
  for (i=0; i<cnt; i++) cols[i] = rank;
  if (rank == 0) {
    printf("[%d] sending...\n",rank);
    ierr = MPI_Send(cols,cnt,MPI_LONG_LONG_INT,1,0,MPI_COMM_WORLD);
  } else {
    printf("[%d] receiving...\n",rank);
    ierr = MPI_Recv(cols,cnt,MPI_LONG_LONG_INT,0,0,MPI_COMM_WORLD,&status);
    ierr = MPI_Get_count(&status,MPI_LONG_LONG_INT,&cnt);
    printf("[%d] count %d, cols[0] %lld\n",rank,cnt,cols[0]);
  }
  ierr = MPI_Finalize();
  return 0;
}

