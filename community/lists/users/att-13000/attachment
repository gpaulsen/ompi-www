<html>
<head>
<style><!--
.hmmessage P
{
margin:0px;
padding:0px
}
body.hmmessage
{
font-size: 10pt;
font-family:Verdana
}
--></style>
</head>
<body class='hmmessage'>
Did "--mca mpi_preconnect_all 1" work?<BR>
&nbsp;<BR>
I also&nbsp;face this problem "readv failed: connection time out" in the production environment, and our engineer&nbsp;has reproduced this scenario at 20 nodes&nbsp;with gigabye ethernet and limit one ethernet&nbsp;speed to 2MB/s,&nbsp;then a MPI_Isend &amp;&amp; MPI_Recv ring&nbsp;that means each node call MPI_Isend&nbsp;send data to&nbsp;the next node and&nbsp;then&nbsp;call MPI_Recv recv data from the prior with large size for many cycles, then we get the following error log:<BR>
<SPAN lang=EN-US><FONT size=3><FONT face=Calibri>[btl_tcp_frag.c:216:mca_btl_tcp_frag_recv] mca_btl_tcp_frag_recv: readv &nbsp;failed: Connection timed out (110)<?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></FONT></FONT></SPAN><BR>
&nbsp;<BR>
our environment:<BR>
Open MPI version 1.3.1,&nbsp;&nbsp;using btl tcp component.<BR>
&nbsp;<BR>
I thought it might because the network fd was set nonblocking, and the nonblocking call of connect() might be error and the epoll_wait() was wake up by the error but treat it as success and call mca_btl_tcp_endpoint_recv_handler(), the nonblocking&nbsp;readv() call on a failed connected fd, so it return -1, and set the errorno to 110 which means connection timed out.<BR>
&nbsp;<BR>&gt; From: ljdursi@scinet.utoronto.ca<BR>&gt; Date: Tue, 20 Apr 2010 09:24:17 -0400<BR>&gt; To: users@open-mpi.org<BR>&gt; Subject: Re: [OMPI users] 'readv failed: Connection timed out' issue<BR>&gt; <BR>&gt; On 2010-04-20, at 9:18AM, Terry Dontje wrote:<BR>&gt; <BR>&gt; &gt; Hi Jonathan,<BR>&gt; &gt; <BR>&gt; &gt; Do you know what the top level function is or communication pattern? Is it some type of collective or a pattern that has a many to one. <BR>&gt; <BR>&gt; Ah, should have mentioned. The best-characterized code that we're seeing this with is an absolutely standard (logically) regular grid hydrodynamics code, only does nearest neighbour communication for exchanging guardcells; the Wait in this case is, I think, just a matter of overlapping communication with computation of the inner zones. There are things like allreduces in there, as well, for setting timesteps, but the communication pattern is overall extremely regular and well-behaved.<BR>&gt; <BR>&gt; &gt; What might be happening is that since OMPI uses a lazy connections by default if all processes are trying to establish communications to the same process you might run into the below.<BR>&gt; &gt; <BR>&gt; &gt; You might want to see if setting "--mca mpi_preconnect_all 1" helps any. But beware this will cause your startup to increase. However, this might give us insight as to whether the problem is flooding a single rank with connect requests.<BR>&gt; <BR>&gt; I'm certainly willing to try it.<BR>&gt; <BR>&gt; - Jonathan<BR>&gt; <BR>&gt; -- <BR>&gt; Jonathan Dursi &lt;ljdursi@scinet.utoronto.ca&gt;<BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; <BR>&gt; _______________________________________________<BR>&gt; users mailing list<BR>&gt; users@open-mpi.org<BR>&gt; http://www.open-mpi.org/mailman/listinfo.cgi/users<BR> 		 	   		  <br /><hr />使用Messenger保护盾2.0，支持多账号登录！ <a href='http://www.windowslive.cn/safe/' target='_new'>现在就下载！</a></body>
</html>
