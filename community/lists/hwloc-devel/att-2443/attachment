<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><br><div><div>On Sep 22, 2011, at 3:05 PM, Brice Goglin wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><span class="Apple-style-span" style="border-collapse: separate; font-family: Helvetica; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; ">Le 22/09/2011 22:42, Ralph Castain a écrit :<br><blockquote type="cite">I guess I didn't get that from your documentation. Since caches sit<br></blockquote><blockquote type="cite">between socket and core, they appear to affect the depth of the core<br></blockquote><blockquote type="cite">in a given socket. Thus, if there are different numbers of caches in<br></blockquote><blockquote type="cite">the different sockets on a node, then the core/pu level would change<br></blockquote><blockquote type="cite">across the sockets.<br></blockquote><br>No, the level always contain all elements of the same type (+depth for<br>caches), even if they are not at the same "distance" to the root (not<br>"depth").<br><br>Let's say you have two single-core sockets. One with no cache. One with<br>a L1.<br>What happens is:<br>* first level/depth is socket, contains two sockets, cover all cores.<br>* level 2 is L2, single element, *does not cover all cores*<br>* level 3 is core, two elements.<br><br>The funky thing here is that the parent/child links between the first<br>socket and its core go across level 2 because nothing matches there. In<br>the first socket, you have Socket(depth1)-&gt;Core(depth3) while in the<br>second socket you have Socket(depth1)-&gt;Cache(depth2)-&gt;Core(depth3)<br><br>So what we call "depth" in hwloc, is not the number of parent/child<br>links between you and the root, it's really the number of levels between<br>you and the root, even if you don't have any parent in some of these levels.<br><br>Looks like we need to clarify this :)<br><br></span></blockquote><br></div><div>Indeed - having the above example in hwloc.h would help. I think the key thing here is that the depth for a given type is being set across the entire node, and not by the local structure - i.e., the depth of the core in your example is determined by looking across the node at the max depth of any core in its local structure. Those of us coming from the chip world will find that confusing, as we look at things one socket at a time, but we can adapt.</div><div><br></div><div>All that said, if I put my dictionary away and can get the code to work, hopefully we won't have to parse thru it again. :-)</div><div><br></div><div>Thanks!</div><div><br></div></body></html>
