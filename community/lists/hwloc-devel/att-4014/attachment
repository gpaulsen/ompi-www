<html><head><style type='text/css'>p { margin: 0; }</style></head><body><div style='font-family: times new roman,new york,times,serif; font-size: 12pt; color: #000000'>Hello,<br><br>Can't check the code right now, but a couple questions below.<br><br><blockquote id="DWT211" style="border-left:2px solid #1010FF;margin-left:5px;padding-left:5px;color:#000;font-weight:normal;font-style:normal;text-decoration:none;font-family:Helvetica,Arial,sans-serif;font-size:12pt;">
    One of the issues I had was that the Core IDs (as reported by Xen)
    are enumerated per socket rather than as an entire system.&nbsp; The
    purpose of "HACK - patch up cpu_to_core." in hwloc_get_xen_info() is
    to change the per-socket enumeration to being per system.<br>
    <br>
    Samuel believes that hwloc should be able to cope with duplicate
    core IDs with different cpusets, but if I attempt to do that, I get
    the following error:<br>
    <pre><i>****************************************************************************</i>
<i>* hwloc has encountered what looks like an error from the operating system.</i>
<i>*</i>
<i>* object (Core P#0 cpuset 0x30000003) intersection without inclusion!</i>
<i>* Error occurred in topology.c line 853</i>
<i>*</i>
<i>* Please report this error message to the hwloc user's mailing list,</i>
<i>* along with the output from the hwloc-gather-topology.sh script.</i>
<i>****************************************************************************</i></pre><br></blockquote><br>I don't understand what's going on here. Can you post the list of PU/core/socket IDs that Xen reports so that I see what is unique and what is not?<br><br><blockquote id="DWT212" style="border-left:2px solid #1010FF;margin-left:5px;padding-left:5px;color:#000;font-weight:normal;font-style:normal;text-decoration:none;font-family:Helvetica,Arial,sans-serif;font-size:12pt;">
    <br>
    I currently have a crazy idea for getting at the cache information.&nbsp;
    topology-x86.c has a lot of cpuid knowledge, and I have a proposed
    new hypercall which executes cpuid on a specific PU.&nbsp; Would it be
    possible (or indeed sensible) to parametrise the code in
    topology-x86.c to take a few function pointers for get/set binding
    information, and for the cpuid call itself?<br></blockquote><br>I don't see why we couldn't do that. Can you post an example of what the Xen cpuid hypercall prototype would be, so that I see how I need to change the x86 backend?<br><br><blockquote id="DWT213" style="border-left:2px solid #1010FF;margin-left:5px;padding-left:5px;color:#000;font-weight:normal;font-style:normal;text-decoration:none;font-family:Helvetica,Arial,sans-serif;font-size:12pt;">
    
    That way, the common x86 knowledge could be used correctly by the
    Xen component, while still keeping its current design.<br></blockquote><br>Is there anything that the current Xen backend supports and that wouldn't be feasible through x86 cpuid? The x86 component can already detect a lot of topology information, including cores/caches/sockets/NUMA. Maybe the NUMA node sizes?<br><br>By the way, which architectures are supported by Xen aside of x86? Does Xen have topology information for them?<br><br>Brice<br><br><blockquote style="border-left:2px solid #1010FF;margin-left:5px;padding-left:5px;color:#000;font-weight:normal;font-style:normal;text-decoration:none;font-family:Helvetica,Arial,sans-serif;font-size:12pt;"></blockquote></div></body></html>
