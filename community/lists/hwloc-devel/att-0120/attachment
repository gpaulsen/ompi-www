<html><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><br><div><div>On 30-set-09, at 09:29, Samuel Thibault wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div>Hello,</div></blockquote><div><br></div>Hi Samuel,<br><blockquote type="cite"><div><br><br>Fawzi Mohamed, le Wed 30 Sep 2009 09:16:36 +0200, a écrit :<br><blockquote type="cite">1) a fully hierarchical representation of the machine/hardware where each level<br></blockquote><blockquote type="cite">is a partition, and each level fully covers the previous one (from any node you<br></blockquote><blockquote type="cite">go through all levels using father/childrens, father/child are just one level<br></blockquote><blockquote type="cite">away from each other.<br></blockquote><blockquote type="cite">This is basically what is there now.<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">2) outside the hierarchy 1 (but built using its object, probably the NUMA<br></blockquote><blockquote type="cite">nodes) there will be<br></blockquote><blockquote type="cite">2.1) maybe the full connection graph<br></blockquote><blockquote type="cite">2.2) a hierarchical view of it, like the lgroups, where the levels are not<br></blockquote><blockquote type="cite">necessarily a partition, and that could also refer not to the sublevel, but<br></blockquote><blockquote type="cite">directly to lower levels. Going up the hierarchy you get the next neighbors.<br></blockquote><br>Err, no, in our plans 2.2 was in 1) already, and levels are thus still<br>partitions, but somehow arbitrary ones, according to heuristics based on<br>the graph. Isn't that the case with lgroups ? (I haven't ever had access<br>to a solaris numa machine)</div></blockquote><div><br></div>If you look at the example described in the document that I had linked</div><div><br></div><div><a href="http://opensolaris.org/os/community/performance/mpo_overview.pdf"><span class="Apple-tab-span" style="white-space:pre">	</span>http://opensolaris.org/os/community/performance/mpo_overview.pdf</a><br></div><div><br></div><div>you see the that for a ring topology some level (that you always get adding the next neighbors) do not form a partition (i.e. they overlap), such an overlap unavoidable if to build the next higher hierarchy you simply add the next neighbors.</div><div>Having a partition is very useful when, for instance instead of looking for a resource you want to restrict/pin a thread, for this reasons there are psets and lpls (lgroup partition loads, intersection of lgrops and processor partition, which are again a partition), and both are used on opensolaris.</div><div>Well you don't have to mirror what solaris does, but I found that quite nice, so I was thinking you wanted to go in that direction.</div><div>For a the ring topology a-b-c-d-a is difficult to find a good partition... and having both partition and non partition views (one used for resource allocation/distribution, the other for resource finding/stealing), is quite clean imho.</div><div><br></div><div>ciao</div><div>Fawzi</div><div><br></div><div><br></div></body></html>
