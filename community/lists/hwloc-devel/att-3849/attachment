<html>
  <head>
    <meta content="text/html; charset=ISO-8859-1"
      http-equiv="Content-Type">
  </head>
  <body text="#000000" bgcolor="#FFFFFF">
    <div class="moz-cite-prefix">Le 28/08/2013 16:20, Jiri Hladky a
      &eacute;crit&nbsp;:<br>
    </div>
    <blockquote
cite="mid:CALT_uBSxjquQKnXBpM8ggcog+JnXw3sg-9btYJMKXwR_a7wgqg@mail.gmail.com"
      type="cite">
      <div dir="ltr">
        <div class="gmail_extra">
          <div class="gmail_quote">I got your point. On the other hand I
            think that&nbsp;hwloc-distrib is at the moment not flexible
            enough to handle such case. I believe that the current
            strategy - start from the first object - is not the best
            one. From my experience, core 0 is always most used by the
            system so it seems that better strategy would to allocate
            the cores from the last one.</div>
        </div>
      </div>
    </blockquote>
    <br>
    Most people expect their jobs to be launched in order: process0 on
    first cores, process1 on next cores, etc.<br>
    <br>
    Again, you don't want to reverse the output, you want to ignore
    first core/socket if possible.<br>
    <br>
    <blockquote
cite="mid:CALT_uBSxjquQKnXBpM8ggcog+JnXw3sg-9btYJMKXwR_a7wgqg@mail.gmail.com"
      type="cite">
      <div dir="ltr">
        <div class="gmail_extra">
          <div class="gmail_quote">I was looking at the source code of
            the&nbsp;hwloc-distrib and I believe that only this part of the
            code would be affected:
            <div><br>
            </div>
            <div>
              <div>&nbsp; &nbsp; &nbsp; for (i = 0; i &lt; chunks; i++)</div>
              <div>&nbsp; &nbsp; &nbsp; &nbsp; roots[i] = hwloc_get_obj_by_depth(topology,
                from_depth, i); <span
                  style="background-color:rgb(255,0,0)">&nbsp;=&gt; change
                  this to&nbsp;roots[i] = hwloc_get_obj_by_depth(topology,
                  from_depth, MAX_COUNT - i);</span></div>
              <div><br>
              </div>
              <div>&nbsp; &nbsp; &nbsp; hwloc_distributev(topology, roots, chunks,
                cpuset, n, to_depth); <span
                  style="background-color:rgb(255,0,0)">=&gt; rewrite
                  this to iterate in the reverse direction</span></div>
            </div>
          </div>
        </div>
      </div>
    </blockquote>
    <br>
    You can do the exact same thing by reversing your loop in the
    caller.<br>
    <br>
    Anyway, reversing the loop just move the core you don't want to the
    end of the list. But if you use the entire list, you end up using
    the exact same cores. You just reordered the processes among these
    cores.<br>
    <br>
    <blockquote
cite="mid:CALT_uBSxjquQKnXBpM8ggcog+JnXw3sg-9btYJMKXwR_a7wgqg@mail.gmail.com"
      type="cite">
      <div dir="ltr">
        <div class="gmail_extra">
          <div class="gmail_quote">Am I missing something? In case of
            infinite bitmap hwloc-distrib will error out. This should
            solve the problems with&nbsp;hwloc_bitmap_singlify.</div>
        </div>
      </div>
    </blockquote>
    <br>
    We need a new singlify() above, one that doesn't use the first bit.
    That's what will make you use a core that is not the first one in
    each socket.<br>
    <br>
    Problems with infinite bitmaps are unrelated with hwloc-distrib, but
    they need to be handled in that new bitmap API anyway.<br>
    <br>
    Brice<br>
    <br>
  </body>
</html>

