<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  </head>
  <body bgcolor="#ffffff" text="#000000">
    Hello,<br>
    <br>
    The v1.2 branch has known problems with distance matrices when the
    topology is asymmetric (especially when Linux cpuset make some NUMA
    nodes CPU-less). This is what causes wrong relative_depth here. It
    can even be negative is some cases which is obviously wrong.<br>
    <br>
    This should be fixed in v1.3 but it's NOT easy to backport in v1.2.
    Can you check that you can export and reimport with v1.3 properly? I
    will see if I can find a workaround for v1.2, but it will likely be
    something like ignore distance matrices if reldepth is &lt;= 0.<br>
    <br>
    In the meantime, you can remove "&amp;&amp; reldepth" from the "if"
    line below. It may help.<br>
    <br>
    Brice<br>
    <br>
    <br>
    <br>
    Le 02/11/2011 13:42, Jeff Squyres (jsquyres) a écrit :
    <blockquote
      cite="mid:AF936ECB-AA6F-495A-8DB3-DB12E2F0F428@cisco.com"
      type="cite"><br>
      <blockquote type="cite">
        <div>
          <p><font size="2">
              &gt; Hi Jeff,<br>
              &gt;<br>
              &gt; Brad mentioned you might be able to help me with an
              OMPI hwloc issue<br>
              &gt; I'm having.<br>
              &gt;<br>
              &gt; Its occurring on a Power 5 RHEL 6.0 machine and
              related to the xml<br>
              &gt; representation of the topology. I've attached the xml
              to this email.<br>
              &gt; The problem only occurs on the trunk code.<br>
              &gt;<br>
              &gt; The part which appears to be the problem is this:<br>
              &gt;<br>
              &gt;      &lt;distances nbobjs="4" relative_depth="0"
              latency_base="10.000000"&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;        &lt;latency value="1.000000"/&gt;<br>
              &gt;      &lt;/distances&gt;<br>
              &gt;<br>
              &gt; specifically with relative_depth having a value of 0,
              but still having<br>
              &gt; latency children information. In
              hwloc__xml_import_distances in<br>
              &gt; topology-xml.c there's a check that assumes there is
              no latency<br>
              &gt; information.<br>
              &gt;<br>
              &gt; Around line 634 in topology-xml.c:<br>
              &gt;<br>
              &gt; if (nbobjs &amp;&amp; reldepth &amp;&amp; latbase) {<br>
              &gt;    ... process latency xml nodes<br>
              &gt; }<br>
              &gt;<br>
              &gt; return hwloc__xml_import_close_tag(state);<br>
              &gt;<br>
              &gt; The hwloc__xml_import_close_tag function returns a
              failure because the<br>
              &gt; latency nodes have not been processed yet.<br>
              &gt;<br>
              &gt; I had a look in orted where the xml is created and it
              does look like<br>
              &gt; the xml is being assembled correctly as per the
              topology information it<br>
              &gt; has retrieved (though I don't know if that itself is
              correct). The<br>
              &gt; hwloc__xml_export_object function will quite happily
              create distance<br>
              &gt; information if the relative depth is 0 even though<br>
              &gt; hwloc__xml_import_distance will not be able to parse
              it.<br>
              &gt;<br>
              &gt; So there is at least a problem that the topology code
              will create xml<br>
              &gt; that it can't parse, but I don't know enough about
              the hwloc library to<br>
              &gt; know if relative depth should always be positive. I
              suspect its the<br>
              &gt; former which is the problem not the latter, but I
              don't know for sure...<br>
              &gt;<br>
              &gt; If it helps, this is the output of lstopo on the
              machine:<br>
              &gt;<br>
              &gt; cyeoh@p5-40-P4-E0:~$
              /home/OpenHPC/hwloc/build/bin/lstopo<br>
              &gt; Machine (2048MB)<br>
              &gt;  NUMANode L#0 (P#0 512MB)<br>
              &gt;    Socket L#0 + L1 L#0 (32KB) + Core L#0<br>
              &gt;      PU L#0 (P#0)<br>
              &gt;      PU L#1 (P#1)<br>
              &gt;    Socket L#1 + L1 L#1 (32KB) + Core L#1<br>
              &gt;      PU L#2 (P#2)<br>
              &gt;      PU L#3 (P#3)<br>
              &gt;  NUMANode L#1 (P#1 640MB)<br>
              &gt;  NUMANode L#2 (P#2 512MB)<br>
              &gt;  NUMANode L#3 (P#3 384MB)</font><br>
          </p>
        </div>
      </blockquote>
    </blockquote>
    <br>
  </body>
</html>

