<div dir="ltr">Jeff<div><br></div><div>Thanks, this is helpful. I am mostly interested in finding out which threads share the D1 cache. I guess that <span style="background-color:rgb(249,249,249);color:rgb(0,0,0);line-height:1.1em">get_bgq_core returns this information.</span></div>
<div><span style="background-color:rgb(249,249,249);color:rgb(0,0,0);line-height:1.1em"><br></span></div><div style><span style="background-color:rgb(249,249,249);color:rgb(0,0,0);line-height:1.1em">Is there a way to guarantee that this association doesn&#39;t change at run time? I guess I could just check periodically...</span></div>
<div><span style="background-color:rgb(249,249,249);color:rgb(0,0,0);line-height:1.1em"><br></span></div><div style><span style="background-color:rgb(249,249,249);color:rgb(0,0,0);line-height:1.1em">-erik</span></div><div style>
<span style="background-color:rgb(249,249,249);color:rgb(0,0,0);line-height:1.1em"> </span></div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Jan 8, 2013 at 5:33 PM, Jeff Hammond <span dir="ltr">&lt;<a href="mailto:jhammond@alcf.anl.gov" target="_blank">jhammond@alcf.anl.gov</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">As a temporary, non-portable substitute for hwloc, you can use the SPI<br>
calls that are described on my Wiki:<br>
<a href="https://wiki.alcf.anl.gov/parts/index.php/Blue_Gene/Q#Node_topology" target="_blank">https://wiki.alcf.anl.gov/parts/index.php/Blue_Gene/Q#Node_topology</a>.<br>
I presume that this is the means by which hwloc will support BGQ when<br>
it does.<br>
<br>
Blue Gene/Q has 16+1 cores with 4 hw threads each.  Only 16 cores are<br>
visible to applications but as users can, in theory, run code on the<br>
17th core (see <a href="https://wiki.alcf.anl.gov/parts/index.php/Blue_Gene/Q#17th_Core_App_Agents" target="_blank">https://wiki.alcf.anl.gov/parts/index.php/Blue_Gene/Q#17th_Core_App_Agents</a><br>
for how), it is important for these functions to return values in the<br>
range 0..16 and 0..67 instead of 0..15 and 0..63.  I include this<br>
information in case users are confused about the additional range<br>
documented for these calls.<br>
<br>
Best,<br>
<br>
Jeff<br>
<div class="HOEnZb"><div class="h5"><br>
On Tue, Jan 8, 2013 at 11:10 AM, Brice Goglin &lt;<a href="mailto:Brice.Goglin@inria.fr">Brice.Goglin@inria.fr</a>&gt; wrote:<br>
&gt; Hello Erik,<br>
&gt; We need specific BGQ binding support, the binding API is different. Also we<br>
&gt; don&#39;t properly detect the 16 4-way cores properly, we only only 64 identical<br>
&gt; PUs.<br>
&gt; I am supposed to get a BGQ account in the near future so I hope I will have<br>
&gt; everything working in v1.7.<br>
&gt; Stay tuned<br>
&gt; Brice<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; Le 08/01/2013 18:06, Erik Schnetter a écrit :<br>
&gt;<br>
&gt; I am trying to use hwloc on a Blue Gene/Q. Building and installing worked<br>
&gt; fine, and it reports the system configuration fine as well (i.e. it shows<br>
&gt; all PUs). However, when I try to inquire the thread/core bindings, hwloc<br>
&gt; crashes with an error in libc&#39;s free(). This is both with 1.6 and 1.6.1rc1.<br>
&gt;<br>
&gt; The error occurs apparently in CPU_FREE called from<br>
&gt; hwloc_linux_find_kernel_nr_cpus.<br>
&gt;<br>
&gt; Does this ring a bell with anyone? I know this is not enough information to<br>
&gt; debug things, but do you have any pointers for things to look at?<br>
&gt;<br>
&gt; I remember reading somewhere that the last bit in a cpu_set_t cannot be<br>
&gt; used. A Blue Gene/Q has 64 PUs, and may be using 64-bit integers to hold<br>
&gt; cpu_set_t data. Could this be an issue?<br>
&gt;<br>
&gt; My goal is to examine and experiment with thread/core bindings with OpenMP<br>
&gt; to improve performance.<br>
&gt;<br>
&gt; -erik<br>
&gt;<br>
&gt; --<br>
&gt; Erik Schnetter &lt;<a href="mailto:schnetter@gmail.com">schnetter@gmail.com</a>&gt;<br>
&gt; <a href="http://www.perimeterinstitute.ca/personal/eschnetter/" target="_blank">http://www.perimeterinstitute.ca/personal/eschnetter/</a><br>
&gt;<br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; hwloc-users mailing list<br>
&gt; <a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; hwloc-users mailing list<br>
&gt; <a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
<br>
<br>
<br>
</div></div><span class="HOEnZb"><font color="#888888">--<br>
Jeff Hammond<br>
Argonne Leadership Computing Facility<br>
University of Chicago Computation Institute<br>
<a href="mailto:jhammond@alcf.anl.gov">jhammond@alcf.anl.gov</a> / <a href="tel:%28630%29%20252-5381" value="+16302525381">(630) 252-5381</a><br>
<a href="http://www.linkedin.com/in/jeffhammond" target="_blank">http://www.linkedin.com/in/jeffhammond</a><br>
<a href="https://wiki.alcf.anl.gov/parts/index.php/User:Jhammond" target="_blank">https://wiki.alcf.anl.gov/parts/index.php/User:Jhammond</a><br>
</font></span><div class="HOEnZb"><div class="h5"><br>
_______________________________________________<br>
hwloc-users mailing list<br>
<a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
</div></div></blockquote></div><br><br clear="all"><div><br></div>-- <br>Erik Schnetter &lt;<a href="mailto:schnetter@cct.lsu.edu" target="_blank">schnetter@cct.lsu.edu</a>&gt;<br><a href="http://www.perimeterinstitute.ca/personal/eschnetter/" target="_blank">http://www.perimeterinstitute.ca/personal/eschnetter/</a>
</div>

