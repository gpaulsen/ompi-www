Hi Samuel,<div><br></div><div>yhanks for yout quick reply!</div><div><br></div><div>But i have a litte doubt. in a non SMT machine, Is it better use this:</div><div><br></div><div><div>hwloc_obj_t core = hwloc_get_obj_by_type(topology, HWLOC_OBJ_CORE, tid);</div>
<div>hwloc_cpuset_t set = hwloc_bitmap_dup(core-&gt;cpuset);</div><div>hwloc_bitmap_singlify(set);</div><div>hwloc_set_cpubind(topology, set,  HWLOC_CPUBIND_THREAD);</div><div><br></div><div>or:</div><div><br></div><div><meta http-equiv="content-type" content="text/html; charset=utf-8"><div>
hwloc_obj_t core = hwloc_get_obj_by_type(topology, HWLOC_OBJ_PU, tid);</div><div>hwloc_cpuset_t set = hwloc_bitmap_dup(core-&gt;cpuset);</div><div>hwloc_bitmap_singlify(set);</div><div>hwloc_set_cpubind(topology, set,  HWLOC_CPUBIND_THREAD);</div>
</div><div><br></div><div>because work in the same way( i suppose).</div><br><div class="gmail_quote">2011/7/29 Samuel Thibault <span dir="ltr">&lt;<a href="mailto:samuel.thibault@inria.fr">samuel.thibault@inria.fr</a>&gt;</span><br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">Hello,<br>
<br>
Gabriele Fatigati, le Fri 29 Jul 2011 12:43:47 +0200, a écrit :<br>
<div class="im">&gt; I&#39;m so confused. I see couples of cores with the same core id! ( Core#8 for<br>
&gt; example)  How is it possible? <br>
<br>
</div>That&#39;s because they are on different sockets. These are physical IDs<br>
(not logical IDs), and are thus not garanteed to be unique.<br>
<div class="im"><br>
&gt; 2) logical Core id and Physical core id maybe differents. If i want to be sure<br>
&gt; that id 0 and id 1 are physically near, i have to use core id or PU id? PU ids<br>
&gt; are ever physically near?<br>
<br>
</div>Using core or thread ID does not matter. What matters is that you take<br>
the proper ID. Physical IDs will in general never bring you any<br>
proximity indication. What you want is logical IDs, which hwloc takes<br>
care of meaning proximity. Using adjacent logical IDs (be it for core or<br>
threads) will bring you adjacent cores/threads.<br>
<div class="im"><br>
&gt; 3) Binding a thread on a core, what&#39;s the difference between hwloc_set_cpubind<br>
&gt; () and hwloc_set_thread_cpubind()? More in depth, my code example works well<br>
&gt; with:<br>
&gt;<br>
&gt; hwloc_set_cpubind(topology, set,  HWLOC_CPUBIND_THREAD);<br>
&gt;<br>
&gt; and crash with:<br>
&gt;<br>
&gt; hwloc_set_thread_cpubind(topology, tid, set,  HWLOC_CPUBIND_THREAD);<br>
<br>
</div>Note that tid is hwloc_thread_t, i.e. pthread_t on unixes.<br>
It is not a (Linux-specific) tid. If what you have is a (Linux-specific)<br>
tid, use the Linux-specific function, hwloc_linux_set_tid_cpubind.<br>
<br>
Samuel<br>
_______________________________________________<br>
hwloc-users mailing list<br>
<a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
</blockquote></div><br><br clear="all"><br>-- <br>Ing. Gabriele Fatigati<br><br>Parallel programmer<br><br>CINECA Systems &amp; Tecnologies Department<br><br>Supercomputing Group<br><br>Via Magnanelli 6/3, Casalecchio di Reno (BO) Italy<br>
<br><a href="http://www.cineca.it">www.cineca.it</a>                    Tel:   +39 051 6171722<br><br>g.fatigati [AT] <a href="http://cineca.it">cineca.it</a>           <br>
</div>

