Wonderful !<br><br>Tank you very much everybody.<br>Guillaume<br><br><div class="gmail_quote">2011/1/28 Brice Goglin <span dir="ltr">&lt;<a href="mailto:Brice.Goglin@inria.fr">Brice.Goglin@inria.fr</a>&gt;</span><br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
You have to choose 5 cores manually:<br>
<br>
/* get all my core objects */<br>
hwloc_obj_t core1 = hwloc_get_obj_by_type(topology, HWLOC_OBJ_CORE, &lt;first_core_number&gt;);<br>
hwloc_obj_t core2 = hwloc_get_obj_by_type(topology, HWLOC_OBJ_CORE, &lt;second_core_number&gt;);<br>
hwloc_obj_t core3 = hwloc_get_obj_by_type(topology, HWLOC_OBJ_CORE, &lt;third_core_number&gt;);<br>
hwloc_obj_t core4 = hwloc_get_obj_by_type(topology, HWLOC_OBJ_CORE, &lt;fourth_core_number&gt;);<br>
hwloc_obj_t core5 = hwloc_get_obj_by_type(topology, HWLOC_OBJ_CORE, &lt;fifth_core_number&gt;);<br>
/* allocate a cpuset and fill it */<br>
hwloc_cpuset set = hwloc_bitmap_alloc();<br>
hwloc_bitmap_or(set, set, core1-&gt;cpuset);<br>
hwloc_bitmap_or(set, set, core2-&gt;cpuset);<br>
hwloc_bitmap_or(set, set, core3-&gt;cpuset);<br>
hwloc_bitmap_or(set, set, core4-&gt;cpuset);<br>
hwloc_bitmap_or(set, set, core5-&gt;cpuset);<br>
/* bind the process */<br>
hwloc_set_cpubind(topology, set, HWLOC_CPUBIND_PROCESS);<br>
hwloc_bitmap_free(set);<br>
<br>
<br>
Use HWLOC_OBJ_PU instead of CORE if you want hardware thread instead of<br>
cores.<br>
<br>
Note that core_numbers above are logical numbers, not the physical numbers.<br>
<br>
Brice<br>
<br>
<br>
<br>
<br>
Le 28/01/2011 19:35, Jim Burnes a écrit :<br>
<div><div></div><div class="h5">&gt; Yes.  There is a way to do that.  You bind it to a cpuset.<br>
&gt;<br>
&gt; It will be easier if you know the set of cpu cores you want to bind<br>
&gt; to, but I suppose you could dynamically alter the cpuset.<br>
&gt;<br>
&gt; I haven&#39;t tried that though.<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; On Fri, Jan 28, 2011 at 11:33 AM, guillaume Arnal<br>
&gt; &lt;<a href="mailto:guillaume.arnal.35@gmail.com">guillaume.arnal.35@gmail.com</a>&gt; wrote:<br>
&gt;<br>
&gt;&gt; Yes, this helps.<br>
&gt;&gt;<br>
&gt;&gt; However, I complete my second question : is there a way to force my current<br>
&gt;&gt; process to run on &#39;n&#39; cores ?<br>
&gt;&gt; For example : I have 20 cores for real in my architecture (I&#39;m dreaming<br>
&gt;&gt; ...), but I wish that my process run on only 5 cores. Is it possible with<br>
&gt;&gt; hwloc ?<br>
&gt;&gt;<br>
&gt;&gt; Essayez avec cette orthographe : je completerai ma deuxième<br>
&gt;&gt; Saisissez du texte, l&#39;adresse d&#39;un site Web ou importez un document à<br>
&gt;&gt; traduire.<br>
&gt;&gt; Annuler<br>
&gt;&gt; Écouter<br>
&gt;&gt; Lire phonétiquement<br>
&gt;&gt; Thanks for your help.<br>
&gt;&gt; Guillaume<br>
&gt;&gt;<br>
&gt;&gt; 2011/1/28 Brice Goglin &lt;<a href="mailto:Brice.Goglin@inria.fr">Brice.Goglin@inria.fr</a>&gt;<br>
&gt;&gt;<br>
&gt;&gt;&gt; Le 28/01/2011 15:32, guillaume Arnal a écrit :<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;&gt; Hi everyone,<br>
&gt;&gt;&gt;&gt;<br>
&gt;&gt;&gt;&gt; I&#39;m beginner in using hwloc and I have some questions.<br>
&gt;&gt;&gt;&gt;<br>
&gt;&gt;&gt;&gt; First: I&#39;m looking for a way to find which core is using by the<br>
&gt;&gt;&gt;&gt; current thread. (maybe with hwloc_get_thread_cpubind ??)<br>
&gt;&gt;&gt;&gt;<br>
&gt;&gt;&gt;&gt; Second: is there a way to set the number of core usable for the<br>
&gt;&gt;&gt;&gt; current process ?<br>
&gt;&gt;&gt;&gt;<br>
&gt;&gt;&gt;&gt; Thank you in advance for your help.<br>
&gt;&gt;&gt;&gt; Guillaume Arnal<br>
&gt;&gt;&gt;&gt;<br>
&gt;&gt;&gt; Hello,<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; First, are you talking about cores for real (one core that may contain<br>
&gt;&gt;&gt; multiple hyperthread), or are physical processors ok (those that you see<br>
&gt;&gt;&gt; in /proc/cpuinfo) ?<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; hwloc_get_thread_cpubind() returns the binding of a thread specified by<br>
&gt;&gt;&gt; its Linux thread id number. For the current thread, you may also use<br>
&gt;&gt;&gt; hwloc_get_cpubind() with flag HWLOC_CPUBIND_THREAD. Both give a cpuset<br>
&gt;&gt;&gt; listing all physical processors where the thread is currently allowed to<br>
&gt;&gt;&gt; run. Processes are not bound by default, so the cpuset would contain all<br>
&gt;&gt;&gt; existing processors, even if your thread actually uses a single core.<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; hwloc_cpuset_t cpuset = hwloc_bitmap_alloc();<br>
&gt;&gt;&gt; hwloc_get_cpubind(topology, cpuset, HWLOC_CPUBIND_THREAD);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Once you have a cpuset, you may get the corresponding cores with:<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; hwloc_obj_t prev = NULL;<br>
&gt;&gt;&gt; while ((prev = hwloc_get_next_obj_inside_cpuset_by_type(topology, cpuset,<br>
&gt;&gt;&gt; HWLOC_OBJ_CORE, prev)) != NULL)<br>
&gt;&gt;&gt;   /* do what you want with object core */<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; If the thread is bound to a single physical processors, you can get its<br>
&gt;&gt;&gt; physical id with:<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; hwloc_bitmap_first(cpuset);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; If you want to force your current process to run on the 3rd core, you<br>
&gt;&gt;&gt; can do something like:<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; hwloc_obj_t core = hwloc_get_obj_by_type(topology, HWLOC_OBJ_CORE, 2);<br>
&gt;&gt;&gt; hwloc_set_cpubind(topology, core-&gt;cpuset, HWLOC_CPUBIND_PROCESS);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Hope this helps,<br>
&gt;&gt;&gt; Brice<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; _______________________________________________<br>
&gt;&gt;&gt; hwloc-users mailing list<br>
&gt;&gt;&gt; <a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
&gt;&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; _______________________________________________<br>
&gt;&gt; hwloc-users mailing list<br>
&gt;&gt; <a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt; _______________________________________________<br>
&gt; hwloc-users mailing list<br>
&gt; <a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
&gt;<br>
<br>
_______________________________________________<br>
hwloc-users mailing list<br>
<a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
</div></div></blockquote></div><br>

