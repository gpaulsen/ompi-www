Ok Brice,<br><br>thanks very much for your explanations. But I don&#39;t understand why a process inherits core bound of his threads according to your example:<br><br>&gt;It worked because you never mixed it with single thread binding. If
    you bind process X to &gt;coreA and then thread Y of process X to coreB,
    what you should now see with get_cpubind is &gt;that process X is now
    bound to cores A+B, thread Y to B, and all other threads to A.<br><br><br><br><br><div class="gmail_quote">2011/9/12 Brice Goglin <span dir="ltr">&lt;<a href="mailto:Brice.Goglin@inria.fr">Brice.Goglin@inria.fr</a>&gt;</span><br>
<blockquote class="gmail_quote" style="margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;">Le 12/09/2011 14:17, Gabriele Fatigati a écrit :<br>
<div class="im">&gt; Mm, and why? In a hybrid code ( MPI + OpenMP), my idea is to bind a<br>
&gt; single MPI process in  one core, and his threads in other cores.<br>
&gt; Otherwise I have all threads that runs on a single core.<br>
&gt;<br>
<br>
</div>The usual way to do that is to first bind the entire process to all<br>
cores available to all its thread and then bind each thread to a single<br>
core.<br>
<br>
For instance, if doing Open MPI + OpenMP with one process per socket<br>
* you pass --bind-to-socket on the mpirun/mpiexec command-line<br>
* when the MPI process starts, the OpenMP runtime calls something like<br>
get_cpubind to find out how many cores were given to it<br>
* it creates the exact same number of OpenMP threads and bind one of<br>
them on each core<br>
<div><div></div><div class="h5"><br>
Brice<br>
<br>
_______________________________________________<br>
hwloc-users mailing list<br>
<a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
</div></div></blockquote></div><br><br clear="all"><br>-- <br>Ing. Gabriele Fatigati<br><br>HPC specialist<br><br>SuperComputing Applications and Innovation Department<br><br>Via Magnanelli 6/3, Casalecchio di Reno (BO) Italy<br>
<br><a href="http://www.cineca.it" target="_blank">www.cineca.it</a>                    Tel:   +39 051 6171722<br><br>g.fatigati [AT] <a href="http://cineca.it" target="_blank">cineca.it</a>           <br>

