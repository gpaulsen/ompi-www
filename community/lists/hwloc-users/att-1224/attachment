<div dir="ltr">Dear concern,<div><br></div><div>I am using hwloc library to find the node where my data is allocated. My machine(<b>OS: LINUX</b>) topology is like below: </div><div><br clear="all"><div><div>*** Objects at level 2 (node level): total node=8 </div><div>Index 0: NUMANode#0(7999MB)</div><div>Index 1: NUMANode#1(8079MB)</div><div>Index 2: NUMANode#2(8079MB)</div><div>Index 3: NUMANode#3(8079MB)</div><div>Index 4: NUMANode#4(8079MB)</div><div>Index 5: NUMANode#5(8079MB)</div><div>Index 6: NUMANode#6(8079MB)</div><div>Index 7: NUMANode#7(8079MB)</div></div><div><br></div><div>My code is as below: </div><div><div>------------------ code snippet-----------</div><div><b>/* declaration */</b></div><div>int *p1, *p2;</div><div>int a1, b1, c1, N;</div><div>N=10;</div><div><span class="" style="white-space:pre">double* A;
   A = (double*) malloc(N * sizeof(double));
		</span></div></div><div><b>// touch the variable</b></div><div>/* default allocation of *p1 which refers to int a1 variable address */</div><div><span style="white-space:pre">   </span>p1 = &amp; a1;</div><div>// touch the memory reference of *p1 </div><div><span style="white-space:pre">   </span>*p1 = a1 +2;</div><div><span style="white-space:pre"><b>//touch the array [A] first 
</b>    for (int i = 0; i &lt; N; i++) {
	A[i] = 0.0;
    }</span></div><div><br></div><div><b>//------ call hwloc functions----- </b></div><div><b>/* check where buffer(array: A) is allocated */</b><br></div><div><div><span class="" style="white-space:pre">	</span>set = hwloc_bitmap_alloc();</div><div><span class="" style="white-space:pre">	</span>err = hwloc_get_area_membind_nodeset(topology, <b>A, N * sizeof(double)</b>, set, &amp;policy, <b>HWLOC_MEMBIND_STRICT</b>); <br></div><div><span class="" style="white-space:pre">	</span>if (err &lt; 0) {</div><div><span class="" style="white-space:pre">		</span>fprintf(stderr, &quot;failed to retrieve the buffer binding and policy\n&quot;);</div><div><span class="" style="white-space:pre">		</span>hwloc_topology_destroy(topology);</div><div><span class="" style="white-space:pre">		</span>hwloc_bitmap_free(set);</div><div><span class="" style="white-space:pre">		</span>return EXIT_FAILURE;</div><div><span class="" style="white-space:pre">	</span>}</div><div><br></div><div><b>/* check the binding policy: is identical for the current operating system. */</b></div><div><span class="" style="white-space:pre">	</span>printf(&quot;---&gt;buffer(Array: A) membind [default OS binding] Policy is:= %d \n&quot;, policy);</div><div><br></div><div><b>/* print the corresponding NUMA nodes */</b></div><div><span class="" style="white-space:pre">	</span>hwloc_bitmap_asprintf(&amp;s, set);</div><div><span class="" style="white-space:pre">	</span>printf(&quot;buffer(Array: A) bound to nodeset %s with contains:\n&quot;, s);</div><div><span class="" style="white-space:pre">	</span>free(s);</div><div><span class="" style="white-space:pre">	</span>hwloc_bitmap_foreach_begin(i, set) {</div><div><span class="" style="white-space:pre">		</span>obj = hwloc_get_numanode_obj_by_os_index(topology, i);</div><div><span class="" style="white-space:pre">		</span>printf(&quot;  --&gt;node #%u (OS index %u) with %lld bytes of memory\n&quot;,</div><div><span class="" style="white-space:pre">			</span>obj-&gt;logical_index, i, (unsigned long long) obj-&gt;memory.local_memory);</div><div><span class="" style="white-space:pre">	</span>} hwloc_bitmap_foreach_end();</div><div><span class="" style="white-space:pre">	</span>hwloc_bitmap_free(set);</div></div><div><br></div><div><b>OUTPUT: </b></div><div><b>Policy--&gt;</b> buffer(Array: A) <b>membind [default OS binding] Policy is:= 1 [1 refers to </b><a class="" href="https://www.open-mpi.org/projects/hwloc/doc/v1.11.1/a00083.php#ggac9764f79505775d06407b40f5e4661e8a979c7aa78dd32780858f30f47a72cca0" style="color:rgb(70,101,162);font-weight:bold;text-decoration:underline;font-family:verdana,arial,helvetica;font-size:14px;line-height:22px">HWLOC_MEMBIND_FIRSTTOUCH</a><b>]</b></div><div><b>Nodeset --&gt; </b>buffer(Array: A) bound to nodeset<b> 0x000000ff </b>with contains<b>:</b></div><div><b> </b>node #0 (OS index 0) with 8387047424 bytes of memory</div><div> node #1 (OS index 1) with 8471617536 bytes of memory</div><div> node #2 (OS index 2) with 8471621632 bytes of memory</div><div> node #3 (OS index 3) with 8471617536 bytes of memory</div><div> node #4 (OS index 4) with 8471621632 bytes of memory</div><div> node #5 (OS index 5) with 8471617536 bytes of memory</div><div> node #6 (OS index 6) with 8471621632 bytes of memory</div><div> node #7 (OS index 7) with 8471564288 bytes of memory</div><div><b><br></b></div><div><font color="#ff0000"><b>why it shows allocated memory is bound to all available nodeset..? should it not be allocated to a specific nodeset one ..?</b></font></div><div><font color="#ff0000"><b><br></b></font></div><div><font color="#ff0000"><b>If I write as below: </b></font></div><div><div style="font-weight:bold;color:rgb(255,0,0)"><br></div><div><font color="#000000">/* Get last node. */</font></div><div><font color="#000000">    n = hwloc_get_nbobjs_by_type(topology, HWLOC_OBJ_NODE);</font></div><div><font color="#000000"><div style="display:inline!important">    if (n) {</div><br></font></div><div><font color="#000000">        </font></div><div><font color="#000000">        void *m;</font></div><div><font color="#000000"><span class="" style="white-space:pre">	</span>int prev_val, next_val;</font></div><div><font color="#000000">        size = sizeof(int); //1024*1024;</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">        obj = hwloc_get_obj_by_type(topology, HWLOC_OBJ_NODE, n - 1);</font></div><div><font color="#000000">        m = <b>hwloc_alloc_membind_nodeset(</b>topology, size, <b>obj-&gt;nodeset, HWLOC_MEMBIND_BIND, HWLOC_MEMBIND_PROCESS</b>);</font></div><div><font color="#000000">        hwloc_free(topology, m, size);</font></div><div><font color="#000000"><br></font></div><div><font color="#000000">        m = malloc(size);</font></div><div><font color="#000000">        // touch the m memory </font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>m = &amp;prev_val;</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>*(int*)m = 1010;</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span></font></div><div><font color="#000000">        <b>hwloc_set_area_membind_nodeset(</b>topology, m, size, <b>obj-&gt;nodeset, HWLOC_MEMBIND_BIND, HWLOC_MEMBIND_STRICT</b>); //HWLOC_MEMBIND_DEFAULT:= Reset the memory allocation policy to the system default(HWLOC_MEMBIND_FIRSTTOUCH (Linux)).</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span></font></div><div><font color="#000000"><b>/* check where buffer(m) is allocated */</b></font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>nodeset = hwloc_bitmap_alloc();</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span><b>hwloc_get_area_membind_nodeset(topology, m, size, nodeset, &amp;nodepolicy, 0); </b></font></div><div><font color="#000000"><br></font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>/* check the binding policy */</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>printf(&quot;buffer(m) membind-ed policy is %d \n&quot;, nodepolicy);</font></div><div><span class="" style="white-space:pre"><font color="#000000">	</font></span></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>/* print the corresponding NUMA nodes */</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>hwloc_bitmap_asprintf(&amp;s, nodeset);</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>printf(&quot;buffer bound to nodeset %s with contains:\n&quot;, s);</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>free(s);</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>hwloc_bitmap_foreach_begin(i, nodeset) {</font></div><div><font color="#000000"><span class="" style="white-space:pre">			</span>obj = hwloc_get_numanode_obj_by_os_index(topology, i);</font></div><div><font color="#000000"><span class="" style="white-space:pre">			</span>printf(&quot;  node #%u (OS index %u) with %lld bytes of memory\n&quot;,</font></div><div><font color="#000000"><span class="" style="white-space:pre">				</span>obj-&gt;logical_index, i, (unsigned long long) obj-&gt;memory.local_memory);</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>} hwloc_bitmap_foreach_end();</font></div><div><font color="#000000"><span class="" style="white-space:pre">		</span>hwloc_bitmap_free(nodeset);</font></div><div><font color="#000000"><br></font></div></div><div><b>OUTPUT: </b></div><div><b>Policy:</b> buffer(Array: A) membind <b>[default OS binding] Policy is:= 2</b><br></div><div><span class="" style="white-space:pre"><b>Nodeset: </b>	</span> buffer(Array: A) <b>bound to nodeset 0x00000080</b> with contains:</div><div>  <b>node #7 (OS index 7) </b>with 8471564288 bytes of memory</div><div class="gmail_signature"><div dir="ltr"><div><font face="times new roman, serif" size="2" color="#ff0000">In this case it shows the specific nodeset one where the memory is allocated. </font></div><div><font face="times new roman, serif" size="2" color="#ff0000"><br></font></div><div><font face="times new roman, serif" size="2" color="#ff0000"><b>Can you please comment and explain what is happening underneath ..? Thanking you in advance.</b> </font></div><div><font face="times new roman, serif" size="2" color="#cccccc"><br></font></div><div><font face="times new roman, serif" size="2" color="#cccccc">------------------------</font></div><font face="times new roman, serif" size="2" color="#999999">RaJu, Rezaul Karim<br>Graduate Student (PhD) | Computer Science | University of Houston</font><div><font face="times new roman, serif" size="2" color="#999999">Research in High Performance Computing Tools  </font><div><div><font face="times new roman, serif" size="2" color="#999999">Houston, Texas-77004</font></div></div></div></div></div>
</div></div>

