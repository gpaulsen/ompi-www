<html>
  <head>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type">
  </head>
  <body text="#000000" bgcolor="#FFFFFF">
    get_area_membind() would return a full nodeset if you don't membind
    first.<br>
    <br>
    By the way, mydata_ptr is not a physical address, it's a virtual
    address.<br>
    <br>
    Brice<br>
    <br>
    <br>
    <br>
    <div class="moz-cite-prefix">Le 27/01/2016 02:23, Rezaul Karim Raju
      a écrit :<br>
    </div>
    <blockquote
cite="mid:CAOQ1qztmpg1H69NUwS50oTYH_w0EJcPCezXh3d5V2Sth27yXjg@mail.gmail.com"
      type="cite">
      <div dir="ltr">Hi,
        <div><br>
        </div>
        <div>I am interested to know about what 'hwloc_bind'  does
          beyond malloc()- the OS call. </div>
        <div>If I do like this: </div>
        <div><br>
        </div>
        <div>
          <div>        int mydata=11;</div>
          <div><span class="" style="white-space:pre">	</span>int *
            mydata_ptr;</div>
          <div><span class="" style="white-space:pre">
</span></div>
          <div><span class="" style="white-space:pre">	</span><b>mydata_ptr
              = (int *)malloc(sizeof(int));  </b></div>
          <div><span class="" style="white-space:pre"><b>       </b></span></div>
          <div><span class="" style="white-space:pre"><b> or,</b></span><b><span class="" style="white-space:pre">	</span></b></div>
          <div><b>       mydata_ptr = (int *) hwloc_alloc (topology,
              (sizeof(int)));</b></div>
          <div><span class="" style="white-space:pre"><b>	</b></span></div>
          <div><b>        mydata_ptr = &amp;mydata; </b></div>
          <div><span class="" style="white-space:pre"><b>	</b></span></div>
          <div>and then call: </div>
          <div>
            <div><span class="" style="white-space:pre">	</span><b>hwloc_get_area_membind_nodeset
                (</b>topology, <b>mydata_ptr,</b> sizeof(int), <b>nodeset,</b>
              &amp;nodepolicy, flags); flags:= 0/1 process / thread   <br>
            </div>
            <div><br>
            </div>
          </div>
          <div>it gives me the all available nodesets.</div>
          <div>According to Brice previous reply: hwloc (<span
              style="font-size:12.8px">get_area_membind )</span> returns
            once<span style="font-size:12.8px"> Linux could have
              allocated (bound) memory buffer (the physical address I am
              sending as </span><b>mydata_ptr</b><span
              style="font-size:12.8px">). </span></div>
          <div><br>
          </div>
          <div><b>Is this something hwloc can only returns locations
              (&amp; corresponding nodeset) once it is bound (</b>set_area_membind<b>)
              prior ..? </b></div>
          <div><b><br>
            </b></div>
          <div><span style="font-size:12.8px">Thank you in advance.</span></div>
          <div>- Raju</div>
        </div>
      </div>
      <div class="gmail_extra"><br>
        <div class="gmail_quote">On Fri, Dec 18, 2015 at 11:57 AM,
          Rezaul Karim Raju <span dir="ltr">&lt;<a
              moz-do-not-send="true"
              href="mailto:raju.cse.buet@gmail.com" target="_blank"><a class="moz-txt-link-abbreviated" href="mailto:raju.cse.buet@gmail.com">raju.cse.buet@gmail.com</a></a>&gt;</span>
          wrote:<br>
          <blockquote class="gmail_quote" style="margin:0 0 0
            .8ex;border-left:1px #ccc solid;padding-left:1ex">
            <div dir="ltr">Hi Brice, 
              <div><br>
              </div>
              <div>Thanks for your time and nice explanation. </div>
              <div>I have looked at the issue with location return (the
                page proportion across multiple node &amp; physical
                allocation). Are you thinking to add this function..?
                Like if we think list of node or nodes where the array
                is allocated (only if physically allocated otherwise
                NULL) is it possible..? </div>
              <div><br>
              </div>
              <div>I am looking for getting the physical location of
                data allocated by OS default policy. Appreciate any
                better idea and please share with me. </div>
              <div><br>
              </div>
              <div>Best Regards,</div>
              <div>- Raju    </div>
            </div>
            <div class="gmail_extra"><br>
              <div class="gmail_quote">
                <div>
                  <div class="h5">On Tue, Dec 15, 2015 at 3:28 AM, Brice
                    Goglin <span dir="ltr">&lt;<a
                        moz-do-not-send="true"
                        href="mailto:Brice.Goglin@inria.fr"
                        target="_blank"><a class="moz-txt-link-abbreviated" href="mailto:Brice.Goglin@inria.fr">Brice.Goglin@inria.fr</a></a>&gt;</span>
                    wrote:<br>
                  </div>
                </div>
                <blockquote class="gmail_quote" style="margin:0 0 0
                  .8ex;border-left:1px #ccc solid;padding-left:1ex">
                  <div>
                    <div class="h5">
                      <div text="#000000" bgcolor="#FFFFFF"><span> <br>
                          <br>
                          <div>Le 15/12/2015 07:21, Brice Goglin a
                            écrit :<br>
                          </div>
                          <blockquote type="cite"> <br>
                            <br>
                            <div>Le 15/12/2015 05:57, Rezaul Karim Raju
                              a écrit :<br>
                            </div>
                            <blockquote type="cite">
                              <div dir="ltr">
                                <div><b>OUTPUT: </b>
                                  <div><b>Policy--&gt;</b> buffer(Array:
                                    A) <b>membind [default OS binding]
                                      Policy is:= 1 [1 refers to </b><a
                                      moz-do-not-send="true"
href="https://www.open-mpi.org/projects/hwloc/doc/v1.11.1/a00083.php#ggac9764f79505775d06407b40f5e4661e8a979c7aa78dd32780858f30f47a72cca0"
style="color:rgb(70,101,162);font-weight:bold;text-decoration:underline;font-family:verdana,arial,helvetica;font-size:14px;line-height:22px"
                                      target="_blank">HWLOC_MEMBIND_FIRSTTOUCH</a><b>]</b></div>
                                  <div><b>Nodeset --&gt; </b>buffer(Array:
                                    A) bound to nodeset<b> 0x000000ff </b>with
                                    contains<b>:</b></div>
                                  <div><b> </b>node #0 (OS index 0) with
                                    8387047424 bytes of memory</div>
                                  <div> node #1 (OS index 1) with
                                    8471617536 bytes of memory</div>
                                  <div> node #2 (OS index 2) with
                                    8471621632 bytes of memory</div>
                                  <div> node #3 (OS index 3) with
                                    8471617536 bytes of memory</div>
                                  <div> node #4 (OS index 4) with
                                    8471621632 bytes of memory</div>
                                  <div> node #5 (OS index 5) with
                                    8471617536 bytes of memory</div>
                                  <div> node #6 (OS index 6) with
                                    8471621632 bytes of memory</div>
                                  <div> node #7 (OS index 7) with
                                    8471564288 bytes of memory</div>
                                  <div><b><br>
                                    </b></div>
                                  <div><font color="#ff0000"><b>why it
                                        shows allocated memory is bound
                                        to all available nodeset..?
                                        should it not be allocated to a
                                        specific nodeset one ..?</b></font></div>
                                  <div><font color="#ff0000"><b><br>
                                      </b></font></div>
                                </div>
                              </div>
                            </blockquote>
                            <br>
                            Hello<br>
                            <br>
                            You are confusing the "binding" and the
                            "actual location". Your memory buffer isn't
                            bound to a specific location by default. But
                            Linux has to allocate it somewhere. So your
                            buffer is "located" in some node after the
                            allocation, but it is not "bound" there
                            (what get_area_membind returns) which means
                            Linux could have allocated it somewhere
                            else.<br>
                            <br>
                            hwloc cannot currently return the "location"
                            of a memory buffer. I have been thinking
                            about adding this feature in the past, but
                            it looks like you are the first actual user
                            requesting this. We could add something like<br>
                            hwloc_get_last_memory_location(topology,
                            input buffer, outputnodeset)<br>
                            At least on Linux that's possible.<br>
                            <br>
                            For clarity, this is similar to the
                            difference between hwloc_get_cpubind() and
                            hwloc_get_last_cpu_location(): A task always
                            runs on a specific PU, even if it is not
                            bound to anything specific PU.<br>
                          </blockquote>
                          <br>
                        </span> By the way, there is already an issue
                        for this:<br>
                        <a moz-do-not-send="true"
                          href="https://github.com/open-mpi/hwloc/issues/97"
                          target="_blank">https://github.com/open-mpi/hwloc/issues/97</a><br>
                        <br>
                        Feel to comment there.<span><font
                            color="#888888"><br>
                            <br>
                            Brice<br>
                            <br>
                          </font></span></div>
                      <br>
                    </div>
                  </div>
                  <span class="">_______________________________________________<br>
                    hwloc-users mailing list<br>
                    <a moz-do-not-send="true"
                      href="mailto:hwloc-users@open-mpi.org"
                      target="_blank">hwloc-users@open-mpi.org</a><br>
                    Subscription: <a moz-do-not-send="true"
                      href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users"
                      rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
                  </span>
                  Link to this post: <a moz-do-not-send="true"
href="http://www.open-mpi.org/community/lists/hwloc-users/2015/12/1226.php"
                    rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/hwloc-users/2015/12/1226.php</a><span
                    class="HOEnZb"><font color="#888888"><br>
                    </font></span></blockquote>
              </div>
              <span class="HOEnZb"><font color="#888888"><br>
                  <br clear="all">
                  <div><br>
                  </div>
                  -- <br>
                </font></span><span class="">
                <div>
                  <div dir="ltr">
                    <div><font face="times new roman, serif"
                        color="#cccccc" size="2">------------------------</font></div>
                    <font face="times new roman, serif" color="#999999"
                      size="2">RaJu, Rezaul Karim<br>
                      Graduate Student (PhD) | Computer Science |
                      University of Houston</font>
                    <div><font face="times new roman, serif"
                        color="#999999" size="2">Research in High
                        Performance Computing Tools  </font>
                      <div>
                        <div><font face="times new roman, serif"
                            color="#999999" size="2">Houston,
                            Texas-77004</font></div>
                      </div>
                    </div>
                  </div>
                </div>
              </span></div>
          </blockquote>
        </div>
        <br>
        <br clear="all">
        <div><br>
        </div>
        -- <br>
        <div class="gmail_signature">
          <div dir="ltr">
            <div><font face="times new roman, serif" color="#cccccc"
                size="2">------------------------</font></div>
            <font face="times new roman, serif" color="#999999" size="2">RaJu,
              Rezaul Karim<br>
              Graduate Student (PhD) | Computer Science | University of
              Houston</font>
            <div><font face="times new roman, serif" color="#999999"
                size="2">Research in High Performance Computing Tools  </font>
              <div>
                <div><font face="times new roman, serif" color="#999999"
                    size="2">Houston, Texas-77004</font></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </blockquote>
    <br>
  </body>
</html>

