diff --git a/include/hwloc/helper.h b/include/hwloc/helper.h
index 750f404..62fbba4 100644
--- a/include/hwloc/helper.h
+++ b/include/hwloc/helper.h
@@ -685,6 +685,7 @@ hwloc_distrib(hwloc_topology_t topology,
 {
   unsigned i;
   unsigned tot_weight;
+  unsigned given, givenweight;
   hwloc_cpuset_t *cpusetp = set;
 
   if (flags & ~HWLOC_DISTRIB_FLAG_REVERSE) {
@@ -697,23 +698,40 @@ hwloc_distrib(hwloc_topology_t topology,
     if (roots[i]->cpuset)
       tot_weight += hwloc_bitmap_weight(roots[i]->cpuset);
 
-  for (i = 0; i < n_roots && tot_weight; i++) {
-    /* Give to roots[] a portion proportional to its weight */
+  for (i = 0, given = 0, givenweight = 0; i < n_roots; i++) {
+    unsigned chunk, weight;
     hwloc_obj_t root = roots[flags & HWLOC_DISTRIB_FLAG_REVERSE ? n_roots-1-i : i];
-    unsigned weight = root->cpuset ? hwloc_bitmap_weight(root->cpuset) : 0;
-    unsigned chunk = (n * weight + tot_weight-1) / tot_weight;
-    if (!root->arity || chunk == 1 || root->depth >= until) {
+    hwloc_cpuset_t cpuset = root->cpuset;
+    if (!cpuset)
+      continue;
+    weight = hwloc_bitmap_weight(cpuset);
+    if (!weight)
+      continue;
+    /* Give to roots[] a chunk proportional to its weight.
+     * If previous chunks got rounded-up, we'll get a bit less. */
+    chunk = (( (givenweight+weight) * n  + tot_weight-1) / tot_weight)
+          - ((  givenweight         * n  + tot_weight-1) / tot_weight);
+    if (!root->arity || chunk <= 1 || root->depth >= until) {
       /* Got to the bottom, we can't split any more, put everything there.  */
-      unsigned j;
-      for (j=0; j<n; j++)
-	cpusetp[j] = hwloc_bitmap_dup(root->cpuset);
+      if (chunk) {
+	/* Fill cpusets with ours */
+	unsigned j;
+	for (j=0; j < chunk; j++)
+	  cpusetp[j] = hwloc_bitmap_dup(cpuset);
+      } else {
+	/* We got no chunk, just add our cpuset to a previous one
+	 * so that we don't get ignored.
+	 * (the first chunk cannot be empty). */
+	assert(given);
+	hwloc_bitmap_or(cpusetp[-1], cpusetp[-1], cpuset);
+      }
     } else {
       /* Still more to distribute, recurse into children */
       hwloc_distrib(topology, root->children, root->arity, cpusetp, chunk, until, flags);
     }
     cpusetp += chunk;
-    tot_weight -= weight;
-    n -= chunk;
+    given += chunk;
+    givenweight += weight;
   }
 
   return 0;

