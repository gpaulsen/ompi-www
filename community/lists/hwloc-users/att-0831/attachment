<div dir="ltr">My name is not Kenneth, but I won&#39;t forego the opportunity to describe the needs of MY application (Cactus)...<div><br></div><div>Currently, our CUDA functionality is more efficient, but our OpenCL functionality is more mature. We would like to use hwloc to obtain the following information for GPUs, as we already do for CPUs:<div style>
<br></div><div style>- number of cores</div><div style>- number of PUs per core (&quot;hardware threads&quot;); both for choosing good numbers of threads, and for deciding how &quot;close&quot; they should be in terms of memory they access. (Neither OpenMP nor OpenCL distinguish between multi-core threading and SMT.)</div>
<div style><br></div><div style>- cache size of L1, or L2 cache if L1 cache is small</div><div style>- cache line size (for array padding)</div><div style>- cache stride (or associativity) for memory allocation</div><div style>
<br></div><div style>- fastest core / fastest NUMA node from which a GPU can be accessed</div><div style><br></div></div><div style>To date, we collect some of this information in a &quot;database&quot; with one entry per system that we are using. This works well for development, but in the end, we need to collect this information automatically.</div>
<div style><br></div><div style>-erik</div><div style><br></div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Jan 22, 2013 at 7:15 AM, Brice Goglin <span dir="ltr">&lt;<a href="mailto:Brice.Goglin@inria.fr" target="_blank">Brice.Goglin@inria.fr</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Le 22/01/2013 10:27, Samuel Thibault a écrit :<br>
<div class="im">&gt; Kenneth A. Lloyd, le Mon 21 Jan 2013 22:46:37 +0100, a écrit :<br>
&gt;&gt; Thanks for making this tutorial available.  Using hwloc 1.7, how far down<br>
&gt;&gt; into, say, NVIDIA cards can the architecture be reflected?  Global memory<br>
&gt;&gt; size? SMX cores? None of the above?<br>
&gt; None of the above for now.  Both are available in the cuda svn branch,<br>
&gt; however.<br>
&gt;<br>
<br>
</div>Now the question to Kenneth is &quot;what do YOU need?&quot;<br>
<br>
I didn&#39;t merge the GPU internals into the trunk yet because I&#39;d like to<br>
see if that matches what we would do with OpenCL and other accelerators<br>
such as the Xeon Phi.<br>
<br>
One thing is keep in mind is that most hwloc/GPU users will use hwloc to<br>
get locality information but they will also still use CUDA to use the<br>
GPU. So they will still be able to use CUDA to get in-depth GPU<br>
information anyway. Then the question is how much CUDA info do we want<br>
to duplicate in hwloc. hwloc could have the basic/uniform GPU<br>
information and let users rely on CUDA for everything CUDA-specific for<br>
instance. Right now, the basic/uniform part is almost empty (just<br>
contain the GPU model name or so).<br>
<br>
Also the CUDA branch creates hwloc objects inside the GPU to describe<br>
the memory/cores/caches/... Would you use these objects in your<br>
application ? or would you rather just have a basic GPU attribute<br>
structure containing the number of SMX, the memory size, ... One problem<br>
with this is that it may be hard to define a structure that works for<br>
all GPUs, even only the NVIDIA ones. We may need an union of structs...<br>
<br>
I am talking about &quot;your application&quot; above because having lstopo draw<br>
very nice GPU internals doesn&#39;t mean the corresponding hwloc objects are<br>
useful to real application.<br>
<span class="HOEnZb"><font color="#888888"><br>
Brice<br>
</font></span><div class="HOEnZb"><div class="h5"><br>
_______________________________________________<br>
hwloc-users mailing list<br>
<a href="mailto:hwloc-users@open-mpi.org">hwloc-users@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/hwloc-users</a><br>
</div></div></blockquote></div><br><br clear="all"><div><br></div>-- <br>Erik Schnetter &lt;<a href="mailto:schnetter@cct.lsu.edu" target="_blank">schnetter@cct.lsu.edu</a>&gt;<br><a href="http://www.perimeterinstitute.ca/personal/eschnetter/" target="_blank">http://www.perimeterinstitute.ca/personal/eschnetter/</a>
</div>

