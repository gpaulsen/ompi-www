<div dir="ltr"><br><br><div class="gmail_quote">On Wed, Apr 15, 2009 at 8:50 PM, Jeff Squyres <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<div class="im">On Apr 15, 2009, at 1:45 PM, Mike Dubman wrote:<br>
<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
yep. correct. We can define only static attributes (which we know for sure should present in every object of given type and leave phase specific attributes to stay dynamic)<br>
<br>
Hmm.  I would think that even in each phase, we have a bunch of fields that we *know* we want to have, right?<br>
<br>
correct, in gds terms they call it static attributes.<br>
</blockquote>
<br></div>
I was more nit-picking your statement that we would only have a field fields that would be available for every phase, and then use dynamic fields for all phase-specific data.  While GDS *can* handle that, wouldn&#39;t it be better to have a model for each phase (similar to your mockup) that expects a specific set of data for each phase?  Extra data on top of that would be a bonus, but wouldn&#39;t be necessary.  More specifically: we *know* what data should be available in each phase, so why not tell GDS about it in the model (rather than using dynamic fields that we know will always be there)?<br>

<br>
Perhaps we&#39;re just getting confused by language and I should wait for your next mock-up to see what you guys do... :-)<br>
</blockquote><div><br>completely agree, the model for every phase object should contain mostly static fields, based on current mtt phases info.<br>Also, we will have flexibility to expand phase objects without changing the model.<br>
<br></div></div><br></div>

