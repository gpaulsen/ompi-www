<?
$subject_val = "Re: [MTT devel] GSOC application";
include("../../include/msg-header.inc");
?>
<!-- received="Mon Apr 13 14:08:25 2009" -->
<!-- isoreceived="20090413180825" -->
<!-- sent="Mon, 13 Apr 2009 21:08:19 +0300" -->
<!-- isosent="20090413180819" -->
<!-- name="Mike Dubman" -->
<!-- email="mike.ompi_at_[hidden]" -->
<!-- subject="Re: [MTT devel] GSOC application" -->
<!-- id="b20b52800904131108n4b83bdaeod03a0e198ab801a4_at_mail.gmail.com" -->
<!-- charset="ISO-8859-1" -->
<!-- inreplyto="20090413144433.GD26926_at_sun.com" -->
<!-- expires="-1" -->
<div class="center">
<table border="2" width="100%" class="links">
<tr>
<th><a href="date.php">Date view</a></th>
<th><a href="index.php">Thread view</a></th>
<th><a href="subject.php">Subject view</a></th>
<th><a href="author.php">Author view</a></th>
</tr>
</table>
</div>
<p class="headers">
<strong>Subject:</strong> Re: [MTT devel] GSOC application<br>
<strong>From:</strong> Mike Dubman (<em>mike.ompi_at_[hidden]</em>)<br>
<strong>Date:</strong> 2009-04-13 14:08:19
</p>
<ul class="links">
<!-- next="start" -->
<li><strong>Next message:</strong> <a href="0382.php">Jeff Squyres: "Re: [MTT devel] GSOC application"</a>
<li><strong>Previous message:</strong> <a href="0380.php">Mike Dubman: "[MTT devel] Fwd:  GSOC application"</a>
<li><strong>In reply to:</strong> <a href="0379.php">Ethan Mallove: "Re: [MTT devel] GSOC application"</a>
<!-- nextthread="start" -->
<li><strong>Next in thread:</strong> <a href="0382.php">Jeff Squyres: "Re: [MTT devel] GSOC application"</a>
<li><strong>Reply:</strong> <a href="0382.php">Jeff Squyres: "Re: [MTT devel] GSOC application"</a>
<!-- reply="end" -->
</ul>
<hr>
<!-- body="start" -->
<p>
Hello Ethan,
<br>
<p><p>On Mon, Apr 13, 2009 at 5:44 PM, Ethan Mallove &lt;ethan.mallove_at_[hidden]&gt;wrote:
<br>
<p><span class="quotelev1">&gt;
</span><br>
<span class="quotelev1">&gt; Will this translate to something like
</span><br>
<span class="quotelev1">&gt; lib/MTT/Reporter/GoogleDatabase.pm?  If we are to move away from the
</span><br>
<span class="quotelev1">&gt; current MTT Postgres database, we want to be able to submit results to
</span><br>
<span class="quotelev1">&gt; both the current MTT database and the new Google database during the
</span><br>
<span class="quotelev1">&gt; transition period. Having a GoogleDatabase.pm would make this easier.
</span><br>
<span class="quotelev1">&gt;
</span><br>
<p>I think we should keep both storage options: current postgress and
<br>
datastore. The mtt changes will be minor to support datastore.
<br>
Due that fact that google appengine API (as well as datastore API) can be
<br>
python or java only, we will create external scripts to manipulate datastore
<br>
objects:
<br>
<p>The mtt will dump test results in xml format. Then, we provide two python
<br>
(or java?) scripts:
<br>
<p>mtt-results-submit-to-datastore.py - script will be called at the end of mtt
<br>
run and will read xml files, create objects and save to datastore
<br>
mtt-results-query.py - sample script to query datastore and generate some
<br>
simple visual/tabular reports. It will serve as tutorial for howto access
<br>
mtt data from scripts for reporting.
<br>
<p>Later, we add another script to replace php web frontend. It will be hosted
<br>
on google appengine machines and will provide web viewer for mtt results.
<br>
(same way like index.php does today)
<br>
<p><p><p><span class="quotelev1">&gt;
</span><br>
<span class="quotelev2">&gt; &gt;
</span><br>
<span class="quotelev2">&gt; &gt;      b. mtt_save_to_db.py - script which will go over mtt scratch dir,
</span><br>
<span class="quotelev1">&gt; find
</span><br>
<span class="quotelev2">&gt; &gt;      all xml files generated for every mtt phase, parse it and save to
</span><br>
<span class="quotelev2">&gt; &gt;      datastore, preserving test results relations,i.e. all test results
</span><br>
<span class="quotelev1">&gt; will
</span><br>
<span class="quotelev2">&gt; &gt;      be grouped by mtt general info: mpi version, name, date, ....
</span><br>
<span class="quotelev2">&gt; &gt;
</span><br>
<span class="quotelev2">&gt; &gt;      c. same script can scan, parse and save from xml files generated by
</span><br>
<span class="quotelev2">&gt; &gt;      wrapper scripts for non mtt based executions (fluent, ..)
</span><br>
<span class="quotelev2">&gt; &gt;
</span><br>
<span class="quotelev1">&gt;
</span><br>
<span class="quotelev1">&gt; I'm confused here.  Can't MTT be outfitted to report results of a
</span><br>
<span class="quotelev1">&gt; Fluent run?
</span><br>
<span class="quotelev1">&gt;
</span><br>
<p><p>I think we can enhance mtt to be not only mpi testing platform, but also to
<br>
serve as mpi benchmarking platform. We can use datastore to keep mpi-based
<br>
benchmarking results in the same manner like mtt does for testing results.
<br>
(no changes to mtt required for that, it is just a side effect of using
<br>
datastore to keep data of any type)
<br>
<p><p><p><span class="quotelev1">&gt;
</span><br>
<span class="quotelev1">&gt;
</span><br>
<span class="quotelev2">&gt; &gt;      d. mtt_query_db.py script will be provided with basic query
</span><br>
<span class="quotelev1">&gt; capabilities
</span><br>
<span class="quotelev2">&gt; &gt;      over proposed datastore object model. Most users will prefer writing
</span><br>
<span class="quotelev2">&gt; &gt;      custom sql-like select queries for fetching results.
</span><br>
<span class="quotelev2">&gt; &gt;
</span><br>
<span class="quotelev2">&gt; &gt;      3. Important notes:
</span><br>
<span class="quotelev2">&gt; &gt;      ==============
</span><br>
<span class="quotelev2">&gt; &gt;
</span><br>
<span class="quotelev2">&gt; &gt;      a. The single mtt client execution generates many result files,
</span><br>
<span class="quotelev1">&gt; every
</span><br>
<span class="quotelev2">&gt; &gt;      generated file represents test phase. This file contains test
</span><br>
<span class="quotelev1">&gt; results
</span><br>
<span class="quotelev2">&gt; &gt;      and can be characterized as a set of attributes with its values.
</span><br>
<span class="quotelev1">&gt; Every
</span><br>
<span class="quotelev2">&gt; &gt;      test phase has its own attributes which are differ for different
</span><br>
<span class="quotelev1">&gt; phases.
</span><br>
<span class="quotelev2">&gt; &gt;      For example: attributes for TestBuild phase has keys &quot;compiler_name,
</span><br>
<span class="quotelev2">&gt; &gt;      compiler_version&quot;, the MPIInstall phase has attributes: prefix_dir,
</span><br>
<span class="quotelev2">&gt; &gt;      arch, ....
</span><br>
<span class="quotelev2">&gt; &gt;      Hence, most of the datastore objects representing phases of MTT* are
</span><br>
<span class="quotelev2">&gt; &gt;      derived from &quot;db.Expando&quot; model, which allows having dynamic
</span><br>
<span class="quotelev1">&gt; attributes
</span><br>
<span class="quotelev2">&gt; &gt;      for its derived sub-classes.
</span><br>
<span class="quotelev2">&gt; &gt;
</span><br>
<span class="quotelev2">&gt; &gt;      The attached is archive with a simple test for using datastore for
</span><br>
<span class="quotelev1">&gt; mtt.
</span><br>
<span class="quotelev2">&gt; &gt;      Please see models.py file with proposed object model and comment.
</span><br>
<span class="quotelev2">&gt; &gt;
</span><br>
<span class="quotelev1">&gt;
</span><br>
<span class="quotelev1">&gt; I don't see the models.py attachment.
</span><br>
<span class="quotelev1">&gt;
</span><br>
<p>I just sent original email with attachment, tell me if you want me to send
<br>
it again.
<br>
<p><span class="quotelev1">&gt;
</span><br>
<span class="quotelev1">&gt;
</span><br>
regards
<br>
<p>Mike
<br>
<p><hr>
<ul>
<li>text/html attachment: <a href="http://www.open-mpi.org/community/lists/mtt-devel/att-0381/attachment">attachment</a>
</ul>
<!-- attachment="attachment" -->
<!-- body="end" -->
<hr>
<ul class="links">
<!-- next="start" -->
<li><strong>Next message:</strong> <a href="0382.php">Jeff Squyres: "Re: [MTT devel] GSOC application"</a>
<li><strong>Previous message:</strong> <a href="0380.php">Mike Dubman: "[MTT devel] Fwd:  GSOC application"</a>
<li><strong>In reply to:</strong> <a href="0379.php">Ethan Mallove: "Re: [MTT devel] GSOC application"</a>
<!-- nextthread="start" -->
<li><strong>Next in thread:</strong> <a href="0382.php">Jeff Squyres: "Re: [MTT devel] GSOC application"</a>
<li><strong>Reply:</strong> <a href="0382.php">Jeff Squyres: "Re: [MTT devel] GSOC application"</a>
<!-- reply="end" -->
</ul>
<div class="center">
<table border="2" width="100%" class="links">
<tr>
<th><a href="date.php">Date view</a></th>
<th><a href="index.php">Thread view</a></th>
<th><a href="subject.php">Subject view</a></th>
<th><a href="author.php">Author view</a></th>
</tr>
</table>
</div>
<!-- trailer="footer" -->
<? include("../../include/msg-footer.inc") ?>
