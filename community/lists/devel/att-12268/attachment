<html><head><meta http-equiv="Content-Type" content="text/html charset=iso-8859-1"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Thomas,<div><br></div><div>Thanks for the detailed bug report and the test case. I successfully identified the culprit, and the issue is now fixed (commit r28319).</div><div><br></div><div>&nbsp; Regards,</div><div>&nbsp; &nbsp; George.</div><div><br></div><div>PS: During the debugging process I sketched the datatype representation to help myself understand the issue. I attached the figure here for the delight of whoever might be interested. It contains the 4 datatypes created in main, and the two datatypes created on the second invocation of the do_test function.</div><div><br></div><div><img id="86aafa70-e0c4-4d89-87ee-f0c9b85443fa" height="357" width="470" apple-width="yes" apple-height="yes" src="cid:A28D084F-9970-40B9-9167-E6E1F9C1CA7C"></div><div><br></div><div><br><div><div>On Apr 8, 2013, at 16:08 , Thomas Jahns &lt;<a href="mailto:jahns@dkrz.de">jahns@dkrz.de</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite">Hello,<br><br>a colleague of mine has investigated a difficult problem we traced to OpenMPI<br>giving incorrectly delivered data on some struct datatypes which use specific<br>offsets (on the stack in our case but the problem can be reproduced when using<br>specifically chosen slices of an array). Our library is used to aggregate<br>several MPI communications in a generic and transparent manner and therefore we<br>need to be able to handle any combination of properly aligned offsets and<br>component types.<br><br>The attached example program contains the necessary steps to reproduce the problem:<br><br>1. create the struct types in question<br>2. send/recv the data<br>3. compare to reference (said comparison works on several MPICH2 versions)<br><br>The code prints than any array indices/values not matching the reference.<br><br>Our platform is linux x86_64 with Debian squeeze, the tested versions of OpenMPI<br>are the 1.4.2 version supplied with squeeze and 1.6.4 compiled ourselves. For<br>1.4.2 I also did a quick test in a i386 chroot and the code fails there too. gcc<br>4.6.1 was used for the x86_64 cases and gcc 4.3.5 for the i386 chroot.<br><br>Sorry if the test is not of minimal size, but we were happy once he got this<br>down from several 10000 lines Fortran+C and even that took more than a day once<br>we understood the problem was unrelated to the Fortran program it originally<br>occurred in.<br><br>When running the program with OpenMPI:<br><br>$ mpicc -std=gnu99 ./mpi_test.c &amp;&amp; ./a.out<br>first tests:<br>second tests:<br>results_2[6] &nbsp;&nbsp;&nbsp;&nbsp;= 8<br>ref_results_2[6] = 12<br>results_2[7] &nbsp;&nbsp;&nbsp;&nbsp;= 9<br>ref_results_2[7] = 13<br><br>MPICH gives the expected result:<br>$ /sw/squeeze-x64/mpi/mpich2-1.4.1p1-gccsys/bin/mpicc -std=gnu99 ./mpi_test.c &amp;&amp;<br>./a.out<br>first tests:<br>second tests:<br><br>Regards, Thomas<br>-- <br>Thomas Jahns<br>DKRZ GmbH, Department: Application software<br><br>Deutsches Klimarechenzentrum<br>Bundesstraﬂe 45a<br>D-20146 Hamburg<br><br>Phone: +49-40-460094-151<br>Fax: +49-40-460094-270<br>Email: Thomas Jahns &lt;<a href="mailto:jahns@dkrz.de">jahns@dkrz.de</a>&gt;<br><span>&lt;mpi_test.c&gt;</span>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>http://www.open-mpi.org/mailman/listinfo.cgi/devel</blockquote></div><br></div></body></html>
