if you did not configure with --disable-dlopen, you need to make install from opal/mca/btl/If<div>if not, you need make install from your top builddir</div><div><br></div><div>you can</div><div>mpirun --mca btl_base_verbose 100 ...</div><div>to see if your btl was found and did not somehow disqualify itself</div><div>(for example because it&#39;s priority is zero)</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles<br><div><br>On Thursday, March 17, 2016, dpchoudh . &lt;<a href="mailto:dpchoudh@gmail.com">dpchoudh@gmail.com</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div><div><div><div><div><div><div>Hello all<br><br></div>Sorry about asking too many 101 level question, but here is another one:<br><br></div>I have a BTL layer code, called &#39;lf&#39; that is ready for unit testing; it compiles with the OMPI tool chain (by doing a ./configure; make from the top level directory) and have the basic data transport calls implemented.<br><br></div>How do I &#39;hook up&#39; the BTL to the OMPI call chain?<br><br></div>If I do the following:<br></div>mpirin -np 2 --hostfile ~/hostfile -mca btl lf,self ./NPmpi<br><br></div>it fails to run and the gist of the failure is that it does not even attempt connecting with the &#39;lf&#39; BTL (the error says: &#39;BTLs attempted: self&#39;)<br><br></div>The &#39;lf&#39; NIC, and RDMA capable card, also has a TCP/IP interface and replacing &#39;lf&#39; with &#39;tcp&#39; in the above command *does* work.<br><div><div><div><div><div><div><br></div><div>Thanks in advance<br></div><div>Durga<br><br clear="all"></div><div><div><div><div><div>Life is complex. It has real and imaginary parts.</div></div>
</div></div></div></div></div></div></div></div></div>
</blockquote></div></div>

