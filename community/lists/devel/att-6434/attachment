Ah - interesting scenario!<br><br>Definitely a &quot;bug&quot; in the code, then. What it looks like, though, is that the jdata-&gt;num_procs is wrong. There shouldn&#39;t be any way that the num_procs in the node array is different than jdata-&gt;num_procs.<br>
<br>My guess is that the rank_file mapper isn&#39;t correctly maintaining the bookkeeping when we map the procs beyond those in the rankfile. I&#39;ll dig into it - have to fix something for Lenny anyway.<br><br>Meantime, this change looks fine regardless as it (a) is better code and (b) protects us against such errors.<br>
<br>Thanks for catching it!<br>Ralph<br><br><br><div class="gmail_quote">On Wed, Jul 15, 2009 at 2:30 PM, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@eecs.utk.edu">bosilca@eecs.utk.edu</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">I think I found a better solution (in r21688). Here is what I was trying to do.<br>
<br>
I have a more or less homogeneous cluster. In fact all processors are identical, except that some are quad core and some dual core. Of course I care how my processes are mapped on the quad cores, but not really on the dual cores.<br>

<br>
My approach was to use the following configuration files.<br>
<br>
In /home/bosilca/.openmpi/mca-params.conf I have:<br>
<br>
orte_default_hostfile=/home/bosilca/.openmpi/machinefile<br>
rmaps_rank_file_path = /home/bosilca/.openmpi/rankfile<br>
rmaps_rank_file_priority = 100<br>
<br>
In /home/bosilca/.openmpi/machinefile I have the full description of the cluster. As an example:<br>
node01 slots=4<br>
node02 slots=4<br>
node03 slots=2<br>
node04 slots=2<br>
<br>
And in the /home/bosilca/.openmpi/rankfile file I have:<br>
rank 0=+n0 slot=0<br>
rank 1=+n0 slot=1<br>
rank 2=+n1 slot=0<br>
rank 3=+n1 slot=1<br>
<br>
As long as I spawn jobs with less than 4 processes everything worked fine. But when I used more than 4 processes, orterun segfaulted. After debugging I found that the nodes, lrank and nrank arrays were allocated based on the jdata-&gt;num_procs, but then filled based on the total number of processes in the jdata-&gt;nodes array. As it appears that the jdata-&gt;num_procs is somehow modified based on the number of entries in the rankfile, we end-up writing outside the allocation and then segfault. Now with the latest patch, we can cope with such a scenario by only packing the known information (and thus not writing outside the allocated arrays).<br>

<br>
This might not be the best approach, but it is doing what I&#39;m looking for ...<br><font color="#888888">
<br>
  george.</font><div><div></div><div class="h5"><br>
<br>
On Jul 15, 2009, at 15:50 , Ralph Castain wrote:<br>
<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
The routed comm system relies on each daemon having complete information as to where every process is located, so the expectation was that only full maps would ever be sent. Thus, the nidmap code is setup to always send a full map.<br>

<br>
I don&#39;t know how to even generate a &quot;partial&quot; map. I assume you are doing something offline? Is this to update changed info? If so, you&#39;ll also have to do something to update the daemon&#39;s maps or the comm system will break down.<br>

<br>
Ralph<br>
<br>
On Wed, Jul 15, 2009 at 1:40 PM, George Bosilca &lt;<a href="mailto:bosilca@eecs.utk.edu" target="_blank">bosilca@eecs.utk.edu</a>&gt; wrote:<br>
I have a question regarding the mapping. How can I declare a partial mapping ? In fact I only care about how some of the processes are mapped on some specific nodes. Right now if the rmaps doesn&#39;t contain information about all nodes, we give up (before this patch we segfaulted).<br>

<br>
Does it means we always have to declare the whole mapping or it&#39;s just that we overlooked this strange case?<br>
<br>
 george.<br>
<br>
Begin forwarded message:<br>
<br>
<br>
Author: bosilca<br>
Date: 2009-07-15 15:36:53 EDT (Wed, 15 Jul 2009)<br>
New Revision: 21686<br>
URL: <a href="https://svn.open-mpi.org/trac/ompi/changeset/21686" target="_blank">https://svn.open-mpi.org/trac/ompi/changeset/21686</a><br>
<br>
Log:<br>
Reorder the nidmap encoding function. Add a check to make sure we don&#39;t write<br>
outside the boundaries of the allocated array.<br>
<br>
However, the problem is still there. If we have rmaps file containing only<br>
partial information the num_procs get set to the wrong value (the number of<br>
hosts in the rmaps file instead of the number of processes requested on the<br>
command line).<br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</blockquote>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br>

