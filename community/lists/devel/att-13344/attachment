<div dir="ltr">thanks<div>what magic &quot;-mca base_verbose&quot; param should print it?</div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Dec 3, 2013 at 6:59 PM, Nathan Hjelm <span dir="ltr">&lt;<a href="mailto:hjelmn@lanl.gov" target="_blank">hjelmn@lanl.gov</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">This usually happens when a string that belongs to the MCA system is freed<br>
elsewhere. Can you find out the name of the variable that is being destructed<br>
in frame 2.<br>
<br>
-Nathan Hjelm<br>
Application Readiness, HPC-5, LANL<br>
<div><div class="h5"><br>
On Tue, Dec 03, 2013 at 02:53:29PM +0200, Mike Dubman wrote:<br>
&gt;    Hi,<br>
&gt;    We observe crash during shmem_finalize()  (in trunk) with new MCA<br>
&gt;    framework.<br>
&gt;    After investigation, found that  MCA tears-down process can access<br>
&gt;    previously released memory. (reproduced with oshmem_hello_c.c test)<br>
&gt;    0 0x00007fffed3d51d0 in ?? ()<br>
&gt;    #1 &lt;signal handler called&gt;<br>
&gt;    #2 0x00007ffff710e21e in var_destructor (var=0x6fa7e0) at<br>
&gt;    mca_base_var.c:1605<br>
&gt;    #3 0x00007ffff710ae99 in opal_obj_run_destructors (object=0x6fa7e0) at<br>
&gt;    ../../../opal/class/opal_object.h:448<br>
&gt;    #4 0x00007ffff710ca18 in mca_base_var_finalize () at mca_base_var.c:954<br>
&gt;    #5 0x00007ffff710a7e2 in mca_base_param_finalize () at<br>
&gt;    mca_base_param.c:643<br>
&gt;    #6 0x00007ffff70e08e2 in opal_finalize_util () at<br>
&gt;    runtime/opal_finalize.c:77<br>
&gt;    #7 0x00007ffff7aa5319 in ompi_mpi_finalize () at<br>
&gt;    runtime/ompi_mpi_finalize.c:407<br>
&gt;    #8 0x00007ffff7d900cc in oshmem_shmem_finalize () at<br>
&gt;    runtime/oshmem_shmem_finalize.c:75<br>
&gt;    #9 0x00007ffff7d91119 in shmem_finalize () at shmem_finalize.c:24<br>
&gt;    #10 0x00007ffff7d89b8f in __do_global_dtors_aux () from<br>
&gt;    /install/lib/libshmem.so.0<br>
&gt;    #11 0x0000000000000000 in ?? ()<br>
&gt;    The crash can be resolved by following patch:<br>
&gt;    diff --git a/opal/mca/base/mca_base_var.c b/opal/mca/base/mca_base_var.c<br>
&gt;    index 9966627..48028d8 100644<br>
&gt;    --- a/opal/mca/base/mca_base_var.c<br>
&gt;    +++ b/opal/mca/base/mca_base_var.c<br>
&gt;    @@ -773,7 +773,7 @@ static int var_find_by_name (const char *full_name,<br>
&gt;    int *index, bool invalidok)<br>
&gt;<br>
&gt;         (void) var_get ((int)(uintptr_t) tmp, &amp;var, false);<br>
&gt;<br>
&gt;    -    if (invalidok || VAR_IS_VALID(var[0])) {<br>
&gt;    +    if (VAR_IS_VALID(var[0])) {<br>
&gt;             *index = (int)(uintptr_t) tmp;<br>
&gt;             return OPAL_SUCCESS;<br>
&gt;         }<br>
&gt;    I`m not sure we understand yet why it fixes the problem and what is a<br>
&gt;    race.<br>
&gt;    Could some` with knowledge of MCA flows look at it and comment?<br>
&gt;    The &quot;invalidok&quot; was introduced by Jeff`s commit.<br>
&gt;    Thanks<br>
&gt;    M<br>
<br>
</div></div>&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
<br>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></blockquote></div><br></div>

