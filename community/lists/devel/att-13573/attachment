<div dir="ltr">Either would be fine with me. If you left in the verbose message then it might be a bit confusing to any user that might see it.</div><div class="gmail_extra"><br><br><div class="gmail_quote">On Fri, Jan 3, 2014 at 9:13 AM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">That would work. Alternatively, you could try just returning OPAL_SUCCESS in place of OPAL_ERR_NOT_AVAILABLE. This would still avoid opening the components for no reason (thus saving some memory) while not causing opal_init to abort.<br>

<div class="HOEnZb"><div class="h5"><br>
<br>
On Jan 3, 2014, at 3:19 AM, Adrian Reber &lt;<a href="mailto:adrian@lisas.de">adrian@lisas.de</a>&gt; wrote:<br>
<br>
&gt; So removing all output like in this patch would be ok?<br>
&gt;<br>
&gt; diff --git a/opal/mca/compress/base/compress_base_open.c b/opal/mca/compress/base/compress_base_open.c<br>
&gt; index a09fe59..f487752 100644<br>
&gt; --- a/opal/mca/compress/base/compress_base_open.c<br>
&gt; +++ b/opal/mca/compress/base/compress_base_open.c<br>
&gt; @@ -14,13 +14,9 @@<br>
&gt;<br>
&gt; #include &quot;opal_config.h&quot;<br>
&gt;<br>
&gt; -#include &lt;string.h&gt;<br>
&gt; -#include &quot;opal/mca/mca.h&quot;<br>
&gt; #include &quot;opal/mca/base/base.h&quot;<br>
&gt; #include &quot;opal/include/opal/constants.h&quot;<br>
&gt; -#include &quot;opal/mca/compress/compress.h&quot;<br>
&gt; #include &quot;opal/mca/compress/base/base.h&quot;<br>
&gt; -#include &quot;opal/util/output.h&quot;<br>
&gt;<br>
&gt; #include &quot;opal/mca/compress/base/static-components.h&quot;<br>
&gt;<br>
&gt; @@ -45,13 +41,6 @@ MCA_BASE_FRAMEWORK_DECLARE(opal, compress, NULL, opal_compress_base_register, op<br>
&gt;<br>
&gt; static int opal_compress_base_register (mca_base_register_flag_t flags)<br>
&gt; {<br>
&gt; -    /* Compression currently only used with C/R */<br>
&gt; -    if( !opal_cr_is_enabled ) {<br>
&gt; -        opal_output_verbose(10, opal_compress_base_framework.framework_output,<br>
&gt; -                            &quot;compress:open: FT is not enabled, skipping!&quot;);<br>
&gt; -        return OPAL_ERR_NOT_AVAILABLE;<br>
&gt; -    }<br>
&gt; -<br>
&gt;     return OPAL_SUCCESS;<br>
&gt; }<br>
&gt;<br>
&gt; @@ -61,13 +50,6 @@ static int opal_compress_base_register (mca_base_register_flag_t flags)<br>
&gt;  */<br>
&gt; int opal_compress_base_open(mca_base_open_flag_t flags)<br>
&gt; {<br>
&gt; -    /* Compression currently only used with C/R */<br>
&gt; -    if( !opal_cr_is_enabled ) {<br>
&gt; -        opal_output_verbose(10, opal_compress_base_framework.framework_output,<br>
&gt; -                            &quot;compress:open: FT is not enabled, skipping!&quot;);<br>
&gt; -        return OPAL_SUCCESS;<br>
&gt; -    }<br>
&gt; -<br>
&gt;     /* Open up all available components */<br>
&gt;     return mca_base_framework_components_open (&amp;opal_compress_base_framework, flags);<br>
&gt; }<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; On Thu, Jan 02, 2014 at 12:32:32PM -0500, Josh Hursey wrote:<br>
&gt;&gt; I think the only reason I protected that framework is to reduce the<br>
&gt;&gt; overhead of an application using a build of Open MPI with CR support, but<br>
&gt;&gt; no enabling it at runtime. Nothing in the compress framework depends on the<br>
&gt;&gt; CR infrastructure (although the CR infrastructure can use the compress<br>
&gt;&gt; framework if the user chooses to). So I bet we can remove the protection<br>
&gt;&gt; altogether and be fine.<br>
&gt;&gt;<br>
&gt;&gt; So I think this patch is fine. I might also go as far as removing the &#39;if&#39;<br>
&gt;&gt; block altogether as the protection should not been needed any longer.<br>
&gt;&gt;<br>
&gt;&gt; Thanks,<br>
&gt;&gt; Josh<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; On Fri, Dec 27, 2013 at 3:46 PM, Adrian Reber &lt;<a href="mailto:adrian@lisas.de">adrian@lisas.de</a>&gt; wrote:<br>
&gt;&gt;<br>
&gt;&gt;&gt; Right now the C/R code fails because of a change introduced in<br>
&gt;&gt;&gt; opal/mca/compress/base/compress_base_open.c in 2013 with commit<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; git 734c724ff76d9bf814f3ab0396bcd9ee6fddcd1b<br>
&gt;&gt;&gt; svn r28239<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    Update OPAL frameworks to use the MCA framework system.<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; This commit changed a lot but also the return value of the function from<br>
&gt;&gt;&gt; OPAL_SUCCESS to OPAL_ERR_NOT_AVAILABLE. With following patch I can make<br>
&gt;&gt;&gt; it work again:<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; diff --git a/opal/mca/compress/base/compress_base_open.c<br>
&gt;&gt;&gt; b/opal/mca/compress/base/compress_base_open.c<br>
&gt;&gt;&gt; index a09fe59..69eabfa 100644<br>
&gt;&gt;&gt; --- a/opal/mca/compress/base/compress_base_open.c<br>
&gt;&gt;&gt; +++ b/opal/mca/compress/base/compress_base_open.c<br>
&gt;&gt;&gt; @@ -45,11 +45,11 @@ MCA_BASE_FRAMEWORK_DECLARE(opal, compress, NULL,<br>
&gt;&gt;&gt; opal_compress_base_register, op<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int opal_compress_base_register (mca_base_register_flag_t flags)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt;     /* Compression currently only used with C/R */<br>
&gt;&gt;&gt;     if( !opal_cr_is_enabled ) {<br>
&gt;&gt;&gt;         opal_output_verbose(10,<br>
&gt;&gt;&gt; opal_compress_base_framework.framework_output,<br>
&gt;&gt;&gt;                             &quot;compress:open: FT is not enabled,<br>
&gt;&gt;&gt; skipping!&quot;);<br>
&gt;&gt;&gt; -        return OPAL_ERR_NOT_AVAILABLE;<br>
&gt;&gt;&gt; +        return OPAL_SUCCESS;<br>
&gt;&gt;&gt;     }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;     return OPAL_SUCCESS;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; My question is if OPAL_ERR_NOT_AVAILABLE is indeed the correct return value<br>
&gt;&gt;&gt; and the function calling opal_compress_base_register() should actually<br>
&gt;&gt;&gt; handle OPAL_ERR_NOT_AVAILABLE or if returning OPAL_SUCCESS is still the<br>
&gt;&gt;&gt; right<br>
&gt;&gt;&gt; return value?<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;                Adrian<br>
&gt;&gt;&gt; _______________________________________________<br>
&gt;&gt;&gt; devel mailing list<br>
&gt;&gt;&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; --<br>
&gt;&gt; Joshua Hursey<br>
&gt;&gt; Assistant Professor of Computer Science<br>
&gt;&gt; University of Wisconsin-La Crosse<br>
&gt;&gt; <a href="http://cs.uwlax.edu/~jjhursey" target="_blank">http://cs.uwlax.edu/~jjhursey</a><br>
&gt;<br>
&gt;&gt; _______________________________________________<br>
&gt;&gt; devel mailing list<br>
&gt;&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br><br clear="all"><div><br></div>-- <br>Joshua Hursey<br>Assistant Professor of Computer Science<br>University of Wisconsin-La Crosse<br><a href="http://cs.uwlax.edu/~jjhursey" target="_blank">http://cs.uwlax.edu/~jjhursey</a>
</div>

