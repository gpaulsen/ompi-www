<div dir="ltr"><div class="gmail_extra"><div class="gmail_quote">On Tue, Jan 20, 2015 at 10:01 PM, Gilles Gouaillardet <span dir="ltr">&lt;<a href="mailto:gilles.gouaillardet@iferc.org" target="_blank">gilles.gouaillardet@iferc.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">2) the mpi_test_suite uses a weird type (e.g. artificially send 20k<br>
integers to the wire when sending one<br>
 would produce the very same result)<br>
i briefly checked the mpi_test_suite source code, and the weird type is<br>
send/recv with buffers whose size<br>
is one element.<br>
i can only guess the authors wanted to send a large message to the wire<br>
(e.g. create traffic) without pointless<br>
large memory allocation.<br>
at this stage, i am tempted to conclude the authors did what they intended.<br></blockquote><div><br></div><div>Receiving with such a datatype is illegal in MPI (sending is allowed as the buffer is supposed read only during the operation). In fact having any datatype that span over the same memory region twice is illegal to be used for any receive operations. The reason is simple, an MPI implementation can move the data in any order it wants, and as MPI guaranteed only the FIFO ordering of the matching such a datatype will break the determinism of the application.</div><div><br></div><div>We should ping the authors of the test code to address this.</div><div><br></div><div>  George.</div><div><br></div><div> </div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
<br>
Cheers,<br>
<br>
Gilles<br>
<div><div class="h5"><br>
On 2015/01/21 3:00, Jeff Squyres (jsquyres) wrote:<br>
&gt; George is right -- Gilles: was this the correct solution?<br>
&gt;<br>
&gt; Put differently: the extent of the 20K vector created below is 4 (bytes).<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;&gt; On Jan 19, 2015, at 2:39 AM, George Bosilca &lt;<a href="mailto:bosilca@icl.utk.edu">bosilca@icl.utk.edu</a>&gt; wrote:<br>
&gt;&gt;<br>
&gt;&gt; Btw,<br>
&gt;&gt;<br>
&gt;&gt; MPI_Type_hvector(20000, 1, 0, MPI_INT, &amp;type);<br>
&gt;&gt;<br>
&gt;&gt; Is just a weird datatype. Because the stride is 0, this datatype a memory layout that includes 20000 times the same int. I&#39;m not sure this was indeed intended...<br>
&gt;&gt;<br>
&gt;&gt;   George.<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; On Mon, Jan 19, 2015 at 12:17 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@iferc.org">gilles.gouaillardet@iferc.org</a>&gt; wrote:<br>
&gt;&gt; Adrian,<br>
&gt;&gt;<br>
&gt;&gt; i just fixed this in the master<br>
&gt;&gt; (<a href="https://github.com/open-mpi/ompi/commit/d14daf40d041f7a0a8e9d85b3bfd5eb570495fd2" target="_blank">https://github.com/open-mpi/ompi/commit/d14daf40d041f7a0a8e9d85b3bfd5eb570495fd2</a>)<br>
&gt;&gt;<br>
&gt;&gt; the root cause is a corner case was not handled correctly :<br>
&gt;&gt;<br>
&gt;&gt; MPI_Type_hvector(20000, 1, 0, MPI_INT, &amp;type);<br>
&gt;&gt;<br>
&gt;&gt; type has extent = 4 *but* size = 80000<br>
&gt;&gt; ob1 used to test only the extent to determine whether the message should<br>
&gt;&gt; be sent inlined or not<br>
&gt;&gt; extent &lt;= 256 means try to send the message inline<br>
&gt;&gt; that meant a fragment of size 80000 (which is greater than 65536 e.g.<br>
&gt;&gt; max default size for IB) was allocated,<br>
&gt;&gt; and that failed.<br>
&gt;&gt;<br>
&gt;&gt; now both extent and size are tested, so the message is not sent inline,<br>
&gt;&gt; and it just works.<br>
&gt;&gt;<br>
&gt;&gt; Cheers,<br>
&gt;&gt;<br>
&gt;&gt; Gilles<br>
&gt;&gt; _______________________________________________<br>
&gt;&gt; devel mailing list<br>
&gt;&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/01/16798.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/01/16798.php</a><br>
&gt;&gt;<br>
&gt;&gt; _______________________________________________<br>
&gt;&gt; devel mailing list<br>
&gt;&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/01/16801.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/01/16801.php</a><br>
&gt;<br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div>Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/01/16808.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/01/16808.php</a><br>
</blockquote></div><br></div></div>

