Index: ompi/mca/pml/ob1/pml_ob1_rdma.c
===================================================================
--- ompi/mca/pml/ob1/pml_ob1_rdma.c	(revision 17513)
+++ ompi/mca/pml/ob1/pml_ob1_rdma.c	(working copy)
@@ -30,11 +30,6 @@
 #include "pml_ob1.h"
 #include "pml_ob1_rdma.h"
 
-/* Use this registration if no registration needed for a BTL instead of NULL.
- * This will help other code to distinguish case when memory is not registered
- * from case when registration is not needed */
-static mca_mpool_base_registration_t pml_ob1_dummy_reg;
-
 /*
  * Check to see if memory is registered or can be registered. Build a 
  * set of registrations on the request.
@@ -75,9 +70,6 @@
 
             if(NULL == reg)
                 bml_btl = NULL; /* skip it */
-        } else {
-            /* if registration is not required use dummy registration */
-            reg = &pml_ob1_dummy_reg;
         }
 
         if(bml_btl != NULL) {
@@ -101,10 +93,9 @@
     return num_btls_used;
 }
 
-size_t mca_pml_ob1_rdma_pipeline_btls(
-    mca_bml_base_endpoint_t* bml_endpoint,
-    size_t size,
-    mca_pml_ob1_com_btl_t* rdma_btls)
+size_t mca_pml_ob1_rdma_pipeline_btls( mca_bml_base_endpoint_t* bml_endpoint,
+                                       size_t size,
+                                       mca_pml_ob1_com_btl_t* rdma_btls )
 {
     int i, num_btls = mca_bml_base_btl_array_get_size(&bml_endpoint->btl_rdma);
     double weight_total = 0;
@@ -114,8 +105,6 @@
             mca_bml_base_btl_array_get_next(&bml_endpoint->btl_rdma);
         if(rdma_btls[i].bml_btl->btl_mpool != NULL)
             rdma_btls[i].btl_reg = NULL;
-        else
-            rdma_btls[i].btl_reg = &pml_ob1_dummy_reg;
 
         weight_total += rdma_btls[i].bml_btl->btl_weight;
     }

