ok, will do<div><br></div><div>basically, I simply have to</div><div>#include &quot;ompi/mpi/c/profile/defines.h&quot;</div><div>if configure set the WANT_MPI_PROFILING macro</div><div>(since this is an AM_CONDITIONAL, I will have the Makefile.am sets the CPP flags for the compiler)</div><div><br></div><div>makes sense ?</div><div><br></div><div>/* the patch will be pretty large since all *_f files are impacted, and for mpif-h only,</div><div>so i&#39;d rather ask before I fill the pr, and even if a sed command will do most of the job */</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles<br><br>On Saturday, August 29, 2015, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">On Aug 27, 2015, at 3:25 AM, Gilles Gouaillardet &lt;<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;gilles@rist.or.jp&#39;)">gilles@rist.or.jp</a>&gt; wrote:<br>
&gt;<br>
&gt; I am lost ...<br>
<br>
Fortran does that to ya.  ;-)<br>
<br>
&gt; from ompi/mpi/fortran/mpif-h/profile/palltoall_f.c<br>
&gt;<br>
&gt; void ompi_alltoall_f(char *sendbuf, MPI_Fint *sendcount, MPI_Fint *sendtype,<br>
&gt;                    char *recvbuf, MPI_Fint *recvcount, MPI_Fint *recvtype,<br>
&gt;                    MPI_Fint *comm, MPI_Fint *ierr)<br>
&gt; {<br>
&gt;    [...]<br>
&gt;    c_ierr = MPI_Alltoall(sendbuf,<br>
&gt;                          OMPI_FINT_2_INT(*sendcount),<br>
&gt;                          c_sendtype,<br>
&gt;                          recvbuf,<br>
&gt;                          OMPI_FINT_2_INT(*recvcount),<br>
&gt;                          c_recvtype, c_comm);<br>
&gt;    [...]<br>
&gt; }<br>
&gt;<br>
&gt; $ nm ompi/mpi/fortran/mpif-h/profile/.libs/palltoall_f.o | grep MPI_Alltoall<br>
&gt;                 U MPI_Alltoall<br>
&gt; 0000000000000000 W MPI_Alltoall_f<br>
&gt; 0000000000000000 W MPI_Alltoall_f08<br>
&gt; 0000000000000000 W PMPI_Alltoall_f<br>
&gt; 0000000000000000 W PMPI_Alltoall_f08<br>
&gt;<br>
&gt; ompi_alltoall_f() calls MPI_Alltoall()<br>
&gt;<br>
&gt;<br>
&gt; the &quot;natural&quot; way of writing a tool is to write mpi_alltoall_ (that calls pmpi_alltoall_)<br>
&gt; *and* MPI_Alltoall (that calls PMPI_Alltoall)<br>
<br>
Sidenote: the only correct way to write a tool that intercepts Fortran MPI API calls is to write those interceptions *in Fortran*.  I.e., the tool should provide MPI_ALLTOALL as a Fortran subroutine.  I realize that this is not the point of what you are saying :-), but everyone always gets this point wrong, so I feel the need to keep pointing this out.<br>
<br>
&gt; since ompi_alltoall_f invokes MPI_Alltoall (and not PMPI_Alltoall), the tool is invoked twice, by both the Fortran and C wrapper.<br>
<br>
I didn&#39;t think that this was true, but I just confirmed it by looking at &quot;gcc -E&quot; output in the mpif-h/profile directory.<br>
<br>
I don&#39;t think that it was the intent.  See below.<br>
<br>
&gt; my initial question was<br>
&gt; &quot;why does ompi_alltoall_f invokes MPI_Alltoall instead of PMPI_Alltoall ?&quot;<br>
&gt;<br>
&gt; /* since we share the same source code when building with or without mpi profiling,<br>
&gt; that means we would need to<br>
&gt; #define MPI_Alltoall PMPI_Alltoall<br>
&gt; when ompi is configure&#39;d with --enable-mpi-profile<br>
&gt; */<br>
<br>
I&#39;m guessing that the complexity in the build system to support environments without and with weak symbols (i.e., OS X vs. just about everyone else) have made this get lost over time.<br>
<br>
Can you supply a patch?<br>
<br>
--<br>
Jeff Squyres<br>
<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;jsquyres@cisco.com&#39;)">jsquyres@cisco.com</a><br>
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;devel@open-mpi.org&#39;)">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/08/17897.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/08/17897.php</a><br>
</blockquote></div>

