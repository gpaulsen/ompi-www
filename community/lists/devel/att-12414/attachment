<div dir="ltr">Let me jump in here with a different perspective.<div>First, for those who don&#39;t know me:</div><div>  + I am NOT an OMPI developer</div><div>  + I am NOT an MPI application author either</div>
<div>  + I am a developer of &quot;competing&quot; HPC communications software (GASNet)</div><div>  + I contribute to OMPI mainly by building release candidates on my menagerie of test systems</div><div>
  + I less frequently contribute bug reports and patches (and opinions like this one)</div><div><br></div><div>As a developer myself, I agree that the maintainability problem that Jeff and Craig are trying to address is an important one.</div>

<div><br></div><div>I understand the concerns that Ralph has expressed and Brian has echoed, but I do not fully agree.</div><div><br></div><div><div>I do agree that *if* one picks a scripting language for build-time tasks (configure and/or make), the there should really be only one unless there is a really good motivation for more.  But if I understood, the bigger issue than perl-vs-python is that perl has so far only be required for folks who need to autogen but not for users who just build from a tarball.</div>

</div><div><br></div><div>In my opinion any &quot;user&quot; who is going to build an MPI implementation should be capable of installing the reasonable &quot;build dependencies&quot;, whether it be python 2.x, python 3.x, perl or even tcl.  It is not like one is asking for smalltalk or common lisp.  Additionally, as a &quot;build dependency&quot; the requirement applies only to the OMPI-build host, not to the host(s) used to build the MPI applications, and NOT to the compute nodes.</div>

<div><br></div><div>For the user building sources via RPM or APT packaging for Linux, Fink for MacOS, or ports/packages for BSDs there are already mechanisms for expressing build dependencies in those respective systems.  Everything is just automatic for those users.</div>

<div><br></div><div>Since OMPI already ships all the generated atomics variants in the tarball, there is precedence in support of the alternative of per-generating all the Fortran wrapper variants.  That does NOT address Brian&#39;s strong objection to adding a new language dependency, but moves the language dependency from the end-user to the developer, and hopefully only to those developers who modify the Fortran bindings.</div>

<div><br></div><div>Just my USD 0.02,</div><div>-Paul</div><div><br></div><div><br></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Wed, May 22, 2013 at 10:47 AM, Barrett, Brian W <span dir="ltr">&lt;<a href="mailto:bwbarre@sandia.gov" target="_blank">bwbarre@sandia.gov</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">On 5/22/13 9:35 AM, &quot;Ralph Castain&quot; &lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt; wrote:<br>


<br>
&gt;* this isn&#39;t about Craig and his abilities - this is a more general<br>
&gt;requirements discussion. I personally wouldn&#39;t change my comments if it<br>
&gt;was Jeff or Brian making the request - the issue remains the same.<br>
&gt;Introducing another language requirement on the<br>
&gt; user-level build isn&#39;t a minor issue. Just because someone knows a<br>
&gt;language seems a weak argument - I had to learn perl to work on the build<br>
&gt;system too. The differences aren&#39;t that huge, and the barrier isn&#39;t that<br>
&gt;high.<br>
<br>
What Ralph said.  My objections are largely to introducing another<br>
language dependency (we should strive to keep these as small in number as<br>
possible).  As I said, I&#39;m strongly against using Python in the build<br>
system (unless we replace all Perl with Python, which I doubt anyone wants<br>
to deal with).  I have a slight preference for not using non-Bourne Shell<br>
things in the configure / make stages, but that&#39;s not anywhere near as<br>
strong as the dislike of adding new languages to support in the build<br>
system.<br>
<br>
Brian<br>
<br>
--<br>
  Brian W. Barrett<br>
  Scalable System Software Group<br>
  Sandia National Laboratories<br>
<br>
<br>
<br>
<br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</blockquote></div><br><br clear="all"><div><br></div>-- <br><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div>

<div>Future Technologies Group</div><div>Computer and Data Sciences Department     Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352" target="_blank">+1-510-495-2352</a></div><div>Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900" target="_blank">+1-510-486-6900</a></div>
</font>
</div></div>

