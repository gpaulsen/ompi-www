<html><head><meta http-equiv="Content-Type" content="text/html charset=iso-8859-1"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;">Just for clarification: are you proposing that we *require* every component that links against an external library to include these parameters? If so, that seems a significant requirement as quite a few of our components do so.<div><br></div><div>On the other hand, if you are proposing that those component developers who choose to expose such information do so using the suggested syntax, then that is a different proposal.</div><div><br></div><div>Just want to understand what you are proposing - a requirement on components, or a syntax for those who choose to support this capability?</div><div><br></div><div>FWIW: we do not (and cannot, for licensing reasons) link against Slurm, so please don't include it in such lists to avoid giving anyone even a passing thought that we do so.</div><div><br></div><div><br></div><div><br></div><div><div><div>On Apr 23, 2014, at 10:38 PM, Mike Dubman &lt;<a href="mailto:miked@dev.mellanox.co.il">miked@dev.mellanox.co.il</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div dir="ltr"><br><div>WHAT:</div><div>* Formalize well-known MCA parameters that can be used by any component to represent external dependencies for this component.&nbsp;</div><div><br></div><div>* Component can set that well-known MCA r/o parameters to expose to the end-users different setup related traits of the OMPI installation.</div>
<div><br></div><div>Example:</div><div><br></div><div>ompi_info can print for every component which depends on external library:</div><div>- ext lib runtime version used by component</div><div>- ext lib compiletime version used by component</div>
<div><br></div><div>slurm: v2.6.6</div><div>mtl/mxm: v2.5</div><div>btl/verbs: v3.2</div><div>btl/usnic: v1.1</div><div>coll/fca: v2.5</div><div>...</div><div><br></div><div>End-user or site admin or OMPI vendor can aggregate this information by some script and generate report if given installation compiles with site/vendor rules.</div>
<div><br></div><div>* The "well-known" mca parameters can be easily extracted from ALL components by grep-like utilities.</div><div><br></div><div>* Current proposal:</div><div><br></div><div>** prefix each well-known MCA param with "print_":</div>
<div>** Define two well-known mca parameters indicating external library runtime and compiletime versions, i.e.:</div><div>&nbsp;</div><div>print_compiletime_version</div><div>print_runtime_version</div><div><br></div><div>The following command will show all exposed well-known mca params from all components:</div>
<div>ompi_info --parsable -l 9 |grep ":print_"</div><div><br></div><div><br></div><div>WHY:</div><div><br></div><div>* Better support-ability: site/vendor can provide script which will check if OMPI installation complies to release notes or support matrix.</div>
<div><br></div><div><br></div><div>WHEN:</div><div><br></div><div>- Next teleconf</div><div>- code can be observed here: <a href="https://svn.open-mpi.org/trac/ompi/ticket/4556">https://svn.open-mpi.org/trac/ompi/ticket/4556</a></div>
<div>&nbsp;&nbsp;</div><div><br></div><div>Comments?</div></div>
_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/devel<br>Link to this post: http://www.open-mpi.org/community/lists/devel/2014/04/14590.php</blockquote></div><br></div></body></html>
