<div dir="ltr">According to <a href="http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html">http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html</a><br><div><code><i><br>&quot;constructor </i></code><i><code><br>
 destructor </code><var></var><code></code></i><code></code><i><code></code></i><br><dl><dt><code><i> constructor (</i></code><var>priority</var><i><code>)</code></i></dt><dt><i><code> destructor (</code><var>priority</var><code>)</code></i></dt>
<dd><i><a name="index-g_t_0040code_007bconstructor_007d-function-attribute-2881"></a><a name="index-g_t_0040code_007bdestructor_007d-function-attribute-2882"></a>The <code>constructor</code> attribute causes the function to be called
automatically before execution enters <code>main ()</code>.  Similarly, the
<code>destructor</code> attribute causes the function to be called
automatically after <code>main ()</code> completes or <code>exit ()</code> is
called.  Functions with these attributes are useful for
initializing data that is used implicitly during the execution of
the program.

     </i><p><i>You may provide an optional integer priority to control the order in
which constructor and destructor functions are run.  A constructor
with a smaller priority number runs before a constructor with a larger
priority number; the opposite relationship holds for destructors.  So,
if you have a constructor that allocates a resource and a destructor
that deallocates the same resource, both functions typically have the
same priority.  The priorities for constructor and destructor
functions are the same as those specified for namespace-scope C++
objects (see <a href="http://gcc.gnu.org/onlinedocs/gcc/C_002b_002b-Attributes.html#C_002b_002b-Attributes">C++ Attributes</a>).

     </i></p><p><i>These attributes are not currently implemented for Objective-C.&quot;</i></p></dd></dl><br></div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Jul 15, 2014 at 5:20 PM, Paul Hargrove <span dir="ltr">&lt;<a href="mailto:phhargrove@lbl.gov" target="_blank">phhargrove@lbl.gov</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div class=""><div class="gmail_extra"><br><div class="gmail_quote">On Tue, Jul 15, 2014 at 12:49 PM, Pritchard, Howard r <span dir="ltr">&lt;<a href="mailto:howardp@lanl.gov" target="_blank">howardp@lanl.gov</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div style="overflow:hidden">I don&#39;t think there&#39;s anything wrong with using ctor/dtors in shared libraries,<br>


but one does need to make sure that in these functions there&#39;s no assumptions<br>
about ordering of them wrt to other ctors/dtors.</div></blockquote></div><div class="gmail_extra"><br></div></div></div><div class="gmail_extra">The ELF specification is clear that the order of execution of DT_INIT and DT_FINI entries is undefined.<br>

</div><div class="gmail_extra">The .ctors and .dtors sections typically used by the GNU toolchain are, I believe, not part of any formal linker specification.</div><div class="gmail_extra">So, I agree w/ Howard that one must take care not to assume anything about order.</div>
<span class="HOEnZb"><font color="#888888">
<div class="gmail_extra"><br></div><div class="gmail_extra">-Paul<br><br clear="all"><div><br></div>-- <br><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div>

<div>Future Technologies Group</div><div>Computer and Data Sciences Department     Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352" target="_blank">+1-510-495-2352</a></div><div>Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900" target="_blank">+1-510-486-6900</a></div>
</font>
</div></font></span></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/07/15153.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/07/15153.php</a><br></blockquote></div><br></div>

