<HTML>
<HEAD>
<TITLE>Re: [OMPI devel] matching code rewrite in OB1</TITLE>
</HEAD>
<BODY>
<FONT FACE="Verdana, Helvetica, Arial"><SPAN STYLE='font-size:12.0px'>Gleb,<BR>
&nbsp;&nbsp;Needless to say (for the nth time :-) ) that changing this bit of code makes me<BR>
&nbsp;nervous. &nbsp;However, it occurred to me that there is a much better way to test<BR>
&nbsp;this code than setting up an environment that generates some out of order<BR>
&nbsp;events with out us being able to specify the order.<BR>
&nbsp;&nbsp;Since this routine is executed serially, it should be sufficient to set up a test<BR>
&nbsp;code that would simulate any out-of-order scenario we want. &nbsp;If one specifies<BR>
&nbsp;number of &#8220;messages&#8221; to be &#8220;sent&#8221;, and &#8220;randomly&#8221; changes the order they<BR>
&nbsp;arrive (e.g. scramble some input vector), one can check and see if the messages<BR>
&nbsp;are &#8220;received&#8221; in the correct order. &nbsp;One could even &#8220;drop&#8221; messages and see<BR>
&nbsp;if matching stops. &nbsp;Using a test code like this, and a code coverage tool, one<BR>
&nbsp;should be able to get much better testing that we have to date.<BR>
&nbsp;&nbsp;What would you think about doing something like this ? &nbsp;&nbsp;Seems like a few hours<BR>
&nbsp;of this sort of simulation would be much better than even years of testing and<BR>
&nbsp;relying on random fluctuations in the run to thoroughly test out-of-order scenarios.<BR>
<BR>
What do you think ?<BR>
Rich<BR>
<BR>
<BR>
On 12/17/07 8:32 AM, &quot;Gleb Natapov&quot; &lt;glebn@voltaire.com&gt; wrote:<BR>
<BR>
</SPAN></FONT><BLOCKQUOTE><FONT FACE="Verdana, Helvetica, Arial"><SPAN STYLE='font-size:12.0px'>On Thu, Dec 13, 2007 at 08:04:21PM -0500, Richard Graham wrote:<BR>
&gt; Yes, should be a bit more clear. &nbsp;Need an independent way to verify that<BR>
&gt; data is matched<BR>
&gt; &nbsp;in the correct order &#8211; sending this information as payload is one way to do<BR>
&gt; this. &nbsp;So,<BR>
&gt; &nbsp;sending unique data in every message, and making sure that it arrives in<BR>
&gt; the user buffers<BR>
&gt; &nbsp;in the expected order is a way to do this.<BR>
<BR>
Did that. Encoded sequence number in a payload and sent many eager<BR>
packets from one rank to another. Many packets were reoredered, but<BR>
application received everything in a correct order.<BR>
<BR>
--<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gleb.<BR>
<BR>
_______________________________________________<BR>
devel mailing list<BR>
devel@open-mpi.org<BR>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
<BR>
</SPAN></FONT></BLOCKQUOTE><FONT FACE="Verdana, Helvetica, Arial"><SPAN STYLE='font-size:12.0px'><BR>
</SPAN></FONT>
</BODY>
</HTML>


