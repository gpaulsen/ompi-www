<div>Hi George ,</div>
<div>Thank you very much!</div>
<div>i really had saw these functions before ,but it&#39;s a long time ,i can&#39;t find it !</div>
<div>Thank you very much,you save me a lot of time.</div>
<div> </div>
<div>Thanks &amp; Regards,</div>
<div>Yaohui Hu<br><br></div>
<div class="gmail_quote">On Wed, Mar 17, 2010 at 1:28 PM, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@eecs.utk.edu">bosilca@eecs.utk.edu</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="PADDING-LEFT: 1ex; MARGIN: 0px 0px 0px 0.8ex; BORDER-LEFT: #ccc 1px solid">Yaohui,<br><br>The callback functions are registered by any modules that can handle network communications. In your specific case I would guess it is the PML. Look in mca/pml/ob1/pml_ob1.c starting from line 364 to see what callbacks are registered by OB1.<br>
<font color="#888888"><br> george.<br></font>
<div>
<div></div>
<div class="h5"><br>On Mar 17, 2010, at 01:22 , hu yaohui wrote:<br><br>&gt; Hi Geogre,<br>&gt; Thank you very much!<br>&gt; i know ,it&#39;s really a receive callback in this send function mca_btl_self_send,what i want to know is where  this callback function(line 303).<br>
&gt; &lt;snip&gt;<br>&gt; 303    reg = mca_btl_base_active_message_trigger + tag;<br>&gt; 304    reg-&gt;cbfunc( btl, tag, des, reg-&gt;cbdata );<br>&gt; &lt;/snip&gt;<br>&gt; mapped to,where this function is <a href="http://initialized.in/" target="_blank">initialized.in</a> which file,which function,the mca_bml_r2_register was called.<br>
&gt;<br>&gt; Thanks &amp; Regards<br>&gt; Yaohui<br>&gt;<br>&gt; On Wed, Mar 17, 2010 at 12:42 PM, George Bosilca &lt;<a href="mailto:bosilca@eecs.utk.edu">bosilca@eecs.utk.edu</a>&gt; wrote:<br>&gt; Yoahui,<br>&gt;<br>&gt; The self component is special. While is does behave as a &quot;normal&quot; BTL, it takes a lot of shortcuts as all operations are in the memory of a single process. However, as the simplest BTLs in Open MPI, I guess it is a good starting point.<br>
&gt;<br>&gt; As stated previously, the self BTL exhibit a lot of differences compared with the others BTL. For your case, in the self BTL the send function trigger the receiver callback, as there is other simple way to drain the &quot;network&quot;. This explain why we compute the btl_active_message_callback_t directly in the send function. Usually, this is done on the progress function, once some data have been extracted from the network. Basically, everything in the mca_btl_self_send function starting from the &quot;/* upcall */&quot; comment is the receive operation.<br>
&gt;<br>&gt;  george.<br>&gt;<br>&gt; On Mar 17, 2010, at 00:30 , hu yaohui wrote:<br>&gt;<br>&gt; &gt; Hi George,<br>&gt; &gt; what i want to do is to modify the self component to meet my needs,i just want to modify the send function of the self component to test whether my implemented send function ,which based on some emulation platform, is right.so i copied all the self component code,modified the component name to mine ,the i wanted to subsitude its send and receive to my implemented send/receive function.i dont know whether this is right,if not ,or you need more information ,please let me know.<br>
&gt; &gt;<br>&gt; &gt; Thanks &amp; Regards<br>&gt; &gt; Yaohui Hu .<br>&gt; &gt;<br>&gt; &gt; On Wed, Mar 17, 2010 at 12:05 PM, George Bosilca &lt;<a href="mailto:bosilca@eecs.utk.edu">bosilca@eecs.utk.edu</a>&gt; wrote:<br>
&gt; &gt; Yaohui,<br>&gt; &gt;<br>&gt; &gt; The whole infrastructure at the level where you&#39;re looking is similar to Active Messages. The register function is used to register callback for a specific tag. A tag is a uint8_t, and thus there are 256 callbacks possible. However, there are some rules regarding which level is allowed to register callbacks in a specific range, in order to avoid conflict between several modules loaded in same time.<br>
&gt; &gt;<br>&gt; &gt; Anyway, as far as I understood you&#39;re looking at writing a new BTL. Every time a message is drained from the network, the BTL is supposed to know that tag it was send to and trigger the corresponding callback (this only on the receiver side). How this &quot;tag&quot; is moved around depends on the BTL capabilities. Some will have to push it explicitly through the network (TCP as an example), while others have other means to move it around (for MX this tag is part of the 64 bits key used for each message). Therefore, the first thing you should make sure is that you really have a way to retrieve this tag on the receiver side. Once you have the tag and the content of the message, you should call the callback corresponding to the tag (using the simple addition you noticed), and pass the correct arguments. This should at least let you start the eager protocol.<br>
&gt; &gt;<br>&gt; &gt;  george.<br>&gt; &gt;<br>&gt; &gt; On Mar 16, 2010, at 23:22 , hu yaohui wrote:<br>&gt; &gt;<br>&gt; &gt; &gt; Hi Jeff &amp; All<br>&gt; &gt; &gt; Yes,you are right,i was just a little dizzy then. i need to modify the send function of component self in btl framework.<br>
&gt; &gt; &gt; i just met a problem right now.<br>&gt; &gt; &gt; when i browse the function mca_btl_self_send(~/ompi/mca/btl/self/btl_self.c),i think it use this to send the data<br>&gt; &gt; &gt; &lt;snip&gt;<br>&gt; &gt; &gt; 303    reg = mca_btl_base_active_message_trigger + tag;<br>
&gt; &gt; &gt; 304    reg-&gt;cbfunc( btl, tag, des, reg-&gt;cbdata );<br>&gt; &gt; &gt; &lt;/snip&gt;<br>&gt; &gt; &gt; i trace through the &quot;mca_btl_base_active_message_trigger&quot; to the function where it get its value ,then i find function mca_bml_r2_register(~/ompi/mca/bml/bml_r2.c),it like this:<br>
&gt; &gt; &gt; &lt;snip&gt;<br>&gt; &gt; &gt; 728    mca_btl_base_active_message_trigger[tag].cbfunc = cbfunc;<br>&gt; &gt; &gt; 729    mca_btl_base_active_message_trigger[tag].cbdata = data;<br>&gt; &gt; &gt; &lt;snip&gt;<br>
&gt; &gt; &gt; when i trace through mca_bml_r2_register ,in the same file,i get this structure:<br>&gt; &gt; &gt; &lt;snip&gt;<br>&gt; &gt; &gt; mca_bml_r2_module_t mca_bml_r2 = {<br>&gt; &gt; &gt;     {<br>&gt; &gt; &gt;         &amp;mca_bml_r2_component,<br>
&gt; &gt; &gt;         mca_bml_r2_add_procs,<br>&gt; &gt; &gt;         mca_bml_r2_del_procs,<br>&gt; &gt; &gt;         mca_bml_r2_add_btl,<br>&gt; &gt; &gt;         mca_bml_r2_del_btl,<br>&gt; &gt; &gt;         mca_bml_r2_del_proc_btl,<br>
&gt; &gt; &gt;         mca_bml_r2_register, &lt;------------------------------------<br>&gt; &gt; &gt;         mca_bml_r2_register_error,<br>&gt; &gt; &gt;         mca_bml_r2_finalize,<br>&gt; &gt; &gt;         mca_bml_r2_ft_event<br>
&gt; &gt; &gt;     }<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; };<br>&gt; &gt; &gt; &lt;snip&gt;<br>&gt; &gt; &gt; after this ,i find the place where mca_bml_r2 is initialized,but i cannt find anything related to mca_bml_r2_register.i just want to know reg = mca_btl_base_active_message_trigger + tag;<br>
&gt; &gt; &gt; really is.and i want to modify the send function of self ,is this the right way? or you can tell me the right way to modify the send function of self component.<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; Thanks &amp; Regards<br>
&gt; &gt; &gt; Yaohui Hu<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; On Wed, Mar 17, 2010 at 12:52 AM, Jeff Squyres &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>&gt; &gt; &gt; On Mar 16, 2010, at 9:45 AM, hu yaohui wrote:<br>
&gt; &gt; &gt;<br>&gt; &gt; &gt; &gt; it just said,i had a wrong command format,when i use mpirun --help,i really<br>&gt; &gt; &gt; &gt; didn&#39;t find the --mca parameter.why the tcp FAQ part list these command lines,<br>
&gt; &gt; &gt; &gt; but it cann&#39;t execute successfully on my machine.Is there any another way to control the specific<br>&gt; &gt; &gt; &gt; btl components to be used?<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; Make sure you&#39;re using the right mpirun -- you might have multiple installed on your machine.<br>
&gt; &gt; &gt;<br>&gt; &gt; &gt; OMPI&#39;s &quot;mpirun --help&quot; definitely includes a description of the --mca parameter:<br>&gt; &gt; &gt;<br>&gt; &gt; &gt;   -mca|--mca &lt;arg0&gt; &lt;arg1&gt;<br>&gt; &gt; &gt;                         Pass context-specific MCA parameters; they are<br>
&gt; &gt; &gt;                         considered global if --gmca is not used and only<br>&gt; &gt; &gt;                         one context is specified (arg0 is the parameter<br>&gt; &gt; &gt;                         name; arg1 is the parameter value)<br>
&gt; &gt; &gt;<br>&gt; &gt; &gt; --<br>&gt; &gt; &gt; Jeff Squyres<br>&gt; &gt; &gt; <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>&gt; &gt; &gt; For corporate legal information go to:<br>&gt; &gt; &gt; <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
&gt; &gt; &gt;<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; _______________________________________________<br>&gt; &gt; &gt; devel mailing list<br>&gt; &gt; &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>&gt; &gt; &gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; &gt; &gt;<br>&gt; &gt; &gt; _______________________________________________<br>&gt; &gt; &gt; devel mailing list<br>&gt; &gt; &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>&gt; &gt; &gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; devel mailing list<br>&gt; &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>&gt; &gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; devel mailing list<br>&gt; &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>&gt; &gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; devel mailing list<br>&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;<br>&gt; _______________________________________________<br>&gt; devel mailing list<br>&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
<br><br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br>

