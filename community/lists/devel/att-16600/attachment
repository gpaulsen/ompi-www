<div dir="ltr">I&#39;d prefer Paul&#39;s suggestion to disable xpmem for sgi/uv for 1.8.X<div>Is anyone actually supporting this?<br><div><br></div><div>Howard</div></div></div><div class="gmail_extra"><br><div class="gmail_quote">2014-12-15 8:56 GMT-07:00 Nathan Hjelm <span dir="ltr">&lt;<a href="mailto:hjelmn@lanl.gov" target="_blank">hjelmn@lanl.gov</a>&gt;</span>:<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><br>
Not yet. I am still trying to pinpoint the problem. From what I can tell<br>
the SGI version of XPMEM should be nearly identical to the Cray<br>
version. I should have this figured out this week. If I don&#39;t get it<br>
fixed by Wed I will open a pull request to remove the check for<br>
sn/xpmem.h.<br>
<br>
-Nathan<br>
<br>
On Fri, Dec 12, 2014 at 07:50:11PM -0800, Ralph Castain wrote:<br>
&gt; Nathan - does this need to come to 1.8.4? Or do you want to go with Paul’s suggested fix?<br>
&gt;<br>
&gt; &gt; On Dec 12, 2014, at 8:09 AM, <a href="mailto:gitdub@crest.iu.edu">gitdub@crest.iu.edu</a> wrote:<br>
&gt; &gt;<br>
&gt; &gt; This is an automated email from the git hooks/post-receive script. It was<br>
&gt; &gt; generated because a ref change was pushed to the repository containing<br>
&gt; &gt; the project &quot;open-mpi/ompi&quot;.<br>
&gt; &gt;<br>
&gt; &gt; The branch, master has been updated<br>
&gt; &gt;       via  38d66272c51fd531181d9dc282a7260f40270f64 (commit)<br>
&gt; &gt;      from  f4aecdbfd22a74feadab5566d2d595b65be4a8cb (commit)<br>
&gt; &gt;<br>
&gt; &gt; Those revisions listed above that are new to this repository have<br>
&gt; &gt; not appeared on any other notification email; so we list those<br>
&gt; &gt; revisions in full, below.<br>
&gt; &gt;<br>
&gt; &gt; - Log -----------------------------------------------------------------<br>
&gt; &gt; <a href="https://github.com/open-mpi/ompi/commit/38d66272c51fd531181d9dc282a7260f40270f64" target="_blank">https://github.com/open-mpi/ompi/commit/38d66272c51fd531181d9dc282a7260f40270f64</a><br>
&gt; &gt;<br>
&gt; &gt; commit 38d66272c51fd531181d9dc282a7260f40270f64<br>
&gt; &gt; Author: Nathan Hjelm &lt;<a href="mailto:hjelmn@lanl.gov">hjelmn@lanl.gov</a>&gt;<br>
&gt; &gt; Date:   Fri Dec 12 09:09:01 2014 -0700<br>
&gt; &gt;<br>
&gt; &gt;    btl/vader: fix compile on SGI UV<br>
&gt; &gt;<br>
&gt; &gt; diff --git a/opal/mca/btl/vader/btl_vader_component.c b/opal/mca/btl/vader/btl_vader_component.c<br>
&gt; &gt; index 7061612..aabf03d 100644<br>
&gt; &gt; --- a/opal/mca/btl/vader/btl_vader_component.c<br>
&gt; &gt; +++ b/opal/mca/btl/vader/btl_vader_component.c<br>
&gt; &gt; @@ -354,9 +354,8 @@ static void mca_btl_vader_check_single_copy (void)<br>
&gt; &gt; #if OPAL_BTL_VADER_HAVE_XPMEM<br>
&gt; &gt;     if (MCA_BTL_VADER_XPMEM == mca_btl_vader_component.single_copy_mechanism) {<br>
&gt; &gt;         /* try to create an xpmem segment for the entire address space */<br>
&gt; &gt; -        mca_btl_vader_component.my_seg_id = xpmem_make (0, VADER_MAX_ADDRESS, XPMEM_PERMIT_MODE, (void *)0666);<br>
&gt; &gt; -<br>
&gt; &gt; -        if (-1 == mca_btl_vader_component.my_seg_id) {<br>
&gt; &gt; +        rc = mca_btl_vader_xpmem_init ();<br>
&gt; &gt; +        if (OPAL_SUCCESS != rc) {<br>
&gt; &gt;             if (MCA_BTL_VADER_XPMEM == initial_mechanism) {<br>
&gt; &gt;                 opal_show_help(&quot;help-btl-vader.txt&quot;, &quot;xpmem-make-failed&quot;,<br>
&gt; &gt;                                true, opal_process_info.nodename, errno,<br>
&gt; &gt; @@ -364,11 +363,7 @@ static void mca_btl_vader_check_single_copy (void)<br>
&gt; &gt;             }<br>
&gt; &gt;<br>
&gt; &gt;             mca_btl_vader_select_next_single_copy_mechanism ();<br>
&gt; &gt; -        } else {<br>
&gt; &gt; -            mca_btl_vader.super.btl_get = mca_btl_vader_get_xpmem;<br>
&gt; &gt; -            mca_btl_vader.super.btl_put = mca_btl_vader_get_xpmem;<br>
&gt; &gt;         }<br>
&gt; &gt; -<br>
&gt; &gt;     }<br>
&gt; &gt; #endif<br>
&gt; &gt;<br>
&gt; &gt; diff --git a/opal/mca/btl/vader/btl_vader_xpmem.c b/opal/mca/btl/vader/btl_vader_xpmem.c<br>
&gt; &gt; index 7e362ea..4bb9a3b 100644<br>
&gt; &gt; --- a/opal/mca/btl/vader/btl_vader_xpmem.c<br>
&gt; &gt; +++ b/opal/mca/btl/vader/btl_vader_xpmem.c<br>
&gt; &gt; @@ -19,6 +19,19 @@<br>
&gt; &gt;<br>
&gt; &gt; #if OPAL_BTL_VADER_HAVE_XPMEM<br>
&gt; &gt;<br>
&gt; &gt; +int mca_btl_vader_xpmem_init (void)<br>
&gt; &gt; +{<br>
&gt; &gt; +    mca_btl_vader_component.my_seg_id = xpmem_make (0, VADER_MAX_ADDRESS, XPMEM_PERMIT_MODE, (void *)0666);<br>
&gt; &gt; +    if (-1 == mca_btl_vader_component.my_seg_id) {<br>
&gt; &gt; +        return OPAL_ERR_NOT_AVAILABLE;<br>
&gt; &gt; +    }<br>
&gt; &gt; +<br>
&gt; &gt; +    mca_btl_vader.super.btl_get = mca_btl_vader_get_xpmem;<br>
&gt; &gt; +    mca_btl_vader.super.btl_put = mca_btl_vader_get_xpmem;<br>
&gt; &gt; +<br>
&gt; &gt; +    return OPAL_SUCCESS;<br>
&gt; &gt; +}<br>
&gt; &gt; +<br>
&gt; &gt; /* look up the remote pointer in the peer rcache and attach if<br>
&gt; &gt;  * necessary */<br>
&gt; &gt; mca_mpool_base_registration_t *vader_get_registation (struct mca_btl_base_endpoint_t *ep, void *rem_ptr,<br>
&gt; &gt; diff --git a/opal/mca/btl/vader/btl_vader_xpmem.h b/opal/mca/btl/vader/btl_vader_xpmem.h<br>
&gt; &gt; index 1be188a..e040e26 100644<br>
&gt; &gt; --- a/opal/mca/btl/vader/btl_vader_xpmem.h<br>
&gt; &gt; +++ b/opal/mca/btl/vader/btl_vader_xpmem.h<br>
&gt; &gt; @@ -22,6 +22,7 @@<br>
&gt; &gt;   #include &lt;sn/xpmem.h&gt;<br>
&gt; &gt;<br>
&gt; &gt;   typedef int64_t xpmem_segid_t;<br>
&gt; &gt; +  typedef int64_t xpmem_apid_t;<br>
&gt; &gt; #endif<br>
&gt; &gt;<br>
&gt; &gt; /* look up the remote pointer in the peer rcache and attach if<br>
&gt; &gt; @@ -30,6 +31,8 @@<br>
&gt; &gt; /* largest address we can attach to using xpmem */<br>
&gt; &gt; #define VADER_MAX_ADDRESS ((uintptr_t)0x7ffffffff000ul)<br>
&gt; &gt;<br>
&gt; &gt; +int mca_btl_vader_xpmem_init (void);<br>
&gt; &gt; +<br>
&gt; &gt; mca_mpool_base_registration_t *vader_get_registation (struct mca_btl_base_endpoint_t *endpoint, void *rem_ptr,<br>
&gt; &gt;                                                   size_t size, int flags, void **local_ptr);<br>
&gt; &gt;<br>
&gt; &gt;<br>
&gt; &gt;<br>
&gt; &gt; -----------------------------------------------------------------------<br>
&gt; &gt;<br>
&gt; &gt; Summary of changes:<br>
&gt; &gt; opal/mca/btl/vader/btl_vader_component.c |  9 ++-------<br>
&gt; &gt; opal/mca/btl/vader/btl_vader_xpmem.c     | 13 +++++++++++++<br>
&gt; &gt; opal/mca/btl/vader/btl_vader_xpmem.h     |  3 +++<br>
&gt; &gt; 3 files changed, 18 insertions(+), 7 deletions(-)<br>
&gt; &gt;<br>
&gt; &gt;<br>
&gt; &gt; hooks/post-receive<br>
&gt; &gt; --<br>
&gt; &gt; open-mpi/ompi<br>
&gt; &gt; _______________________________________________<br>
&gt; &gt; ompi-commits mailing list<br>
&gt; &gt; <a href="mailto:ompi-commits@open-mpi.org">ompi-commits@open-mpi.org</a><br>
&gt; &gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/ompi-commits" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/ompi-commits</a><br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/12/16581.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/12/16581.php</a><br>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/12/16599.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/12/16599.php</a><br></blockquote></div></div>

