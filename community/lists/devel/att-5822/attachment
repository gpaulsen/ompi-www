Yeah, that seemed to do the trick, thank you. I&#39;m curious though, is there a constant somewhere in code that indicates what the maximum size the PML header can be? I appreciate it&#39;s 32 right now, but I never feel right just hard coding that in.<br>
<br><div class="gmail_quote">2009/4/13 George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@eecs.utk.edu">bosilca@eecs.utk.edu</a>&gt;</span><br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<div class="im"><br>
On Apr 12, 2009, at 21:58 , Timothy Hayes wrote:<br>
<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
I was wondering if someone might be able to shed some light on a couple of questions I have.<br>
<br>
When you receive a fragment/base_descriptor in a BTL module, is the raw data allowed to be fragmented when you invoke the callback function? By that I mean, I&#39;m using a circular buffer in each endpoint so sometimes data loops back around. Currently I&#39;m doing a two step copy: from my socket to the circular buffer and then from the circular buffer to the fragment. This actually effects my total throughput quite a bit, it would be much nicer to just point to the buffer instead. When I tried using two base_segments to point to the start and end of buffer I got some pretty strange errors. I&#39;m just wondering if someone could confirm or deny that you can or can&#39;t do this, maybe those errors were down to human error instead.<br>

</blockquote>
<br></div>
On the descriptor you can set a number of iovec containing the raw data. You don&#39;t have to make it contiguous prior to calling up in the PML. I think the PML header has to be contiguous, so you have to make sure that the first 32 bytes of the message are contiguous.<div class="im">
<br>
<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
 My other question is about the BTL failover system. Would someone be able to briefly explain how it works or maybe point me to some docs? I&#39;m actually expecting the file descriptors in my module to fail a certain point during an Open MPI job and I&#39;d like my BTL module to fail gracefully and allow the TCP module to take over in its place. I&#39;m not sure how to explicitly make the the BTL module say to the rest of Open MPI &quot;don&#39;t use my anymore&quot; though.<br>

</blockquote>
<br></div>
There is no way to say don&#39;t use me &quot;at all&quot; anymore. This is per peer based, so you will have to return an error on every peer. Try returning OMPI_ERR_OUT_OF_RESOURCE from all functions that allocate descriptors (_alloc, _prepare_src and _prepare_dst), and the PML will end-up removing this BTL from the list.<br>

<br>
  george.<br>
<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<br>
Happy Easter<br>
Tim<br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</blockquote>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
<br>
</blockquote></div><br>

