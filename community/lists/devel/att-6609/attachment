Given the limited scope, would it make sense to somehow add this to the trace library (or a separate debug lib) - i.e., can we do it via a lib that inserts itself between the MPI binding and PMPI call? I would hate to duplicate the code in something like sendrecv, but I wonder if we could refactor that to allow for this added capability.<br>
<br>Just a thought. It would allow someone to switch back-and-forth without recompiling or switching MPI modules.<br><br><br><div class="gmail_quote">On Sat, Aug 8, 2009 at 6:03 AM, Jeff Squyres <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">WHAT: MCA parameter for converting all standard mode MPI sends to synchronous mode sends<br>

<br>
WHY: helpful in debugging user apps<br>
<br>
WHERE: here&#39;s the output from &quot;svn st&quot;<br>
<br>
M       ompi/runtime/params.h<br>
M       ompi/runtime/ompi_mpi_params.c<br>
M       ompi/mpi/c/send.c<br>
M       ompi/mpi/c/send_init.c<br>
M       ompi/mpi/c/sendrecv.c<br>
M       ompi/mpi/c/isend.c<br>
<br>
WHEN: could be 1.3.4, could be 1.5 -- don&#39;t really care which (there&#39;s no rush)<br>
<br>
TIMEOUT: COB Friday 14 Aug 2009<br>
<br>
More details:<br>
<br>
A feature we&#39;ve long talked about is having an MCA parameter to switch all standard mode MPI sends to synchronous mode sends (MPI_SEND, MPI_ISEND, MPI_SEND_INIT, MPI_SENDRECV).  This helps users identify that their application relies on internal MPI buffering.<br>

<br>
Sam from LANL took a crack at implementing this; attached is the patch.<br>
<br>
The only concern I have about this patch (echoed by Brian to me in IM) is that it replaces a compile-time constant with a variable lookup in the critical performance code path -- we have to look up the value of a new global variable during MPI_SEND to determine if the send is going to be _SEND_STANDARD or _SEND_SYNCHRONOUS.  This could cause a cache miss.<br>

<br>
Brian suggested making this stuff compile-out-able via some --configure-cmd-line-switch, similar to how the MPI parameter checking stuff is done (i.e., configure specifies either: always force sync, never force sync, or force to sync based on an MCA parameter value at runtime).  This is certainly do-able.  However, I&#39;m sending this RFC just in case anyone can think of a better way.  Having a compile-time option to effectively remove this capability works fine, but it does reduce the usability of this feature: you effectively have to link your app against a different libmpi.so in order to turn it on.<br>

<br>
Does anyone have any suggestions?  Or are we stuck with compile-time checking?<br>
<br>
Thanks.<br><font color="#888888">
<br>
-- <br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a><br>
</font><br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></blockquote></div><br>

