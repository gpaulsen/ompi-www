<div dir="ltr"><br><div class="gmail_extra"><br><div class="gmail_quote">On Thu, Jun 25, 2015 at 5:05 PM, Paul Hargrove <span dir="ltr">&lt;<a href="mailto:phhargrove@lbl.gov" target="_blank">phhargrove@lbl.gov</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div dir="ltr"><div class="gmail_extra"><span class=""><br><div class="gmail_quote">On Thu, Jun 25, 2015 at 4:59 PM, Gilles Gouaillardet <span dir="ltr">&lt;<a href="mailto:gilles@rist.or.jp" target="_blank">gilles@rist.or.jp</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div bgcolor="#FFFFFF" text="#000000">In this case, mca_coll_hcoll module is linked with the proprietary
    libhcoll.so.<br>
    the ml symbols are defined in both mca_coll_ml.so and libhcoll.so<br>
    i am not sure (i blame my poor understanding of linkers) this is an
    error if<br>
    Open MPI is configure&#39;d with --disable-dlopen</div></blockquote></div><br><br></span>I will run the test now on a system w/ Mellanox&#39;s libhcoll and report what I find.</div></div></blockquote><div><br></div><div><br></div><div>Gilles,</div><div><br></div><div>I had originally missed the fact that the conflicts were between Open MPI code and &quot;vendor code&quot;.</div><div>Otherwise I don&#39;t think I&#39;d have put forward the --disable-dlopen suggestion. </div><div>However, as promised I tried the experiment.</div><div><br></div><div>I find that having both coll:ml and coll:hcoll in a --disable-dlopen build this does NOT result in failures linking libmpi nor in linking an MPI application.  So, having Jenkins (for instance) testing in this way would not have exposed this problem.</div><div><br></div><div>To sure I was testing what I thought I was:</div><div><br></div><div>I did confirm that I get a SEGV running hello_c (from the examples subdir) unless I use &quot;-mca coll ^hcoll&quot;.</div><div><br></div><div>I tried using &quot;-mca coll ^ml&quot; but still get a SEGV that appears to show coll:hcoll invoking functions in coll_ml_module.c, just as I do with no mca options at all.</div><div><br></div><div>Note I did this all with the released 1.8.6 tarball.</div><div><br></div><div>-Paul</div><div><br></div></div><div><br></div>-- <br><div class="gmail_signature"><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: +1-510-495-2352</div><div>Lawrence Berkeley National Laboratory     Fax: +1-510-486-6900</div></font></div></div></div>
</div></div>

