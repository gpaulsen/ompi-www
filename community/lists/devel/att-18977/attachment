At first glance, that seems a bit odd...<div>are you sure you correctly print the reachable bitmap ?</div><div>I would suggest you add some instrumentation to understand what happens</div><div>(e.g., printf before opal_bitmap_set_bit() and other places that prevent this from happening)</div><div><br></div><div>one more thing ...</div><div>now, master default behavior is</div><div>mpirun --mca mpi_add_procs_cutoff 0 ...</div><div>you might want to try</div><div>mpirun --mca mpi_add_procs_cutoff 1024 ...</div><div>and see if things make more sense.</div><div>if it helps, and iirc, there is a parameter so a btl can report it does not support cutoff.</div><div><br></div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles<br><br>On Sunday, May 15, 2016, dpchoudh . &lt;<a href="mailto:dpchoudh@gmail.com">dpchoudh@gmail.com</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div><div><div><div><div><div><div><div><div>Hello <span name="Gilles Gouaillardet">Gilles<br><br></span></div><span name="Gilles Gouaillardet">Thanks for jumping in to help again. Actually, I had already tried some of your suggestions before asking for help.<br><br></span></div><span name="Gilles Gouaillardet">I have several interconnects that can run both openib and tcp BTL. To simplify things, I explicitly mentioned TCP:<br><br></span></div><span name="Gilles Gouaillardet">mpirun -np 2 -hostfile ~/hostfile -mca pml ob1 -mca btl self.tcp ./mpitest<br><br></span></div><span name="Gilles Gouaillardet">where mpitest is a small program that does MPI_Send()/MPI_Recv() on a small string, and then does an MPI_Barrier(). The program does work as expected.<br><br></span></div><span name="Gilles Gouaillardet">I put a printf on the last line of mca_tcp_add_procs() to print the value of &#39;reachable&#39;. What I saw was that the value was always 0 when it was invoked for Send()/Recv() and the pointer itself was NULL when invoked for Barrier()<br><br></span></div><span name="Gilles Gouaillardet">Next I looked at pml_ob1_add_procs(), where the call chain starts, and found that it initializes and passes an opal_bitmap_t reachable down the call chain, but the resulting value is not used later in the code (the memory is simply freed later).<br><br></span></div><span name="Gilles Gouaillardet">That, coupled with the fact that I am trying to imitate what the other BTL implementations are doing, yet in mca_bml_r2_endpoint_add_btl() by BTL is not being picked up, left me puzzled. Please note that the interconnect that I am developing for is on a different cluster (than where I ran the above test for TCP BTL.)<br><br></span></div><span name="Gilles Gouaillardet">Thanks again<br></span></div><span name="Gilles Gouaillardet">Durga<br></span></div><div class="gmail_extra"><br clear="all"><div><div><div dir="ltr"><div><div dir="ltr">The surgeon general advises you to eat right, exercise regularly and quit ageing.</div></div></div></div></div>
<br><div class="gmail_quote">On Sun, May 15, 2016 at 10:20 AM, Gilles Gouaillardet <span dir="ltr">&lt;<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;gilles.gouaillardet@gmail.com&#39;);" target="_blank">gilles.gouaillardet@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">did you check the add_procs callbacks ?<div>(e.g. mca_btl_tcp_add_procs() for the tcp btl)</div><div>this is where the reachable bitmap is set, and I guess this is what you are looking for.</div><div><br></div><div>keep in mind that if several btl can be used, the one with the higher exclusivity is used</div><div>(e.g. tcp is never used if openib is available)</div><div>you can simply force your btl and self, and the ob1 pml, so you do not have to worry about other btl exclusivity.</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles<div><div><br><br>On Sunday, May 15, 2016, dpchoudh . &lt;<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;dpchoudh@gmail.com&#39;);" target="_blank">dpchoudh@gmail.com</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div><div><div><div><div>Hello all<br><br></div>I have been struggling with this issue for a while and figured it might be a good idea to ask for help.<br><br></div>Where (in the code path) is the connectivity map created?<br><br></div>I can see that it is *used* in mca_bml_r2_endpoint_add_btl(), but obviously I am not setting it up right, because this routine is not finding the BTL corresponding to my interconnect.<br><br></div>Thanks in advance<br></div>Durga<br><div><div><div><div><div><div><br clear="all"><div><div><div dir="ltr"><div><div dir="ltr">The surgeon general advises you to eat right, exercise regularly and quit ageing.</div></div></div></div></div>
</div></div></div></div></div></div></div>
</blockquote></div></div></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;devel@open-mpi.org&#39;);" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18975.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/18975.php</a><br></blockquote></div><br></div>
</blockquote></div>

