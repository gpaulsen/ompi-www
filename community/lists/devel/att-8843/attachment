Thanks Josh and Jeff.<div><br></div><div>I have read already &quot;<meta http-equiv="content-type" content="text/html; charset=utf-8">The Design and Implementation of Checkpoint/Restart Process Fault Tolerance for Open MPI&quot; and i&#39;m gonna read now &quot;<meta http-equiv="content-type" content="text/html; charset=utf-8">A Composable Runtime Recovery Policy Framework Supporting Resilient HPC Applications&quot; and then i will take a look to the code of the components that you mention, and i will let you know how things are going.</div>
<div><br></div><div>Thanks a lot.</div><div><br></div><div>Hugo Meyer<br><br><div class="gmail_quote">2011/1/6 Joshua Hursey <span dir="ltr">&lt;<a href="mailto:jjhursey@open-mpi.org">jjhursey@open-mpi.org</a>&gt;</span><br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">So I can point you to some of the work that I did while at Indiana University to support process migration in Open MPI in a coordinated manner. This should introduce you to some of the internal pieces that fit together to provide this support.<br>

<br>
The transparent C/R in Open MPI webpage from IU is a good place to start:<br>
   <a href="http://osl.iu.edu/research/ft/ompi-cr/index.php" target="_blank">http://osl.iu.edu/research/ft/ompi-cr/index.php</a><br>
<br>
&gt;From there you will find a link to a couple papers that should get you started. In particular &quot;A Composable Runtime Recovery Policy Framework Supporting Resilient HPC Applications&quot; discusses how the ORTE ErrMgr framework was used (initially) to provide process migration and automatic recovery. The actual code in the Open MPI trunk is slightly different. Instead of using different components of the ErrMgr framework (i.e., autor, crmig, stable) we just rolled it all into the existing components (i.e., hnp, orted, app). But all the code can be found in those component directories.<br>

<br>
If you want a more general overview of the C/R system in Open MPI, I would start with the paper &quot;The Design and Implementation of Checkpoint/Restart Process Fault Tolerance for Open MPI&quot; which provides a high level view of the architecture (combined with the paper above you will have a fairly complete picture of the design). The C/R infrastructure currently only supports coordinated C/R, but was designed to be more extensible. So if you are looking into uncoordinated C/R techniques you may find that many of the C/R frameworks in Open MPI can be reused.<br>

<br>
That should get you started. Let us know if you have any further questions.<br>
<br>
-- Josh<br>
<div class="im"><br>
On Jan 6, 2011, at 3:19 PM, Hugo Meyer wrote:<br>
<br>
</div><div><div></div><div class="h5">&gt; Thanks for the reply and don&#39;t worry about the delay.<br>
&gt;<br>
&gt; Yeah, i supposse it wouln&#39;t be easy :(.<br>
&gt; But my final goal is what you are mentioning, is to stop one particular process (previously checkpointed) and the migrate it to another place (node, core, slot, etc.) and restart it there, but without making a coordinated checkpoint. I just need to checkpoint processes in an uncoordinated way, and move them.<br>

&gt;<br>
&gt; Where can i see something about process migration in the code? or something that could guide me.<br>
&gt;<br>
&gt; Greetings.<br>
&gt;<br>
&gt; Hugo Meyer<br>
&gt;<br>
&gt; 2011/1/6 Jeff Squyres &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt;<br>
&gt; Sorry for the delay; you wrote while many of us were on vacation and we&#39;re just now starting to catch up on past mails...<br>
&gt;<br>
&gt; I&#39;m not entirely sure what you&#39;re trying to do.  It sounds like you&#39;re trying to replace one process with another.  That&#39;s quite complicated; there will be a lot of changes required in the code base to do this.<br>

&gt;<br>
&gt; - you&#39;ll need to notify the ORTE subsystem of the process change<br>
&gt; - this notification will likely need to span multiple processes<br>
&gt; - all MPI processes will need to quiesce their communications, disconnect, and reconnect<br>
&gt; - ...and probably other things<br>
&gt;<br>
&gt; That being said, you might be able to leverage some of the work that&#39;s been done with checkpoint/restart/migration.  It&#39;s not entirely the same thing that you&#39;re doing, but it&#39;s at least similar (quiesce networks, [pretend to] move a process from location A to location B, etc.).<br>

&gt;<br>
&gt;<br>
&gt;<br>
&gt; On Dec 28, 2010, at 7:03 AM, Hugo Meyer wrote:<br>
&gt;<br>
&gt; &gt; Hello to all.<br>
&gt; &gt;<br>
&gt; &gt; I&#39;m new in the forum, at least is the first time i write.<br>
&gt; &gt;<br>
&gt; &gt; I&#39;m working with open mpi and I would do a little experiment, i will try to pass one process by another process.<br>
&gt; &gt;<br>
&gt; &gt; For example, assuming that there are 2 processes that are communicating say rank 1 and 2. And there is a process of rank 3, I would like the rank 3 (it could be assumed that this node is marked down at the initial hostfile) took the place of rank 2, and rank 1 still think that he is communicating with rank 2 when in fact is communicating with the rank 3.<br>

&gt; &gt;<br>
&gt; &gt; I guess I&#39;ll have to modify tables as orte_job_map_t and orte_proc_t, but I wanted to know if someone already has experience doing something similar, and can guide me at least.<br>
&gt; &gt;<br>
&gt; &gt; The communication between processes, in principle, would be irrelevant, so i will not need to use checkpoints / restarts for now.<br>
&gt; &gt;<br>
&gt; &gt; Greetings<br>
&gt; &gt;<br>
&gt; &gt; Hugo Meyer<br>
&gt; &gt; _______________________________________________<br>
&gt; &gt; devel mailing list<br>
&gt; &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; &gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;<br>
&gt;<br>
&gt; --<br>
&gt; Jeff Squyres<br>
&gt; <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
&gt; For corporate legal information go to:<br>
&gt; <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
&gt;<br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
<br>
</div></div>------------------------------------<br>
<font color="#888888">Joshua Hursey<br>
Postdoctoral Research Associate<br>
Oak Ridge National Laboratory<br>
<a href="http://users.nccs.gov/~jjhursey" target="_blank">http://users.nccs.gov/~jjhursey</a><br>
</font><div><div></div><div class="h5"><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br></div>

