<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Hi Jing<div><br></div><div>Someone else took a look at this off-list a few years ago. It was mostly a problem with the build system (some flags are different) and header file names. I don't believe the port was ever completed though.</div><div><br></div><div>I have appended the results of that conversation - the last message contained a list of the issues. You would need to update that to the trunk of course as the code has changed considerably since that discussion took place. Brian Barrett subsequently created a first-cut at fixing some of these, but that appears to have been lost in the years since it was done - and wouldn't really be current anyway.</div><div><br></div><div>I would be happy to assist as I can.</div><div>Ralph</div><div><br></div><div><blockquote type="cite"><blockquote type="cite">1. configure issues with "checking prefix for global symbol labels"<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">1a. VxWorks assembler (CCAS=asppc) generates a.out by default (vs.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">conftest.o that we need subsequently)<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">there is this fragment to determine the way to assemble conftest.s:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">if test "$CC" = "$CCAS" ; then<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;ompi_assemble="$CCAS $CCASFLAGS -c conftest.s &gt;conftest.out 2&gt;&amp;1"<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">else<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;ompi_assemble="$CCAS $CCASFLAGS conftest.s &gt;conftest.out 2&gt;&amp;1"<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">fi<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">The subsequent link fails because conftest.o does not exist:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;ompi_link="$CC $CFLAGS conftest_c.$OBJEXT conftest.$OBJEXT -o conftest &gt; conftest.link 2&gt;&amp;1"<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">To work around the problem, I did not set CCAS. This gives me the first<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">invocation that includes the -c argument to CC=ccppc, generating<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">conftest.o output.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">1b. linker fails because LDFLAGS are not passed<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">The same linker command line caused problems because $CFLAGS were passed<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">to the linker<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;ompi_link="$CC $CFLAGS conftest_c.$OBJEXT conftest.$OBJEXT -o conftest &gt; conftest.link 2&gt;&amp;1"<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">In my environment, I set CC/CFLAGS/LDFLAGS as follows:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">CC=ccppc<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">CFLAGS=-ggdb3 -std=c99 -pedantic -mrtp -msoft-float -mstrict-align<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">-mregnames -fno-builtin -fexceptions'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">LDFLAGS=-mrtp -msoft-float -Wl,--start-group -Wl,--end-group<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">-L/amd/raptor/root/opt/WindRiver/vxworks-6.3/target/usr/lib/ppc/PPC32/sfcommon&nbsp;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">The linker flags are not passed because the ompi_link<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">[xp-kcain1:build_vxworks] &nbsp;ccppc -ggdb3 -std=c99 -pedantic -mrtp<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">-msoft-float -mstrict-align -mregnames -fno-builtin -fexceptions -o<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">hello hello.c<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">/amd/raptor/root/opt/WindRiver/gnu/3.4.4-vxworks-6.3/x86-linux2/bin/../lib/gcc/powerpc-wrs-vxworks/3.4.4/../../../../powerpc-wrs-vxworks/bin/ld:&nbsp;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">cannot find -lc_internal<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">collect2: ld returned 1 exit status<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">2. OPAL atomics asm.c:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">int versus int32_t (refer to email with Brian Barrett<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">3. OPAL event/event.c: sys/time.h and timercmp() macros not defined by<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">VxWorks<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">refer to workaround in event.c using #ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">4. OPAL event/event.c: pipe() syscall not found<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">workaround:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef HAVE_UNISTD_H<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;unistd.h&gt;<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;ioLib.h&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* for pipe() */<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">5. OPAL event/signal.c<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">static sig_atomic_t opal_evsigcaught[NSIG];<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">NSIG is not defined<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">but _NSIGS is<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">In Linux, NSIG is defined with -D__USE_MISC<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">So I added this code fragment to signal.c:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">/* VxWorks signal.h defines _NSIGS, not NSIG */<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#define NSIG (_NSIGS+1)<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">6. OPAL event/signal.c: no socketpair()<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">workaround: use pipe():<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef HAVE_UNISTD_H<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;unistd.h&gt;<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;ioLib.h&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* for pipe() */<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">and later in void opal_evsignal_init(sigset_t *evsigmask)<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pipe(ev_signal_pair) == -1)<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event_err(1, "%s: pipe", __func__);<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#else<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;if (socketpair(AF_UNIX, SOCK_STREAM, 0, ev_signal_pair) == -1)<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event_err(1, "%s: socketpair", __func__);<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">7. OPAL util/basename.c: #if HAVE_DIRNAME problem<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../opal/util/basename.c:23:5: warning: "HAVE_DIRNAME" is not defined<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../opal/util/basename.c: In function `opal_dirname':<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">problem: HAVE_DIRNAME is not defined in opal_config.h so the #if<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">HAVE_DIRNAME will fail at preprocessor/compile time<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">workaround:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">change #if HAVE_DIRNAME to #if defined(HAVE_DIRNAME)<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">8. OPAL util/basename.c: strncopy_s and _strdup<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../opal/util/basename.c: In function `opal_dirname':<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../opal/util/basename.c:153: error: implicit declaration of<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">function `strncpy_s'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../opal/util/basename.c:160: error: implicit declaration of<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">function `_strdup'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strncpy( ret, filename, p - filename);<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#else<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strncpy_s( ret, (p - filename + 1), filename, p - filename );<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;return strdup(".");<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#else<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;return _strdup(".");<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">9. opal/util/if.c: socket() prototype not found in vxworks headers<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef HAVE_SYS_SOCKET_H<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;sys/socket.h&gt;<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;sockLib.h&gt;<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">10. opal/util/if.c: ioctl()<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef HAVE_SYS_IOCTL_H<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;sys/ioctl.h&gt;<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;ioLib.h&gt;<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">11. opal/util/os_path.c: MAXPATHLEN change to PATH_MAX<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;if (total_length &gt; PATH_MAX) { &nbsp;/* path length is too long - reject<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">it */<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL);<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#else<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;if (total_length &gt; MAXPATHLEN) { &nbsp;/* path length is too long -<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">reject it */<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(NULL);<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">12. opal/util/output.c: gethostname()<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">include &lt;hostLib.h&gt;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">13. opal/util/output.c: MAXPATHLEN<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">same fix as os_path.c above<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">14. opal/util/output.c: closelog/openlog/syslog<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">manually turned off HAVE_SYSLOG_H in opal_config.h<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">then got a patch from Jeff Squyres that avoids syslog<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">15. opal/util/opal_pty.c<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">complains about mismatched prototype of opal_openpty() between this<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">source file and opal_pty.h<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">workaround: manually edit build_vxworks_ppc/opal/include/opal_config.h,<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">use the following line (change 1 to 0):<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#define OMPI_ENABLE_PTY_SUPPORT 0<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">16. opal/util/stacktrace.c<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">FPE_FLTINV not present in signal.h<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">workaround: edit opal_config.h to turn off<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">OMPI_WANT_PRETTY_PRINT_STACKTRACE (this can be explicitly configured out<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">but I don't want to reconfigure because I hacked #15 above)<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">17. opal/mca/base/mca_base_open.c<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">gethostname() -- same as opal/util/output.c, must include hostLib.h<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">18. opal_progress.c<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">from opal/event/event.h (that I modified earlier)<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">cannot find #include &lt;sys/_timeradd.h&gt;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">It is in opal/event/compat/sys<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">workaround: change event.h to include the definitions that are present<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">in _timeradd.h instead of including it.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">19. Link errors for opal_wrapper<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">strcasecmp<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">strncasecmp<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">I rolled my own in mca_base_open.c (temporary fix, since we may come across this problem elsewhere in the code).<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">20. dss_internal.h uses a type 'uint'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">Not sure if it's depending on something in the headers, or something it<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">defined on its own.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">I changed it to be just like the header I found somewhere under Linux /usr/include:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">typedef unsigned int uint;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">21. struct iovec definition needed<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">orte/mca/iof/base/iof_base_fragment.h:45: warning: array type has<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">incomplete element type<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#include &lt;net/uio.h&gt;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">not sure if this is right, or if I should include something like<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">&lt;netBufLib.h&gt; or &lt;ioLib.h&gt;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">22. iof_base_setup.c<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">struct termios not understood<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">can only find termios.h header in 'diab' area and I'm not using that<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">compiler.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">a variable usepty is set to 0 already when OMPI_ENABLE_PTY_SUPPORT is 0.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">So, why are we compiling this fragment of code at all? I hacked the file<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">so that the struct termios code will not get compiled.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">23. oob_base_send/recv.c, oob_base_send/recv_nb.c. struct iovec not known.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#include &lt;net/uio.h&gt;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">24. orte/mca/rmgr/base/rmgr_base_check_context.c:58: error:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">`MAXHOSTNAMELEN' undeclared (first use in this function)<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#define MAXHOSTNAMELEN 64<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">25. orte/mca/rmgr/base/rmgr_base_check_context.c:58:<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">gethostname()<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#include &lt;hostLib.h&gt;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">26. orte/mca/iof/proxy/iof_proxy.h:135: warning: array type has<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">incomplete element type<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/iof/proxy/iof_proxy.h:135: error: field<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">`proxy_iov' has incomplete type<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#include &lt;net/uio.h&gt;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">27. /orte/mca/iof/svc/iof_svc.h:147: warning: array type has incomplete<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">element type<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/iof/svc/iof_svc.h:147: error: field `svc_iov'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">has incomplete type<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#include &lt;net/uio.h&gt;<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">28. ../../../../../orte/mca/oob/tcp/oob_tcp_msg.h:66: warning: array<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">type has incomplete element type<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp_msg.h:66: error: field `msg_iov'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">has incomplete type<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp_msg.h: In function<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">`mca_oob_tcp_msg_iov_alloc':<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp_msg.h:196: error: invalid<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">application of `sizeof' to incomplete type `iovec'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">29. ../../../../../orte/mca/oob/tcp/oob_tcp.c:344: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `accept'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c: In function<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">`mca_oob_tcp_create_listen':<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c:383: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `socket'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c:399: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `bind'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c:407: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `getsockname'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c:415: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `listen'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c: In function<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">`mca_oob_tcp_listen_thread':<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c:459: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `bzero'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c: In function<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">`mca_oob_tcp_recv_probe':<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c:696: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `send'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c: In function<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">`mca_oob_tcp_recv_handler':<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c:795: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `recv'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c: In function `mca_oob_tcp_init':<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">../../../../../orte/mca/oob/tcp/oob_tcp.c:1087: error: implicit<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">declaration of function `usleep'<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">This gets rid of most (except bzero and usleep)<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#ifdef MCS_VXWORKS<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#include &lt;sockLib.h&gt;<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><blockquote type="cite">#endif<br></blockquote></blockquote></blockquote><blockquote type="cite"><blockquote type="cite"><br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">Trying to reconfigure the package so CFLAGS will not include -pedantic.<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">This is because $WIND_HOME/vxworks-6.3/target/h/string.h has protos for<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">bzero, but only when #if _EXTENSION_WRS is true. So turn off<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">-ansi/-pedantic gets this? In my dreams?<br></blockquote></blockquote><blockquote type="cite"></blockquote><div><div>On Mar 17, 2010, at 9:54 PM, 张晶 wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><span lang="EN-US"><font face="Calibri"><div style="margin-top: 0cm; margin-right: 0cm; margin-bottom: 0pt; margin-left: 0cm; "><span lang="EN-US"><font size="3">Hello all,</font></span></div><p style="MARGIN: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3">&nbsp;</font></span></p><div style="margin-top: 0cm; margin-right: 0cm; margin-bottom: 0pt; margin-left: 0cm; "><span lang="EN-US"><font size="3">In order to add some real-time feature to the OpenMPI for some research ,I need a OpenMPI version running on VxWorks. But after going through the Open-MPI website ,I can’t found any indication that it supports VxWorks .</font></span></div><p style="MARGIN: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3">&nbsp;</font></span></p><div style="margin-top: 0cm; margin-right: 0cm; margin-bottom: 0pt; margin-left: 0cm; "><span lang="EN-US"><font size="3">Follow the thread posted by Ralph Castain ,&nbsp; </font><a href="http://www.open-mpi.org/community/lists/users/2006/06/1371.php"><span style="COLOR: windowtext; TEXT-DECORATION: none; text-underline: none"><font size="3">http://www.open-mpi.org/community/lists/users/2006/06/1371.php</font></span></a><font size="3"> .</font></span></div><div style="margin-top: 0cm; margin-right: 0cm; margin-bottom: 0pt; margin-left: 0cm; "><span lang="EN-US"><font size="3">I read some paper about the OpenRTE ,like “Creating a transparent, distributed, and resilient computing environment: the OpenRTE project” and “The Open Run-Time Environment (OpenRTE):A Transparent Multi-cluster Environment for High-Performance Computing”which is written by Ralph H. Castain · Jeffrey M. Squyres and others .</font></span></div><p style="MARGIN: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3">&nbsp;</font></span></p><div style="margin-top: 0cm; margin-right: 0cm; margin-bottom: 0pt; margin-left: 0cm; "><span lang="EN-US"><font size="3">Now I have a basic understanding of the OpenRTE , however ,there is too few document of the OpenRTE describing the implement of the OpenRTE . I don’t know</font></span></div><div style="margin-top: 0cm; margin-right: 0cm; margin-bottom: 0pt; margin-left: 0cm; "><span lang="EN-US"><font size="3">where and how to begin the migration . Any advice will be appreciated.</font></span></div><p style="MARGIN: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3">&nbsp;</font></span></p><p style="MARGIN: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3">&nbsp;</font></span></p><div style="margin-top: 0cm; margin-right: 0cm; margin-bottom: 0pt; margin-left: 0cm; "><span lang="EN-US"><font size="3">Thanks </font></span></div><p style="MARGIN: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3">&nbsp;</font></span></p><div style="margin-top: 0cm; margin-right: 0cm; margin-bottom: 0pt; margin-left: 0cm; "><span lang="EN-US"><font size="3">Jing Zhang</font></span></div><p style="MARGIN: 0cm 0cm 0pt" class="MsoNormal"></p></font></span>
_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>http://www.open-mpi.org/mailman/listinfo.cgi/devel</blockquote></div><br></div></body></html>
