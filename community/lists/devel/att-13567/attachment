<div dir="ltr">I think the only reason I protected that framework is to reduce the overhead of an application using a build of Open MPI with CR support, but no enabling it at runtime. Nothing in the compress framework depends on the CR infrastructure (although the CR infrastructure can use the compress framework if the user chooses to). So I bet we can remove the protection altogether and be fine.<div>
<br></div><div>So I think this patch is fine. I might also go as far as removing the &#39;if&#39; block altogether as the protection should not been needed any longer.</div><div><br></div><div>Thanks,</div><div>Josh</div>
<div><br></div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Fri, Dec 27, 2013 at 3:46 PM, Adrian Reber <span dir="ltr">&lt;<a href="mailto:adrian@lisas.de" target="_blank">adrian@lisas.de</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Right now the C/R code fails because of a change introduced in<br>
opal/mca/compress/base/compress_base_open.c in 2013 with commit<br>
<br>
git 734c724ff76d9bf814f3ab0396bcd9ee6fddcd1b<br>
svn r28239<br>
<br>
    Update OPAL frameworks to use the MCA framework system.<br>
<br>
This commit changed a lot but also the return value of the function from<br>
OPAL_SUCCESS to OPAL_ERR_NOT_AVAILABLE. With following patch I can make<br>
it work again:<br>
<br>
diff --git a/opal/mca/compress/base/compress_base_open.c b/opal/mca/compress/base/compress_base_open.c<br>
index a09fe59..69eabfa 100644<br>
--- a/opal/mca/compress/base/compress_base_open.c<br>
+++ b/opal/mca/compress/base/compress_base_open.c<br>
@@ -45,11 +45,11 @@ MCA_BASE_FRAMEWORK_DECLARE(opal, compress, NULL, opal_compress_base_register, op<br>
<br>
 static int opal_compress_base_register (mca_base_register_flag_t flags)<br>
 {<br>
     /* Compression currently only used with C/R */<br>
     if( !opal_cr_is_enabled ) {<br>
         opal_output_verbose(10, opal_compress_base_framework.framework_output,<br>
                             &quot;compress:open: FT is not enabled, skipping!&quot;);<br>
-        return OPAL_ERR_NOT_AVAILABLE;<br>
+        return OPAL_SUCCESS;<br>
     }<br>
<br>
     return OPAL_SUCCESS;<br>
<br>
<br>
My question is if OPAL_ERR_NOT_AVAILABLE is indeed the correct return value<br>
and the function calling opal_compress_base_register() should actually<br>
handle OPAL_ERR_NOT_AVAILABLE or if returning OPAL_SUCCESS is still the right<br>
return value?<br>
<br>
                Adrian<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</blockquote></div><br><br clear="all"><div><br></div>-- <br>Joshua Hursey<br>Assistant Professor of Computer Science<br>University of Wisconsin-La Crosse<br><a href="http://cs.uwlax.edu/~jjhursey" target="_blank">http://cs.uwlax.edu/~jjhursey</a>
</div>

