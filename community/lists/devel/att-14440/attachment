<div dir="ltr">Hello everyone,<div><br></div><div>I am trying to run OpenMPI-1.6.5 on a Linux on a system based on ARM Cortex A9. The linux system and the hardware is provided by Xilinx Inc., and for those who may have related experiences the system is called Zynq, which is an embedded SoC system with ARM cores and FPGA fabrics. Xilinx has provided cross-compiler for the system, which I used to compile openmpi, and the compilation is successful. Here is the configuration script I used for the </div>

<div><br></div><div>compilation:</div><div>./configure --build=arm-linux-gnueabi --host=armv7-linux-gnueabi  \</div><div>--disable-mpi-f77 --disable-mpi-f90 \</div><div>--disable-mpi-cxx --prefix=`pwd`/install \</div><div>

--with-devel-headers --enable-binaries \</div><div>--enable-shared --enable-static \</div><div>--disable-mmap-shmem --disable-posix-shmem --disable-sysv-shmem \</div><div>--disable-dlopen</div><div><br></div><div>For the cross-compiler, I have set the environmental variables &quot;CC&quot; and &quot;CXX&quot;.</div>

<div><br></div><div>When I launch &#39;mpirun&#39; on the ARM linux, I got the error like this:</div><div><div><br></div><div>It looks like opal_init failed for some reason; your parallel process is</div><div>likely to abort.  There are many reasons that a parallel process can</div>

<div>fail during opal_init; some of which are due to configuration or</div><div>environment problems.  This failure appears to be an internal failure;</div><div>here&#39;s some additional information (which may only be relevant to an</div>

<div>Open MPI developer):</div><div><br></div><div>  opal_shmem_base_select failed</div><div>  --&gt; Returned value -1 instead of OPAL_SUCCESS</div><div>--------------------------------------------------------------------------</div>

<div>[ZC702:01353] [[INVALID],INVALID] ORTE_ERROR_LOG: Error in file runtime/orte_init.c at line 79</div><div>[ZC702:01353] [[INVALID],INVALID] ORTE_ERROR_LOG: Error in file orterun.c at line 694</div><div><br></div><div>

I have compressed the information from &#39;ompi-info --all&#39; in the attachment.</div><div><br></div><div>For some more related information, I have been tuning the configuration settings for a while, and I am afraid some of them may not be quite appropriate. My general goal is to enable message passing in my system of several such chips connected via Ethernet. So I will not launch more than one process on any single machine. That&#39;s why I wanted to disable the shared memory support. Although that doesn&#39;t change the outcome for me.</div>

<div>I also got a lot of error messages on mca failing to find components, that is why I tried disable dlopen.</div><div><br></div><div>I am also looking for suggestions. Basically I want to compile a &quot;clean&quot; version of OpenMPI with only the core message passing support, that may automatically get rid of a lot of the headache of the cross-compilation. </div>

<div>When I searched through the documentation, I came to notice the idea of Portable Hardware locality (hwloc), however, the idea is completely new to me so I do not know if that would be relevant for my case.</div><div>

<br></div><div>Thank you in advance for your suggestions! Please tell me if I need to provide further information of my system.</div><div><br></div><div>Regards,</div><div>--<br></div><div>Di Wu (Allan)<br>VAST Labortory (<a href="http://vast.cs.ucla.edu/">http://vast.cs.ucla.edu/</a>), </div>

<div>Department of Computer Science, UC Los Angeles<br>Email: <a href="mailto:allwu@cs.ucla.edu" target="_blank">allwu@cs.ucla.edu</a><br><br></div>
</div></div>

