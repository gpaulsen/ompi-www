<html><head><style type="text/css"><!-- DIV {margin:0px;} --></style></head><body><div style="font-family:times new roman, new york, times, serif;font-size:10pt">
<div style="font-family: times new roman,new york,times,serif; font-size: 10pt;">Hi, <br>Thanks for such a detailed reply. You are right, we have partitioned (normalized) our system with Xen and have seen that virtualization overhead is not that great (for some applications) as compared to potential benefits that we can get. We have executed various benchmarks on different network/cluster configuration of Xen and Native linux and they are really encouraging.  The only known problem is inter-domain communication of Xen which is quite poor (1/6 of the native memory transfer and not to mention 50%CPU utilization of host). We have tested out Xensocket, and these sockets give us really good performance boost in all respects. <br>Now that I am having a look at the complex yet wonderful architecture of openmpi, can you guys give me some guidance on couple of naive questions?<br><br>1- How do I view the console output of an mpi process which is not at headnode?
 Do I have to have some parallel debugger? Or is there any magical technique?<br>2- How do i setup GPR? say i have a struct foo, and all processes have at least one such instance of foo. From what I gather, openmpi will create a linked list of foo's that were passed on (though I am unable to pass one on). Where do i have to define struct foo so that it can be exchanged b/w the processes? I know its a lame question, but I think i am getting lost in the sea. :(<br><div>&nbsp;</div>Best
 Regards,<br>Muhammad Atif<div style="font-family: times new roman,new york,times,serif; font-size: 10pt;">PS: I am totally new to MPI internals. So if at all we decide to go ahead with the project, I would be regular bugger in the list. <br><br><div style="font-family: times new roman,new york,times,serif; font-size: 12pt;">----- Original Message ----<br>From: Adrian Knoth &lt;adi@drcomp.erfurt.thur.de&gt;<br>To: Open MPI Developers &lt;devel@open-mpi.org&gt;<br>Sent: Thursday, January 10, 2008 1:24:01 AM<br>Subject: Re: [OMPI devel] btl tcp port to xensocket<br><br>
On Tue, Jan 08, 2008 at 10:51:45PM -0800, Muhammad Atif wrote:<br><br>&gt; I am planning to port tcp component to xensocket, which is a fast<br>&gt; interdomain communication mechanism for guest domains in Xen. I may<br><br>Just to get things right: You first partition your SMP/Multicore system<br>with Xen, and then want to re-combine it later for MPI communication?<br><br>Wouldn't it be easier to leave the unpartitioned host alone and use<br>shared memory communication instead?<br><br>&gt; As per design, and the fact that these sockets are not normal
 sockets,<br>&gt; I have to pass certain information (basically memory references,
 guest<br>&gt; domain info etc) to other peers once sockets have been created. I<br><br>There's ORTE, the runtime environment. It employs OOB/tcp to have a so<br>called out-of-band channel. ORTE also provides a general purpose<br>registry (GPR).<br><br>Once a TCP connection between the headnode process and all other peers<br>is established, you can store your required information in the GPR.<br><br>&gt; understand that mca_pml_base_modex_send and recv (or simply using<br>&gt; mca_btl_tcp_component_exchange) can be used to exchange information,<br><br>Use mca_pml_base_modex_send (now ompi_modex_send) and encode your<br>required information. It's getting stored in the GPR. Read it back with<br>mca_pml_base_modex_recv (ompi_modex_recv), as it is done in<br>mca_btl_tcp_component_exchange and mca_btl_tcp_proc_create.<br><br>&gt; but I cannot seem to get them to communicate. So to put my question
 in<br>&gt; a very simple way..... I want to create a socket structure containing<br>&gt; necessary information, and then pass it to all other peers before<br>&gt; start of actual mpi communication. What is the easiest way to do it.<br><br><br>Quite the same way. mca_btl_tcp_component_exchange assembles the<br>required information and stores it in the GPR by calling<br>ompi_modex_send.<br><br>mca_btl_tcp_proc_create (think of "the other peers") reads this<br>information into local context.<br><br><br>I guess you might want to copy btl/tcp to let's say btl/xen, so you can<br>modify internal structures, if required. Perhaps xensockets don't need<br>IP addresses, as they are actually memory sockets.<br><br>However, you'll still need TCP communication between Xen guests for the<br>OOB channel.<br><br><br>As mentioned above, I'm not sure if it's reasonable to use Xen and MPI<br>at all. Virtualization overhead might decrease your performance, and<br>that's
 usually the last thing you want to have when using MPI ;)<br><br><br>HTH<br><br>-- <br>Cluster and Metacomputing Working Group<br>Friedrich-Schiller-Universität Jena, Germany<br><br>private: <a rel="nofollow" target="_blank" href="http://adi.thur.de">http://adi.thur.de</a><br>_______________________________________________<br>devel mailing list<br><a rel="nofollow" ymailto="mailto:devel@open-mpi.org" target="_blank" href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a rel="nofollow" target="_blank" href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></div><br></div></div></div><br>
      <hr size=1>Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile. <a href="http://us.rd.yahoo.com/evt=51733/*http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ "> Try it now.</a></body></html>
