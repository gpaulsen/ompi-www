<div dir="ltr">Gotcha, missed the shared lib part...<br></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Jul 29, 2014 at 1:30 PM, Pritchard Jr., Howard <span dir="ltr">&lt;<a href="mailto:howardp@lanl.gov" target="_blank">howardp@lanl.gov</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">





<div link="blue" vlink="purple" lang="EN-US">
<div>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">Hi Josh,<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d"><u></u> <u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">No, I think what Bert is talking about is having something like<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d"><u></u> <u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">foobar.c<br>
==========================<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">#include “shmem.h”<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d"><u></u> <u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">long my_dso_val = 0;<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d"><u></u> <u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">int foobar(void)<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">{<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">   printf(“Hello from a shared library\n”);<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">}<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d"><u></u> <u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d">======<u></u><u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d"><u></u> <u></u></span></p>
<p class="MsoNormal">cc –fPIC –c foobar.c<u></u><u></u></p>
<p class="MsoNormal">cc –shared –o libfoobar.so foobar.o<u></u><u></u></p>
<p class="MsoNormal">cc –o berts_code berts_code.c –lfoobar<u></u><u></u></p>
<p class="MsoNormal"><u></u> <u></u></p>
<p class="MsoNormal">then in your main example below do a shmem_long_fadd on my_dso_val.<u></u><u></u></p>
<p class="MsoNormal">It won’t work unless you’ve put smarts in the shmem library to go through<u></u><u></u></p>
<p class="MsoNormal">the segments of loaded shared libraries and register them with the same<u></u><u></u></p>
<p class="MsoNormal">mechanism used for the data segment of the executable.<u></u><u></u></p>
<p class="MsoNormal"><u></u> <u></u></p>
<p class="MsoNormal">Howard<u></u><u></u></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d"><u></u> <u></u></span></p>
<p class="MsoNormal"><span style="font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1f497d"><u></u> <u></u></span></p>
<p class="MsoNormal"><b><span style="font-size:10.0pt;font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;">From:</span></b><span style="font-size:10.0pt;font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;"> devel [mailto:<a href="mailto:devel-bounces@open-mpi.org" target="_blank">devel-bounces@open-mpi.org</a>]
<b>On Behalf Of </b>Joshua Ladd<br>
<b>Sent:</b> Tuesday, July 29, 2014 10:57 AM<br>
<b>To:</b> Open MPI Developers<br>
<b>Subject:</b> Re: [OMPI devel] SHMEM symmetric objects in shared libraries<u></u><u></u></span></p><div><div class="h5">
<p class="MsoNormal"><u></u> <u></u></p>
<div>
<div>
<div>
<p class="MsoNormal" style="margin-bottom:12.0pt">Are you claiming that in the following test, the static variable &quot;val&quot; will not be seen as a symmetric object? 
<u></u><u></u></p>
</div>
<div>
<p class="MsoNormal">#include &quot;shmem.h&quot;<u></u><u></u></p>
</div>
<div>
<p class="MsoNormal" style="margin-bottom:12.0pt"><br>
int main( int argc, char **argv){<br>
    long my_pe, npes, master;<br>
<br>
    start_pes(0);<br>
    my_pe = shmem_my_pe();<br>
    npes = shmem_n_pes();<br>
<br>
    master = npes - 1;<br>
<br>
   /* only used on master */<br>
   static long val = 0;<br>
<br>
 <br>
   if(my_pe != master ){       <br>
       shmem_long_fadd(&amp;val,1,master);<br>
   }<br>
<br>
   shmem_barrier_all();<u></u><u></u></p>
</div>
<p class="MsoNormal" style="margin-bottom:12.0pt">  return 0;<br>
}<u></u><u></u></p>
</div>
<p class="MsoNormal">Josh<u></u><u></u></p>
<div>
<div>
<p class="MsoNormal">                             <u></u><u></u></p>
</div>
</div>
</div>
<div>
<p class="MsoNormal" style="margin-bottom:12.0pt"><u></u> <u></u></p>
<div>
<p class="MsoNormal">On Tue, Jul 29, 2014 at 11:27 AM, Bert Wesarg &lt;<a href="mailto:bert.wesarg@tu-dresden.de" target="_blank">bert.wesarg@tu-dresden.de</a>&gt; wrote:<u></u><u></u></p>
<p class="MsoNormal">Hi,<br>
<br>
On 05/10/2014 02:46 PM, Bert Wesarg wrote:<u></u><u></u></p>
<p class="MsoNormal">Hi,<br>
<br>
Btw, I&#39;m pretty confident, that this Open SHMEM implementation does not<br>
recognize global or static variables in shared libraries as symmetric<br>
objects. It is probably wise to note this somewhere to the users.<u></u><u></u></p>
<p class="MsoNormal" style="margin-bottom:12.0pt"><br>
I&#39;ve never got an reply to this query. Any comments on it?<br>
<br>
Bert<u></u><u></u></p>
<p class="MsoNormal" style="margin-bottom:12.0pt"><br>
Kind regards,<br>
Bert Wesarg<u></u><u></u></p>
<p class="MsoNormal"><span style="color:#888888"><br>
<span>-- </span><br>
<span>Dipl.-Inf. Bert Wesarg</span><br>
<span>wiss. Mitarbeiter</span><br>
<br>
<span>Technische Universität Dresden</span><br>
<span>Zentrum für Informationsdienste und Hochleistungsrechnen (ZIH)</span><br>
<span>01062 Dresden</span><br>
<span>Tel.: <a href="tel:%2B49%20%28351%29%20463-42451" target="_blank">
+49 (351) 463-42451</a></span><br>
<span>Fax: <a href="tel:%2B49%20%28351%29%20463-37773" target="_blank">
+49 (351) 463-37773</a></span><br>
<span>E-Mail: <a href="mailto:bert.wesarg@tu-dresden.de" target="_blank">
bert.wesarg@tu-dresden.de</a></span><br>
<br>
</span><br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">
http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/07/15305.php" target="_blank">
http://www.open-mpi.org/community/lists/devel/2014/07/15305.php</a><u></u><u></u></p>
</div>
<p class="MsoNormal"><u></u> <u></u></p>
</div>
</div></div></div>
</div>

<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/07/15313.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/07/15313.php</a><br></blockquote></div><br></div>

