Index: ompi/mca/coll/ml/coll_ml.h
===================================================================
--- ompi/mca/coll/ml/coll_ml.h	(revision 27118)
+++ ompi/mca/coll/ml/coll_ml.h	(working copy)
@@ -905,7 +905,7 @@
 void mca_coll_ml_allreduce_matrix_init(mca_coll_ml_module_t *ml_module,
                      const mca_bcol_base_component_2_0_0_t *bcol_component);
 
-static inline int mca_coll_ml_err(const char* fmt, ...)
+static int mca_coll_ml_err(const char* fmt, ...)
 {
     va_list list;
     int ret;
@@ -993,8 +993,8 @@
 /* Abort mpi process in case of fatal error */
 void mca_coll_ml_abort_ml(char *message);
 
-static inline __opal_attribute_always_inline__
-        int mca_coll_ml_buffer_recycling(mca_coll_ml_collective_operation_progress_t *ml_request)
+
+static int mca_coll_ml_buffer_recycling(mca_coll_ml_collective_operation_progress_t *ml_request)
 {
     mca_coll_ml_module_t *ml_module = (mca_coll_ml_module_t *)ml_request->coll_module;
     ml_memory_block_desc_t *ml_memblock = ml_module->payload_block;
@@ -1443,7 +1443,7 @@
         op->fragment_data.current_coll_op         = -1;                                     \
     } while (0)
 
-static inline __opal_attribute_always_inline__ mca_coll_ml_collective_operation_progress_t *
+static mca_coll_ml_collective_operation_progress_t *
 mca_coll_ml_alloc_op_prog_single_frag_dag(
         mca_coll_ml_module_t *ml_module,
         mca_coll_ml_collective_operation_description_t *coll_schedule,
