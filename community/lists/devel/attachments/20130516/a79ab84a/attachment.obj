Index: ompi/mca/bcol/base/bcol_base_frame.c
===================================================================
--- ompi/mca/bcol/base/bcol_base_frame.c	(revision 28531)
+++ ompi/mca/bcol/base/bcol_base_frame.c	(working copy)
@@ -1,6 +1,7 @@
 /*
  * Copyright (c) 2009-2012 Oak Ridge National Laboratory.  All rights reserved.
  * Copyright (c) 2009-2012 Mellanox Technologies.  All rights reserved.
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  *
  * Additional copyrights may follow
@@ -269,10 +270,6 @@
     int bcol_fn;
 
     for (bcol_fn = 0; bcol_fn < BCOL_NUM_OF_FUNCTIONS; bcol_fn++){
-        opal_list_t *tmp_list;
-
-        tmp_list = &bcol_module->bcol_fns_table[bcol_fn];
-
         /* gvm FIX: Go through the list and destroy each item */
         /* Destroy the function table object for each bcol type list */
         OBJ_DESTRUCT(&(bcol_module->bcol_fns_table[bcol_fn]));
Index: ompi/mca/bcol/basesmuma/bcol_basesmuma_bcast_prime.c
===================================================================
--- ompi/mca/bcol/basesmuma/bcol_basesmuma_bcast_prime.c	(revision 28531)
+++ ompi/mca/bcol/basesmuma/bcol_basesmuma_bcast_prime.c	(working copy)
@@ -1,6 +1,7 @@
 /*
  * Copyright (c) 2009-2012 Oak Ridge National Laboratory.  All rights reserved.
  * Copyright (c) 2009-2012 Mellanox Technologies.  All rights reserved.
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  *
  * Additional copyrights may follow
@@ -252,9 +253,6 @@
     int count=input_args->count;
     struct ompi_datatype_t* dtype=input_args->dtype;
     int64_t sequence_number=input_args->sequence_num;
-    
-
-    int pow_k_levels;
     int radix = cs->k_nomial_radix;
     int radix_mask;
     int relative_rank;
@@ -264,9 +262,7 @@
     int bcol_id = (int) bcol_module->super.bcol_id;
     volatile mca_bcol_basesmuma_payload_t *data_buffs;
     volatile void* parent_data_pointer;
-    volatile void* my_data_pointer;
     
-    
     volatile mca_bcol_basesmuma_header_t *child_ctl_pointer;
     volatile mca_bcol_basesmuma_header_t *my_ctl_pointer;
     
@@ -294,15 +290,12 @@
     idx=SM_ARRAY_INDEX(leading_dim,buff_idx,0);
 
     /* get pow_k_levels and pow_k_group_size */
-    pow_k_levels = bcol_module->pow_k_levels;
     pow_k_group_size = bcol_module->pow_k;
     
     
     data_buffs=(volatile mca_bcol_basesmuma_payload_t *)
         bcol_module->colls_with_user_data.data_buffs+idx;
      
-    my_data_pointer = data_buffs[my_rank].payload;
-
     /* Set pointer to current proc ctrl region */
     my_ctl_pointer = data_buffs[my_rank].ctl_struct; 
    
Index: ompi/mca/bcol/basesmuma/bcol_basesmuma_rd_nb_barrier.c
===================================================================
--- ompi/mca/bcol/basesmuma/bcol_basesmuma_rd_nb_barrier.c	(revision 28531)
+++ ompi/mca/bcol/basesmuma/bcol_basesmuma_rd_nb_barrier.c	(working copy)
@@ -1,6 +1,7 @@
 /*
  * Copyright (c) 2009-2010 UT-Battelle, LLC. All rights reserved.
  * Copyright (c) 2009-2010 Mellanox Technologies. All rights reserved.
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  *
  * Additional copyrights may follow
@@ -36,7 +37,7 @@
     int pair_rank;
     mca_bcol_basesmuma_ctl_struct_t **ctl_structs;
     netpatterns_pair_exchange_node_t *my_exchange_node;
-    int extra_rank, my_rank, pow_2;
+    int extra_rank, my_rank;
     mca_bcol_basesmuma_ctl_struct_t volatile *partner_ctl;
     mca_bcol_basesmuma_ctl_struct_t volatile *my_ctl;
     int64_t bank_genaration;
@@ -54,7 +55,6 @@
     
 	my_exchange_node=&(bcol_module->recursive_doubling_tree);
     my_rank=bcol_module->super.sbgp_partner_module->my_index;
-    pow_2=bcol_module->super.sbgp_partner_module->pow_2;
     my_ctl=ctl_structs[my_rank];
     /* debug print */
     /*
@@ -206,7 +206,7 @@
     int pair_rank, start_index, restart_phase;
     mca_bcol_basesmuma_ctl_struct_t **ctl_structs;
     netpatterns_pair_exchange_node_t *my_exchange_node;
-    int extra_rank, my_rank, pow_2;
+    int extra_rank, my_rank;
     mca_bcol_basesmuma_ctl_struct_t volatile *partner_ctl;
     mca_bcol_basesmuma_ctl_struct_t volatile *my_ctl;
     int64_t bank_genaration;
@@ -224,7 +224,6 @@
 
     my_exchange_node=&(bcol_module->recursive_doubling_tree);
     my_rank=bcol_module->super.sbgp_partner_module->my_index;
-    pow_2=bcol_module->super.sbgp_partner_module->pow_2;
     my_ctl=ctl_structs[my_rank];
 
     /* check to make sure that this should be progressed */
Index: ompi/mca/dpm/base/dpm_base_common_fns.c
===================================================================
--- ompi/mca/dpm/base/dpm_base_common_fns.c	(revision 28531)
+++ ompi/mca/dpm/base/dpm_base_common_fns.c	(working copy)
@@ -13,7 +13,7 @@
  * Copyright (c) 2006-2007 University of Houston. All rights reserved.
  * Copyright (c) 2006-2007 Los Alamos National Security, LLC.  All rights
  *                         reserved. 
- * Copyright (c) 2007      Cisco Systems, Inc. All rights reserved.
+ * Copyright (c) 2007-2013 Cisco Systems, Inc.  All rights reserved.
  *
  * $COPYRIGHT$
  *
@@ -184,7 +184,6 @@
     char *treq=NULL;
     int totalcount = 0;
     int i;
-    int ret;
 
     for (i=0; i<count; i++) {
         if (NULL == objs[i]) {
@@ -209,7 +208,7 @@
     }
 
     /* force all non-blocking all-to-alls to finish */
-    ret = ompi_request_wait_all (2*totalcount, reqs, MPI_STATUSES_IGNORE);
+    ompi_request_wait_all (2*totalcount, reqs, MPI_STATUSES_IGNORE);
 
     /* Finally, free everything */
     for (i=0; i< count; i++ ) {
Index: opal/class/opal_tree.c
===================================================================
--- opal/class/opal_tree.c	(revision 28531)
+++ opal/class/opal_tree.c	(working copy)
@@ -4,6 +4,7 @@
  * Copyright (c) 2012      The University of Tennessee and The University
  *                         of Tennessee Research Foundation.  All rights
  *                         reserved.
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -566,7 +567,6 @@
 
 opal_tree_item_t *opal_tree_dup_item(opal_tree_t *base, opal_tree_item_t *from)
 {
-    int ret;
     opal_buffer_t *buffer = NULL;
     opal_tree_item_t *new_item = NULL;
 
@@ -575,7 +575,7 @@
     opal_tree_serialize(from, buffer);
 
     new_item = OBJ_NEW(opal_tree_item_t);
-    ret = opal_tree_deserialize(buffer, new_item);
+    opal_tree_deserialize(buffer, new_item);
 
     OBJ_RELEASE(buffer);
     return new_item;
@@ -670,7 +670,7 @@
  */
 opal_tree_item_t *opal_tree_find_with(opal_tree_item_t *item, void *key)
 {
-    opal_tree_item_t *root, *curr_item = item, *result = NULL;
+    opal_tree_item_t *curr_item = item, *result = NULL;
     
     if (!opal_tree_is_empty(item->opal_tree_container)) {
         /* check my descendant for a match */
@@ -684,7 +684,6 @@
         }
             
         /* check my ancestors (uncles) for match */
-        root = opal_tree_get_root(item->opal_tree_container);
         curr_item = item;
         while (!result && curr_item && curr_item->opal_tree_num_ancestors > 0){
             curr_item = opal_tree_get_next_sibling(item->opal_tree_parent);
Index: opal/mca/base/mca_base_var.c
===================================================================
--- opal/mca/base/mca_base_var.c	(revision 28531)
+++ opal/mca/base/mca_base_var.c	(working copy)
@@ -10,7 +10,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2008-2011 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2008-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2012-2013 Los Alamos National Security, LLC. All rights
  *                         reserved.
  * $COPYRIGHT$
@@ -2008,7 +2008,7 @@
 
 int mca_base_var_dump(int index, char ***out, mca_base_var_dump_type_t output_type)
 {
-    const char *project, *framework, *component, *full_name;
+    const char *framework, *component, *full_name;
     int i, line_count, line = 0, enum_count = 0;
     char *value_string, *source_string, *tmp;
     const mca_base_var_storage_t *value;
@@ -2039,7 +2039,6 @@
         return ret;
     }
 
-    project   = group->group_project;
     framework = group->group_framework;
     component = group->group_component ? group->group_component : "base";
     full_name = var->mbv_full_name;
Index: opal/mca/base/mca_base_var_enum.c
===================================================================
--- opal/mca/base/mca_base_var_enum.c	(revision 28531)
+++ opal/mca/base/mca_base_var_enum.c	(working copy)
@@ -10,7 +10,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2008-2011 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2008-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2012-2013 Los Alamos National Security, LLC. All rights
  *                         reserved.
  * $COPYRIGHT$
@@ -63,7 +63,7 @@
 
 static int enum_dump (mca_base_var_enum_t *self, char **out)
 {
-    size_t len, i;
+    size_t i;
     char *tmp;
     int ret;
 
@@ -74,7 +74,7 @@
     }
 
     tmp = NULL;
-    for (i = 0, len = 0 ; self->enum_values[i].string ; ++i) {
+    for (i = 0; self->enum_values[i].string ; ++i) {
         ret = asprintf (out, "%s%s%d:\"%s\"", tmp ? tmp : "", tmp ? ", " : "", self->enum_values[i].value,
                         self->enum_values[i].string);
         if (tmp) free (tmp);
Index: opal/runtime/opal_cr.c
===================================================================
--- opal/runtime/opal_cr.c	(revision 28531)
+++ opal/runtime/opal_cr.c	(working copy)
@@ -12,7 +12,7 @@
  * Copyright (c) 2007-2013 Los Alamos National Security, LLC.  All rights
  *                         reserved. 
  * Copyright (c) 2011      Oak Ridge National Labs.  All rights reserved.
- * Copyright (c) 2012 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2012-2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  *
  * Additional copyrights may follow
@@ -917,7 +917,6 @@
 }
 
 int opal_cr_refresh_environ(int prev_pid) {
-    int val;
     char *file_name = NULL;
 #if OPAL_ENABLE_CRDEBUG == 1
     char *tmp;
@@ -957,8 +956,6 @@
     opal_output_verbose(10, opal_cr_output,
                         "opal_cr: init: C/R Debugging Enabled [%s] (refresh)\n",
                         (MPIR_debug_with_checkpoint ? "True": "False"));
-#else
-    val = 0; /* Silence Compiler warning */
 #endif
 
     if( NULL != file_name ){
Index: opal/util/if.c
===================================================================
--- opal/util/if.c	(revision 28531)
+++ opal/util/if.c	(working copy)
@@ -309,9 +309,7 @@
             
             if (AF_INET == r->ai_family) {
                 struct sockaddr_in ipv4;
-                struct sockaddr_in *inaddr;
 
-                inaddr = (struct sockaddr_in*) &intf->if_addr;
                 memcpy (&ipv4, r->ai_addr, r->ai_addrlen);
                 if (opal_net_samenetwork((struct sockaddr*)&ipv4, (struct sockaddr*)&intf->if_addr, intf->if_mask)) {
                     return intf->if_kernel_index;
Index: orte/mca/dfs/orted/dfs_orted.c
===================================================================
--- orte/mca/dfs/orted/dfs_orted.c	(revision 28531)
+++ orte/mca/dfs/orted/dfs_orted.c	(working copy)
@@ -1,6 +1,7 @@
 /*
  * Copyright (c) 2012-2013 Los Alamos National Security, LLC.
  *                         All rights reserved.
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -1285,7 +1286,7 @@
     orte_dfs_cmd_t cmd;
     int32_t cnt;
     opal_list_item_t *item;
-    int remote_fd, my_fd;
+    int my_fd;
     int32_t rc, nmaps;
     char *filename;
     orte_dfs_tracker_t *trk;
@@ -1581,7 +1582,6 @@
 
     case ORTE_DFS_READ_CMD:
         /* set default error */
-        remote_fd = -1;
         my_fd = -1;
         bytes_read = -1;
         read_buf = NULL;
Index: orte/mca/errmgr/default_orted/errmgr_default_orted.c
===================================================================
--- orte/mca/errmgr/default_orted/errmgr_default_orted.c	(revision 28531)
+++ orte/mca/errmgr/default_orted/errmgr_default_orted.c	(working copy)
@@ -1,7 +1,7 @@
 /*
  * Copyright (c) 2009-2010 The Trustees of Indiana University.
  *                         All rights reserved.
- * Copyright (c) 2010      Cisco Systems, Inc.  All rights reserved. 
+ * Copyright (c) 2010-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2010-2011 Oak Ridge National Labs.  All rights reserved.
  * Copyright (c) 2004-2011 The University of Tennessee and The University
  *                         of Tennessee Research Foundation.  All rights
@@ -213,7 +213,6 @@
 {
     orte_state_caddy_t *caddy = (orte_state_caddy_t*)cbdata;
     orte_job_t *jdata;
-    orte_proc_t *pptr;
     orte_process_name_t *proc = &caddy->name;
     orte_proc_state_t state = caddy->proc_state;
 
@@ -304,7 +303,6 @@
         /* must already be complete */
         goto cleanup;
     }
-    pptr = (orte_proc_t*)opal_pointer_array_get_item(jdata->procs, proc->vpid);
 
     /* if there are no local procs for this job, we can
      * ignore this call
Index: orte/mca/odls/base/odls_base_default_fns.c
===================================================================
--- orte/mca/odls/base/odls_base_default_fns.c	(revision 28531)
+++ orte/mca/odls/base/odls_base_default_fns.c	(working copy)
@@ -13,7 +13,7 @@
  * Copyright (c) 2011      Oak Ridge National Labs.  All rights reserved.
  * Copyright (c) 2011-2013 Los Alamos National Security, LLC.
  *                         All rights reserved.
- * Copyright (c) 2011      Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2011-2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -1088,7 +1088,6 @@
     orte_proc_t *child=NULL;
     bool oversubscribed;
     int rc=ORTE_SUCCESS;
-    opal_buffer_t *alert;
     orte_std_cntr_t proc_rank;
     char basedir[MAXPATHLEN];
     char **argvsav=NULL;
@@ -1177,9 +1176,6 @@
     orte_sstore.wait_all_deps();
 #endif
 
-    /* setup to report the proc state to the HNP */
-    alert = OBJ_NEW(opal_buffer_t);
-    
     /* compute the total number of local procs currently alive and about to be launched */
     total_num_local_procs = compute_num_procs_alive(job) + jobdat->num_local_procs;
 
Index: orte/mca/oob/tcp/oob_tcp.c
===================================================================
--- orte/mca/oob/tcp/oob_tcp.c	(revision 28531)
+++ orte/mca/oob/tcp/oob_tcp.c	(working copy)
@@ -11,7 +11,7 @@
  *                         All rights reserved.
  * Copyright (c) 2006-2013 Los Alamos National Security, LLC. 
  *                         All rights reserved.
- * Copyright (c) 2009-2012 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2009-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2011      Oak Ridge National Labs.  All rights reserved.
  * $COPYRIGHT$
  *
@@ -184,9 +184,11 @@
     mca_base_component_t *component = &mca_oob_tcp_component.super.oob_base;
     mca_base_var_enum_t *new_enum;
     int var_id;
+#if OPAL_WANT_IPV6
 #if ORTE_ENABLE_STATIC_PORTS
     bool ip4_ports_given = false;
 #endif
+#endif
 
     verbose_value = 0;
     (void) mca_base_component_var_register (component, "verbose",
@@ -315,7 +317,9 @@
 
     /* if ports were provided, parse the provided range */
     if (NULL != mca_oob_tcp_ipv4_static_ports) {
+#if OPAL_WANT_IPV6
         ip4_ports_given = true;
+#endif
         orte_static_ports = true;
         orte_util_parse_range_options(mca_oob_tcp_ipv4_static_ports,
                                       &mca_oob_tcp_component.tcp4_static_ports);
@@ -1780,7 +1784,6 @@
  */
 int mca_oob_tcp_init(void)
 {
-    orte_jobid_t jobid;
     int rc;
     int randval = orte_process_info.num_procs;
 
@@ -1793,9 +1796,6 @@
     }
 #endif
 
-    /* get my jobid */
-    jobid = ORTE_PROC_MY_NAME->jobid;
-
     /* Fix up the listen type.  This is the first call into the OOB in
        which the ORTE_PROC_IS_HNP field is reliably set.  The
        listen_mode should only be listen_thread for the HNP -- all
Index: orte/mca/ras/slurm/ras_slurm_module.c
===================================================================
--- orte/mca/ras/slurm/ras_slurm_module.c	(revision 28531)
+++ orte/mca/ras/slurm/ras_slurm_module.c	(working copy)
@@ -619,7 +619,6 @@
     char *str, temp1[BUFSIZ];
     size_t i, j, start, end;
     size_t base_len, len, num_len;
-    size_t str_start, str_end;
     size_t num_str_len;
     bool found;
     int ret;
@@ -635,7 +634,6 @@
     for (found = false, i = 0; i < len; ++i) {
         if (isdigit((int) range[i])) {
             if (!found) {
-                str_start = i;
                 start = atoi(range + i);
                 found = true;
                 break;
@@ -658,7 +656,6 @@
     /* Was there no range, just a single number? */
     
     if (i >= len) {
-        str_end = len;
         end = start;
         found = true;
     }
@@ -667,7 +664,6 @@
        number */
     
     else {
-        str_end = i - 1;
         for (; i < len; ++i) {
             if (isdigit((int) range[i])) {
                 end = atoi(range + i);
Index: orte/mca/rmaps/rank_file/rmaps_rank_file.c
===================================================================
--- orte/mca/rmaps/rank_file/rmaps_rank_file.c	(revision 28531)
+++ orte/mca/rmaps/rank_file/rmaps_rank_file.c	(working copy)
@@ -9,7 +9,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2006-2011 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2006-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2011-2013 Los Alamos National Security, LLC.
  *                         All rights reserved.
  * Copyright (c) 2008      Voltaire. All rights reserved
@@ -71,7 +71,7 @@
     opal_list_item_t *item;
     orte_node_t *node, *nd, *root_node;
     orte_vpid_t rank, vpid_start;
-    orte_std_cntr_t num_nodes, num_slots;
+    orte_std_cntr_t num_slots;
     orte_rmaps_rank_file_map_t *rfmap;
     orte_std_cntr_t relative_index, tmp_cnt;
     int rc;
@@ -162,7 +162,6 @@
             ORTE_ERROR_LOG(rc);
             goto error;
         }
-        num_nodes = (orte_std_cntr_t)opal_list_get_size(&node_list);
         /* flag that all subsequent requests should not reset the node->mapped flag */
         initial_map = false;
 
@@ -348,7 +347,6 @@
     int rc = ORTE_SUCCESS;
     int cnt;
     char* node_name = NULL;
-    char* username = NULL; 
     char** argv;
     char buff[64];
     char* value;
@@ -444,7 +442,6 @@
                         if (1 == cnt) {
                             node_name = strdup(argv[0]);
                         } else if (2 == cnt) {
-                            username = strdup(argv[0]);
                             node_name = strdup(argv[1]);
                         }
                         else {
Index: orte/mca/rmaps/resilient/rmaps_resilient.c
===================================================================
--- orte/mca/rmaps/resilient/rmaps_resilient.c	(revision 28531)
+++ orte/mca/rmaps/resilient/rmaps_resilient.c	(working copy)
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2009-2011 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2009-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2009-2010 The Trustees of Indiana University and Indiana
  *                         University Research and Technology
  *                         Corporation.  All rights reserved.
@@ -688,7 +688,6 @@
     orte_node_t *node, *nd=NULL;
     orte_rmaps_res_ftgrp_t *ftgrp, *target = NULL;
     orte_vpid_t totprocs, num_assigned;
-    orte_proc_t *proc;
     bool initial_map=true;
 
     OPAL_OUTPUT_VERBOSE((1, orte_rmaps_base_framework.framework_output,
@@ -827,7 +826,7 @@
                 opal_pointer_array_add(map->nodes, nd);
                 nd->mapped = true;
             }
-            proc = orte_rmaps_base_setup_proc(jdata, nd, app->idx);
+            orte_rmaps_base_setup_proc(jdata, nd, app->idx);
             if ((nd->slots < (int)nd->num_procs) ||
                 (0 < nd->slots_max && nd->slots_max < (int)nd->num_procs)) {
                 if (ORTE_MAPPING_NO_OVERSUBSCRIBE & ORTE_GET_MAPPING_DIRECTIVE(jdata->map->mapping)) {
Index: orte/mca/rmaps/round_robin/rmaps_rr.c
===================================================================
--- orte/mca/rmaps/round_robin/rmaps_rr.c	(revision 28531)
+++ orte/mca/rmaps/round_robin/rmaps_rr.c	(working copy)
@@ -9,7 +9,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2006-2011 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2006-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2011-2012 Los Alamos National Security, LLC.
  *                         All rights reserved.
  * $COPYRIGHT$
@@ -48,7 +48,7 @@
     int i;
     opal_list_t node_list;
     opal_list_item_t *item;
-    orte_std_cntr_t num_nodes, num_slots;
+    orte_std_cntr_t num_slots;
     int rc;
     mca_base_component_t *c = &mca_rmaps_round_robin_component.base_version;
     bool initial_map=true;
@@ -121,7 +121,6 @@
             ORTE_ERROR_LOG(rc);
             goto error;
         }
-        num_nodes = (orte_std_cntr_t)opal_list_get_size(&node_list);
         /* flag that all subsequent requests should not reset the node->mapped flag */
         initial_map = false;
 
Index: orte/mca/rmaps/round_robin/rmaps_rr_mappers.c
===================================================================
--- orte/mca/rmaps/round_robin/rmaps_rr_mappers.c	(revision 28531)
+++ orte/mca/rmaps/round_robin/rmaps_rr_mappers.c	(working copy)
@@ -9,7 +9,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2009-2011 Cisco Systems, Inc.  All rights reserved. 
+ * Copyright (c) 2009-2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  *
  * Additional copyrights may follow
@@ -434,7 +434,6 @@
     unsigned int nobjs;
     float balance;
     bool add_one=false;
-    bool oversubscribed = false;
 
     /* there are two modes for mapping by object: span and not-span. The
      * span mode essentially operates as if there was just a single
@@ -471,7 +470,6 @@
                            true, app->num_procs, app->app);
             return ORTE_ERR_SILENT;
         }
-        oversubscribed = true;
         /* compute how many extra procs to put on each node */
         balance = (float)((jdata->num_procs + app->num_procs) - num_slots) / (float)opal_list_get_size(node_list);
         extra_procs_to_assign = (int)balance;
Index: orte/mca/rml/base/rml_base_frame.c
===================================================================
--- orte/mca/rml/base/rml_base_frame.c	(revision 28531)
+++ orte/mca/rml/base/rml_base_frame.c	(working copy)
@@ -4,6 +4,7 @@
  *                         reserved.
  * Copyright (c) 2011-2013 Los Alamos National Security, LLC.  All rights
  *                         reserved. 
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -107,9 +108,7 @@
     orte_rml_component_t *selected_component = NULL;
     orte_rml_module_t *selected_module = NULL;
 
-    int wrapper_priority = -1;
     orte_rml_component_t *wrapper_component = NULL;
-    orte_rml_module_t *wrapper_module = NULL;
     bool return_silent=false;
 
     if (selected) {
@@ -153,9 +152,7 @@
                 if( 0 == strncmp(component->rml_version.mca_component_name, 
                                  orte_rml_base_wrapper,
                                  strlen(orte_rml_base_wrapper) ) ) {
-                    wrapper_priority  = priority;
                     wrapper_component = component;
-                    wrapper_module    = module;
                 }
             } else if (priority > selected_priority) {
                 /* Otherwise this is a normal module and subject to normal selection */
Index: orte/mca/snapc/base/snapc_base_fns.c
===================================================================
--- orte/mca/snapc/base/snapc_base_fns.c	(revision 28531)
+++ orte/mca/snapc/base/snapc_base_fns.c	(working copy)
@@ -9,6 +9,7 @@
  *                         All rights reserved.
  * Copyright (c) 2007      Evergrid, Inc. All rights reserved.
  *
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -357,7 +358,7 @@
                                               orte_rml_tag_t tag,
                                               void* cbdata)
 {
-    int ret, exit_status = ORTE_SUCCESS;
+    int ret;
     orte_snapc_cmd_flag_t command;
     orte_std_cntr_t n = 1;
     opal_crs_base_ckpt_options_t *options = NULL;
@@ -368,7 +369,6 @@
     n = 1;
     if (ORTE_SUCCESS != (ret = opal_dss.unpack(buffer, &command, &n, ORTE_SNAPC_CMD))) {
         ORTE_ERROR_LOG(ret);
-        exit_status = ret;
         goto cleanup;
     }
 
@@ -382,7 +382,6 @@
          */
         if( ORTE_SUCCESS != (ret = orte_snapc_base_global_coord_ckpt_init_cmd(sender, buffer, options, &jobid)) ) {
             ORTE_ERROR_LOG(ret);
-            exit_status = ret;
             goto cleanup;
         }
 
@@ -391,7 +390,6 @@
          */
         if( ORTE_SUCCESS != (ret = orte_snapc_base_global_coord_ckpt_update_cmd(sender, 0, ORTE_SNAPC_CKPT_STATE_NO_CKPT)) ) {
             ORTE_ERROR_LOG(ret);
-            exit_status = ret;
             goto cleanup;
         }
     }
Index: orte/orted/orted_main.c
===================================================================
--- orte/orted/orted_main.c	(revision 28531)
+++ orte/orted/orted_main.c	(working copy)
@@ -9,7 +9,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2007-2011 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2007-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2007-2013 Los Alamos National Security, LLC.  All rights
  *                         reserved. 
  * Copyright (c) 2009      Institut National de Recherche en Informatique
@@ -232,7 +232,9 @@
     int i;
     opal_buffer_t *buffer;
     char hostname[100];
+#if OPAL_ENABLE_FT_CR == 1
     char *tmp_env_var = NULL;
+#endif
     
     /* initialize the globals */
     memset(&orted_globals, 0, sizeof(orted_globals));
@@ -330,7 +332,6 @@
                 true, &environ);
     free(tmp_env_var);
 #endif
-    tmp_env_var = NULL; /* Silence compiler warning */
 
     /* if mapreduce set, flag it */
     if (orted_globals.mapreduce) {
Index: orte/runtime/orte_quit.c
===================================================================
--- orte/runtime/orte_quit.c	(revision 28531)
+++ orte/runtime/orte_quit.c	(working copy)
@@ -10,7 +10,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2006-2011 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2006-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2007-2009 Sun Microsystems, Inc. All rights reserved.
  * Copyright (c) 2007-2013 Los Alamos National Security, LLC.  All rights
  *                         reserved. 
@@ -147,7 +147,7 @@
 {
     orte_std_cntr_t i, n;
     orte_proc_t *proc, *pptr;
-    orte_app_context_t *app, *approc;
+    orte_app_context_t *approc;
     orte_job_t *job;
     orte_node_t *node;
     
@@ -167,8 +167,6 @@
             ORTE_JOB_STATE_ABORT_ORDERED != job->state) {
             /* this is a guilty party */
             proc = job->aborted_proc;
-            /* always must be at least one app */
-            app = (orte_app_context_t*)opal_pointer_array_get_item(job->apps, 0);
             /* cycle through and count the number that were killed or aborted */
             for (i=0; i < job->procs->size; i++) {
                 if (NULL == (pptr = (orte_proc_t*)opal_pointer_array_get_item(job->procs, i))) {
Index: orte/tools/orte-clean/orte-clean.c
===================================================================
--- orte/tools/orte-clean/orte-clean.c	(revision 28531)
+++ orte/tools/orte-clean/orte-clean.c	(working copy)
@@ -12,7 +12,7 @@
  * Copyright (c) 2007-2008 Sun Microsystems, Inc.  All rights reserved.
  * Copyright (c) 2007-2013 Los Alamos National Security, LLC.  All rights
  *                         reserved. 
- * Copyright (c) 2011-2012 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2011-2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -123,7 +123,9 @@
 main(int argc, char *argv[])
 {
     int ret = ORTE_SUCCESS;
+#if OPAL_ENABLE_FT_CR == 1
     char *tmp_env_var;
+#endif
 
     /* This is needed so we can print the help message */
     if (ORTE_SUCCESS != (ret = opal_init_util(&argc, &argv))) {
@@ -153,8 +155,6 @@
     opal_setenv(tmp_env_var,
                 "1", true, NULL);
     free(tmp_env_var);
-#else
-    tmp_env_var = NULL; /* Silence compiler warning */
 #endif
 
     if (ORTE_SUCCESS != (ret = orte_init(&argc, &argv, ORTE_PROC_TOOL))) {
Index: orte/tools/orte-ps/orte-ps.c
===================================================================
--- orte/tools/orte-ps/orte-ps.c	(revision 28531)
+++ orte/tools/orte-ps/orte-ps.c	(working copy)
@@ -9,7 +9,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2006-2012 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2006-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2007      Sun Microsystems, Inc.  All rights reserved.
  * Copyright (c) 2007      Los Alamos National Security, LLC.  All rights
  *                         reserved. 
@@ -367,7 +367,9 @@
 
 static int orte_ps_init(int argc, char *argv[]) {
     int ret;
+#if OPAL_ENABLE_FT_CR == 1
     char * tmp_env_var = NULL;
+#endif
 
     /*
      * Make sure to init util before parse_args
@@ -415,8 +417,6 @@
                 "1",
                 true, &environ);
     free(tmp_env_var);
-#else
-    tmp_env_var = NULL; /* Silence compiler warning */
 #endif
 
     /***************************
@@ -533,7 +533,9 @@
     orte_std_cntr_t i;
     char *jobstr;
     orte_jobid_t mask=0x0000ffff;
+#if OPAL_ENABLE_FT_CR == 1
     char * state_str = NULL;
+#endif
 
     for(i=0; i < num_jobs; i++) {
         job = jobs[i];
@@ -569,7 +571,6 @@
                              strlen("Ckpt Loc") :
                              strlen(job->ckpt_snapshot_loc) ) );
 #else
-        state_str = NULL;
         len_ckpt_s = -3;
         len_ckpt_r = -3;
         len_ckpt_l = -3;
@@ -642,7 +643,9 @@
     orte_proc_t *vpid;
     orte_app_context_t *app;
     char *o_proc_name;
+#if OPAL_ENABLE_FT_CR == 1
     char *state_str = NULL;
+#endif
 
     /*
      * Caculate segment lengths
@@ -719,8 +722,6 @@
         if( NULL != vpid->ckpt_snapshot_loc &&
             (int)strlen(vpid->ckpt_snapshot_loc) > len_ckpt_l) 
             len_ckpt_l = strlen(vpid->ckpt_snapshot_loc);
-#else
-        state_str = NULL;
 #endif
     }
 
Index: orte/tools/orte-server/orte-server.c
===================================================================
--- orte/tools/orte-server/orte-server.c	(revision 28531)
+++ orte/tools/orte-server/orte-server.c	(working copy)
@@ -9,7 +9,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2007-2012 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2007-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2007-2012 Los Alamos National Security, LLC.  All rights
  *                         reserved. 
  * $COPYRIGHT$
@@ -107,7 +107,9 @@
     int ret = 0;
     opal_cmd_line_t *cmd_line = NULL;
     char *rml_uri;
+#if OPAL_ENABLE_FT_CR == 1
     char * tmp_env_var = NULL;
+#endif
 
     /* init enough of opal to process cmd lines */
     if (OPAL_SUCCESS != opal_init_util(&argc, &argv)) {
@@ -186,8 +188,6 @@
                 "1",
                 true, &environ);
     free(tmp_env_var);
-#else
-    tmp_env_var = NULL; /* Silence compiler warning */
 #endif
 
     /* don't want session directories */
Index: orte/tools/orterun/orterun.c
===================================================================
--- orte/tools/orterun/orterun.c	(revision 28531)
+++ orte/tools/orterun/orterun.c	(working copy)
@@ -10,7 +10,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
- * Copyright (c) 2006-2012 Cisco Systems, Inc.  All rights reserved.
+ * Copyright (c) 2006-2013 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2007-2009 Sun Microsystems, Inc. All rights reserved.
  * Copyright (c) 2007-2013 Los Alamos National Security, LLC.  All rights
  *                         reserved. 
@@ -596,11 +596,13 @@
 {
     int rc;
     opal_cmd_line_t cmd_line;
-    char *tmp_env_var = NULL;
     char *param;
     orte_job_t *daemons;
     orte_app_context_t *app, *dapp;
     orte_job_t *jdata=NULL, *jptr;
+#if OPAL_ENABLE_FT_CR == 1
+    char *tmp_env_var = NULL;
+#endif
 
     /* find our basename (the name of the executable) so that we can
        use it in pretty-print error messages */
@@ -808,7 +810,6 @@
                 true, &environ);
     free(tmp_env_var);
 #endif
-    tmp_env_var = NULL; /* Silence compiler warning */
 
     /* Intialize our Open RTE environment
      * Set the flag telling orte_init that I am NOT a
Index: orte/util/dash_host/dash_host.c
===================================================================
--- orte/util/dash_host/dash_host.c	(revision 28531)
+++ orte/util/dash_host/dash_host.c	(working copy)
@@ -9,6 +9,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -239,7 +240,6 @@
                                      bool remove)
 {
     opal_list_item_t* item;
-    bool found;
     opal_list_item_t *next;
     orte_std_cntr_t i, j, len_mapped_node=0;
     int rc;
@@ -339,7 +339,6 @@
                 next = opal_list_get_next(item);  /* save this position */
                 node = (orte_node_t*)item;
                 /* search -host list to see if this one is found */
-                found = false;
                 if (0 == strcmp(node->name, mapped_nodes[i]) ||
                     (0 == strcmp(node->name, hnp_node->name) &&
                     (0 == strcasecmp(mapped_nodes[i], "localhost") || opal_ifislocal(mapped_nodes[i])))) {
Index: orte/util/regex.c
===================================================================
--- orte/util/regex.c	(revision 28531)
+++ orte/util/regex.c	(working copy)
@@ -9,6 +9,7 @@
  *                         University of Stuttgart.  All rights reserved.
  * Copyright (c) 2004-2005 The Regents of the University of California.
  *                         All rights reserved.
+ * Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -518,7 +519,6 @@
     char *str, tmp[132];
     size_t i, k, start, end;
     size_t base_len, len;
-    size_t str_start, str_end;
     bool found;
     int ret;
     
@@ -533,7 +533,6 @@
     for (found = false, i = 0; i < len; ++i) {
         if (isdigit((int) range[i])) {
             if (!found) {
-                str_start = i;
                 start = atoi(range + i);
                 found = true;
                 break;
@@ -556,14 +555,12 @@
     /* Was there no range, just a single number? */
     
     if (i >= len) {
-        str_end = len;
         end = start;
         found = true;
     } else {
         /* Nope, there was a range.  Look for the beginning of the second
          * number
          */
-        str_end = i - 1;
         for (; i < len; ++i) {
             if (isdigit(range[i])) {
                 end = strtol(range + i, NULL, 10);
