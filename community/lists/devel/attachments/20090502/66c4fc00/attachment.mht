[From nobody Sat May  2 07:28:34 2009
Return-path: &lt;brianblank@gmail.com&gt;
Received: from fe-amer-09.sun.com ([unknown] [192.18.109.79])
	by amer5-mail1.central.sun.com
	(Sun Java(tm) System Messaging Server 7.0-5.01 64bit (built Feb 19
	2009))
	with ESMTP id &lt;0KIZ00NXZ2UU3I80@amer5-mail1.central.sun.com&gt; for
	tdd@amer5-mail1.Central.Sun.COM; Fri, 01 May 2009 09:54:30 -0600 (MDT)
Received: from conversion-daemon.mail-amer.sun.com by mail-amer.sun.com
	(Sun Java(tm) System Messaging Server 7.0-5.01 64bit (built Feb 19
	2009)) id &lt;0KIZ00I002GN2A00@mail-amer.sun.com&gt; for
	tdd@amer5-mail1.Central.Sun.COM
	(ORCPT Terry.Dontje@sun.com); Fri, 01 May 2009 09:54:30 -0600 (MDT)
Received: from phys-amer5-2.central.sun.com ([unknown] [129.147.157.57])
	by mail-amer.sun.com
	(Sun Java(tm) System Messaging Server 7.0-5.01 64bit (built Feb 19
	2009)) with ESMTP id &lt;0KIZ002BJ2UT12F0@mail-amer.sun.com&gt; for
	tdd@amer5-mail1.Central.Sun.COM (ORCPT Terry.Dontje@sun.com); Fri,
	01 May 2009 09:54:29 -0600 (MDT)
Received: from dm-east-02.east.sun.com ([unknown] [129.148.13.5])
	by amer5-mail1.central.sun.com
	(Sun Java(tm) System Messaging Server 7.0-5.01 64bit (built Feb 19
	2009))
	with ESMTP id &lt;0KIZ00NXL2UT3I80@amer5-mail1.central.sun.com&gt; for
	tdd@amer5-mail1.Central.Sun.COM (ORCPT Terry.Dontje@sun.com); Fri,
	01 May 2009 09:54:29 -0600 (MDT)
Received: from sunmail3mpk.sfbay.sun.com
	(sunmail3mpk.SFBay.Sun.COM [129.146.11.52])	by dm-east-02.east.sun.com
	(8.13.8+Sun/8.13.8/ENSMAIL,v2.2) with ESMTP id n41FsSqE045500	for
	&lt;terry.dontje@east.sun.com&gt;; Fri, 01 May 2009 11:54:28 -0400 (EDT)
Received: from nwk-avmta-1.SFBay.Sun.COM
	(nwk-avmta-1.SFBay.Sun.COM [129.146.11.74])	by
	sunmail3mpk.sfbay.sun.com
	(8.13.7+Sun/8.13.7/ENSMAIL,v2.2) with ESMTP id n41FsRZG002058	for
	&lt;@sunmail2sca.sfbay.sun.com:Terry.Dontje@sun.com&gt;; Fri,
	01 May 2009 08:54:27 -0700 (PDT)
Received: from pmxchannel-daemon.nwk-avmta-1.sfbay.Sun.COM by
	nwk-avmta-1.sfbay.Sun.COM
	(Sun Java System Messaging Server 6.2-3.04 (built Jul 15 2005))
	id &lt;0KIZ003032URMK00@nwk-avmta-1.sfbay.Sun.COM&gt; for
	Terry.Dontje@sun.com
	(ORCPT Terry.Dontje@sun.com); Fri, 01 May 2009 08:54:27 -0700 (PDT)
Received: from sca-ea-mail-4.sun.com ([192.18.43.22])
	by nwk-avmta-1.sfbay.Sun.COM
	(Sun Java System Messaging Server 6.2-3.04 (built Jul 15 2005))
	with ESMTP id &lt;0KIZ00IWV2UQG370@nwk-avmta-1.sfbay.Sun.COM&gt; for
	Terry.Dontje@sun.com (ORCPT Terry.Dontje@sun.com); Fri,
	01 May 2009 08:54:26 -0700 (PDT)
Received: from relay13i.sun.com
	(ip123.net129179-4.block1.us.syntegra.com [129.179.4.123])
	by sca-ea-mail-4.sun.com (8.13.6+Sun/8.12.9) with ESMTP id
	n41FiUrR020425	for
	&lt;Terry.Dontje@sun.com&gt;; Fri, 01 May 2009 15:54:26 +0000 (GMT)
Received: from mmp12es.mmp.us.syntegra.com ([160.41.208.12] [160.41.208.12])
	by relay13i.sun.com with ESMTP id BT-MMP-1413046 for
	Terry.Dontje@sun.com; Fri, 01 May 2009 15:54:26 +0000 (Z)
Received: from relay15i.sun.com (relay15i.sun.com [129.179.4.125])
	by mmp12es.mmp.us.syntegra.com with ESMTP id BT-MMP-43537525 for
	Terry.Dontje@sun.com; Fri, 01 May 2009 15:54:21 +0000 (Z)
Received: from mail-bw0-f176.google.com ([209.85.218.176] [209.85.218.176])
	by relay1i.sun.com with ESMTP id BT-MMP-37366566 for
	Terry.Dontje@sun.com; Fri, 01 May 2009 15:54:20 +0000 (Z)
Received: by bwz24 with SMTP id 24so2365494bwz.8 for &lt;Terry.Dontje@sun.com&gt;;
	Fri, 01 May 2009 08:54:19 -0700 (PDT)
Received: by 10.223.126.145 with SMTP id c17mr1224220fas.16.1241193259555; Fri,
	01 May 2009 08:54:19 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;        d=gmail.com;
	s=gamma;
	h=domainkey-signature:mime-version:received:in-reply-to:references
	:date:message-id:subject:from:to:content-type;
	bh=vdORwWSz62zncET+hxj2CFMy+Rm/pVbFX/uf6P97atc=;
	b=Cm7293QuaiGMMVItfTVNfG4qFevEPUVqB/EYFEDK7VG9TpR3hurVE+KOYy5m5YNCBL
	5EvqJfI1kj6Rufg3xHPleMEgRZbeDBJ4cuqFSrC57xXNWnYK/7ImAreT5x5TIDrnBA/m
	B7OyWdCTEKhrZdViheDHj/sx1Cv481Zs0tCBE=
DomainKey-Signature: a=rsa-sha1; c=nofws;        d=gmail.com; s=gamma;
	h=mime-version:in-reply-to:references:date:message-id:subject:from:to
	:content-type;
	b=oZXA0Ytx5Yd/ziHta7STPZRPtsljuv1M5982x16ky9mIMVizAHHa2NDfFZyv24xaBQ
	b7hOCt9R8faGCDLAbfmM9noM7HTek7JNhZ1BRyCtYYL8G3aTfdWh4lvOJVtKTr7wQzU8
	zSG/YkgxJ7xZaycF2RaZTNe7Txx5XbnmulsOk=
Date: Fri, 01 May 2009 11:54:19 -0400
From: Brian Blank &lt;brianblank@gmail.com&gt;
Subject: Re: [OMPI devel] Fwd: Purify found bugs inside open-mpi library
In-reply-to: &lt;49F9B18C.1080802@sun.com&gt;
To: Terry Dontje &lt;Terry.Dontje@Sun.COM&gt;
Message-id: &lt;b10b717f0905010854v3d9f9113v5e9f416bb2167c3a@mail.gmail.com&gt;
MIME-version: 1.0
Content-type: multipart/mixed; boundary=&quot;Boundary_(ID_wgNc+x0/pRTSV4YrnkN7Fg)&quot;
X-PMX-Version: 5.4.1.325704
X-Brightmail-Tracker: AAAAAA==
X-Antispam: No, score=-2.6/5.0, scanned in 2.281sec at (localhost [127.0.0.1])
	by smf-spamd v1.3.1 - http://smfs.sf.net/
References: &lt;b10b717f0904281858q3f2f091fy253856c669ce51a3@mail.gmail.com&gt;
	&lt;b10b717f0904291009u52a7df91mb9c82e62bf034f1c@mail.gmail.com&gt;
	&lt;b10b717f0904291021t2c2211baqd1c548e466eeb40c@mail.gmail.com&gt;
	&lt;EF26A632-E2C5-4F66-9CF3-F7E928BFBC11@cisco.com&gt;
	&lt;79D9F0E6-9066-4793-B62D-1A6D6F1DCE3A@gmail.com&gt;
	&lt;49F9B18C.1080802@sun.com&gt;
Original-recipient: rfc822;Terry.Dontje@sun.com


--Boundary_(ID_wgNc+x0/pRTSV4YrnkN7Fg)
Content-type: multipart/alternative;
	boundary=&quot;Boundary_(ID_A0uMtxUSk3bFLpjKvBVWsQ)&quot;


--Boundary_(ID_A0uMtxUSk3bFLpjKvBVWsQ)
Content-type: text/plain; charset=ISO-8859-1
Content-transfer-encoding: 7BIT

Hi Terry,

I did a memset() prior to the call to processor_info(), and the UMR went
away.  I further tested by setting pinfo.pi_state to -1 prior to the call to
processor_info(), and processor_info() always sets pinfo.pi_state to 2.
Therefore, I am starting to suspect this is a bug in purify.  Maybe purify
is having issues detecting that this variable was updated by system code.
I'm going to forward a sample program to the IBM purify team to have them
investigate further.

I also attached a copy of mpi_purify.txt that contains all the purify
findings.  Therefore a handful of UMR errors that occur through different
call stacks.  Also, there are 2 file descriptors left open &amp; a lot of memory
that leaked despite me calling MPI_Finalize().

Let me know if you need me to try something else or to produce any
additional output.

Thanks again,
Brian

On Thu, Apr 30, 2009 at 10:11 AM, Terry Dontje &lt;Terry.Dontje@sun.com&gt; wrote:

&gt; So I've been kibitzing with Jeff on the below.  If you do a memset of pinfo
&gt; prior to the line you show below does the UMR go away.  I believe it will
&gt; not and that you probably will need to do something like pinfo.pi_state = 0.
&gt;  Can you try this out for me?
&gt; Thanks,
&gt;
&gt; --td
&gt;
&gt;
&gt; Brian Blank wrote:
&gt;
&gt;&gt; Hi Jeff,
&gt;&gt;
&gt;&gt; That definetly worked for me.  Thanks so much for you help.
&gt;&gt;
&gt;&gt; Purify did find some other UMR (unitialize memory read) errors though, but
&gt;&gt; they don't seem to be negativley impacting my application right now.
&gt;&gt;  Nonetheless, I'll post them later today in case anyone is interested in
&gt;&gt; them.
&gt;&gt;
&gt;&gt; Just to give you a sample of what it see's now, one of the UMR errors
&gt;&gt; seems a little odd ... paffinity_solaris_module.c line 180.
&gt;&gt; if (P_ONLINE == pinfo.pi_state || P_NOINTR == pinfo.pi_state) {
&gt;&gt;
&gt;&gt; I'll post the rest of the UMR errors later today.
&gt;&gt;
&gt;&gt; Thanks again,
&gt;&gt; Brian
&gt;&gt;
&gt;&gt; On Apr 29, 2009, at 4:06 PM, Jeff Squyres &lt;jsquyres@cisco.com&gt; wrote:
&gt;&gt;
&gt;&gt;  Actually, I think your program is erroneous -- it looks like you're using
&gt;&gt;&gt; number of bytes for the sizes[] array when it really should be using number
&gt;&gt;&gt; of elements.  Specifically, it should be:
&gt;&gt;&gt;
&gt;&gt;&gt;   sizes[0] = (int) sizeof(tstruct.one);
&gt;&gt;&gt;   sizes[1] = 1;
&gt;&gt;&gt;   sizes[2] = 1;
&gt;&gt;&gt;   sizes[3] = 1;
&gt;&gt;&gt;
&gt;&gt;&gt; Since MPI knows the sizes of datatypes, you specify counts of datatypes
&gt;&gt;&gt; -- not numbers of bytes.
&gt;&gt;&gt;
&gt;&gt;&gt; That seemed to make your program work for me; double check and ensure
&gt;&gt;&gt; that it works for you.
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; On Apr 29, 2009, at 1:21 PM, Brian Blank wrote:
&gt;&gt;&gt;
&gt;&gt;&gt;  To Whom This May Concern:
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I originally sent this to the users list, but realizing now that this
&gt;&gt;&gt;&gt; might be more appropriate for the developer's list as it is dealing with
&gt;&gt;&gt;&gt; issues internal to the openmpi library (sorry for the dual distribution).
&gt;&gt;&gt;&gt;  Please start with second email first.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Thanks,
&gt;&gt;&gt;&gt; Brian Blank
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; ---------- Forwarded message ----------
&gt;&gt;&gt;&gt; From: Brian Blank &lt;brianblank@gmail.com&gt;
&gt;&gt;&gt;&gt; Date: Wed, Apr 29, 2009 at 1:09 PM
&gt;&gt;&gt;&gt; Subject: Re: Purify found bugs inside open-mpi library
&gt;&gt;&gt;&gt; To: users@open-mpi.org
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; To Whom This May Concern:
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I've been trying to dig a little deeper into this problem and found some
&gt;&gt;&gt;&gt; additional information.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; First, the stack trace for the ABR and ABW were different. The ABR
&gt;&gt;&gt;&gt; problem occurred in datatype_pack.h while the ABW problem occurred in
&gt;&gt;&gt;&gt; datatype_unpack.h.  The problem appears to be the same still.  Both errors
&gt;&gt;&gt;&gt; are occurring during a call to MEMCPY_CSUM().
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I also found there are two different variables playing into this bug.
&gt;&gt;&gt;&gt;  There is _copy_blength and _copy_count.  At the top of the function, both
&gt;&gt;&gt;&gt; of these variables are set to 2 bytes for MPI_SHORT, 4 bytes for MPI_LONG,
&gt;&gt;&gt;&gt; and 8 bytes for MPI_DOUBLE.  Then, these variables are multiplied together
&gt;&gt;&gt;&gt; to get the size of the memcpy().  Unfortunetly, the correct size are either
&gt;&gt;&gt;&gt; of these variables before they are squared.  There sometimes appears to be
&gt;&gt;&gt;&gt; an optimization where if two variables are next to each other, they are
&gt;&gt;&gt;&gt; sometimes converted into a MPI_BYTE where the size is also incorrectly
&gt;&gt;&gt;&gt; taking these squared values into consideration.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I wrote a small test program to illustrate the problem and attached it
&gt;&gt;&gt;&gt; to this email.  First, I configured openmpi 1.3.2 with the following
&gt;&gt;&gt;&gt; options:
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; ./configure --prefix=/myworkingdirectory/openmpi-1.3.2.local
&gt;&gt;&gt;&gt; --disable-mpi-f77 --disable-mpi-f90 --enable-debug --enable-mem-debug
&gt;&gt;&gt;&gt; --enable-mem-profile
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I then modified datatype_pack.h &amp; datatype_unpack.h located in
&gt;&gt;&gt;&gt; openmpi-1.3.2/ompi/datatype directory in order to produce additional
&gt;&gt;&gt;&gt; debugging output.  The new versions are attached to this email.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Then, I executed &quot;make all install&quot;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Then, I write the attached test.c program.  You can find the output
&gt;&gt;&gt;&gt; below.  The problems appear in red.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; 0: sizes     '3'  '4'  '8'  '2'
&gt;&gt;&gt;&gt; 0: offsets   '0'  '4'  '8'  '16'
&gt;&gt;&gt;&gt; 0: addresses '134510640' '134510644' '134510648' '134510656'
&gt;&gt;&gt;&gt; 0: name='MPI_CHAR'  _copy_blength='3'  orig_copy_blength='1'
&gt;&gt;&gt;&gt;  _copy_count='3'  _source='134510640'
&gt;&gt;&gt;&gt; 0: name='MPI_LONG'  _copy_blength='16'  orig_copy_blength='4'
&gt;&gt;&gt;&gt;  _copy_count='4'  _source='134510644'
&gt;&gt;&gt;&gt; 0: name='MPI_DOUBLE'  _copy_blength='64'  orig_copy_blength='8'
&gt;&gt;&gt;&gt;  _copy_count='8'  _source='134510648'
&gt;&gt;&gt;&gt; 0: name='MPI_SHORT'  _copy_blength='4'  orig_copy_blength='2'
&gt;&gt;&gt;&gt;  _copy_count='2'  _source='134510656'
&gt;&gt;&gt;&gt; 0: one='22'  two='222'  three='33.300000'  four='44'
&gt;&gt;&gt;&gt; 1: sizes     '3'  '4'  '8'  '2'
&gt;&gt;&gt;&gt; 1: offsets   '0'  '4'  '8'  '16'
&gt;&gt;&gt;&gt; 1: addresses '134510640' '134510644' '134510648' '134510656'
&gt;&gt;&gt;&gt; 1: name='MPI_CHAR'  _copy_blength='3'  orig_copy_blength='1'
&gt;&gt;&gt;&gt;  _copy_count='3'  _destination='134510640'
&gt;&gt;&gt;&gt; 1: name='MPI_LONG'  _copy_blength='16'  orig_copy_blength='4'
&gt;&gt;&gt;&gt;  _copy_count='4'  _destination='134510644'
&gt;&gt;&gt;&gt; 1: name='MPI_DOUBLE'  _copy_blength='64'  orig_copy_blength='8'
&gt;&gt;&gt;&gt;  _copy_count='8'  _destination='134510648'
&gt;&gt;&gt;&gt; 1: name='MPI_SHORT'  _copy_blength='4'  orig_copy_blength='2'
&gt;&gt;&gt;&gt;  _copy_count='2'  _destination='134510656'
&gt;&gt;&gt;&gt; 1: one='22'  two='222'  three='33.300000'  four='44'
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; You can see from the output that the MPI_Send &amp; MPI_Recv functions are
&gt;&gt;&gt;&gt; reading or writing too much data from my structure, causing an overflow
&gt;&gt;&gt;&gt; condition to occur.  I believe this is causing my application to crash.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Any help on this problem would be appreciated.  If there is anything
&gt;&gt;&gt;&gt; else that you need from me, just let me know.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Thanks,
&gt;&gt;&gt;&gt; Brian
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; On Tue, Apr 28, 2009 at 9:58 PM, Brian Blank &lt;brianblank@gmail.com&gt;
&gt;&gt;&gt;&gt; wrote:
&gt;&gt;&gt;&gt; To Whom This May Concern:
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I am having problems with an OpenMPI application I am writing on the
&gt;&gt;&gt;&gt; Solaris/Intel AMD64 platform.  I am using OpenMPI 1.3.2 which I compiled
&gt;&gt;&gt;&gt; myself using the Solaris C/C++ compiler.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; My application was crashing (signal 11) inside a call to malloc() which
&gt;&gt;&gt;&gt; my code was running.  I thought it might be a memory overflow error that was
&gt;&gt;&gt;&gt; causing this, so I fired up Purify.  Purify found several problems inside
&gt;&gt;&gt;&gt; the the OpenMPI library.  I think one of the errors is serious and might be
&gt;&gt;&gt;&gt; causing the problems I was looking for.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; The serious error is an Array Bounds Write (ABW) which occurred 824
&gt;&gt;&gt;&gt; times through 312 calls to MPI_Recv().  This error means that something
&gt;&gt;&gt;&gt; inside the OpenMPI library is writing to memory where it shouldn't be
&gt;&gt;&gt;&gt; writing to.  Here is the stack trace at the time of this error:
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Stack Trace 1 (Occurred 596 times)
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; memcpy    rtlib.o
&gt;&gt;&gt;&gt; unpack_predefined_data    [datatype_unpack.h:41]
&gt;&gt;&gt;&gt; MEMCPY_CSUM( _destination, *(SOURCE), _copy_blength, (CONVERTOR) );
&gt;&gt;&gt;&gt; ompi_generic_simple_unpack [datatype_unpack.c:419]
&gt;&gt;&gt;&gt; ompi_convertor_unpack [convertor.c:314]
&gt;&gt;&gt;&gt; mca_pml_ob1_recv_frag_callback_match [pml_ob1_recvfrag.c:218]
&gt;&gt;&gt;&gt; mca_btl_sm_component_progress [btl_sm_component.c:427]
&gt;&gt;&gt;&gt; opal_progress [opal_progress.c:207]
&gt;&gt;&gt;&gt; opal_condition_wait [condition.h:99]
&gt;&gt;&gt;&gt; &lt;Writing 64 bytes to 0x821f738 in heap (16 bytes at 0x821f768 illegal).&gt;
&gt;&gt;&gt;&gt; &lt;Address 0x821f738 is 616 bytes into a malloc'd block at 0x821f4d0 of
&gt;&gt;&gt;&gt; 664 bytes.&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Stack Trace 2 (Occurred 228 times)
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; memcpy    rtlib.o
&gt;&gt;&gt;&gt; unpack_predefined_data    [datatype_unpack.h:41]
&gt;&gt;&gt;&gt; MEMCPY_CSUM( _destination, *(SOURCE), _copy_blength, (CONVERTOR) );
&gt;&gt;&gt;&gt; ompi_generic_simple_unpack [datatype_unpack.c:419]
&gt;&gt;&gt;&gt; ompi_convertor_unpack [convertor.c:314]
&gt;&gt;&gt;&gt; mca_pml_ob1_recv_request_progress_match [pml_ob1_recvreq.c:624]
&gt;&gt;&gt;&gt; mca_pml_ob1_Recv_req_start [pml_ob1_recvreq.c:1008]
&gt;&gt;&gt;&gt; mca_pml_ob1_recv [pml_ob1_irecv.c:103]
&gt;&gt;&gt;&gt; MPI_Recv [precv.c:75]
&gt;&gt;&gt;&gt; &lt;Writing 64 bytes to 0x821f738 in heap (16 bytes at 0x821f768 illegal).&gt;
&gt;&gt;&gt;&gt; &lt;Address 0x821f738 is 616 bytes into a malloc'd block at 0x821f4d0 of
&gt;&gt;&gt;&gt; 664 bytes.&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I'm not that familiar with the under workings of the openmpi library,
&gt;&gt;&gt;&gt; but I tried to debug it anyway.  I noticed that it was copying a lot of
&gt;&gt;&gt;&gt; extra bytes for MPI_LONG and MPI_DOUBLE types.  On my system, MPI_LONG
&gt;&gt;&gt;&gt; should have been 4 bytes, but was copying 16 bytes.  Also, MPI_DOUBLE should
&gt;&gt;&gt;&gt; have been 8 bytes, but was copying 64 bytes.  It seems the _copy_blength
&gt;&gt;&gt;&gt; variable was being set to high, but I'm not sure why.  The above error also
&gt;&gt;&gt;&gt; shows 64 bytes being read, where my debugging shows a 64 byte copy for all
&gt;&gt;&gt;&gt; MPI_DOUBLE types, which I feel should have been 8 bytes.  Therefore, I
&gt;&gt;&gt;&gt; really believe _copy_blength is being set to high.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Interestingly enough, the call to MPI_Isend() was generating an ABR
&gt;&gt;&gt;&gt; (Array Bounds Read) error in the exact same line of code.  The ABR error
&gt;&gt;&gt;&gt; sometimes can be fatal if the bytes being read is not a legal address, but
&gt;&gt;&gt;&gt; the ABW error is usually a much more fatal error because it is definitely
&gt;&gt;&gt;&gt; writing into memory that is probably used for something else.  I'm sure that
&gt;&gt;&gt;&gt; if we fix the ABW error, the ABR error should fix itself too as it's the
&gt;&gt;&gt;&gt; same line of code.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Purify also found 14 UMR (Uninitialized memory read) errors inside the
&gt;&gt;&gt;&gt; OpenMPI library.  Sometimes this can be really bad if there are any
&gt;&gt;&gt;&gt; decisions being made as a result of reading this memory location.  But for
&gt;&gt;&gt;&gt; now, let's solve the serious error I reported above first, then I will send
&gt;&gt;&gt;&gt; you the UMR errors next.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Any help you can provide would be greatly appreciated.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Thanks,
&gt;&gt;&gt;&gt; Brian
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; &lt;datatype_pack.h&gt;&lt;datatype_unpack.h&gt;&lt;test.c&gt;_______________________________________________
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; devel mailing list
&gt;&gt;&gt;&gt; devel@open-mpi.org
&gt;&gt;&gt;&gt; http://www.open-mpi.org/mailman/listinfo.cgi/devel
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; --
&gt;&gt;&gt; Jeff Squyres
&gt;&gt;&gt; Cisco Systems
&gt;&gt;&gt;
&gt;&gt;&gt; _______________________________________________
&gt;&gt;&gt; devel mailing list
&gt;&gt;&gt; devel@open-mpi.org
&gt;&gt;&gt; http://www.open-mpi.org/mailman/listinfo.cgi/devel
&gt;&gt;&gt;
&gt;&gt; _______________________________________________
&gt;&gt; devel mailing list
&gt;&gt; devel@open-mpi.org
&gt;&gt; http://www.open-mpi.org/mailman/listinfo.cgi/devel
&gt;&gt;
&gt;
&gt;

--Boundary_(ID_A0uMtxUSk3bFLpjKvBVWsQ)
Content-type: text/html; charset=ISO-8859-1
Content-transfer-encoding: QUOTED-PRINTABLE

Hi Terry,&lt;br&gt;&lt;br&gt;I did a memset() prior to the call to processor_info=
(), and the UMR went away.=A0 I further tested by setting pinfo.pi_st=
ate to -1 prior to the call to processor_info(), and processor_info()=
 always sets pinfo.pi_state to 2.=A0 Therefore, I am starting to susp=
ect this is a bug in purify.=A0 Maybe purify is having issues detecti=
ng that this variable was updated by system code.=A0 I&amp;#39;m going to=
 forward a sample program to the IBM purify team to have them investi=
gate further.&lt;br&gt;
&lt;br&gt;I also attached a copy of mpi_purify.txt that contains all the pu=
rify findings.=A0 Therefore a handful of UMR errors that occur throug=
h different call stacks.=A0 Also, there are 2 file descriptors left o=
pen &amp;amp; a lot of memory that leaked despite me calling MPI_Finalize=
().&lt;br&gt;
&lt;br&gt;Let me know if you need me to try something else or to produce an=
y additional output.&lt;br&gt;&lt;br&gt;Thanks again,&lt;br&gt;Brian&lt;br&gt;&lt;br&gt;&lt;div class=
=3D&quot;gmail_quote&quot;&gt;On Thu, Apr 30, 2009 at 10:11 AM, Terry Dontje &lt;span=
 dir=3D&quot;ltr&quot;&gt;&amp;lt;&lt;a href=3D&quot;mailto:Terry.Dontje@sun.com&quot;&gt;Terry.Dontje=
@sun.com&lt;/a&gt;&amp;gt;&lt;/span&gt; wrote:&lt;br&gt;
&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb=
(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;So I&amp;=
#39;ve been kibitzing with Jeff on the below. =A0If you do a memset o=
f pinfo prior to the line you show below does the UMR go away. =A0I b=
elieve it will not and that you probably will need to do something li=
ke pinfo.pi_state =3D 0. =A0Can you try this out for me? &lt;br&gt;

Thanks,&lt;br&gt;&lt;font color=3D&quot;#888888&quot;&gt;
&lt;br&gt;
--td&lt;/font&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;
&lt;br&gt;
Brian Blank wrote:&lt;br&gt;
&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb=
(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;
Hi Jeff,&lt;br&gt;
&lt;br&gt;
That definetly worked for me. =A0Thanks so much for you help.&lt;br&gt;
&lt;br&gt;
Purify did find some other UMR (unitialize memory read) errors though=
, but they don&amp;#39;t seem to be negativley impacting my application r=
ight now. =A0Nonetheless, I&amp;#39;ll post them later today in case anyo=
ne is interested in them.&lt;br&gt;

&lt;br&gt;
Just to give you a sample of what it see&amp;#39;s now, one of the UMR er=
rors seems a little odd ... paffinity_solaris_module.c line 180.&lt;br&gt;
if (P_ONLINE =3D=3D pinfo.pi_state || P_NOINTR =3D=3D pinfo.pi_state)=
 {&lt;br&gt;
&lt;br&gt;
I&amp;#39;ll post the rest of the UMR errors later today.&lt;br&gt;
&lt;br&gt;
Thanks again,&lt;br&gt;
Brian&lt;br&gt;
&lt;br&gt;
On Apr 29, 2009, at 4:06 PM, Jeff Squyres &amp;lt;&lt;a href=3D&quot;mailto:jsquy=
res@cisco.com&quot; target=3D&quot;_blank&quot;&gt;jsquyres@cisco.com&lt;/a&gt;&amp;gt; wrote:&lt;br=
&gt;
&lt;br&gt;
&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb=
(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;
Actually, I think your program is erroneous -- it looks like you&amp;#39;=
re using number of bytes for the sizes[] array when it really should =
be using number of elements. =A0Specifically, it should be:&lt;br&gt;
&lt;br&gt;
 =A0 sizes[0] =3D (int) sizeof(tstruct.one);&lt;br&gt;
 =A0 sizes[1] =3D 1;&lt;br&gt;
 =A0 sizes[2] =3D 1;&lt;br&gt;
 =A0 sizes[3] =3D 1;&lt;br&gt;
&lt;br&gt;
Since MPI knows the sizes of datatypes, you specify counts of datatyp=
es -- not numbers of bytes.&lt;br&gt;
&lt;br&gt;
That seemed to make your program work for me; double check and ensure=
 that it works for you.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
On Apr 29, 2009, at 1:21 PM, Brian Blank wrote:&lt;br&gt;
&lt;br&gt;
&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb=
(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;
To Whom This May Concern:&lt;br&gt;
&lt;br&gt;
I originally sent this to the users list, but realizing now that this=
 might be more appropriate for the developer&amp;#39;s list as it is deal=
ing with issues internal to the openmpi library (sorry for the dual d=
istribution). =A0Please start with second email first.&lt;br&gt;

&lt;br&gt;
Thanks,&lt;br&gt;
Brian Blank&lt;br&gt;
&lt;br&gt;
---------- Forwarded message ----------&lt;br&gt;
=46rom: Brian Blank &amp;lt;&lt;a href=3D&quot;mailto:brianblank@gmail.com&quot; targe=
t=3D&quot;_blank&quot;&gt;brianblank@gmail.com&lt;/a&gt;&amp;gt;&lt;br&gt;
Date: Wed, Apr 29, 2009 at 1:09 PM&lt;br&gt;
Subject: Re: Purify found bugs inside open-mpi library&lt;br&gt;
To: &lt;a href=3D&quot;mailto:users@open-mpi.org&quot; target=3D&quot;_blank&quot;&gt;users@ope=
n-mpi.org&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
To Whom This May Concern:&lt;br&gt;
&lt;br&gt;
I&amp;#39;ve been trying to dig a little deeper into this problem and fou=
nd some additional information.&lt;br&gt;
&lt;br&gt;
First, the stack trace for the ABR and ABW were different. The ABR pr=
oblem occurred in datatype_pack.h while the ABW problem occurred in d=
atatype_unpack.h. =A0The problem appears to be the same still. =A0Bot=
h errors are occurring during a call to MEMCPY_CSUM().&lt;br&gt;

&lt;br&gt;
I also found there are two different variables playing into this bug.=
 =A0There is _copy_blength and _copy_count. =A0At the top of the func=
tion, both of these variables are set to 2 bytes for MPI_SHORT, 4 byt=
es for MPI_LONG, and 8 bytes for MPI_DOUBLE. =A0Then, these variables=
 are multiplied together to get the size of the memcpy(). =A0Unfortun=
etly, the correct size are either of these variables before they are =
squared. =A0There sometimes appears to be an optimization where if tw=
o variables are next to each other, they are sometimes converted into=
 a MPI_BYTE where the size is also incorrectly taking these squared v=
alues into consideration.&lt;br&gt;

&lt;br&gt;
I wrote a small test program to illustrate the problem and attached i=
t to this email. =A0First, I configured openmpi 1.3.2 with the follow=
ing options:&lt;br&gt;
&lt;br&gt;
=2E/configure --prefix=3D/myworkingdirectory/openmpi-1.3.2.local --di=
sable-mpi-f77 --disable-mpi-f90 --enable-debug --enable-mem-debug --e=
nable-mem-profile&lt;br&gt;
&lt;br&gt;
I then modified datatype_pack.h &amp;amp; datatype_unpack.h located in op=
enmpi-1.3.2/ompi/datatype directory in order to produce additional de=
bugging output. =A0The new versions are attached to this email.&lt;br&gt;
&lt;br&gt;
Then, I executed &amp;quot;make all install&amp;quot;&lt;br&gt;
&lt;br&gt;
Then, I write the attached test.c program. =A0You can find the output=
 below. =A0The problems appear in red.&lt;br&gt;
&lt;br&gt;
0: sizes =A0 =A0 &amp;#39;3&amp;#39; =A0&amp;#39;4&amp;#39; =A0&amp;#39;8&amp;#39; =A0&amp;#39;2&amp;=
#39;&lt;br&gt;
0: offsets =A0 &amp;#39;0&amp;#39; =A0&amp;#39;4&amp;#39; =A0&amp;#39;8&amp;#39; =A0&amp;#39;16&amp;#=
39;&lt;br&gt;
0: addresses &amp;#39;134510640&amp;#39; &amp;#39;134510644&amp;#39; &amp;#39;134510648&amp;#=
39; &amp;#39;134510656&amp;#39;&lt;br&gt;
0: name=3D&amp;#39;MPI_CHAR&amp;#39; =A0_copy_blength=3D&amp;#39;3&amp;#39; =A0orig_c=
opy_blength=3D&amp;#39;1&amp;#39; =A0_copy_count=3D&amp;#39;3&amp;#39; =A0_source=
=3D&amp;#39;134510640&amp;#39;&lt;br&gt;
0: name=3D&amp;#39;MPI_LONG&amp;#39; =A0_copy_blength=3D&amp;#39;16&amp;#39; =A0orig_=
copy_blength=3D&amp;#39;4&amp;#39; =A0_copy_count=3D&amp;#39;4&amp;#39; =A0_source=
=3D&amp;#39;134510644&amp;#39;&lt;br&gt;
0: name=3D&amp;#39;MPI_DOUBLE&amp;#39; =A0_copy_blength=3D&amp;#39;64&amp;#39; =A0ori=
g_copy_blength=3D&amp;#39;8&amp;#39; =A0_copy_count=3D&amp;#39;8&amp;#39; =A0_source=
=3D&amp;#39;134510648&amp;#39;&lt;br&gt;
0: name=3D&amp;#39;MPI_SHORT&amp;#39; =A0_copy_blength=3D&amp;#39;4&amp;#39; =A0orig_=
copy_blength=3D&amp;#39;2&amp;#39; =A0_copy_count=3D&amp;#39;2&amp;#39; =A0_source=
=3D&amp;#39;134510656&amp;#39;&lt;br&gt;
0: one=3D&amp;#39;22&amp;#39; =A0two=3D&amp;#39;222&amp;#39; =A0three=3D&amp;#39;33.30000=
0&amp;#39; =A0four=3D&amp;#39;44&amp;#39;&lt;br&gt;
1: sizes =A0 =A0 &amp;#39;3&amp;#39; =A0&amp;#39;4&amp;#39; =A0&amp;#39;8&amp;#39; =A0&amp;#39;2&amp;=
#39;&lt;br&gt;
1: offsets =A0 &amp;#39;0&amp;#39; =A0&amp;#39;4&amp;#39; =A0&amp;#39;8&amp;#39; =A0&amp;#39;16&amp;#=
39;&lt;br&gt;
1: addresses &amp;#39;134510640&amp;#39; &amp;#39;134510644&amp;#39; &amp;#39;134510648&amp;#=
39; &amp;#39;134510656&amp;#39;&lt;br&gt;
1: name=3D&amp;#39;MPI_CHAR&amp;#39; =A0_copy_blength=3D&amp;#39;3&amp;#39; =A0orig_c=
opy_blength=3D&amp;#39;1&amp;#39; =A0_copy_count=3D&amp;#39;3&amp;#39; =A0_destinatio=
n=3D&amp;#39;134510640&amp;#39;&lt;br&gt;
1: name=3D&amp;#39;MPI_LONG&amp;#39; =A0_copy_blength=3D&amp;#39;16&amp;#39; =A0orig_=
copy_blength=3D&amp;#39;4&amp;#39; =A0_copy_count=3D&amp;#39;4&amp;#39; =A0_destinati=
on=3D&amp;#39;134510644&amp;#39;&lt;br&gt;
1: name=3D&amp;#39;MPI_DOUBLE&amp;#39; =A0_copy_blength=3D&amp;#39;64&amp;#39; =A0ori=
g_copy_blength=3D&amp;#39;8&amp;#39; =A0_copy_count=3D&amp;#39;8&amp;#39; =A0_destina=
tion=3D&amp;#39;134510648&amp;#39;&lt;br&gt;
1: name=3D&amp;#39;MPI_SHORT&amp;#39; =A0_copy_blength=3D&amp;#39;4&amp;#39; =A0orig_=
copy_blength=3D&amp;#39;2&amp;#39; =A0_copy_count=3D&amp;#39;2&amp;#39; =A0_destinati=
on=3D&amp;#39;134510656&amp;#39;&lt;br&gt;
1: one=3D&amp;#39;22&amp;#39; =A0two=3D&amp;#39;222&amp;#39; =A0three=3D&amp;#39;33.30000=
0&amp;#39; =A0four=3D&amp;#39;44&amp;#39;&lt;br&gt;
&lt;br&gt;
You can see from the output that the MPI_Send &amp;amp; MPI_Recv function=
s are reading or writing too much data from my structure, causing an =
overflow condition to occur. =A0I believe this is causing my applicat=
ion to crash.&lt;br&gt;

&lt;br&gt;
Any help on this problem would be appreciated. =A0If there is anythin=
g else that you need from me, just let me know.&lt;br&gt;
&lt;br&gt;
Thanks,&lt;br&gt;
Brian&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
On Tue, Apr 28, 2009 at 9:58 PM, Brian Blank &amp;lt;&lt;a href=3D&quot;mailto:br=
ianblank@gmail.com&quot; target=3D&quot;_blank&quot;&gt;brianblank@gmail.com&lt;/a&gt;&amp;gt; wr=
ote:&lt;br&gt;
To Whom This May Concern:&lt;br&gt;
&lt;br&gt;
I am having problems with an OpenMPI application I am writing on the =
Solaris/Intel AMD64 platform. =A0I am using OpenMPI 1.3.2 which I com=
piled myself using the Solaris C/C++ compiler.&lt;br&gt;
&lt;br&gt;
My application was crashing (signal 11) inside a call to malloc() whi=
ch my code was running. =A0I thought it might be a memory overflow er=
ror that was causing this, so I fired up Purify. =A0Purify found seve=
ral problems inside the the OpenMPI library. =A0I think one of the er=
rors is serious and might be causing the problems I was looking for.&lt;=
br&gt;

&lt;br&gt;
The serious error is an Array Bounds Write (ABW) which occurred 824 t=
imes through 312 calls to MPI_Recv(). =A0This error means that someth=
ing inside the OpenMPI library is writing to memory where it shouldn&amp;=
#39;t be writing to. =A0Here is the stack trace at the time of this e=
rror:&lt;br&gt;

&lt;br&gt;
Stack Trace 1 (Occurred 596 times)&lt;br&gt;
&lt;br&gt;
memcpy =A0 =A0rtlib.o&lt;br&gt;
unpack_predefined_data =A0 =A0[datatype_unpack.h:41]&lt;br&gt;
MEMCPY_CSUM( _destination, *(SOURCE), _copy_blength, (CONVERTOR) );&lt;b=
r&gt;
ompi_generic_simple_unpack [datatype_unpack.c:419]&lt;br&gt;
ompi_convertor_unpack [convertor.c:314]&lt;br&gt;
mca_pml_ob1_recv_frag_callback_match [pml_ob1_recvfrag.c:218]&lt;br&gt;
mca_btl_sm_component_progress [btl_sm_component.c:427]&lt;br&gt;
opal_progress [opal_progress.c:207]&lt;br&gt;
opal_condition_wait [condition.h:99]&lt;br&gt;
&amp;lt;Writing 64 bytes to 0x821f738 in heap (16 bytes at 0x821f768 ille=
gal).&amp;gt;&lt;br&gt;
&amp;lt;Address 0x821f738 is 616 bytes into a malloc&amp;#39;d block at 0x821=
f4d0 of 664 bytes.&amp;gt;&lt;br&gt;
&lt;br&gt;
Stack Trace 2 (Occurred 228 times)&lt;br&gt;
&lt;br&gt;
memcpy =A0 =A0rtlib.o&lt;br&gt;
unpack_predefined_data =A0 =A0[datatype_unpack.h:41]&lt;br&gt;
MEMCPY_CSUM( _destination, *(SOURCE), _copy_blength, (CONVERTOR) );&lt;b=
r&gt;
ompi_generic_simple_unpack [datatype_unpack.c:419]&lt;br&gt;
ompi_convertor_unpack [convertor.c:314]&lt;br&gt;
mca_pml_ob1_recv_request_progress_match [pml_ob1_recvreq.c:624]&lt;br&gt;
mca_pml_ob1_Recv_req_start [pml_ob1_recvreq.c:1008]&lt;br&gt;
mca_pml_ob1_recv [pml_ob1_irecv.c:103]&lt;br&gt;
MPI_Recv [precv.c:75]&lt;br&gt;
&amp;lt;Writing 64 bytes to 0x821f738 in heap (16 bytes at 0x821f768 ille=
gal).&amp;gt;&lt;br&gt;
&amp;lt;Address 0x821f738 is 616 bytes into a malloc&amp;#39;d block at 0x821=
f4d0 of 664 bytes.&amp;gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
I&amp;#39;m not that familiar with the under workings of the openmpi libr=
ary, but I tried to debug it anyway. =A0I noticed that it was copying=
 a lot of extra bytes for MPI_LONG and MPI_DOUBLE types. =A0On my sys=
tem, MPI_LONG should have been 4 bytes, but was copying 16 bytes. =
=A0Also, MPI_DOUBLE should have been 8 bytes, but was copying 64 byte=
s. =A0It seems the _copy_blength variable was being set to high, but =
I&amp;#39;m not sure why. =A0The above error also shows 64 bytes being re=
ad, where my debugging shows a 64 byte copy for all MPI_DOUBLE types,=
 which I feel should have been 8 bytes. =A0Therefore, I really believ=
e _copy_blength is being set to high.&lt;br&gt;

&lt;br&gt;
&lt;br&gt;
Interestingly enough, the call to MPI_Isend() was generating an ABR (=
Array Bounds Read) error in the exact same line of code. =A0The ABR e=
rror sometimes can be fatal if the bytes being read is not a legal ad=
dress, but the ABW error is usually a much more fatal error because i=
t is definitely writing into memory that is probably used for somethi=
ng else. =A0I&amp;#39;m sure that if we fix the ABW error, the ABR error =
should fix itself too as it&amp;#39;s the same line of code.&lt;br&gt;

&lt;br&gt;
Purify also found 14 UMR (Uninitialized memory read) errors inside th=
e OpenMPI library. =A0Sometimes this can be really bad if there are a=
ny decisions being made as a result of reading this memory location. =
=A0But for now, let&amp;#39;s solve the serious error I reported above fi=
rst, then I will send you the UMR errors next.&lt;br&gt;

&lt;br&gt;
Any help you can provide would be greatly appreciated.&lt;br&gt;
&lt;br&gt;
Thanks,&lt;br&gt;
Brian&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&amp;lt;datatype_pack.h&amp;gt;&amp;lt;datatype_unpack.h&amp;gt;&amp;lt;test.c&amp;gt;_______=
________________________________________ &lt;br&gt;
devel mailing list&lt;br&gt;
&lt;a href=3D&quot;mailto:devel@open-mpi.org&quot; target=3D&quot;_blank&quot;&gt;devel@open-mp=
i.org&lt;/a&gt;&lt;br&gt;
&lt;a href=3D&quot;http://www.open-mpi.org/mailman/listinfo.cgi/devel&quot; target=
=3D&quot;_blank&quot;&gt;http://www.open-mpi.org/mailman/listinfo.cgi/devel&lt;/a&gt;&lt;br=
&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;br&gt;
-- &lt;br&gt;
Jeff Squyres&lt;br&gt;
Cisco Systems&lt;br&gt;
&lt;br&gt;
_______________________________________________&lt;br&gt;
devel mailing list&lt;br&gt;
&lt;a href=3D&quot;mailto:devel@open-mpi.org&quot; target=3D&quot;_blank&quot;&gt;devel@open-mp=
i.org&lt;/a&gt;&lt;br&gt;
&lt;a href=3D&quot;http://www.open-mpi.org/mailman/listinfo.cgi/devel&quot; target=
=3D&quot;_blank&quot;&gt;http://www.open-mpi.org/mailman/listinfo.cgi/devel&lt;/a&gt;&lt;br=
&gt;
&lt;/blockquote&gt;
_______________________________________________&lt;br&gt;
devel mailing list&lt;br&gt;
&lt;a href=3D&quot;mailto:devel@open-mpi.org&quot; target=3D&quot;_blank&quot;&gt;devel@open-mp=
i.org&lt;/a&gt;&lt;br&gt;
&lt;a href=3D&quot;http://www.open-mpi.org/mailman/listinfo.cgi/devel&quot; target=
=3D&quot;_blank&quot;&gt;http://www.open-mpi.org/mailman/listinfo.cgi/devel&lt;/a&gt;&lt;br=
&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;

--Boundary_(ID_A0uMtxUSk3bFLpjKvBVWsQ)--

--Boundary_(ID_wgNc+x0/pRTSV4YrnkN7Fg)
Content-type: text/plain; charset=US-ASCII; name=mpi_purify.txt
Content-transfer-encoding: 7BIT
Content-disposition: attachment; filename=mpi_purify.txt
X-Attachment-Id: f_fu72bun20

      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            _writev        [libc.so.1]
            writev         [libc.so.1]
            mca_oob_tcp_msg_send_handler [oob_tcp_msg.c:265]
               {
                   int rc;
                   while(1) {
            =&gt;         rc = writev(peer-&gt;peer_sd, msg-&gt;msg_rwptr, msg-&gt;msg_rwnum);
                       if(rc &lt; 0) {
                           if(opal_socket_errno == EINTR)
                               continue;
            mca_oob_tcp_peer_send [oob_tcp_peer.c:197]
            mca_oob_tcp_send_nb [oob_tcp_send.c:167]
            orte_rml_oob_send [rml_oob_send.c:144]
            orte_rml_oob_send_buffer [rml_oob_send.c:269]
            allgather      [grpcomm_bad_module.c:369]
      Reading 160 bytes from 0x823fc50 in the heap (4 bytes at 0x823fcb7 uninit).
      Address 0x823fc50 is at the beginning of a malloc'd block of 256 bytes.
      This block was allocated from thread 1:
            realloc        [rtlib.o]
            opal_dss_buffer_extend [dss_internal_functions.c:63]
            opal_dss_copy_payload [dss_load_unload.c:164]
            allgather      [grpcomm_bad_module.c:363]
            modex          [grpcomm_bad_module.c:497]
            ompi_mpi_init  [ompi_mpi_init.c:626]
            MPI_Init       [pinit.c:80]
            main           [my program]
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            solaris_module_get [paffinity_solaris_module.c:142]
                   }
               
                   opal_output_verbose(5, opal_paffinity_base_output,
            =&gt;         &quot;paffinity:solaris: obind=%d&quot;, obind);
               
                   /* if there isn't any processor binded, just zero out and return */
                   OPAL_PAFFINITY_CPU_ZERO(*cpumask);
            opal_paffinity_base_get [paffinity_base_wrappers.c:51]
            init_maffinity [btl_sm.c:141]
            sm_btl_first_time_init [btl_sm.c:179]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      Reading 4 bytes from 0x80467e4 on the stack of thread 1.
      Address 0x80467e4 is local variable &quot;obind&quot; in function solaris_module_get.
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            solaris_module_get [paffinity_solaris_module.c:146]
               
                   /* if there isn't any processor binded, just zero out and return */
                   OPAL_PAFFINITY_CPU_ZERO(*cpumask);
            =&gt;     if (PBIND_NONE != obind) {
                       OPAL_PAFFINITY_CPU_SET(obind, *cpumask);
                   }
                   return OPAL_SUCCESS;
            opal_paffinity_base_get [paffinity_base_wrappers.c:51]
            init_maffinity [btl_sm.c:141]
            sm_btl_first_time_init [btl_sm.c:179]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      Reading 4 bytes from 0x80467e4 on the stack of thread 1.
      Address 0x80467e4 is local variable &quot;obind&quot; in function solaris_module_get.
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:79]
                   mseg.mbs_start_addr =
                       mpool_sm-&gt;sm_allocator-&gt;alc_alloc(mpool_sm-&gt;sm_allocator, size, align, registration);
               
            =&gt;     if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
                       opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
            mpool_calloc   [btl_sm.c:108]
            sm_btl_first_time_init [btl_sm.c:307]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
            MPI_Init       [pinit.c:80]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:81]
               
                   if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
            =&gt;         opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
               
                   return mseg.mbs_start_addr;
            mpool_calloc   [btl_sm.c:108]
            sm_btl_first_time_init [btl_sm.c:307]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
            MPI_Init       [pinit.c:80]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:79]
                   mseg.mbs_start_addr =
                       mpool_sm-&gt;sm_allocator-&gt;alc_alloc(mpool_sm-&gt;sm_allocator, size, align, registration);
               
            =&gt;     if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
                       opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
            ompi_free_list_grow [ompi_free_list.c:200]
            ompi_free_list_init_ex_new [ompi_free_list.c:163]
            ompi_free_list_init_new [ompi_free_list.h:173]
            sm_btl_first_time_init [btl_sm.c:339]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:81]
               
                   if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
            =&gt;         opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
               
                   return mseg.mbs_start_addr;
            ompi_free_list_grow [ompi_free_list.c:200]
            ompi_free_list_init_ex_new [ompi_free_list.c:163]
            ompi_free_list_init_new [ompi_free_list.h:173]
            sm_btl_first_time_init [btl_sm.c:339]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:79]
                   mseg.mbs_start_addr =
                       mpool_sm-&gt;sm_allocator-&gt;alc_alloc(mpool_sm-&gt;sm_allocator, size, align, registration);
               
            =&gt;     if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
                       opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
            ompi_free_list_grow [ompi_free_list.c:200]
            ompi_free_list_init_ex_new [ompi_free_list.c:163]
            ompi_free_list_init_new [ompi_free_list.h:173]
            sm_btl_first_time_init [btl_sm.c:352]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:81]
               
                   if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
            =&gt;         opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
               
                   return mseg.mbs_start_addr;
            ompi_free_list_grow [ompi_free_list.c:200]
            ompi_free_list_init_ex_new [ompi_free_list.c:163]
            ompi_free_list_init_new [ompi_free_list.h:173]
            sm_btl_first_time_init [btl_sm.c:352]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:79]
                   mseg.mbs_start_addr =
                       mpool_sm-&gt;sm_allocator-&gt;alc_alloc(mpool_sm-&gt;sm_allocator, size, align, registration);
               
            =&gt;     if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
                       opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
            sm_fifo_init   [btl_sm.h:214]
            mca_btl_sm_add_procs [btl_sm.c:513]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
            MPI_Init       [pinit.c:80]
            main           [my program]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:81]
               
                   if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
            =&gt;         opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
               
                   return mseg.mbs_start_addr;
            sm_fifo_init   [btl_sm.h:214]
            mca_btl_sm_add_procs [btl_sm.c:513]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
            MPI_Init       [pinit.c:80]
            main           [my program]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read (7 times)
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:79]
                   mseg.mbs_start_addr =
                       mpool_sm-&gt;sm_allocator-&gt;alc_alloc(mpool_sm-&gt;sm_allocator, size, align, registration);
               
            =&gt;     if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
                       opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
            ompi_free_list_grow [ompi_free_list.c:200]
            mca_btl_sm_alloc [btl_sm.c:612]
            mca_bml_base_alloc [bml.h:241]
            mca_pml_ob1_send_request_start_copy [pml_ob1_sendreq.c:509]
            mca_pml_ob1_send_request_start_btl [pml_ob1_sendreq.h:363]
            mca_pml_ob1_send_request_start [pml_ob1_sendreq.h:429]
            mca_pml_ob1_isend [pml_ob1_isend.c:87]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]
      UMR: Uninitialized memory read (7 times)
      This is occurring while in thread 1:
            mca_mpool_sm_alloc [mpool_sm_module.c:81]
               
                   if(mpool_sm-&gt;mem_node &gt;= 0) {
                       mseg.mbs_len = size;
            =&gt;         opal_maffinity_base_bind(&amp;mseg, 1, mpool_sm-&gt;mem_node);
                   }
               
                   return mseg.mbs_start_addr;
            ompi_free_list_grow [ompi_free_list.c:200]
            mca_btl_sm_alloc [btl_sm.c:612]
            mca_bml_base_alloc [bml.h:241]
            mca_pml_ob1_send_request_start_copy [pml_ob1_sendreq.c:509]
            mca_pml_ob1_send_request_start_btl [pml_ob1_sendreq.h:363]
            mca_pml_ob1_send_request_start [pml_ob1_sendreq.h:429]
            mca_pml_ob1_isend [pml_ob1_isend.c:87]
      Reading 4 bytes from 0x81d3038 in the heap.
      Address 0x81d3038 is 64 bytes into a malloc'd block at 0x81d2ff8 of 68 bytes.
      This block was allocated from thread 1:
            malloc         [rtlib.o]
            mca_mpool_sm_init [mpool_sm_component.c:210]
            mca_mpool_base_module_create [mpool_base_lookup.c:90]
            sm_btl_first_time_init [btl_sm.c:219]
            mca_btl_sm_add_procs [btl_sm.c:485]
            mca_bml_r2_add_procs [bml_r2.c:206]
            mca_pml_ob1_add_procs [pml_ob1.c:310]
            ompi_mpi_init  [ompi_mpi_init.c:667]


The following 2 File Descriptors were left open, even after calling MPI_Finalize().
	(A)
	/dev/poll, O_RDWR
	opened from:
		open	[rtlib.o]
		devpoll_init	[devpoll.c:150]
			if((dbfd = open(&quot;/dev/poll&quot;, O_RDWR)) == -1) {
		opal_event_base_new	[event.c:362]
		open_event_init	[event.c:325]
		opal_init	[opal_init.c:359]
		orte_init	[orte_init.c:76]
		ompi_mpi_init	[ompi_mpi_init.c:342]
		MPI_Init	[pinit.c:80]


	(B)
	&lt;unnamed socket&gt;, O_RDWR
	_so_socket	[libc.so.1]
	_socket_create	[libsocket.so.1]
	_socketpair_create	[libsocket.so.1]
	socketpair	[libsocket.so.1]
	opal_evutil_socketpair	[evutil.c:59]
		return socketpair(family, type, protocol, fd);
	opal_evsignal_init	[signal.c:104]
	devpoll_init	[devpoll.c:185]
	opal_event_base_new	[event.c:362]

Memory leaked: 82907 bytes (24.6%); potentially leaked: 0 bytes (0%)

      Memory leaked: 82907 bytes (24.6%); potentially leaked: 0 bytes (0%)
         MLK: 58604 bytes leaked in 7 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_free_list_grow [ompi_free_list.c:188]
                      alloc_size = num_elements * head_size + sizeof(ompi_free_list_memory_t) +
                          flist-&gt;fl_frag_alignment;
                  
               =&gt;     alloc_ptr = (ompi_free_list_memory_t*)malloc(alloc_size);
                  
                      if(NULL == alloc_ptr)
                          return OMPI_ERR_TEMP_OUT_OF_RESOURCE;
               mca_btl_sm_alloc [btl_sm.c:612]
               mca_bml_base_alloc [bml.h:241]
               mca_pml_ob1_send_request_start_copy [pml_ob1_sendreq.c:509]
               mca_pml_ob1_send_request_start_btl [pml_ob1_sendreq.h:363]
               mca_pml_ob1_send_request_start [pml_ob1_sendreq.h:429]
               mca_pml_ob1_isend [pml_ob1_isend.c:87]
         Block of 8372 bytes (7 times); last block at 0x84a1950
         MLK: 2160 bytes leaked at 0x820e408
         This memory was allocated from:
               malloc         [rtlib.o]
               mca_allocator_bucket_init [allocator_bucket_alloc.c:53]
                      }
                      /* initialize the array of buckets */
                      size = sizeof(mca_allocator_bucket_bucket_t) * num_buckets;
               =&gt;     mem_options-&gt;buckets = (mca_allocator_bucket_bucket_t*) malloc(size);
                      if(NULL == mem_options-&gt;buckets) {
                          return(NULL);
                      }
               mca_allocator_bucket_module_init [allocator_bucket.c:69]
               mca_mpool_sm_init [mpool_sm_component.c:243]
               mca_mpool_base_module_create [mpool_base_lookup.c:90]
               sm_btl_first_time_init [btl_sm.c:219]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
         MLK: 2160 bytes leaked at 0x8220d30
         This memory was allocated from:
               malloc         [rtlib.o]
               mca_allocator_bucket_init [allocator_bucket_alloc.c:53]
                      }
                      /* initialize the array of buckets */
                      size = sizeof(mca_allocator_bucket_bucket_t) * num_buckets;
               =&gt;     mem_options-&gt;buckets = (mca_allocator_bucket_bucket_t*) malloc(size);
                      if(NULL == mem_options-&gt;buckets) {
                          return(NULL);
                      }
               mca_allocator_bucket_module_init [allocator_bucket.c:69]
               mca_pml_ob1_component_open [pml_ob1_component.c:132]
               open_components [mca_base_components_open.c:362]
               mca_base_components_open [mca_base_components_open.c:213]
               mca_pml_base_open [pml_base_open.c:113]
               ompi_mpi_init  [ompi_mpi_init.c:478]
         MLK: 2160 bytes leaked at 0x81e09e8
         This memory was allocated from:
               malloc         [rtlib.o]
               mca_allocator_bucket_init [allocator_bucket_alloc.c:53]
                      }
                      /* initialize the array of buckets */
                      size = sizeof(mca_allocator_bucket_bucket_t) * num_buckets;
               =&gt;     mem_options-&gt;buckets = (mca_allocator_bucket_bucket_t*) malloc(size);
                      if(NULL == mem_options-&gt;buckets) {
                          return(NULL);
                      }
               mca_allocator_bucket_module_init [allocator_bucket.c:69]
               mca_pml_csum_component_open [pml_csum_component.c:139]
               open_components [mca_base_components_open.c:362]
               mca_base_components_open [mca_base_components_open.c:213]
               mca_pml_base_open [pml_base_open.c:113]
               ompi_mpi_init  [ompi_mpi_init.c:478]
         MLK: 1204 bytes leaked at 0x820f178
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_free_list_grow [ompi_free_list.c:188]
                      alloc_size = num_elements * head_size + sizeof(ompi_free_list_memory_t) +
                          flist-&gt;fl_frag_alignment;
                  
               =&gt;     alloc_ptr = (ompi_free_list_memory_t*)malloc(alloc_size);
                  
                      if(NULL == alloc_ptr)
                          return OMPI_ERR_TEMP_OUT_OF_RESOURCE;
               ompi_free_list_init_ex_new [ompi_free_list.c:163]
               ompi_free_list_init_new [ompi_free_list.h:173]
               sm_btl_first_time_init [btl_sm.c:339]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
         MLK: 1204 bytes leaked at 0x8218590
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_free_list_grow [ompi_free_list.c:188]
                      alloc_size = num_elements * head_size + sizeof(ompi_free_list_memory_t) +
                          flist-&gt;fl_frag_alignment;
                  
               =&gt;     alloc_ptr = (ompi_free_list_memory_t*)malloc(alloc_size);
                  
                      if(NULL == alloc_ptr)
                          return OMPI_ERR_TEMP_OUT_OF_RESOURCE;
               ompi_free_list_init_ex_new [ompi_free_list.c:163]
               ompi_free_list_init_new [ompi_free_list.h:173]
               sm_btl_first_time_init [btl_sm.c:352]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
         MLK: 1072 bytes leaked at 0x81b2480
         This memory was allocated from:
               malloc         [rtlib.o]
               _nss_XbyY_buf_alloc [libc.so.1]
               get_pwbuf      [libc.so.1]
               getpwuid       [libc.so.1]
               orte_session_dir_get_name [session_dir.c:143]
               orte_session_dir [session_dir.c:390]
               orte_ess_base_app_setup [ess_base_std_app.c:131]
               rte_init       [ess_env_module.c:153]
         MLK: 1026 bytes leaked at 0x81e12d0
         This memory was allocated from:
               malloc         [rtlib.o]
               get_hostname_buffer [net.c:102]
                      if (OPAL_SUCCESS != ret) return NULL;
                  
                      if (NULL == buffer) {
               =&gt;         buffer = (void*) malloc((NI_MAXHOST + 1) * sizeof(char));
                          ret = opal_tsd_setspecific(hostname_tsd_key, buffer);
                      }
                  
               opal_net_get_hostname [net.c:274]
               mca_oob_tcp_get_addr [oob_tcp.c:1485]
               orte_rml_oob_get_uri [rml_oob_contact.c:30]
               orte_routed_base_register_sync [routed_base_register_sync.c:75]
               init_routes    [routed_binomial.c:875]
               orte_ess_base_app_setup [ess_base_std_app.c:150]
         MLK: 1020 bytes leaked at 0x83f1dd8
         This memory was allocated from:
               calloc         [rtlib.o]
               ompi_ddt_create [dt_create.c:106]
                      if( expectedSize == -1 ) expectedSize = DT_INCREASE_STACK;
                      datatype-&gt;desc.length = expectedSize + 1;  /* one for the fake elem at the end */
                      datatype-&gt;desc.used   = 0;
               =&gt;     datatype-&gt;desc.desc   = (dt_elem_desc_t*)calloc(datatype-&gt;desc.length, sizeof(dt_elem_desc_t));
                      memset( datatype-&gt;name, 0, MPI_MAX_OBJECT_NAME );
                      return datatype;
                  }
               ompi_ddt_create_struct [dt_create_struct.c:71]
               MPI_Type_create_struct [ptype_create_struct.c:79]
               MPI_Type_struct [ptype_struct.c:43]
               main           [my program]
               _start         [crt1.o]
         MLK: 940 bytes leaked at 0x8218aa0
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_free_list_grow [opal_free_list.c:95]
                  
                      alloc_ptr = (unsigned char *)malloc((num_elements * flist-&gt;fl_elem_size) + 
                                                          sizeof(opal_list_item_t) +
               =&gt;                                         CACHE_LINE_SIZE);
                      if(NULL == alloc_ptr)
                          return OPAL_ERR_TEMP_OUT_OF_RESOURCE;
                  
               opal_free_list_init [opal_free_list.c:78]
               sm_btl_first_time_init [btl_sm.c:359]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
         MLK: 832 bytes leaked at 0x83f2230
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_ddt_set_args [dt_args.c:113]
                      ompi_ddt_args_t* pArgs;
                  
                      assert( NULL == pData-&gt;args );
               =&gt;     ALLOC_ARGS( pData, ci, ca, cd );
                  
                      pArgs = (ompi_ddt_args_t*)pData-&gt;args;
                      pArgs-&gt;create_type = type;
               MPI_Type_create_struct [ptype_create_struct.c:92]
               MPI_Type_struct [ptype_struct.c:43]
               main           [my program]
               _start         [crt1.o]
         MLK: 816 bytes leaked in 16 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               get_print_name_buffer [name_fns.c:96]
               orte_util_print_jobids [name_fns.c:169]
               orte_util_print_name_args [name_fns.c:131]
               env_set_name   [ess_env_module.c:383]
               rte_init       [ess_env_module.c:129]
               orte_init      [orte_init.c:131]
               ompi_mpi_init  [ompi_mpi_init.c:342]
         Block of 51 bytes (16 times); last block at 0x81cccf8
         MLK: 740 bytes leaked at 0x83f25d0
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_ddt_optimize_short [dt_optimize.c:88]
               ompi_ddt_commit [dt_optimize.c:306]
               MPI_Type_commit [ptype_commit.c:54]
               main           [my program]
               _start         [crt1.o]
         MLK: 692 bytes leaked at 0x81ddea0
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_free_list_grow [ompi_free_list.c:188]
               ompi_free_list_init_ex_new [ompi_free_list.c:163]
               ompi_free_list_init_new [ompi_free_list.h:173]
               mca_pml_ob1_enable [pml_ob1.c:130]
               ompi_mpi_init  [ompi_mpi_init.c:656]
               MPI_Init       [pinit.c:80]
               main           [my program]
         MLK: 672 bytes leaked in 2 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               ompi_ddt_create [dt_create.c:101]
               ompi_ddt_create_struct [dt_create_struct.c:71]
               MPI_Type_create_struct [ptype_create_struct.c:79]
               MPI_Type_struct [ptype_struct.c:43]
         Block of 336 bytes (2 times); last block at 0x83f2f38
         MLK: 564 bytes leaked in 3 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               mca_bml_r2_add_procs [bml_r2.c:224]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
         Block of 188 bytes (3 times); last block at 0x8214248
         MLK: 552 bytes leaked in 3 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               modex_lookup_orte_proc [grpcomm_base_modex.c:246]
               orte_grpcomm_base_update_modex_entries [grpcomm_base_modex.c:437]
               modex          [grpcomm_bad_module.c:565]
               ompi_mpi_init  [ompi_mpi_init.c:626]
               MPI_Init       [pinit.c:80]
         Block of 184 bytes (3 times); last block at 0x823c730
         MLK: 540 bytes leaked at 0x83f16e0
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_ddt_optimize_short [dt_optimize.c:88]
               ompi_ddt_commit [dt_optimize.c:306]
               MPI_Type_commit [ptype_commit.c:54]
               main           [my program]
               _start         [crt1.o]
         MLK: 520 bytes leaked at 0x83f3208
         This memory was allocated from:
               calloc         [rtlib.o]
               ompi_ddt_create [dt_create.c:106]
               ompi_ddt_create_struct [dt_create_struct.c:71]
               MPI_Type_create_struct [ptype_create_struct.c:79]
               MPI_Type_struct [ptype_struct.c:43]
               main           [my program]
               _start         [crt1.o]
         MLK: 512 bytes leaked at 0x81bec20
         This memory was allocated from:
               malloc         [rtlib.o]
               mca_oob_tcp_addr_insert [oob_tcp_addr.c:167]
               mca_oob_tcp_set_addr [oob_tcp.c:1635]
               orte_rml_oob_set_uri [rml_oob_contact.c:60]
               init_routes    [routed_binomial.c:842]
               orte_ess_base_app_setup [ess_base_std_app.c:150]
               rte_init       [ess_env_module.c:153]
               orte_init      [orte_init.c:131]
         MLK: 472 bytes leaked in 2 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               mca_coll_sync_comm_query [coll_sync_module.c:97]
               query_2_0_0    [coll_base_comm_select.c:377]
               query          [coll_base_comm_select.c:360]
               check_one_component [coll_base_comm_select.c:322]
               check_components [coll_base_comm_select.c:272]
         Block of 236 bytes (2 times); last block at 0x8219198
         MLK: 308 bytes leaked at 0x81c1078
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               mca_oob_tcp_component_init [oob_tcp.c:1161]
               mca_oob_base_init [oob_base_init.c:77]
               rml_oob_init   [rml_oob_component.c:132]
               orte_rml_base_select [rml_base_components.c:133]
               orte_ess_base_app_setup [ess_base_std_app.c:71]
         MLK: 280 bytes leaked at 0x81d2b90
         This memory was allocated from:
               malloc         [rtlib.o]
               dat_dictionary_create [libdat.so.1]
               dat_sr_init    [libdat.so.1]
               dat_init       [libdat.so.1]
               udat_check_state [libdat.so.1]
               dat_registry_list_providers [libdat.so.1]
               mca_btl_udapl_component_init [btl_udapl_component.c:503]
               mca_btl_base_select [btl_base_select.c:111]
         MLK: 280 bytes leaked at 0x8227c58
         This memory was allocated from:
               malloc         [rtlib.o]
               dat_dictionary_create [libdat.so.1]
               dat_sr_init    [libdat.so.1]
               dat_init       [libdat.so.1]
               udat_check_state [libdat.so.1]
               dat_registry_list_providers [libdat.so.1]
               mca_btl_udapl_component_init [btl_udapl_component.c:503]
               mca_btl_base_select [btl_base_select.c:111]
         MLK: 280 bytes leaked at 0x81d2d08
         This memory was allocated from:
               malloc         [rtlib.o]
               dat_dictionary_create [libdat.so.1]
               dat_dr_init    [libdat.so.1]
               dat_init       [libdat.so.1]
               udat_check_state [libdat.so.1]
               dat_registry_list_providers [libdat.so.1]
               mca_btl_udapl_component_init [btl_udapl_component.c:503]
               mca_btl_base_select [btl_base_select.c:111]
         MLK: 280 bytes leaked at 0x81d2e80
         This memory was allocated from:
               malloc         [rtlib.o]
               dat_dictionary_create [libdat.so.1]
               dat_dr_init    [libdat.so.1]
               dat_init       [libdat.so.1]
               udat_check_state [libdat.so.1]
               dat_registry_list_providers [libdat.so.1]
               mca_btl_udapl_component_init [btl_udapl_component.c:503]
               mca_btl_base_select [btl_base_select.c:111]
         MLK: 268 bytes leaked at 0x83f2bf0
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_ddt_set_args [dt_args.c:113]
               MPI_Type_create_struct [ptype_create_struct.c:92]
               MPI_Type_struct [ptype_struct.c:43]
               main           [my program]
               _start         [crt1.o]
         MLK: 232 bytes leaked at 0x81bc540
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               orte_rml_oob_recv_buffer_nb [rml_oob_recv.c:209]
               orte_rml_base_comm_start [rml_base_receive.c:59]
               orte_rml_oob_init [rml_oob_component.c:177]
               orte_ess_base_app_setup [ess_base_std_app.c:115]
               rte_init       [ess_env_module.c:153]
         MLK: 227 bytes leaked in 8 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               read_topic     [show_help.c:250]
               load_array     [show_help.c:279]
               opal_show_help_vstring [show_help.c:297]
               orte_show_help [show_help.c:404]
               mca_btl_base_error_no_nics [btl_base_error.c:70]
               mca_btl_udapl_component_init [btl_udapl_component.c:560]
         Block of 68 bytes at 0x8217df0
         Block of 64 bytes at 0x81de9b0
         Block of 52 bytes at 0x81deb58
         Block of 19 bytes at 0x8217fb0
         Block of 11 bytes (2 times); last block at 0x81ded20
         Block of 1 byte (2 times); last block at 0x81dec50
         MLK: 224 bytes leaked in 4 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               modex_lookup_attr_data [grpcomm_base_modex.c:215]
               orte_grpcomm_base_update_modex_entries [grpcomm_base_modex.c:492]
               modex          [grpcomm_bad_module.c:565]
               ompi_mpi_init  [ompi_mpi_init.c:626]
               MPI_Init       [pinit.c:80]
         Block of 56 bytes (4 times); last block at 0x823ca90
         MLK: 160 bytes leaked in 2 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               create_sm_endpoint [btl_sm.c:378]
               mca_btl_sm_add_procs [btl_sm.c:459]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
         Block of 80 bytes (2 times); last block at 0x823e490
         MLK: 144 bytes leaked in 3 blocks
         This memory was allocated from:
               realloc        [rtlib.o]
               mca_bml_base_btl_array_reserve [bml_base_btl.c:61]
               mca_bml_r2_add_procs [bml_r2.c:233]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
               _start         [crt1.o]
         Block of 48 bytes (3 times); last block at 0x823e2e0
         MLK: 144 bytes leaked in 3 blocks
         This memory was allocated from:
               realloc        [rtlib.o]
               mca_bml_base_btl_array_reserve [bml_base_btl.c:61]
               mca_bml_r2_add_procs [bml_r2.c:234]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
               _start         [crt1.o]
         Block of 48 bytes (3 times); last block at 0x823e370
         MLK: 144 bytes leaked in 3 blocks
         This memory was allocated from:
               realloc        [rtlib.o]
               mca_bml_base_btl_array_reserve [bml_base_btl.c:61]
               mca_bml_r2_add_procs [bml_r2.c:235]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
               _start         [crt1.o]
         Block of 48 bytes (3 times); last block at 0x823e400
         MLK: 136 bytes leaked at 0x81b8bc8
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               mca_btl_tcp_proc_create [btl_tcp_proc.c:113]
               mca_btl_tcp_proc_local [btl_tcp_proc.h:120]
               mca_btl_tcp_del_procs [btl_tcp.c:154]
               mca_bml_r2_add_procs [bml_r2.c:249]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
         MLK: 96 bytes leaked in 2 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               open_components [mca_base_components_open.c:421]
               mca_base_components_open [mca_base_components_open.c:213]
               ompi_osc_base_open [osc_base_open.c:64]
               ompi_mpi_init  [ompi_mpi_init.c:487]
               MPI_Init       [pinit.c:80]
         Block of 48 bytes (2 times); last block at 0x81d4b40
         MLK: 76 bytes leaked in 4 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               orte_grpcomm_base_update_modex_entries [grpcomm_base_modex.c:473]
               modex          [grpcomm_bad_module.c:565]
               ompi_mpi_init  [ompi_mpi_init.c:626]
               MPI_Init       [pinit.c:80]
               main           [my program]
               _start         [crt1.o]
         Block of 24 bytes (3 times); last block at 0x823fec8
         Block of 4 bytes at 0x823ca30
         MLK: 72 bytes leaked at 0x81b2280
         This memory was allocated from:
               malloc         [rtlib.o]
               rml_oob_init   [rml_oob_component.c:143]
               orte_rml_base_select [rml_base_components.c:133]
               orte_ess_base_app_setup [ess_base_std_app.c:71]
               rte_init       [ess_env_module.c:153]
               orte_init      [orte_init.c:131]
               ompi_mpi_init  [ompi_mpi_init.c:342]
               MPI_Init       [pinit.c:80]
         MLK: 68 bytes leaked at 0x81d2ff8
         This memory was allocated from:
               malloc         [rtlib.o]
               mca_mpool_sm_init [mpool_sm_component.c:210]
               mca_mpool_base_module_create [mpool_base_lookup.c:90]
               sm_btl_first_time_init [btl_sm.c:219]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
         MLK: 68 bytes leaked at 0x81a3120
         This memory was allocated from:
               malloc         [rtlib.o]
               get_print_name_buffer [name_fns.c:94]
               orte_util_print_jobids [name_fns.c:169]
               orte_util_print_name_args [name_fns.c:131]
               env_set_name   [ess_env_module.c:383]
               rte_init       [ess_env_module.c:129]
               orte_init      [orte_init.c:131]
               ompi_mpi_init  [ompi_mpi_init.c:342]
         MLK: 52 bytes leaked at 0x8228668
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               ompi_attr_create_keyval [attribute.c:546]
               create_comm    [attribute_predefined.c:226]
               ompi_attr_create_predefined [attribute_predefined.c:138]
               ompi_attr_init [attribute.c:505]
               ompi_mpi_init  [ompi_mpi_init.c:608]
         MLK: 52 bytes leaked at 0x823eb48
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               ompi_attr_create_keyval [attribute.c:546]
               create_comm    [attribute_predefined.c:226]
               ompi_attr_create_predefined [attribute_predefined.c:138]
               ompi_attr_init [attribute.c:505]
               ompi_mpi_init  [ompi_mpi_init.c:608]
         MLK: 52 bytes leaked at 0x81b6108
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               mca_oob_tcp_set_addr [oob_tcp.c:1630]
               orte_rml_oob_set_uri [rml_oob_contact.c:60]
               init_routes    [routed_binomial.c:842]
               orte_ess_base_app_setup [ess_base_std_app.c:150]
               rte_init       [ess_env_module.c:153]
         MLK: 52 bytes leaked at 0x8228428
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               ompi_attr_create_keyval [attribute.c:546]
               create_comm    [attribute_predefined.c:226]
               ompi_attr_create_predefined [attribute_predefined.c:138]
               ompi_attr_init [attribute.c:505]
               ompi_mpi_init  [ompi_mpi_init.c:608]
         MLK: 52 bytes leaked at 0x823ec68
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               ompi_attr_create_keyval [attribute.c:546]
               create_comm    [attribute_predefined.c:226]
               ompi_attr_create_predefined [attribute_predefined.c:138]
               ompi_attr_init [attribute.c:505]
               ompi_mpi_init  [ompi_mpi_init.c:608]
         MLK: 52 bytes leaked at 0x8227248
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               ompi_attr_create_keyval [attribute.c:546]
               create_comm    [attribute_predefined.c:226]
               ompi_attr_create_predefined [attribute_predefined.c:138]
               ompi_attr_init [attribute.c:505]
               ompi_mpi_init  [ompi_mpi_init.c:608]
         MLK: 52 bytes leaked at 0x8228548
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               ompi_attr_create_keyval [attribute.c:546]
               create_comm    [attribute_predefined.c:226]
               ompi_attr_create_predefined [attribute_predefined.c:138]
               ompi_attr_init [attribute.c:505]
               ompi_mpi_init  [ompi_mpi_init.c:608]
         MLK: 52 bytes leaked at 0x823ed88
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               ompi_attr_create_keyval [attribute.c:546]
               create_comm    [attribute_predefined.c:226]
               ompi_attr_create_predefined [attribute_predefined.c:138]
               ompi_attr_init [attribute.c:505]
               ompi_mpi_init  [ompi_mpi_init.c:608]
         MLK: 49 bytes leaked in 4 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_dss_unpack_string [dss_unpack.c:381]
               opal_dss_unpack_buffer [dss_unpack.c:119]
               opal_dss_unpack [dss_unpack.c:83]
               orte_grpcomm_base_update_modex_entries [grpcomm_base_modex.c:462]
               modex          [grpcomm_bad_module.c:565]
               ompi_mpi_init  [ompi_mpi_init.c:626]
               MPI_Init       [pinit.c:80]
         Block of 13 bytes at 0x823c9c0
         Block of 12 bytes (3 times); last block at 0x82176f0
         MLK: 49 bytes leaked in 4 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               modex_lookup_attr_data [grpcomm_base_modex.c:218]
               orte_grpcomm_base_update_modex_entries [grpcomm_base_modex.c:492]
               modex          [grpcomm_bad_module.c:565]
               ompi_mpi_init  [ompi_mpi_init.c:626]
               MPI_Init       [pinit.c:80]
               main           [my program]
         Block of 13 bytes at 0x823cb28
         Block of 12 bytes (3 times); last block at 0x823c608
         MLK: 48 bytes leaked in 2 blocks
         This memory was allocated from:
               malloc         [rtlib.o]
               orte_grpcomm_base_get_proc_attr [grpcomm_base_modex.c:357]
               ompi_modex_recv [ompi_module_exchange.c:63]
               mca_btl_tcp_proc_create [btl_tcp_proc.c:128]
               mca_btl_tcp_add_procs [btl_tcp.c:101]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
         Block of 24 bytes (2 times); last block at 0x81b7e88
         MLK: 48 bytes leaked at 0x8214cd8
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               open_components [mca_base_components_open.c:421]
               mca_base_components_open [mca_base_components_open.c:213]
               mca_btl_base_open [btl_base_open.c:118]
               mca_bml_base_open [bml_base_open.c:81]
               mca_pml_csum_component_open [pml_csum_component.c:145]
         MLK: 48 bytes leaked at 0x8210ee8
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_obj_new   [opal_object.h:468]
               opal_obj_new_debug [opal_object.h:247]
               open_components [mca_base_components_open.c:421]
               mca_base_components_open [mca_base_components_open.c:213]
               mca_bml_base_open [bml_base_open.c:44]
               mca_pml_csum_component_open [pml_csum_component.c:145]
               open_components [mca_base_components_open.c:362]
         MLK: 40 bytes leaked at 0x81def38
         This memory was allocated from:
               malloc         [rtlib.o]
               mca_allocator_bucket_module_init [allocator_bucket.c:62]
               mca_mpool_sm_init [mpool_sm_component.c:243]
               mca_mpool_base_module_create [mpool_base_lookup.c:90]
               sm_btl_first_time_init [btl_sm.c:219]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
         MLK: 40 bytes leaked at 0x8211500
         This memory was allocated from:
               malloc         [rtlib.o]
               mca_allocator_bucket_module_init [allocator_bucket.c:62]
               mca_pml_csum_component_open [pml_csum_component.c:139]
               open_components [mca_base_components_open.c:362]
               mca_base_components_open [mca_base_components_open.c:213]
               mca_pml_base_open [pml_base_open.c:113]
               ompi_mpi_init  [ompi_mpi_init.c:478]
               MPI_Init       [pinit.c:80]
         MLK: 24 bytes leaked at 0x81edbd8
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               param_register [mca_base_param.c:1545]
               mca_base_param_reg_string [mca_base_param.c:374]
               sm_open        [coll_sm_component.c:165]
         MLK: 24 bytes leaked at 0x81cf860
         This memory was allocated from:
               malloc         [rtlib.o]
               orte_grpcomm_base_get_proc_attr [grpcomm_base_modex.c:357]
               ompi_modex_recv [ompi_module_exchange.c:63]
               mca_btl_tcp_proc_create [btl_tcp_proc.c:128]
               mca_btl_tcp_proc_local [btl_tcp_proc.h:120]
               mca_btl_tcp_del_procs [btl_tcp.c:154]
               mca_bml_r2_add_procs [bml_r2.c:249]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
         MLK: 16 bytes leaked at 0x81a8228
         This memory was allocated from:
               malloc         [rtlib.o]
               orte_rml_oob_recv_buffer_nb [rml_oob_recv.c:212]
               orte_rml_base_comm_start [rml_base_receive.c:59]
               orte_rml_oob_init [rml_oob_component.c:177]
               orte_ess_base_app_setup [ess_base_std_app.c:115]
               rte_init       [ess_env_module.c:153]
               orte_init      [orte_init.c:131]
               ompi_mpi_init  [ompi_mpi_init.c:342]
         MLK: 12 bytes leaked at 0x81decb0
         This memory was allocated from:
               malloc         [rtlib.o]
               sm_btl_first_time_init [btl_sm.c:316]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
         MLK: 12 bytes leaked at 0x84bfde8
         This memory was allocated from:
               malloc         [rtlib.o]
               ompi_proc_all  [proc.c:272]
               mca_bml_r2_finalize [bml_r2.c:609]
               mca_pml_ob1_component_fini [pml_ob1_component.c:187]
               mca_pml_base_finalize [pml_base_close.c:34]
               ompi_mpi_finalize [ompi_mpi_finalize.c:196]
               MPI_Finalize   [pfinalize.c:44]
               main           [my program]
         MLK: 12 bytes leaked at 0x82278d0
         This memory was allocated from:
               malloc         [rtlib.o]
               dat_dictionary_create [libdat.so.1]
               dat_sr_init    [libdat.so.1]
               dat_init       [libdat.so.1]
               udat_check_state [libdat.so.1]
               dat_registry_list_providers [libdat.so.1]
               mca_btl_udapl_component_init [btl_udapl_component.c:503]
               mca_btl_base_select [btl_base_select.c:111]
         MLK: 12 bytes leaked at 0x81debe8
         This memory was allocated from:
               calloc         [rtlib.o]
               sm_btl_first_time_init [btl_sm.c:233]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
         MLK: 12 bytes leaked at 0x81dea50
         This memory was allocated from:
               calloc         [rtlib.o]
               sm_btl_first_time_init [btl_sm.c:239]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
         MLK: 12 bytes leaked at 0x81f1688
         This memory was allocated from:
               malloc         [rtlib.o]
               dat_dictionary_create [libdat.so.1]
               dat_dr_init    [libdat.so.1]
               dat_init       [libdat.so.1]
               udat_check_state [libdat.so.1]
               dat_registry_list_providers [libdat.so.1]
               mca_btl_udapl_component_init [btl_udapl_component.c:503]
               mca_btl_base_select [btl_base_select.c:111]
         MLK: 8 bytes leaked at 0x81b29f8
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_dss_unpack_byte_object [dss_unpack.c:489]
               opal_dss_unpack_buffer [dss_unpack.c:119]
               opal_dss_unpack [dss_unpack.c:83]
               orte_ess_base_build_nidmap [ess_base_nidmap.c:56]
               rte_init       [ess_env_module.c:172]
               orte_init      [orte_init.c:131]
               ompi_mpi_init  [ompi_mpi_init.c:342]
         MLK: 8 bytes leaked at 0x82015e0
         This memory was allocated from:
               malloc         [rtlib.o]
               mca_btl_tcp_proc_create [btl_tcp_proc.c:144]
               mca_btl_tcp_proc_local [btl_tcp_proc.h:120]
               mca_btl_tcp_del_procs [btl_tcp.c:154]
               mca_bml_r2_add_procs [bml_r2.c:249]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
         MLK: 8 bytes leaked at 0x81bcee8
         This memory was allocated from:
               malloc         [rtlib.o]
               opal_dss_unpack_byte_object [dss_unpack.c:489]
               opal_dss_unpack_buffer [dss_unpack.c:119]
               opal_dss_unpack [dss_unpack.c:83]
               orte_ess_base_build_nidmap [ess_base_nidmap.c:69]
               rte_init       [ess_env_module.c:172]
               orte_init      [orte_init.c:131]
               ompi_mpi_init  [ompi_mpi_init.c:342]
         MLK: 7 bytes leaked at 0x8220c40
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               param_register [mca_base_param.c:1545]
               mca_base_param_reg_string [mca_base_param.c:374]
               mca_pml_ob1_component_open [pml_ob1_component.c:123]
         MLK: 7 bytes leaked at 0x81f0630
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               mca_base_param_lookup_string [mca_base_param.c:535]
               mca_pml_v_param_register_string [pml_v_component.c:257]
               mca_pml_v_component_open [pml_v_component.c:71]
         MLK: 6 bytes leaked at 0x81d9e50
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               param_register [mca_base_param.c:1545]
               mca_base_param_reg_string [mca_base_param.c:374]
               mca_oob_tcp_component_open [oob_tcp.c:314]
         MLK: 6 bytes leaked at 0x81deab8
         This memory was allocated from:
               malloc         [rtlib.o]
               sm_btl_first_time_init [btl_sm.c:323]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
         MLK: 5 bytes leaked at 0x81dbd18
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               param_register [mca_base_param.c:1545]
               mca_base_param_reg_string [mca_base_param.c:374]
               mca_btl_udapl_reg_string [btl_udapl_mca.c:48]
         MLK: 5 bytes leaked at 0x81c1398
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               orte_session_dir_get_name [session_dir.c:332]
               orte_session_dir [session_dir.c:390]
               orte_ess_base_app_setup [ess_base_std_app.c:131]
               rte_init       [ess_env_module.c:153]
               orte_init      [orte_init.c:131]
               ompi_mpi_init  [ompi_mpi_init.c:342]
         MLK: 4 bytes leaked at 0x81fd458
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               mca_pml_base_open [pml_base_open.c:143]
               ompi_mpi_init  [ompi_mpi_init.c:478]
               MPI_Init       [pinit.c:80]
               main           [my program]
               _start         [crt1.o]
         MLK: 4 bytes leaked at 0x81a6e30
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               mca_base_param_set_string [mca_base_param.c:551]
               ompi_mpi_init  [ompi_mpi_init.c:322]
               MPI_Init       [pinit.c:80]
               main           [my program]
               _start         [crt1.o]
         MLK: 4 bytes leaked at 0x81ba4d8
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               param_register [mca_base_param.c:1545]
               mca_base_param_reg_string [mca_base_param.c:374]
               mca_mpool_rdma_open [mpool_rdma_component.c:75]
         MLK: 4 bytes leaked at 0x8227dd0
         This memory was allocated from:
               calloc         [rtlib.o]
               sm_btl_first_time_init [btl_sm.c:185]
               mca_btl_sm_add_procs [btl_sm.c:485]
               mca_bml_r2_add_procs [bml_r2.c:206]
               mca_pml_ob1_add_procs [pml_ob1.c:310]
               ompi_mpi_init  [ompi_mpi_init.c:667]
               MPI_Init       [pinit.c:80]
               main           [my program]
         MLK: 3 bytes leaked at 0x81ee688
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               mca_pml_base_open [pml_base_open.c:144]
               ompi_mpi_init  [ompi_mpi_init.c:478]
               MPI_Init       [pinit.c:80]
               main           [my program]
               _start         [crt1.o]
         MLK: 3 bytes leaked at 0x81be2c0
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               mca_base_param_lookup_string [mca_base_param.c:535]
               mca_btl_sm_param_register_string [btl_sm_component.c:102]
               mca_btl_sm_component_open [btl_sm_component.c:134]
         MLK: 1 byte leaked at 0x81be028
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               param_register [mca_base_param.c:1545]
               mca_base_param_reg_string_name [mca_base_param.c:406]
               mca_pml_v_component_open [pml_v_component.c:76]
         MLK: 1 byte leaked at 0x81fd3f8
         This memory was allocated from:
               malloc         [rtlib.o]
               strdup         [libc.so.1]
               set            [mca_base_param.c:2037]
               lookup_default [mca_base_param.c:2023]
               param_lookup   [mca_base_param.c:1770]
               param_register [mca_base_param.c:1521]
               mca_base_param_reg_string_name [mca_base_param.c:406]
               mca_pml_base_open [pml_base_open.c:140]
         Purify Heap Analysis (combining suppressed and unsuppressed blocks)

--Boundary_(ID_wgNc+x0/pRTSV4YrnkN7Fg)--
]