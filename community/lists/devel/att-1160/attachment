&gt;come from the BTL headers where the fields do not have the same<br>&gt;alignment inside. The original question was asked by Nysal Jan on an<br>&gt;email with the subject &quot;SEGV in EM64T &lt;--&gt; PPC64 communication&quot; on
<br>&gt;Oct. 11 2006. Unfortunately, we still have the same problem.<br><br>I'm forwarding that email. Further investigation showed that the same issue exists with a few other ob1 headers as well. A 64-bit build doesn't have this problem. I'm not sure if this might be the same issue that you are facing. You could test if the attached patch works for you (Although this is not the right solution). Maybe using -malign-double for the build might also work, but I haven't tried that out. 
<br><br>******************************************************************<br>Hi Jeff,<br>I'm using the r12014M revision of the trunk.<br>I'm getting a SEGV (backtrace included) when running the osu b/w benchmark on a heterogeneous set of 2 nodes (a EM64T&nbsp; &amp;&nbsp; PPC64).
<br>A 32 bit build, compiled with gcc, was used. The problem was tracked down to a difference in the size of the mca_btl_tcp_hdr_t structure on these two architectures. <br><br>struct mca_btl_tcp_hdr_t {<br>&nbsp;&nbsp;&nbsp; mca_btl_base_header_t base;&nbsp; /* a uint8_t */
<br>&nbsp;&nbsp;&nbsp; uint8_t&nbsp; type;<br>&nbsp;&nbsp;&nbsp; uint16_t count;<br>&nbsp;&nbsp;&nbsp; uint64_t size;<br>};<br><br>This structure has a size of 12 bytes on EM64T(no padding here) &amp; 16 bytes on PPC64(some padding is added before 'size'). <br><a href="http://docs.sun.com/app/docs/doc/816-5138/6mba6ua5t?a=view">
http://docs.sun.com/app/docs/doc/816-5138/6mba6ua5t?a=view</a>&nbsp;&nbsp; mentions that 'long long' has a 4 byte alignment on i386, which might explain why the structure is only 12 bytes on EM64T. <br><br>The failure happens in mca_btl_tcp_endpoint_recv_handler() when trying to invoke reg-&gt;cbfunc() and reg-&gt;cbfunc is NULL. 
<br>Assuming the receiver side is EM64T: <br>&nbsp;frag-&gt;iov[0].iov_len = sizeof(frag-&gt;hdr) (so assigned 12 bytes on EM64T)<br>&nbsp;thus the readv() in mca_btl_tcp_frag_recv() reads 12 bytes into the first vector instead of 16 and from there on everything goes wrong.
<br>******************************************************************<br><br>

