Index: ompi/mca/btl/tcp/btl_tcp_hdr.h
===================================================================
--- ompi/mca/btl/tcp/btl_tcp_hdr.h      (revision 12316)
+++ ompi/mca/btl/tcp/btl_tcp_hdr.h      (working copy)
@@ -42,6 +42,9 @@
     mca_btl_base_header_t base;
     uint8_t  type;
     uint16_t count;
+#if OMPI_ENABLE_HETEROGENEOUS_SUPPORT
+    uint32_t padding;
+#endif
     uint64_t size;
 };
 typedef struct mca_btl_tcp_hdr_t mca_btl_tcp_hdr_t;
Index: ompi/mca/pml/ob1/pml_ob1_hdr.h
===================================================================
--- ompi/mca/pml/ob1/pml_ob1_hdr.h      (revision 12316)
+++ ompi/mca/pml/ob1/pml_ob1_hdr.h      (working copy)
@@ -130,6 +130,9 @@
  */
 struct mca_pml_ob1_frag_hdr_t {
     mca_pml_ob1_common_hdr_t hdr_common;     /**< common attributes */
+#if OMPI_ENABLE_HETEROGENEOUS_SUPPORT
+    uint32_t padding;
+#endif
     uint64_t hdr_frag_offset;                /**< offset into message */
     ompi_ptr_t hdr_src_req;                  /**< pointer to source request */
     ompi_ptr_t hdr_dst_req;                  /**< pointer to matched receive */
@@ -155,6 +158,9 @@

 struct mca_pml_ob1_ack_hdr_t {
     mca_pml_ob1_common_hdr_t hdr_common;      /**< common attributes */
+#if OMPI_ENABLE_HETEROGENEOUS_SUPPORT
+    uint32_t padding;
+#endif
     ompi_ptr_t hdr_src_req;                   /**< source request */
     ompi_ptr_t hdr_dst_req;                   /**< matched receive request */
     uint64_t hdr_rdma_offset;                 /**< starting point rdma protocol
 */
