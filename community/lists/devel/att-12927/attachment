<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv=Content-Type content="text/html; charset=us-ascii"><meta name=Generator content="Microsoft Word 14 (filtered medium)"><style><!--
/* Font Definitions */
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-priority:99;
	color:purple;
	text-decoration:underline;}
span.EmailStyle17
	{mso-style-type:personal;
	font-family:"Calibri","sans-serif";
	color:windowtext;}
span.EmailStyle18
	{mso-style-type:personal-reply;
	font-family:"Calibri","sans-serif";
	color:#1F497D;}
.MsoChpDefault
	{mso-style-type:export-only;
	font-size:10.0pt;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
--></style><!--[if gte mso 9]><xml>
<o:shapedefaults v:ext="edit" spidmax="1026" />
</xml><![endif]--><!--[if gte mso 9]><xml>
<o:shapelayout v:ext="edit">
<o:idmap v:ext="edit" data="1" />
</o:shapelayout></xml><![endif]--></head><body lang=EN-US link=blue vlink=purple><div class=WordSection1><p class=MsoNormal><span style='color:#1F497D'>I will wait another week on this since I know a lot of folks were traveling.&nbsp; Any input welcome.<o:p></o:p></span></p><p class=MsoNormal><span style='color:#1F497D'><o:p>&nbsp;</o:p></span></p><div style='border:none;border-left:solid blue 1.5pt;padding:0in 0in 0in 4.0pt'><div><div style='border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0in 0in 0in'><p class=MsoNormal><b><span style='font-size:10.0pt;font-family:"Tahoma","sans-serif"'>From:</span></b><span style='font-size:10.0pt;font-family:"Tahoma","sans-serif"'> devel [mailto:devel-bounces@open-mpi.org] <b>On Behalf Of </b>Rolf vandeVaart<br><b>Sent:</b> Tuesday, September 10, 2013 2:46 PM<br><b>To:</b> devel@open-mpi.org<br><b>Subject:</b> [OMPI devel] RFC: Remove alignment code from rcache<o:p></o:p></span></p></div></div><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'><span style='font-size:9.0pt;font-family:"Verdana","sans-serif";color:black'>WHAT: Remove alignment code from ompi/mca/rcache/vma module <o:p></o:p></span></p><p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'><span style='font-size:9.0pt;font-family:"Verdana","sans-serif";color:black'>WHY: Because it is redundant and causing problems for memory pools that want different alignment<o:p></o:p></span></p><p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'><span style='font-size:9.0pt;font-family:"Verdana","sans-serif";color:black'>WHERE: ompi/mca/rcache/vma/rcache_vma.c, ompi/mca/mpool/grdma/mpool_grdma_module.c (Detailed changes attached)<o:p></o:p></span></p><p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'><span style='font-size:9.0pt;font-family:"Verdana","sans-serif";color:black'>WHEN: Tuesday, &nbsp;September 17, 2013 COB <o:p></o:p></span></p><p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'><span style='font-size:9.0pt;font-family:"Verdana","sans-serif";color:black'>More detail: <o:p></o:p></span></p><p class=MsoNormal>This RFC looks to remove the alignment code from the rcache as it seems unnecessary.&nbsp; In all use cases in the library, alignment requirements are handled in the memory pool layer (or in the case of the vader btl, in the btl layer).&nbsp; It seems more logical that the alignment is in the upper layer as that code is also where any registration restrictions would be known.&nbsp; The rcache alignment code causes problems for me where I want to have different alignment requirements than the rcache is forcing on me.&nbsp; (The rcache defaults to an alignment of mca_mpool_base_page_size_log=4K on my machine)&nbsp; Therefore, I would like to make the change as attached to this email.<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>I have run through some tests and all seems OK.&nbsp; Is there anything I am missing such that we need this&nbsp; code in the rcache?<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>Thanks,<o:p></o:p></p><p class=MsoNormal>Rolf&nbsp; <o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>[rvandevaart@sm064 ompi-trunk-tuesday]$ svn diff<o:p></o:p></p><p class=MsoNormal>Index: ompi/mca/rcache/vma/rcache_vma.c<o:p></o:p></p><p class=MsoNormal>===================================================================<o:p></o:p></p><p class=MsoNormal>--- ompi/mca/rcache/vma/rcache_vma.c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (revision 29155)<o:p></o:p></p><p class=MsoNormal>+++ ompi/mca/rcache/vma/rcache_vma.c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (working copy)<o:p></o:p></p><p class=MsoNormal>@@ -48,15 +48,13 @@<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void* addr, size_t size, mca_mpool_base_registration_t **reg)&nbsp; {<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; int rc;<o:p></o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; void* base_addr; <o:p></o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; void* bound_addr; <o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp;&nbsp; unsigned char* bound_addr;<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(size == 0) { <o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return OMPI_ERROR; <o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; base_addr = down_align_addr(addr, mca_mpool_base_page_size_log);<o:p></o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; bound_addr = up_align_addr((void*) ((unsigned long) addr + size - 1), mca_mpool_base_page_size_log);<o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp;&nbsp; bound_addr = addr + size - 1;<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Check to ensure that the cache is valid */<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; if (OPAL_UNLIKELY(opal_memory_changed() &amp;&amp; @@ -65,8 +63,8 @@<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return rc;<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; }<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; *reg = mca_rcache_vma_tree_find((mca_rcache_vma_module_t*)rcache, (unsigned char*)base_addr,<o:p></o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (unsigned char*)bound_addr); <o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp; &nbsp;*reg = mca_rcache_vma_tree_find((mca_rcache_vma_module_t*)rcache, (unsigned char*)addr,<o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bound_addr);<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return OMPI_SUCCESS;<o:p></o:p></p><p class=MsoNormal>}<o:p></o:p></p><p class=MsoNormal>@@ -76,14 +74,13 @@<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int reg_cnt)<o:p></o:p></p><p class=MsoNormal>{<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; int rc;<o:p></o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; void *base_addr, *bound_addr;<o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp;&nbsp; unsigned char *bound_addr;<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(size == 0) {<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return OMPI_ERROR;<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; }<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; base_addr = down_align_addr(addr, mca_mpool_base_page_size_log);<o:p></o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; bound_addr = up_align_addr((void*) ((unsigned long) addr + size - 1), mca_mpool_base_page_size_log);<o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp;&nbsp; bound_addr = addr + size - 1;<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Check to ensure that the cache is valid */<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; if (OPAL_UNLIKELY(opal_memory_changed() &amp;&amp; @@ -93,7 +90,7 @@<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; }<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return mca_rcache_vma_tree_find_all((mca_rcache_vma_module_t*)rcache,<o:p></o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (unsigned char*)base_addr, (unsigned char*)bound_addr, regs,<o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (unsigned char*)addr, bound_addr, regs,<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reg_cnt);<o:p></o:p></p><p class=MsoNormal>}<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>Index: ompi/mca/mpool/grdma/mpool_grdma_module.c<o:p></o:p></p><p class=MsoNormal>===================================================================<o:p></o:p></p><p class=MsoNormal>--- ompi/mca/mpool/grdma/mpool_grdma_module.c&nbsp;&nbsp; (revision 29155)<o:p></o:p></p><p class=MsoNormal>+++ ompi/mca/mpool/grdma/mpool_grdma_module.c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (working copy)<o:p></o:p></p><p class=MsoNormal>@@ -233,7 +233,7 @@<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * Persistent registration are always registered and placed in the cache */<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; if(!(bypass_cache || persist)) {<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* check to see if memory is registered */<o:p></o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mpool-&gt;rcache-&gt;rcache_find(mpool-&gt;rcache, addr, size, reg);<o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mpool-&gt;rcache-&gt;rcache_find(mpool-&gt;rcache, base, bound - base + <o:p></o:p></p><p class=MsoNormal>+ 1, reg);<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (*reg &amp;&amp; !(flags &amp; MCA_MPOOL_FLAGS_INVALID)) {<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (0 == (*reg)-&gt;ref_count) {<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Leave pinned must be set for this to still be in the rcache. */ @@ -346,7 +346,7 @@<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OPAL_THREAD_LOCK(&amp;mpool-&gt;rcache-&gt;lock);<o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>-&nbsp;&nbsp;&nbsp; rc = mpool-&gt;rcache-&gt;rcache_find(mpool-&gt;rcache, addr, size, reg);<o:p></o:p></p><p class=MsoNormal>+&nbsp;&nbsp;&nbsp; rc = mpool-&gt;rcache-&gt;rcache_find(mpool-&gt;rcache, base, bound - base + <o:p></o:p></p><p class=MsoNormal>+ 1, reg);<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp; if(NULL != *reg &amp;&amp;<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (mca_mpool_grdma_component.leave_pinned ||<o:p></o:p></p><p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((*reg)-&gt;flags &amp; MCA_MPOOL_FLAGS_PERSIST) ||<o:p></o:p></p><p class=MsoNormal>[rvandevaart@sm064 ompi-trunk-tuesday]$ <o:p></o:p></p></div></div>
<DIV>
<HR>
</DIV>
<DIV>This email message is for the sole use of the intended recipient(s) and may 
contain confidential information.&nbsp; Any unauthorized review, use, disclosure 
or distribution is prohibited.&nbsp; If you are not the intended recipient, 
please contact the sender by reply email and destroy all copies of the original 
message. </DIV>
<DIV>
<HR>
</DIV>
</body></html>

