<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="MS Exchange Server version 6.5.7654.12">
<TITLE>Unchecked malloc()'s in OMPI 1.4.x</TITLE>
</HEAD>
<BODY>
<!-- Converted from text/plain format -->

<P><FONT SIZE=2>Hi there,<BR>
<BR>
I've been playing around with Coccinelle, the semantic<BR>
patching system (packaged in Ubuntu 10.04) and using it<BR>
to try and detect things like unchecked malloc().&nbsp; It's<BR>
not perfect, for instance it flags up calls to assert()<BR>
on the result of the malloc as bad, even though they're<BR>
not, but the rest seem real.<BR>
<BR>
I've done a test run on OMPI 1.4.2rc3r23065 and it's<BR>
flagged the following, I hope these are useful!<BR>
<BR>
<BR>
ompi/mca/btl/openib/btl_openib_component.c<BR>
line 997 - prepare_device_for_use()<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp; init_data = malloc(sizeof(mca_btl_openib_frag_init_data_t));<BR>
<BR>
<BR>
ompi/mca/btl/openib/btl_openib_component.c<BR>
line 2414 - btl_openib_component_init()<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; init_data = malloc(sizeof(mca_btl_openib_frag_init_data_t));<BR>
<BR>
<BR>
ompi/mca/btl/openib/connect/btl_openib_connect_base.c<BR>
line 104 - prepare_device_for_use()<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp; available = calloc(1, sizeof(all));<BR>
<BR>
<BR>
ompi/mca/btl/portals/btl_portals.c<BR>
line 104 - mca_btl_portals_add_procs()<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; portals_procs = malloc(nprocs * sizeof(ptl_process_id_t));<BR>
<BR>
<BR>
ompi/mpi/f77/comm_spawn_multiple_f.c<BR>
line 109 - mpi_comm_spawn_multiple_f()<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp; c_info = malloc (array_size * sizeof(MPI_Info));<BR>
<BR>
<BR>
opal/class/opal_hash_table.c<BR>
line 431 - opal_hash_table_set_value_ptr()<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp; node-&gt;hn_key = malloc(key_size);<BR>
<BR>
<BR>
orte/mca/ras/alps/ras_alps_module.c<BR>
line 243 - orte_ras_alps_read_appinfo_file()<BR>
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpBuf=malloc(szLen+1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Allocate buffer<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */<BR>
<BR>
<BR>
All the best,<BR>
Chris<BR>
--<BR>
&nbsp; Christopher Samuel - Senior Systems Administrator<BR>
&nbsp; VLSCI - Victorian Life Sciences Computational Initiative<BR>
&nbsp; Email: samuel@unimelb.edu.au Phone: +61 (0)3 903 55545<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A HREF="http://www.vlsci.unimelb.edu.au/">http://www.vlsci.unimelb.edu.au/</A><BR>
</FONT>
</P>

</BODY>
</HTML>
