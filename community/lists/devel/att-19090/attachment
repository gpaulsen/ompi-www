<html>
  <head>
    <meta content="text/html; charset=windows-1252"
      http-equiv="Content-Type">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    <p>my 0.02 US$</p>
    <p><br>
    </p>
    <p>from an implementation point of view, the canonical way of using
      Jenkins with Github is</p>
    <p>1) receive/poll a new PR</p>
    <p>2) create a "check" and mark it pending</p>
    <p>3) run a script</p>
    <p>4) update the "check" status (OK/Failed) based on the exit status
      of the script.</p>
    <p><br>
    </p>
    <p>that being said, it is possible to be "creative" in the script
      and use the github api.</p>
    <p>For example, one script could create several checks, or post
      comments and set tags in the PR.</p>
    <p><br>
    </p>
    <p>as far as i am concerned, i think (all) the check(s) should be
      expected to success.</p>
    <p>and i would also consider as a plus if some comments are posted
      or tags are set when some non standard tests fail, and/or to
      remind some issues still exists.</p>
    <p>for example, the check status could be OK if OpenMPI builds
      successfully, and a comment could be posted to indicate valgrind
      test fails.</p>
    <p><br>
    </p>
    <p>that would save some resources (only one Jenkins server, OpenMPI
      is built once per PR) and make PR statuses easier to interpret
      (e.g. all checks should success unless there is a bug or an
      intermittent failure) while providing additional information.<br>
    </p>
    <p><br>
    </p>
    <p>Cheers,</p>
    <p><br>
    </p>
    <p>Gilles<br>
    </p>
    <br>
    <div class="moz-cite-prefix">On 6/8/2016 6:25 AM, Ralph Castain
      wrote:<br>
    </div>
    <blockquote
      cite="mid:AF4DDD38-8161-415F-B198-74A8B6015DF6@open-mpi.org"
      type="cite">
      <meta http-equiv="Content-Type" content="text/html;
        charset=windows-1252">
      I would agree with all those points 
      <div class=""><br class="">
        <div>
          <blockquote type="cite" class="">
            <div class="">On Jun 7, 2016, at 2:12 PM, Howard Pritchard
              &lt;<a moz-do-not-send="true"
                href="mailto:hppritcha@gmail.com" class="">hppritcha@gmail.com</a>&gt;
              wrote:</div>
            <br class="Apple-interchange-newline">
            <div class="">
              <div dir="ltr" class="">HI Ralph,
                <div class=""><br class="">
                </div>
                <div class="">We briefly discussed this some today.  I
                  would like to avoid the mini-MTT approach for PR
                  checking.</div>
                <div class="">At the same time, one can also see why it
                  might be useful from time to time to make changes to</div>
                <div class="">the script a given jenkins project runs on
                  PRs.  </div>
                <div class=""><br class="">
                </div>
                <div class="">An idea we discussed was to have jenkins
                  folks support a "stable" version of their jenkins
                  script.  If they would</div>
                <div class="">like to make changes,  they would create
                  an experimental, temporary jenkins project to run the
                  new script.</div>
                <div class="">If the new project's script runs clean
                  against open PRs, the new script can be swapped in to
                  the</div>
                <div class="">original jenkins project.  The
                  experimental project could then be deactivated.  If
                  the new script showed failures in the</div>
                <div class="">open PRs, or against master or other
                  branch, issues can be opened to track the problem(s)
                  found by the</div>
                <div class="">script.  The experimental, temporary
                  jenkins project can continue to run, but its
                   "failure" status can be ignored</div>
                <div class="">until the underlying bug(s) is fixed.</div>
                <div class=""><br class="">
                </div>
                <div class="">I don't think it makes much sense to run a
                  jenkins script against PRs if it fails when run
                  against master.</div>
                <div class="">The purpose of jenkins PR testing is to
                  trap new problems, not to keep reminding us there are
                  problems</div>
                <div class="">with the underlying branch which the PR
                  targets.</div>
                <div class=""><br class="">
                </div>
                <div class="">Howard</div>
                <div class=""><br class="">
                </div>
              </div>
              <div class="gmail_extra"><br class="">
                <div class="gmail_quote">2016-06-07 13:33 GMT-06:00
                  Ralph Castain <span dir="ltr" class="">&lt;<a
                      moz-do-not-send="true"
                      href="mailto:rhc@open-mpi.org" target="_blank"
                      class=""><a class="moz-txt-link-abbreviated" href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a></a>&gt;</span>:<br
                    class="">
                  <blockquote class="gmail_quote" style="margin:0 0 0
                    .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi
                    folks<br class="">
                    <br class="">
                    I’m trying to get a handle on our use of Jenkins
                    testing for PRs prior to committing them. When we
                    first discussed this, it was my impression that our
                    objective was to screen PRs to catch any errors
                    caused by differences in environment and to avoid
                    regressions. However, it appears that the tests keep
                    changing without warning, leading to the impression
                    that we are using Jenkins as a “mini-MTT” testing
                    device.<br class="">
                    <br class="">
                    So I think we need to come to consensus on the
                    purpose of the Jenkins testing. If it is to screen
                    for regressions, then the tests need to remain
                    stable. A PR that does not introduce any new
                    problems might not address old ones, but that is no
                    reason to flag it as an “error”.<br class="">
                    <br class="">
                    On the other hand, if the objective is to use
                    Jenkins as a “mini-MTT”, then we need to agree on
                    how/when a PR is ready to be merged. Insisting that
                    nothing be merged until even a mini-MTT is perfectly
                    clean is probably excessively prohibitive - it would
                    require that the entire community (and not just the
                    one proposing the PR) take responsibility for
                    cleaning up the code base against any and all
                    imposed tests.<br class="">
                    <br class="">
                    So I would welcome opinions on this: are we using
                    Jenkins as a screening tool on changes, or as a test
                    for overall correctness of the code base?<br
                      class="">
                    <br class="">
                    Ralph<br class="">
                    <br class="">
                    _______________________________________________<br
                      class="">
                    devel mailing list<br class="">
                    <a moz-do-not-send="true"
                      href="mailto:devel@open-mpi.org" class="">devel@open-mpi.org</a><br
                      class="">
                    Subscription: <a moz-do-not-send="true"
                      href="https://www.open-mpi.org/mailman/listinfo.cgi/devel"
                      rel="noreferrer" target="_blank" class="">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br
                      class="">
                    Link to this post: <a moz-do-not-send="true"
                      href="http://www.open-mpi.org/community/lists/devel/2016/06/19087.php"
                      rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/06/19087.php</a></blockquote>
                </div>
                <br class="">
              </div>
              _______________________________________________<br
                class="">
              devel mailing list<br class="">
              <a moz-do-not-send="true" href="mailto:devel@open-mpi.org"
                class="">devel@open-mpi.org</a><br class="">
              Subscription:
              <a class="moz-txt-link-freetext" href="https://www.open-mpi.org/mailman/listinfo.cgi/devel">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br
                class="">
              Link to this post:
              <a class="moz-txt-link-freetext" href="http://www.open-mpi.org/community/lists/devel/2016/06/19088.php">http://www.open-mpi.org/community/lists/devel/2016/06/19088.php</a></div>
          </blockquote>
        </div>
        <br class="">
      </div>
      <br>
      <fieldset class="mimeAttachmentHeader"></fieldset>
      <br>
      <pre wrap="">_______________________________________________
devel mailing list
<a class="moz-txt-link-abbreviated" href="mailto:devel@open-mpi.org">devel@open-mpi.org</a>
Subscription: <a class="moz-txt-link-freetext" href="https://www.open-mpi.org/mailman/listinfo.cgi/devel">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a>
Link to this post: <a class="moz-txt-link-freetext" href="http://www.open-mpi.org/community/lists/devel/2016/06/19089.php">http://www.open-mpi.org/community/lists/devel/2016/06/19089.php</a></pre>
    </blockquote>
    <br>
  </body>
</html>

