<div dir="ltr">Ralph,<div><br></div><div>We do not have such infrastructure as there are too many possibilities to handle efficiently. However, different projects (Mellanox and NVidia) are using techniques that look similar to what you propose.</div><div><br></div><div>The main idea is to replace the default behavior of the convertor with a BTL-specialized function that understand some of the MPI datatype constructs. This is realized by setting your own pack/unpack functions in the convertor (as the internal description of the datatype is relatively well described in the headers one can implement such functions easily). In case the cost of reevaluating the datatype description is too costly, the attribute table attached to the datatype can be used as a cache.</div><div><br></div><div>  George.</div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Fri, May 20, 2016 at 9:22 AM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hey folks<br>
<br>
Is there some flag by which the datatype code can know what transport is being used? For example, suppose a transport can handle certain datatype configurations itself, without the converting dealing with them (e.g., contiguous vs non-contiguous). Essentially, it’s an “offload” capability. Although the convertor is currently assigned on a per-peer basis, the logic in such cases might also depend upon the capabilities of the transport being used to communicate to that peer.<br>
<br>
So I’m wondering if we have some mechanism by which that capability can be communicated to the datatype code down in OPAL?<br>
Ralph<br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/19008.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/19008.php</a></blockquote></div><br></div>

