<div dir="ltr"><div>I gave &quot;make dist&quot; a try on NetBSD (with its own /bin/sh) and Ubuntu Trusty (w/ /bin/sh symlinked to dash).</div><div>Both generated the tarballs, but dash spewed some warnings on the unalias commands.</div><div><br></div><div>So here is my code review (roughly as long as the scipt itself).</div><div><br></div><div>1)</div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><div><font face="monospace, monospace">#!/usr/bin/env sh</font></div></div></div></blockquote><div><div><br></div><div>The presence of a bourne-compatible shell at /bin/sh is possible *the* most fundamental assumption in any unix-like system.</div><div>So, the /bin/sh path is far more standard than /usr/bin/env (have seen /bin/env).</div><div>Just use &quot;#!/bin/sh&quot;</div><div><br></div><div><br></div><div>2)<br><div><br></div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><div><font face="monospace, monospace">OMPI_VERSION=$3</font></div></div></div><div><div><div><font face="monospace, monospace">OMPI_REPO_REV=$4</font></div></div></div><div><div><div><font face="monospace, monospace"><br></font></div></div></div><div><div><div><font face="monospace, monospace">if test x&quot;$2&quot; = x ; then</font></div></div></div><div><div><div><font face="monospace, monospace">    echo &quot;Must supply relative distdir as argv[2] -- aborting&quot;</font></div></div></div><div><div><div><font face="monospace, monospace">    exit 1</font></div></div></div><div><div><div><font face="monospace, monospace">elif test x$OMPI_VERSION = x ; then</font></div></div></div><div><div><div><font face="monospace, monospace">    echo &quot;Must supply version as argv[1] -- aborting&quot;</font></div></div></div></blockquote><div><div><br></div><div>The first line I&#39;ve quoted takes OMPI_VERSION from ARGV[3].</div><div>So the last line I quoted is incorrect in referring to &quot;argv[1]&quot; (should be 3).</div><div><br></div><div>3)</div><div><br></div></div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><div><font face="monospace, monospace">unalias cp &amp;&gt; /dev/null</font></div></div></div><div><div><div><font face="monospace, monospace">unalias rm &amp;&gt; /dev/null</font></div></div></div><div><div><div><font face="monospace, monospace">unalias mv &amp;&gt; /dev/null</font></div></div></div></blockquote><div><div><br></div><div>The redirect operator &quot;&amp;&gt;&quot; is a bash-ism.</div><div>With dash this runs unalias in the background (in a subshell) with only stdout redirected.</div><div>The result is that if the alias exists it *remains*:</div></div></div></div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><div><div><div><font face="monospace, monospace">$ alias a=b</font></div></div></div></div></div><div><div><div><div><div><font face="monospace, monospace">$ alias</font></div></div></div></div></div><div><div><div><div><div><font face="monospace, monospace">a=&#39;b&#39;</font></div></div></div></div></div><div><div><div><div><div><font face="monospace, monospace">$ unalias a &amp;&gt; /dev/null</font></div></div></div></div></div><div><div><div><div><div><font face="monospace, monospace">$ alias</font></div></div></div></div></div><div><div><div><div><div><font face="monospace, monospace">a=&#39;b&#39;</font></div></div></div></div></div><div><div><div><div><div><font face="monospace, monospace">[1] + Done                       unalias a</font></div></div></div></div></div></blockquote><font face="arial, helvetica, sans-serif"><div><font face="arial, helvetica, sans-serif"><br></font></div></font><div><div><div><div><div>However, if the alias does not exist, dash will give you a warning since stderr is not redirected:</div></div></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><div><div><font face="monospace, monospace">$ unalias b &amp;&gt; /dev/null</font></div></div></div></div></div><div><div><div><div><div><font face="monospace, monospace">$ unalias: b not found</font></div></div></div></div></div><div><div><div><div><div><font face="monospace, monospace">[1] + Done(1)                    unalias b</font></div></div></div></div></div></blockquote><div><div><div><div><br></div><div>Neither of those is what you wanted.</div><div>The portable incantation for redirecting both stdout and stderr is</div><div><br></div></div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><font face="monospace, monospace">command &gt;/dev/null 2&gt;&amp;1</font></div></div></blockquote><font face="monospace, monospace"><div><font face="monospace, monospace"><br></font></div>4)</font></div><div><font face="monospace, monospace"><br></font></div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><font face="monospace, monospace">#########################################################</font></div></div><div><div><font face="monospace, monospace"># VERY IMPORTANT: Now go into the new distribution tree #</font></div></div><div><div><font face="monospace, monospace">#########################################################</font></div></div><div><div><font face="monospace, monospace">cd &quot;$distdir&quot;</font></div></div></blockquote><div><font face="monospace, monospace"><br></font></div>If it&#39;s important enough to yell like that, then I suggest checking that the cd succeeded</div><div><br><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><font face="monospace, monospace">#########################################################</font></div></div><div><div><font face="monospace, monospace"># VERY IMPORTANT: Now go into the new distribution tree #</font></div></div><div><div><font face="monospace, monospace">#########################################################</font></div></div><div><div><font face="monospace, monospace">cd &quot;$distdir&quot;</font></div></div><div><font face="monospace, monospace">if test $? != 0; then</font></div><div><font face="monospace, monospace">    echo &quot;*** ERROR: failed to enter $distdir&quot;</font></div><div><font face="monospace, monospace">    exit 1</font></div><div><font face="monospace, monospace">fi</font></div></blockquote><div><br></div><div><font face="monospace, monospace">5)<br></font><div><div><br></div></div><div>The current line</div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><font face="monospace, monospace">for file in $(echo $files) ; do</font></div></div></blockquote><div><div>produces a behavior no different than the simpler</div></div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><div><font face="monospace, monospace">for file in $files; do</font></div></div></div></blockquote><br>HOWEVER, that is probably a moot point since the body of the loop appears to be pointless.<br>I say pointless because it is intended to replace the string &quot;OMPI_VERSION&quot; in README and INSTALL.<br>However, unless I am missing something, that string doesn&#39;t appear in either file!!<font face="monospace, monospace"><br></font></div><div><font face="monospace, monospace"><br></font><div><div><br></div><div>6) </div><div><br></div><div>I am not sure why</div><div><br></div></div><blockquote style="margin:0px 0px 0px 40px;border:none;padding:0px"><div><div><font face="monospace, monospace">cat &lt;&lt;EOF</font></div></div><div><div><font face="monospace, monospace"><br></font></div></div><div><div><font face="monospace, monospace">line1</font></div></div><div><div><font face="monospace, monospace">line2</font></div></div><div><div><font face="monospace, monospace">line2</font></div></div><div><div><font face="monospace, monospace"><br></font></div></div><div><div><font face="monospace, monospace">EOF</font></div></div></blockquote><div><div><br></div><div>is used rather than multiple echo commands.</div><div>The use of a &quot;here document&quot; normally requires the shell to write the text to a temporary file to perform the input redirection.</div><div><br></div><div>7)</div><div><br></div><div>In one place sed+cp+rm is used to edit a file.</div><div>In another sed+mv is used (but item #5 would eliminate that case).</div><div>Since perl is already required for autogen, you could replace sed+whatever with perl&#39;s in-place operation</div></div></div></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><div><div><font face="monospace, monospace">perl -pi -e &#39;s/from/to/&#39; -- file(s)</font></div></div></div></div></div></blockquote><div><div><br></div><div><br></div><div><br></div><div>-Paul </div><div><br></div><div><br></div>-- <br><div class="gmail_signature"><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: +1-510-495-2352</div><div>Lawrence Berkeley National Laboratory     Fax: +1-510-486-6900</div></font></div></div></div>
</div></div>

