<div dir="ltr">I see your point, but I don&#39;t know how to make that happen. The problem is that spawn really should fail under certain conditions because you asked us to do something we couldn&#39;t do - i.e., you asked that we launch and bind more processes then we could. Increasing the number of available resources will always change the situation and make it more likely spawn will succeed.<div>
<br></div><div>You can still trigger the behavior by individually setting the oversubscribe property in the --may-by option - instead of giving &quot;--oversubscribe&quot;, just use &quot;--map-by :oversubscribe&quot;. This will allow oversubscription but not overload, and you&#39;ll be back to the original scenario.</div>
<div><br></div><div><br></div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Jun 24, 2014 at 10:03 PM, Gilles Gouaillardet <span dir="ltr">&lt;<a href="mailto:gilles.gouaillardet@iferc.org" target="_blank">gilles.gouaillardet@iferc.org</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi Ralph,<br>
<div class=""><br>
On 2014/06/25 2:51, Ralph Castain wrote:<br>
&gt; Had a chance to review this with folks here, and we think that having<br>
&gt; oversubscribe automatically set overload makes some sense. However, we do<br>
&gt; want to retain the ability to separately specify oversubscribe and overload<br>
&gt; as well since these two terms don&#39;t mean quite the same thing.<br>
&gt;<br>
&gt; Our proposal, therefore, is to have the --oversubscribe flag set both the<br>
&gt; --map-by :oversubscribe and --bind-to :overload-allowed properties. If<br>
&gt; someone specifies both the --oversubscribe flag and a conflicting directive<br>
&gt; for one or both of the individual properties, then we&#39;ll error out with a<br>
&gt; &quot;bozo&quot; message.<br>
</div>i fully agree.<br>
<div class="">&gt; The use-cases you describe are (minus the crash) correct as the warning<br>
&gt; only is emitted when you are overloaded (i.e., trying to bind to more cpus<br>
&gt; than you have). So you won&#39;t get any warning when running on three nodes as<br>
&gt; you have enough cpus for all the procs, etc.<br>
&gt;<br>
&gt; I&#39;ll investigate the crash once I get home and have access to a cluster<br>
&gt; again. The problem likely has to do with not properly responding to the<br>
&gt; failure to spawn.<br>
</div>humm<br>
<br>
because you already made the change described above(r32072), the crash<br>
does not occur any more.<br>
<br>
about the crash, i see things the other way around : spawn should have<br>
not failed.<br>
/* or spawn should have failed when running on a single node, at least<br>
for the sake of consistency */<br>
<br>
but like i said, it works now, so it might be just pedantic to point a<br>
bug that is still here but that cannot be triggered ...<br>
<div class=""><br>
Cheers,<br>
<br>
Gilles<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div>Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/06/15053.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/06/15053.php</a><br>
</blockquote></div><br></div>

