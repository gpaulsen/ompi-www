<div dir="ltr">Hi Dave,<div><br><div class="gmail_extra"><br><div class="gmail_quote"><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><br>
The other way to solve this issue would be to stop treating the master as a general dumping ground for potentially unstable code where anyone can just push any time they want.  If we switched to using PRs for (essentially) all code that goes into master as well, then we wouldn&#39;t need two different sets of permissions.<br></blockquote><div><br></div><div>hear hear - I think once we have more than just the MLNX jenkins testing every PR we should definitely move to this approach and yes for master. I&#39;m confident that PRs will be going through a smoke test on the Cray XC systems by the end of the week. </div><div><br></div><div>If it were up to me, I&#39;d only allow the most trivial of commits to bypass the PR process.  I think we&#39;re gradually getting there as it is.  Hopefully by the developers workshop in June, we&#39;ll have at least 2 if not 3 or more jenkins testing PRs.  It will be pretty indefensible at that point to permit a bypass of the PR process for master. </div><div><br></div><div>It would also be easy to trap the I-want-to-bypass-PR-because-I know-what-I&#39;m-doing-developer with a second level of protection.  Just set up a jenkins project that does a smoke test after ever commit to master.  If the smoke test fails, send a naughty-gram to the committer and copy devel. Pretty soon the developer will get trained to use the PR process, unless they are that engineer I&#39;ve yet to meet who always writes flawless code.</div><div><br></div><div>Howard</div><div><br></div><div>    <br></div><div> </div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
<br>
Back in the SVN days it was nice to have a trunk where people could freely check in work because there was no other good system for keeping track of your own work or sharing it with others.  But with Git we no longer have those problems.  I can easily organize multiple concurrent streams of private development, avoid losing work, and share work with others, all without committing to some centralized master branch.<br>
<br>
-Dave<br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/05/17419.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/05/17419.php</a><br>
</blockquote></div><br></div></div></div>

