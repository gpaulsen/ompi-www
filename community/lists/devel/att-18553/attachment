<p dir="ltr">Hi Durga</p>
<p dir="ltr">as an alternative you could implement a libfabric provider for your network.  In theory,  if you can implement the reliable datagram endpoint type on your network and a tag matching mechanism, you could then just use the ofi mtl and not have to do much if anything in open mpi or mpich etc.  </p>
<p dir="ltr"><a href="https://github.com/ofiwg/libfabric">https://github.com/ofiwg/libfabric</a></p>
<p dir="ltr">You may also want to see if the open ucx tl model might work for your network.  It may be less work than implementing a libfabric provider.</p>
<p dir="ltr">good luck</p>
<p dir="ltr">Howard</p>
<p dir="ltr">----------</p>
<p dir="ltr">sent from my smart phonr so no good type.</p>
<p dir="ltr">Howard</p>
<div class="gmail_quote">On Feb 4, 2016 6:00 AM, &quot;Jeff Squyres (jsquyres)&quot; &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br type="attribution"><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">+1 on what Gilles said.  :-)<br>
<br>
Check out this part of the v1.10 README file:<br>
<br>
    <a href="https://github.com/open-mpi/ompi-release/blob/v1.10/README#L585-L625" rel="noreferrer" target="_blank">https://github.com/open-mpi/ompi-release/blob/v1.10/README#L585-L625</a><br>
<br>
Basically:<br>
<br>
- PML is the back-end to functions like MPI_Send and MPI_Recv.<br>
- The ob1 PML uses BTL plugins in a many-of-many relationship to potentially utilize multiple networks.<br>
- The cm PML uses matching-style network APIs in CM plugins to utilize a single underlying network.<br>
- The yalla PML was written by Mellanox as a replacement for cm and ob1, in that it directly utilizes the MXM network library without going through any of the abstractions in ob1 and cm.  It was written at a time when cm was not well optimized, and basically just added a latency penalty before dispatching to the underlying MTL module.  Since then, cm has been optimized such that its abstraction penalty before invoking the underlying MTL module is negligible.<br>
<br>
So the question really comes down to:<br>
<br>
- if you have a network stack API that does MPI-style matching, you should write an MTL.<br>
- if not, you should write a BTL<br>
<br>
Does that help?<br>
<br>
<br>
&gt; On Feb 4, 2016, at 2:29 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles@rist.or.jp">gilles@rist.or.jp</a>&gt; wrote:<br>
&gt;<br>
&gt; Durga,<br>
&gt;<br>
&gt; did you confuse PML and MTL ?<br>
&gt;<br>
&gt; basically, a BTL (Byte Transport Layer ?) is used with &quot;primitive&quot; interconnects that can only send bytes.<br>
&gt; (e.g. if you need to transmit a tagged message, it is up to you send/recv the tag and manually match the tag on the receiver side so you can put the message into the right place)<br>
&gt; on the other hand, MTL (Message Transport Layer ?) can be used with more advanced interconnects, that can &quot;natively&quot; send/recv (tagged) messages.<br>
&gt;<br>
&gt; for example, with infiniband, you can use the openib BTL, or the mxm MTL<br>
&gt; (note the openib BTL only requires the free ibverbs libraries<br>
&gt; and mxm MTL requires proprietary extensions provided by mellanox)<br>
&gt;<br>
&gt; a good starting point is the video Jeff posted at <a href="https://www.open-mpi.org/video/?category=internals" rel="noreferrer" target="_blank">https://www.open-mpi.org/video/?category=internals</a><br>
&gt;<br>
&gt; Cheers,<br>
&gt;<br>
&gt; Gilles<br>
&gt;<br>
&gt; On 2/4/2016 2:20 PM, dpchoudh . wrote:<br>
&gt;&gt; Hi developers<br>
&gt;&gt;<br>
&gt;&gt; I am trying to add support for a new (proprietary) RDMA capable fabric<br>
&gt;&gt; to OpenMPI and have the following question:<br>
&gt;&gt;<br>
&gt;&gt; As I understand, some networks are implemented as a PML framework and<br>
&gt;&gt; some are implemented as a BTL framework. It seems there is even<br>
&gt;&gt; overlap as Myrinet seems to exist in both.<br>
&gt;&gt;<br>
&gt;&gt; My question is: what is the difference between these two frameworks?<br>
&gt;&gt; When adding support for a new fabric, what factors one should consider<br>
&gt;&gt; when choosing between one type of framework over the other?<br>
&gt;&gt;<br>
&gt;&gt; And, with apologies for asking a summary question: is there any kind<br>
&gt;&gt; of documentation and/or book that explains all the internal details of<br>
&gt;&gt; the implementation (which looks little like voodoo to a newcomer like<br>
&gt;&gt; me)?<br>
&gt;&gt;<br>
&gt;&gt; Thanks for your help.<br>
&gt;&gt;<br>
&gt;&gt; Durga Choudhury<br>
&gt;&gt;<br>
&gt;&gt; Life is complex. It has real and imaginary parts.<br>
&gt;&gt; _______________________________________________<br>
&gt;&gt; devel mailing list<br>
&gt;&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/02/18544.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/02/18544.php</a><br>
&gt;&gt;<br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/02/18545.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/02/18545.php</a><br>
<br>
<br>
--<br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" rel="noreferrer" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/02/18549.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/02/18549.php</a><br>
</blockquote></div>

