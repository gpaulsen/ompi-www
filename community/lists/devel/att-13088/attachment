<html><head><meta http-equiv="Content-Type" content="text/html charset=windows-1252"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><br><div><div>On Oct 9, 2013, at 15:29 , Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><meta http-equiv="Content-Type" content="text/html charset=windows-1252"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">IIRC, the concern was with where the thread safety should reside. Some classes (e.g., opal_list) were littered with thread locks for every operation. So if someone implemented thread protection at a higher level (e.g., protecting the list while cycling thru it), then all these lower-level lock/unlock operations were just a waste of cycles.</div></blockquote><div><br></div><div>I tried to find these protections in the basic objects (pal_list_t as you named it) but I failed. I don't see this being the case in any of the versions out there (1.6, 1.7 nor trunk). There are some atomic operations to keep track of the ref counts, but this is a completely different topic.</div><div><br></div><div>In the OMPI layer we tried to follow the rule that all calls without capitals are not thread safe (and are functions), while all calls with capitals at macros and are protected. This was a best effort applied where it made sense.</div><br><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div>However, some people felt that there were places where it helped to have the locking down below. So this was the compromise - use the version that fits your situation.</div></div></blockquote><div><br></div><div>In most of the cases there is nothing better we can do down than protecting the call itself.&nbsp;</div><br><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div>Personally, I'm not wild about it, but I can live with it. I'd prefer to see no lock/unlock calls in the classes themselves as they are too atomistic, and would have opted for providing a macro version of the function that included the appropriate lock/unlocks around the function.</div></div></blockquote><div><br></div><div>I'm 100% with you here, I also prefer to see the locks, as this makes errors easier to spot. This is why I'm concerned about moving them outside the view, buried under several levels of macro indirections. I could understand the push if there was an obvious performance or safety benefit, but as I fail to see I was wondering if I was missing something from the "bigger" picture.</div><div><br></div><div>&nbsp; George.</div><br><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div><br></div><div>Anyway, that was the thinking at the meeting last June.</div><div><br></div><div><br><div><div>On Oct 9, 2013, at 1:40 AM, George Bosilca &lt;<a href="mailto:bosilca@icl.utk.edu">bosilca@icl.utk.edu</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><meta http-equiv="Content-Type" content="text/html charset=windows-1252"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">My concern is that increasing the number of interfaces will not make the code thread safe, as in most cases thread safety is not only a matter of using a _mt version of the basic class object but a matter of a careful manipulation of higher level concepts.<div><br></div><div>We can hardly use the lack of the _MT function as a reason for not having thread safety in the code. We did have the thread safety a while back without the support of _MT version of all the basic classes.&nbsp;</div><div><br></div><div>So I really wonder what is the rationale behind such an intrusive change of the codebase?</div><div><br></div><div>&nbsp; George.</div><div><br><div><div>On Oct 8, 2013, at 18:14 , Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><meta http-equiv="Content-Type" content="text/html charset=windows-1252"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Hi folks<div><br></div><div>This was one item from the last devel meeting that can be done independent of other things:</div><div><br></div><div><span class="Apple-tab-span" style="white-space:pre">		</span>• resolution: all opal and orte (and possibly ompi) classes need to&nbsp;have a thread safe and thread-free interface<br><div><span class="Apple-tab-span" style="white-space:pre">			</span>• _st&nbsp;suffix: single thread (i.e., not thread safe variant)<br></div><div><span class="Apple-tab-span" style="white-space:pre">			</span>• _mt&nbsp;suffix: multi thread (i.e., thread safe variant)<br><div><span class="Apple-tab-span" style="white-space:pre">				</span>• for functions that have both st/mt, they will *both* have suffixes<br></div><div><span class="Apple-tab-span" style="white-space:pre">				</span>• other functions (that do not have st/mt versions) will be naked names<br></div></div><div><span class="Apple-tab-span" style="white-space:pre">			</span>• need to rename all classes that have locking enabled already&nbsp;(e.g., opal_free_list)<br></div><div><span class="Apple-tab-span" style="white-space:pre">			</span>• so today, we go rename all the functions (e.g., opal_free_list&nbsp;functions get&nbsp;_mt&nbsp;suffix) throughout the code base<br></div><div><span class="Apple-tab-span" style="white-space:pre">			</span>• as someone needs the&nbsp;_st&nbsp;version, they go create it and&nbsp;use it as they want to<br></div><div><span class="Apple-tab-span" style="white-space:pre">			</span>• Ralph will do the orte classes<br></div><div><span class="Apple-tab-span" style="white-space:pre">			</span>• Aurelien will do this for the ompi classes<br></div></div><div><h3 id="Sidenotes"></h3><div><br></div></div><div>I believe some of these have been done - I will take care of the ORTE classes this week, so consider this a "heads up" for that change.</div><div>Ralph</div><div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>http://www.open-mpi.org/mailman/listinfo.cgi/devel</blockquote></div><br></body></html>
