<div dir="ltr">Thanks for the pointer George !<br><div class="gmail_extra"><br><div class="gmail_quote">On Sat, Sep 20, 2014 at 5:46 AM, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Or copy the handshake protocol design of the TCP BTL...<div><br></div></div></blockquote><div><br></div><div>the main difference between oob/tcp and btl/tcp is the way we resolve the situation in which two processes send their first message to each other at the same time.</div><div><br></div><div>in oob/tcp, all (e.g. one or two) sockets are closed and the higher vpid is directed to retry establishing a connection.</div><div><br></div><div>in btl/tcp, the useless socket is closed (e.g. the one that was connect-ed on the lower vpid and the one that was accept-ed on the higher vpid.</div><div><br></div><div><br></div><div>my first impression is that oob/tcp is un-necessary complex and it should use the simpler and most efficient protocol of btl/tcp.</div><div>that being said, this conclusion could be too naive and for some good reasons i ignore, the btl/tcp handshake protocol might not be a good fit for oob/tcp.</div><div><br></div><div>any thoughts ?</div><div><br></div><div>i will revamp oob/tcp in order to use the same btl/tcp handshake protocol from tomorrow unless indicated otherwise</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles</div></div></div></div>

