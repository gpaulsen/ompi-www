<html><head><meta http-equiv="Content-Type" content="text/html charset=utf-8"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class="">We call it a “synonym” - but yes, you certainly can, and we do it in many places. From mca_base_var.h:<div class=""><br class=""></div><div class=""><div class="">/**</div><div class="">&nbsp;* Register a synonym name for an MCA variable.</div><div class="">&nbsp;*</div><div class="">&nbsp;* @param[in] synonym_for The index of the original variable. This index</div><div class="">&nbsp;* must not refer to a synonym.</div><div class="">&nbsp;* @param[in] project_name The project this synonym belongs to. Should</div><div class="">&nbsp;* not be NULL (except for legacy reasons).</div><div class="">&nbsp;* @param[in] framework_name The framework this synonym belongs to.</div><div class="">&nbsp;* @param[in] component_name The component this synonym belongs to.</div><div class="">&nbsp;* @param[in] synonym_name The synonym name.</div><div class="">&nbsp;* @param[in] flags Flags for this synonym.</div><div class="">&nbsp;*</div><div class="">&nbsp;* @returns index Variable index for new synonym on success.</div><div class="">&nbsp;* @returns OPAL_ERR_BAD_VAR If synonym_for does not reference a valid</div><div class="">&nbsp;* variable.</div><div class="">&nbsp;* @returns OPAL_ERR_OUT_OF_RESOURCE If memory could not be allocated.</div><div class="">&nbsp;* @returns OPAL_ERROR For all other errors.</div><div class="">&nbsp;*&nbsp;</div><div class="">&nbsp;* Upon success, this function creates a synonym MCA variable</div><div class="">&nbsp;* that will be treated almost exactly like the original. &nbsp;The</div><div class="">&nbsp;* type (int or string) is irrelevant; this function simply</div><div class="">&nbsp;* creates a new name that by which the same variable value is</div><div class="">&nbsp;* accessible. &nbsp;</div><div class="">&nbsp;*</div><div class="">&nbsp;* Note that the original variable name has precendence over all</div><div class="">&nbsp;* synonyms. &nbsp;For example, consider the case if variable is</div><div class="">&nbsp;* originally registered under the name "A" and is later</div><div class="">&nbsp;* registered with synonyms "B" and "C". &nbsp;If the user sets values</div><div class="">&nbsp;* for both MCA variable names "A" and "B", the value associated</div><div class="">&nbsp;* with the "A" name will be used and the value associated with</div><div class="">&nbsp;* the "B" will be ignored (and will not even be visible by the</div><div class="">&nbsp;* mca_base_var_*() API). &nbsp;If the user sets values for both MCA</div><div class="">&nbsp;* variable names "B" and "C" (and does *not* set a value for</div><div class="">&nbsp;* "A"), it is undefined as to which value will be used.</div><div class="">&nbsp;*/</div><div class="">OPAL_DECLSPEC int mca_base_var_register_synonym (int synonym_for, const char *project_name,</div><div class="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;const char *framework_name,</div><div class="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;const char *component_name,</div><div class="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;const char *synonym_name,</div><div class="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mca_base_var_syn_flag_t flags);</div><div class=""><br class=""></div><div class=""><br class=""></div><div><blockquote type="cite" class=""><div class="">On Feb 19, 2015, at 8:54 AM, Joshua Ladd &lt;<a href="mailto:jladd.mlnx@gmail.com" class="">jladd.mlnx@gmail.com</a>&gt; wrote:</div><br class="Apple-interchange-newline"><div class=""><div dir="ltr" class=""><div class=""><div class=""><div class="">Folks,<br class=""><br class=""></div>Is it possible to define an alias for an MCA parameter? Grepping around the interwebs, it seems there was an RFC along these lines in 2008. <br class=""><br class=""><a href="http://www.open-mpi.org/community/lists/devel/2008/04/3613.php" class="">http://www.open-mpi.org/community/lists/devel/2008/04/3613.php</a><br class=""><br class="">It doesn't appear that the functionality was added or, if it was, it has since been removed.<br class=""><br class=""></div>Thanks,<br class=""><br class=""></div>Josh<br class=""></div>
_______________________________________________<br class="">devel mailing list<br class=""><a href="mailto:devel@open-mpi.org" class="">devel@open-mpi.org</a><br class="">Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/devel<br class="">Link to this post: http://www.open-mpi.org/community/lists/devel/2015/02/16995.php</div></blockquote></div><br class=""></div></body></html>
