<html><head><style type="text/css"><!-- DIV {margin:0px;} --></style></head><body><div style="font-family:times new roman,new york,times,serif;font-size:12pt"><div>Hi jeff,<br><br>All the information provided here helps me a lot. <br><br>Thank you, really really really appreciate it.&nbsp; :)<br><br>Regards,<br>Leo P.<br></div><div style="font-family: times new roman,new york,times,serif; font-size: 12pt;"><br><div style="font-family: arial,helvetica,sans-serif; font-size: 13px;"><font size="2" face="Tahoma"><hr size="1"><b><span style="font-weight: bold;">From:</span></b> Jeff Squyres &lt;<span style="font-family: arial,helvetica,sans-serif;">jsquyres@cisco.com&gt;</span><br><b><span style="font-weight: bold;">To:</span></b> Open MPI Developers &lt;devel@open-mpi.org&gt;<br><b><span style="font-weight: bold;">Sent:</span></b> Friday, 19 June, 2009 5:05:59 AM<br><b><span style="font-weight: bold;">Subject:</span></b> Re: [OMPI devel] some question about
 OMPI communicationinfrastructure<br></font><br>A few addendums in no particular order...<br><br>1. The ompi/ tree is the MPI layer.&nbsp; It's the top layer in the stack.&nbsp; It uses ORTE and OPAL for various things.<br><br>2. The PML (point-to-point messagging layer) is the stuff right behind MPI_SEND, MPI_RECV, and friends.&nbsp; We have two main PMLs: OB1 and CM (and some other similar ones, but not important here).&nbsp; OB1 is probably the only one you care about.<br><br>3. OB1 effects the majority of the MPI rules and behavior.&nbsp; It makes MPI_Requests, processes them, potentially segments and re-assembles individual messages, etc.<br><br>4. OB1 uses BTLs (Byte Transfer Layers) to actually move bytes between processes.&nbsp; Each BTL is for a different kind of transport; OB1 uses the BML (BTL multiplexing layer; "layer" is a generous term here; think of it as trivial BTL pointer array management functionality) to manage all the BTLs that it
 is currently using.<br><br>5. OB1 and some of the BTLs use the ORTE layer for "out of band" communications, usually for initialization and finalization.&nbsp; The "OOB" ORTE framework is more-or-less equivalent to the BTL framework, but it's *only* used for ORTE-level communications (not MPI communications).&nbsp; The RML (routing message layer) ORTE framework is a layer on top of the OOB that has the potential to route messages as necessary.&nbsp; To be clear, the OMPI layer always uses the RML, not the OOB directly (the RML uses the OOB underneath).<br><br>6. A bunch of OOB connections are made during the startup of the MPI job.&nbsp; BTL connections are generally made on an "as needed" basis (e.g., during the first MPI_SEND to a given peer).&nbsp; Ralph will have to fill you in on the details of how/when/where OOB connections are made.<br><br>7. There is unfortunately little documentation on the OMPI source code except comments in the code.&nbsp;
 :-\&nbsp; However, there was a nice writeup recently that may be helpful to you:<br><br>&nbsp; &nbsp; <a href="http://www.open-mpi.org/papers/trinity-btl-2009/" target="_blank">http://www.open-mpi.org/papers/trinity-btl-2009/</a><br><br>8. Once TCP BTL connections are made, IP addressing is no longer necessary in the OMPI-level messages that are sent because the sockets are connected point-to-point -- i.e., the peer process is already known because we have a socket to them.&nbsp; The MPI layer messaging more contains things like the communicator ID, tag, ...etc.<br><br>Hope that helps!<br><br><br>On Jun 18, 2009, at 10:26 AM, Ralph Castain wrote:<br><br>&gt; Hi Leo<br>&gt; <br>&gt; The MPI communications is contained in the ompi/mca/btl code area. The BTL's (Bit Transport Layer) actually moves the message data. Each BTL is responsible for opening its own connections - ORTE has nothing to do with it, except to transport out-of-band (OOB) messages to
 support creating the connection if that specific BTL requires it.<br>&gt; <br>&gt; If you are interested in TCP communications, you will find all of that code in ompi/mca/btl/tcp. It can be confusing down there, so expect to spend a little time trying to understand it. I believe Jeff has some documentation on the OMPI web site about it (perhaps a video?).<br>&gt; <br>&gt; The source/destination is embedded in the message, again done by each BTL since the receiver must be a BTL of the same type. Again, this has nothing to do with ORTE - it is purely up to the BTL. MPI communications are also coordinated by the PML, which is responsible for matching messages with posted receives. You might need to look at the ompi/mca/pml/ob1 code to understand how that works.<br>&gt; <br>&gt; Hope that gives you a starting point<br>&gt; Ralph<br>&gt; <br>&gt; On Jun 18, 2009, at 7:57 AM, Leo P. wrote:<br>&gt; <br>&gt;&gt; Hi Everyone,<br>&gt;&gt; <br>&gt;&gt;
 <br>&gt;&gt; <br>&gt;&gt; I wanted to ask some questions about things I am having trouble understanding.<br>&gt;&gt; <br>&gt;&gt; &nbsp;&nbsp;&nbsp; •<br>&gt;&gt; As far as my understanding of MPI_INIT function, I assumed MPI_INIT typically procedure resources required including the sockets. But now as I understand from the documentation that openMPI only allocated socket when the process has to send a message to a peer. If some one could let me where exactly in the code this is happening I would appreciate a lot. I guess this is happening in ORTE layer so I am spending time looking at it. But if some one could let me in which function this is happening it will help me a lot.<br>&gt;&gt; <br>&gt;&gt; &nbsp;&nbsp;&nbsp; •<br>&gt;&gt; Also I think most of the MPI implementation embed source and destination address with the communication protocol. Am I right to assume openMPI does the same thing. Is this also happening in the ORTE layer.<br>&gt;&gt;
 <br>&gt;&gt; Is there a documentation about this openMPI site? if there can someone please let me know the location of it.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Sincerely,<br>&gt;&gt; <br>&gt;&gt; Leo.P<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; ICC World Twenty20 England '09 exclusively on YAHOO! CRICKET_______________________________________________<br>&gt;&gt; devel mailing list<br>&gt;&gt; <a ymailto="mailto:devel@open-mpi.org" href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>&gt; <br>&gt; _______________________________________________<br>&gt; devel mailing list<br>&gt; <a ymailto="mailto:devel@open-mpi.org" href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel"
 target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br><br><br>--Jeff Squyres<br>Cisco Systems<br><br><br>_______________________________________________<br>devel mailing list<br><a ymailto="mailto:devel@open-mpi.org" href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></div></div></div><br>
      <!--1--><hr size=1></hr> Cricket on your mind? Visit the ultimate cricket website. <a href="http://in.rd.yahoo.com/tagline_cricket_1/*http://cricket.yahoo.com"> Enter now!</a></body></html>
