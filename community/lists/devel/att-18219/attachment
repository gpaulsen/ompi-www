<div dir="ltr"><div class="gmail_extra"><br><div class="gmail_quote">On Tue, Oct 20, 2015 at 3:00 PM, Jeff Squyres (jsquyres) <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">I don&#39;t think it gets up to 7 MCA params to guarantee a specific API path is used to get to a specific network / port, but your overall point is fair.</blockquote></div><br>Jeff, it sounds to me you are responding to a different problem than the one I posed in my previous email.</div><div class="gmail_extra"><br></div><div class="gmail_extra">I am suggesting that a user wishes to NOT USE a specific port at all.</div><div class="gmail_extra">In other words, I want to &quot;obstruct&quot; all of the API paths that might reach that port.</div><div class="gmail_extra">However, they do want to use some other port of the same type - which means they cannot disable entire BTLs or MTLs.</div><div class="gmail_extra"><br></div><div class="gmail_extra">Unless I am missing something, they need to consider each possible API path through OMPI and pass a corresponding MCA param, such as btl_openib_if_exclude, to prevent that path from selecting the port in question.</div><div class="gmail_extra">The problem is that the user may not know all the API paths that need to have a corresponding exclude.</div><div class="gmail_extra">This is, in some ways, similar to the initial problem of how to disable all uses of mxm - it currently requires knowledge of all API paths that &quot;might get you there&quot;.</div><div class="gmail_extra"><br></div><div class="gmail_extra">I am now seeing my concern turn in another direction, because a quick grep for &quot;_exclude&quot; in the OMPI 1.10.1 source turned up matches in only the openbl and usnic BLTs, and in oob_tcp.</div><div class="gmail_extra">Is it really the case that an end user cannot instruct mxm, psm, psm2, portals4 or ofi not to use a specific IB port via mpirun?</div><div class="gmail_extra">Does this really require resorting to library-specific env vars (which is even worse than the need for a long list of MCA params)?</div><div class="gmail_extra"><br></div><div class="gmail_extra"><br></div><div class="gmail_extra">Just a reminder: I am *not* a user.</div><div class="gmail_extra"><div class="gmail_extra">If you choose to ignore me, it won&#39;t hurt my feelings.</div><div class="gmail_extra">Even if you choose to pursue the concerns I&#39;ve raised, in the end may not effect even a single end-user.</div></div><div class="gmail_extra">I brought up these scenarios because I thought they bore some relation to the &quot;disable all use of mxm&quot; problem under discussion.</div><div class="gmail_extra">Specifically they share the complications that arise from having multiple &quot;API paths&quot; to reach the same entity (which is either a library or a port).</div><div class="gmail_extra"><br></div><div class="gmail_extra"><br></div><div class="gmail_extra">-Paul<br><br clear="all"><div><br></div>-- <br><div class="gmail_signature"><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: +1-510-495-2352</div><div>Lawrence Berkeley National Laboratory     Fax: +1-510-486-6900</div></font></div></div></div>
</div></div>

