<div dir="ltr"><div></div><div></div><div>Don&#39;t these allocations of  bshe-&gt;smbhe_keys require some kind of memory translation from 1 proc&#39;s memory space to another ( in bootstrap_init function /ompi/mca/coll/sm/coll_sm_module.c )<br>
</div><div>If local rank0 allocates ( get attached to ) memory, others can&#39;t read it without proper tranlsation.</div><div></div><div>Lenny</div><div></div><div></div><br><div class="gmail_quote">On Mon, Aug 10, 2009 at 2:26 PM, Lenny Verkhovsky <span dir="ltr">&lt;<a href="mailto:lenny.verkhovsky@gmail.com">lenny.verkhovsky@gmail.com</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;"><div dir="ltr"><div>We saw these seqv too with and without setting sm btl .<br></div><div><div class="h5"><br><div class="gmail_quote">
On Fri, Aug 7, 2009 at 10:51 AM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><br><br><div class="gmail_quote"><div>On Thu, Aug 6, 2009 at 3:18 PM, Jeff Squyres <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="border-left:1px solid rgb(204, 204, 204);margin:0pt 0pt 0pt 0.8ex;padding-left:1ex">
Ok, with Terry&#39;s help, I found a segv in the coll sm.  If you run without the sm btl, there&#39;s an obvious bad parameter that we&#39;re passing that results in a segv.<br>
<br>
LANL -- can you confirm / deny that these are the segv&#39;s that you were seeing?</blockquote></div><div><br>Yes we can deny that those are the segv&#39;s we were seeing - we definitely had the sm btl active. I&#39;ll rerun the test on Monday and add the stacktrace to your ticket.<br>

<font color="#888888">
<br>Ralph<br><br></font></div><div><blockquote class="gmail_quote" style="border-left:1px solid rgb(204, 204, 204);margin:0pt 0pt 0pt 0.8ex;padding-left:1ex"><br>
<br>
While fixing this, I noticed that the sm btl and sm coll are sharing an mpool when both are running.  This probably used to be a good idea way back when (e.g., when we were using a lot more shmem than we needed and core counts were lower), but it seems like a bad idea now (e.g., the btl/sm is fairly specific about the size of the mpool that is created -- it&#39;s just big enough for its data structures).<br>



<br>
I&#39;m therefore going to change the mpool string names that btl/sm and coll/sm are looking for so that they get unique sm mpool modules.<br><font color="#888888">
<br>
-- <br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</font></blockquote></div></div><br>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></blockquote></div><br></div></div></div>
</blockquote></div><br></div>

