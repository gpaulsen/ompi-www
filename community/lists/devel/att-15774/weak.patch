Index: oshmem/runtime/oshmem_shmem_init.c
===================================================================
--- oshmem/runtime/oshmem_shmem_init.c	(revision 32669)
+++ oshmem/runtime/oshmem_shmem_init.c	(working copy)
@@ -1,6 +1,8 @@
 /*
  * Copyright (c) 2013      Mellanox Technologies, Inc.
  *                         All rights reserved.
+ * Copyright (c) 2014      Research Organization for Information Science
+ *                         and Technology (RIST). All rights reserved.
  *
  * $COPYRIGHT$
  * 
@@ -130,11 +132,22 @@
  ompi/include/mpif-common.h.
  */
 
+#if OMPI_BUILD_FORTRAN_BINDINGS
+#  if OMPI_FORTRAN_CAPS
 #define INST(type, upper_case, lower_case, single_u, double_u)   \
-    type lower_case; \
-type upper_case; \
-type single_u;  \
+type lower_case
+#  elif OMPI_FORTRAN_PLAIN
+#define INST(type, upper_case, lower_case, single_u, double_u)   \
+type upper_case
+#  elif OMPI_FORTRAN_SINGLE_UNDERSCORE
+#define INST(type, upper_case, lower_case, single_u, double_u)   \
+type single_u
+#  elif OMPI_FORTRAN_DOUBLE_UNDERSCORE
+#define INST(type, upper_case, lower_case, single_u, double_u)   \
 type double_u
+#  else
+#    error Unrecognized Fortran name mangling scheme
+#  endif
 
 INST(int,
      MPI_FORTRAN_BOTTOM,
@@ -171,6 +184,7 @@
      mpi_fortran_statuses_ignore,
      mpi_fortran_statuses_ignore_,
      mpi_fortran_statuses_ignore__);
+#endif /* OMPI_BUILD_FORTRAN_BINDINGS */
 
 /*
  * Hash tables for MPI_Type_create_f90* functions
Index: opal/include/opal_fortran_config.h.in
===================================================================
--- opal/include/opal_fortran_config.h.in	(revision 0)
+++ opal/include/opal_fortran_config.h.in	(revision 0)
@@ -0,0 +1,31 @@
+! -*- fortran -*-
+!
+! Copyright (c) 2014      Research Organization for Information Science
+!                         and Technology (RIST). All rights reserved.
+!
+! $COPYRIGHT$
+!
+! Additional copyrights may follow
+! 
+! $HEADER$
+!
+
+!     This file exists to have a Fortran-safe header file that has
+!     results from configure tests.
+
+#ifndef OMPI_FORTRAN_CONFIGURE_H
+#define OMPI_FORTRAN_CONFIGURE_H
+
+! Whether fortran symbols are all caps or not
+#define OMPI_FORTRAN_CAPS @OMPI_FORTRAN_CAPS@
+
+! Whether fortran symbols have no trailing underscore or not
+#define OMPI_FORTRAN_PLAIN @OMPI_FORTRAN_PLAIN@
+
+! Whether fortran symbols have a trailing underscore or not
+#define OMPI_FORTRAN_SINGLE_UNDERSCORE @OMPI_FORTRAN_SINGLE_UNDERSCORE@
+
+! Whether fortran symbols have a trailing double underscore or not
+#define OMPI_FORTRAN_DOUBLE_UNDERSCORE @OMPI_FORTRAN_DOUBLE_UNDERSCORE@
+
+#endif
Index: configure.ac
===================================================================
--- configure.ac	(revision 32669)
+++ configure.ac	(working copy)
@@ -180,6 +180,11 @@
 m4_ifdef([project_oshmem],
          [AC_CONFIG_HEADER([oshmem/include/shmem.h])])
 
+# A preprocessor header file just for Fortran.  We cannot use AC
+# CONFIG_HEADER because it adds a /* */-style comment at the top,
+# and this header file must be usable in .F90 files.  :-(
+AC_CONFIG_FILES([opal/include/opal_fortran_config.h])
+
 # override/fixup the version numbers set by AC_INIT, since on
 # developer builds, there's no good way to know what the version is
 # before running configure :(.  We only use the base version number
Index: ompi/runtime/ompi_mpi_init.c
===================================================================
--- ompi/runtime/ompi_mpi_init.c	(revision 32669)
+++ ompi/runtime/ompi_mpi_init.c	(working copy)
@@ -253,11 +257,22 @@
    ompi/include/mpif-common.h.
  */
 
+#if OMPI_BUILD_FORTRAN_BINDINGS
+#  if OMPI_FORTRAN_CAPS
 #define INST(type, upper_case, lower_case, single_u, double_u)   \
-type lower_case; \
-type upper_case; \
-type single_u;  \
+type lower_case
+#  elif OMPI_FORTRAN_PLAIN
+#define INST(type, upper_case, lower_case, single_u, double_u)   \
+type upper_case
+#  elif OMPI_FORTRAN_SINGLE_UNDERSCORE
+#define INST(type, upper_case, lower_case, single_u, double_u)   \
+type single_u
+#  elif OMPI_FORTRAN_DOUBLE_UNDERSCORE
+#define INST(type, upper_case, lower_case, single_u, double_u)   \
 type double_u
+#  else
+#    error Unrecognized Fortran name mangling scheme
+#  endif
 
 INST(int, MPI_FORTRAN_BOTTOM, mpi_fortran_bottom,
      mpi_fortran_bottom_, mpi_fortran_bottom__);
@@ -277,6 +292,7 @@
      mpi_fortran_status_ignore_, mpi_fortran_status_ignore__);
 INST(int *, MPI_FORTRAN_STATUSES_IGNORE, mpi_fortran_statuses_ignore,
       mpi_fortran_statuses_ignore_, mpi_fortran_statuses_ignore__);
+#endif  /* OMPI_BUILD_FORTRAN_BINDINGS */
 
 /*
  * Hash tables for MPI_Type_create_f90* functions
Index: ompi/mpi/fortran/configure-fortran-output.h.in
===================================================================
--- ompi/mpi/fortran/configure-fortran-output.h.in	(revision 32669)
+++ ompi/mpi/fortran/configure-fortran-output.h.in	(working copy)
@@ -3,6 +3,8 @@
 ! Copyright (c) 2006-2014 Cisco Systems, Inc.  All rights reserved.
 ! Copyright (c) 2009-2012 Los Alamos National Security, LLC.
 !                         All rights reserved.
+! Copyright (c) 2014      Research Organization for Information Science
+!                         and Technology (RIST). All rights reserved.
 !
 ! $COPYRIGHT$
 !
@@ -108,5 +110,6 @@
 ! Include some post-processing, based on the values from above
 
 #include "ompi/mpi/fortran/configure-fortran-output-bottom.h"
+#include "opal/include/opal_fortran_config.h"
 
 #endif
Index: ompi/mpi/fortran/use-mpi-f08-desc/mpi-f08-types.f90
===================================================================
--- ompi/mpi/fortran/use-mpi-f08-desc/mpi-f08-types.f90	(revision 32669)
+++ ompi/mpi/fortran/use-mpi-f08-desc/mpi-f08-types.f90	(working copy)
@@ -3,6 +3,8 @@
 ! Copyright (c) 2009 Cisco Systems, Inc.  All rights reserved.
 ! Copyright (c) 2009-2012 Los Alamos National Security, LLC.
 !                         All rights reserved.
+! Copyright (c) 2014      Research Organization for Information Science
+!                         and Technology (RIST). All rights reserved.
 !
 ! This file creates mappings between MPI C types (e.g., MPI_Comm) and
 ! variables (e.g., MPI_COMM_WORLD) and corresponding Fortran names
@@ -13,6 +15,7 @@
    use, intrinsic :: ISO_C_BINDING
 
    include "mpif-config.h"
+   include "opal/include/opal_fortran_config.h"
 
    !
    ! constants (these must agree with those in mpif-common.h, mpif-config.h)
@@ -151,7 +154,48 @@
 !
 ! STATUS/STATUSES_IGNORE
 !
-  type(MPI_STATUS), bind(C, name="mpi_fortran_status_ignore")   :: MPI_STATUS_IGNORE
+#if OMPI_FORTRAN_CAPS
+  type(MPI_STATUS), bind(C, name="MPI_FORTRAN_STATUS_IGNORE") :: MPI_STATUS_IGNORE
+  type(MPI_STATUS), bind(C, name="MPI_FORTRAN_STATUSES_IGNORE") :: MPI_STATUSES_IGNORE(1)
+  integer, bind(C, name="MPI_FORTRAN_BOTTOM")          :: MPI_BOTTOM
+  integer, bind(C, name="MPI_FORTRAN_IN_PLACE")        :: MPI_IN_PLACE
+  integer, bind(C, name="MPI_FORTRAN_ARGV_NULL")       :: MPI_ARGV_NULL
+  integer, bind(C, name="MPI_FORTRAN_ARGVS_NULL")      :: MPI_ARGVS_NULL
+  integer, bind(C, name="MPI_FORTRAN_ERRCODES_IGNORE") :: MPI_ERRCODES_IGNORE
+  integer, bind(C, name="MPI_FORTRAN_UNWEIGHTED")      :: MPI_UNWEIGHTED
+  integer, bind(C, name="MPI_FORTRAN_WEIGHTS_EMPTY")   :: MPI_WEIGHTS_EMPTY
+#elif OMPI_FORTRAN_PLAIN
+  type(MPI_STATUS), bind(C, name="mpi_fortran_status_ignore") :: MPI_STATUS_IGNORE
   type(MPI_STATUS), bind(C, name="mpi_fortran_statuses_ignore") :: MPI_STATUSES_IGNORE(1)
+  integer, bind(C, name="mpi_fortran_bottom")          :: MPI_BOTTOM
+  integer, bind(C, name="mpi_fortran_in_place")        :: MPI_IN_PLACE
+  integer, bind(C, name="mpi_fortran_argv_null")       :: MPI_ARGV_NULL
+  integer, bind(C, name="mpi_fortran_argvs_null")      :: MPI_ARGVS_NULL
+  integer, bind(C, name="mpi_fortran_errcodes_ignore") :: MPI_ERRCODES_IGNORE
+  integer, bind(C, name="mpi_fortran_unweighted")      :: MPI_UNWEIGHTED
+  integer, bind(C, name="mpi_fortran_weights_empty")   :: MPI_WEIGHTS_EMPTY
+#elif OMPI_FORTRAN_SINGLE_UNDERSCORE
+  type(MPI_STATUS), bind(C, name="mpi_fortran_status_ignore_") :: MPI_STATUS_IGNORE
+  type(MPI_STATUS), bind(C, name="mpi_fortran_statuses_ignore_") :: MPI_STATUSES_IGNORE(1)
+  integer, bind(C, name="mpi_fortran_bottom_")          :: MPI_BOTTOM
+  integer, bind(C, name="mpi_fortran_in_place_")        :: MPI_IN_PLACE
+  integer, bind(C, name="mpi_fortran_argv_null_")       :: MPI_ARGV_NULL
+  integer, bind(C, name="mpi_fortran_argvs_null_")      :: MPI_ARGVS_NULL
+  integer, bind(C, name="mpi_fortran_errcodes_ignore_") :: MPI_ERRCODES_IGNORE
+  integer, bind(C, name="mpi_fortran_unweighted_")      :: MPI_UNWEIGHTED
+  integer, bind(C, name="mpi_fortran_weights_empty_")   :: MPI_WEIGHTS_EMPTY
+#elif OMPI_FORTRAN_DOUBLE_UNDERSCORE
+  type(MPI_STATUS), bind(C, name="mpi_fortran_status_ignore__") :: MPI_STATUS_IGNORE
+  type(MPI_STATUS), bind(C, name="mpi_fortran_statuses_ignore__") :: MPI_STATUSES_IGNORE(1)
+  integer, bind(C, name="mpi_fortran_bottom__")          :: MPI_BOTTOM
+  integer, bind(C, name="mpi_fortran_in_place__")        :: MPI_IN_PLACE
+  integer, bind(C, name="mpi_fortran_argv_null__")       :: MPI_ARGV_NULL
+  integer, bind(C, name="mpi_fortran_argvs_null__")      :: MPI_ARGVS_NULL
+  integer, bind(C, name="mpi_fortran_errcodes_ignore__") :: MPI_ERRCODES_IGNORE
+  integer, bind(C, name="mpi_fortran_unweighted__")      :: MPI_UNWEIGHTED
+  integer, bind(C, name="mpi_fortran_weights_empty__")   :: MPI_WEIGHTS_EMPTY
+#else
+#error Unrecognized Fortran name mangling scheme
+#endif
 
 end module mpi_f08_types
Index: ompi/mpi/fortran/base/constants.h
===================================================================
--- ompi/mpi/fortran/base/constants.h	(revision 32669)
+++ ompi/mpi/fortran/base/constants.h	(working copy)
@@ -12,6 +12,8 @@
  * Copyright (c) 2006-2012 Cisco Systems, Inc.  All rights reserved.
  * Copyright (c) 2011-2013 Inria.  All rights reserved.
  * Copyright (c) 2011-2012 Universite Bordeaux 1
+ * Copyright (c) 2014      Research Organization for Information Science
+ *                         and Technology (RIST). All rights reserved.
  * $COPYRIGHT$
  * 
  * Additional copyrights may follow
@@ -85,11 +87,21 @@
  * file.
  */
 
+#if OMPI_FORTRAN_CAPS
 #define DECL(type, upper_case, lower_case, single_u, double_u)   \
-OMPI_DECLSPEC extern type upper_case; \
-OMPI_DECLSPEC extern type lower_case; \
-OMPI_DECLSPEC extern type single_u; \
+OMPI_DECLSPEC extern type upper_case
+#elif OMPI_FORTRAN_PLAIN
+#define DECL(type, upper_case, lower_case, single_u, double_u)   \
+OMPI_DECLSPEC extern type lower_case
+#elif OMPI_FORTRAN_SINGLE_UNDERSCORE
+#define DECL(type, upper_case, lower_case, single_u, double_u)   \
+OMPI_DECLSPEC extern type single_u
+#elif OMPI_FORTRAN_DOUBLE_UNDERSCORE
+#define DECL(type, upper_case, lower_case, single_u, double_u)   \
 OMPI_DECLSPEC extern type double_u
+#else
+#error Unrecognized Fortran name mangling scheme
+#endif
 
 /* Note that the rationale for the types of each of these variables is
    discussed in ompi/include/mpif-common.h.  Do not change the types
@@ -116,58 +128,11 @@
      mpi_fortran_statuses_ignore_, mpi_fortran_statuses_ignore__);
 
 /*
- * Create macros to do the checking.  Only check for all 4 if we have
- * weak symbols.  Otherwise, just check for the one relevant symbol.
+ * Create macros to do the checking.
+ * Just check for the one and only relevant symbol.
  */
-#if OPAL_HAVE_WEAK_SYMBOLS
+#if OMPI_FORTRAN_CAPS
 #define OMPI_IS_FORTRAN_BOTTOM(addr) \
-  (addr == (void*) &MPI_FORTRAN_BOTTOM || \
-   addr == (void*) &mpi_fortran_bottom || \
-   addr == (void*) &mpi_fortran_bottom_ || \
-   addr == (void*) &mpi_fortran_bottom__)
-#define OMPI_IS_FORTRAN_IN_PLACE(addr) \
-  (addr == (void*) &MPI_FORTRAN_IN_PLACE || \
-   addr == (void*) &mpi_fortran_in_place || \
-   addr == (void*) &mpi_fortran_in_place_ || \
-   addr == (void*) &mpi_fortran_in_place__)
-#define OMPI_IS_FORTRAN_UNWEIGHTED(addr) \
-  (addr == (void*) &MPI_FORTRAN_UNWEIGHTED || \
-   addr == (void*) &mpi_fortran_unweighted || \
-   addr == (void*) &mpi_fortran_unweighted_ || \
-   addr == (void*) &mpi_fortran_unweighted__)
-#define OMPI_IS_FORTRAN_WEIGHTS_EMPTY(addr) \
-  (addr == (void*) &MPI_FORTRAN_WEIGHTS_EMPTY || \
-   addr == (void*) &mpi_fortran_weights_empty || \
-   addr == (void*) &mpi_fortran_weights_empty_ || \
-   addr == (void*) &mpi_fortran_weights_empty__)
-#define OMPI_IS_FORTRAN_ARGV_NULL(addr) \
-  (addr == (void*) &MPI_FORTRAN_ARGV_NULL || \
-   addr == (void*) &mpi_fortran_argv_null || \
-   addr == (void*) &mpi_fortran_argv_null_ || \
-   addr == (void*) &mpi_fortran_argv_null__)
-#define OMPI_IS_FORTRAN_ARGVS_NULL(addr) \
-  (addr == (void*) &MPI_FORTRAN_ARGVS_NULL || \
-   addr == (void*) &mpi_fortran_argvs_null || \
-   addr == (void*) &mpi_fortran_argvs_null_ || \
-   addr == (void*) &mpi_fortran_argvs_null__)
-#define OMPI_IS_FORTRAN_ERRCODES_IGNORE(addr) \
-  (addr == (void*) &MPI_FORTRAN_ERRCODES_IGNORE || \
-   addr == (void*) &mpi_fortran_errcodes_ignore || \
-   addr == (void*) &mpi_fortran_errcodes_ignore_ || \
-   addr == (void*) &mpi_fortran_errcodes_ignore__)
-#define OMPI_IS_FORTRAN_STATUS_IGNORE(addr) \
-  (addr == (void*) &MPI_FORTRAN_STATUS_IGNORE || \
-   addr == (void*) &mpi_fortran_status_ignore || \
-   addr == (void*) &mpi_fortran_status_ignore_ || \
-   addr == (void*) &mpi_fortran_status_ignore__)
-#define OMPI_IS_FORTRAN_STATUSES_IGNORE(addr) \
-  (addr == (void*) &MPI_FORTRAN_STATUSES_IGNORE || \
-   addr == (void*) &mpi_fortran_statuses_ignore || \
-   addr == (void*) &mpi_fortran_statuses_ignore_ || \
-   addr == (void*) &mpi_fortran_statuses_ignore__)
-
-#elif OMPI_FORTRAN_CAPS
-#define OMPI_IS_FORTRAN_BOTTOM(addr) \
   (addr == (void*) &MPI_FORTRAN_BOTTOM)
 #define OMPI_IS_FORTRAN_IN_PLACE(addr) \
   (addr == (void*) &MPI_FORTRAN_IN_PLACE)
@@ -226,7 +191,7 @@
 #define OMPI_IS_FORTRAN_STATUSES_IGNORE(addr) \
    (addr == (void*) &mpi_fortran_statuses_ignore_)
 
-#else
+#elif OMPI_FORTRAN_DOUBLE_UNDERSCORE
 #define OMPI_IS_FORTRAN_BOTTOM(addr) \
    (addr == (void*) &mpi_fortran_bottom__)
 #define OMPI_IS_FORTRAN_IN_PLACE(addr) \
@@ -246,8 +211,11 @@
 #define OMPI_IS_FORTRAN_STATUSES_IGNORE(addr) \
    (addr == (void*) &mpi_fortran_statuses_ignore__)
 
-#endif /* weak / specific symbol type */
+#else
+#error Unrecognized Fortran name mangling scheme
 
+#endif /* specific symbol type */
+
 /* Convert between Fortran and C MPI_BOTTOM */
 #define OMPI_F2C_BOTTOM(addr)      (OMPI_IS_FORTRAN_BOTTOM(addr) ? MPI_BOTTOM : (addr))
 #define OMPI_F2C_IN_PLACE(addr)    (OMPI_IS_FORTRAN_IN_PLACE(addr) ? MPI_IN_PLACE : (addr))
Index: ompi/mpi/fortran/use-mpi-f08/mpi-f08-types.F90
===================================================================
--- ompi/mpi/fortran/use-mpi-f08/mpi-f08-types.F90	(revision 32669)
+++ ompi/mpi/fortran/use-mpi-f08/mpi-f08-types.F90	(working copy)
@@ -3,6 +3,8 @@
 ! Copyright (c) 2009-2014 Cisco Systems, Inc.  All rights reserved.
 ! Copyright (c) 2009-2012 Los Alamos National Security, LLC.
 !                         All rights reserved.
+! Copyright (c) 2014      Research Organization for Information Science
+!                         and Technology (RIST). All rights reserved.
 ! $COPYRIGHT$
 !
 ! This file creates mappings between MPI C types (e.g., MPI_Comm) and
@@ -164,6 +166,17 @@
 
 !... Special sentinel constants
 !------------------------------
+#if OMPI_FORTRAN_CAPS
+  type(MPI_STATUS), bind(C, name="MPI_FORTRAN_STATUS_IGNORE") :: MPI_STATUS_IGNORE
+  type(MPI_STATUS), bind(C, name="MPI_FORTRAN_STATUSES_IGNORE") :: MPI_STATUSES_IGNORE(1)
+  integer, bind(C, name="MPI_FORTRAN_BOTTOM")          :: MPI_BOTTOM
+  integer, bind(C, name="MPI_FORTRAN_IN_PLACE")        :: MPI_IN_PLACE
+  integer, bind(C, name="MPI_FORTRAN_ARGV_NULL")       :: MPI_ARGV_NULL
+  integer, bind(C, name="MPI_FORTRAN_ARGVS_NULL")      :: MPI_ARGVS_NULL
+  integer, bind(C, name="MPI_FORTRAN_ERRCODES_IGNORE") :: MPI_ERRCODES_IGNORE
+  integer, bind(C, name="MPI_FORTRAN_UNWEIGHTED")      :: MPI_UNWEIGHTED
+  integer, bind(C, name="MPI_FORTRAN_WEIGHTS_EMPTY")   :: MPI_WEIGHTS_EMPTY
+#elif OMPI_FORTRAN_PLAIN
   type(MPI_STATUS), bind(C, name="mpi_fortran_status_ignore") :: MPI_STATUS_IGNORE
   type(MPI_STATUS), bind(C, name="mpi_fortran_statuses_ignore") :: MPI_STATUSES_IGNORE(1)
   integer, bind(C, name="mpi_fortran_bottom")          :: MPI_BOTTOM
@@ -173,6 +186,29 @@
   integer, bind(C, name="mpi_fortran_errcodes_ignore") :: MPI_ERRCODES_IGNORE
   integer, bind(C, name="mpi_fortran_unweighted")      :: MPI_UNWEIGHTED
   integer, bind(C, name="mpi_fortran_weights_empty")   :: MPI_WEIGHTS_EMPTY
+#elif OMPI_FORTRAN_SINGLE_UNDERSCORE
+  type(MPI_STATUS), bind(C, name="mpi_fortran_status_ignore_") :: MPI_STATUS_IGNORE
+  type(MPI_STATUS), bind(C, name="mpi_fortran_statuses_ignore_") :: MPI_STATUSES_IGNORE(1)
+  integer, bind(C, name="mpi_fortran_bottom_")          :: MPI_BOTTOM
+  integer, bind(C, name="mpi_fortran_in_place_")        :: MPI_IN_PLACE
+  integer, bind(C, name="mpi_fortran_argv_null_")       :: MPI_ARGV_NULL
+  integer, bind(C, name="mpi_fortran_argvs_null_")      :: MPI_ARGVS_NULL
+  integer, bind(C, name="mpi_fortran_errcodes_ignore_") :: MPI_ERRCODES_IGNORE
+  integer, bind(C, name="mpi_fortran_unweighted_")      :: MPI_UNWEIGHTED
+  integer, bind(C, name="mpi_fortran_weights_empty_")   :: MPI_WEIGHTS_EMPTY
+#elif OMPI_FORTRAN_DOUBLE_UNDERSCORE
+  type(MPI_STATUS), bind(C, name="mpi_fortran_status_ignore__") :: MPI_STATUS_IGNORE
+  type(MPI_STATUS), bind(C, name="mpi_fortran_statuses_ignore__") :: MPI_STATUSES_IGNORE(1)
+  integer, bind(C, name="mpi_fortran_bottom__")          :: MPI_BOTTOM
+  integer, bind(C, name="mpi_fortran_in_place__")        :: MPI_IN_PLACE
+  integer, bind(C, name="mpi_fortran_argv_null__")       :: MPI_ARGV_NULL
+  integer, bind(C, name="mpi_fortran_argvs_null__")      :: MPI_ARGVS_NULL
+  integer, bind(C, name="mpi_fortran_errcodes_ignore__") :: MPI_ERRCODES_IGNORE
+  integer, bind(C, name="mpi_fortran_unweighted__")      :: MPI_UNWEIGHTED
+  integer, bind(C, name="mpi_fortran_weights_empty__")   :: MPI_WEIGHTS_EMPTY
+#else
+#error Unrecognized Fortran name mangling scheme
+#endif
 
 !... Interfaces for operators with handles
 !-----------------------------------------
Index: config/ompi_setup_mpi_fortran.m4
===================================================================
--- config/ompi_setup_mpi_fortran.m4	(revision 32669)
+++ config/ompi_setup_mpi_fortran.m4	(working copy)
@@ -86,15 +88,23 @@
     AC_DEFINE_UNQUOTED([OMPI_FORTRAN_DOUBLE_UNDERSCORE],
         [$ompi_fortran_double_underscore], 
         [Whether fortran symbols have a trailing double underscore or not])
+    OMPI_FORTRAN_DOUBLE_UNDERSCORE=$ompi_fortran_double_underscore
+    AC_SUBST(OMPI_FORTRAN_DOUBLE_UNDERSCORE)
     AC_DEFINE_UNQUOTED([OMPI_FORTRAN_SINGLE_UNDERSCORE], 
         [$ompi_fortran_single_underscore],
         [Whether fortran symbols have a trailing underscore or not])
+    OMPI_FORTRAN_SINGLE_UNDERSCORE=$ompi_fortran_single_underscore
+    AC_SUBST(OMPI_FORTRAN_SINGLE_UNDERSCORE)
     AC_DEFINE_UNQUOTED([OMPI_FORTRAN_CAPS],
         [$ompi_fortran_caps],
         [Whether fortran symbols are all caps or not])
+    OMPI_FORTRAN_CAPS=$ompi_fortran_caps
+    AC_SUBST(OMPI_FORTRAN_CAPS)
     AC_DEFINE_UNQUOTED([OMPI_FORTRAN_PLAIN], 
         [$ompi_fortran_plain],
         [Whether fortran symbols have no trailing underscore or not])
+    OMPI_FORTRAN_PLAIN=$ompi_fortran_plain
+    AC_SUBST(OMPI_FORTRAN_PLAIN)
 
     # Check to see if any of the MPI Fortran bindings were
     # specifically requested.  If so, and we weren't able to setup the
 ])

