<div dir="ltr">Hi Folks,<div><br></div><div>There seems to have been recent outburst of interest in the mpi java bindings, so moving in retrograde fashion back to what I use to be doing, I&#39;ve started investigating the Ompi JNI code.</div><div><br></div><div>I&#39;m noticing that at least on sles11sp3, that soon after the java vm invokes the JNI_OnUnload of the ompi JNI code, the JVM segfaults when running some pthread key destructors, namely those associated with pthread keys that ompi is setting up.  If I set the destructor field to null in the ompi calls to pthread_key_create, then the jvm shuts down without a segfault after the java app exits.</div><div><br></div><div>Note that one can get lucky, as is the case when I run the java app on my mac.  That&#39;s because the jvm on this system doesn&#39;t care to run the JNI_OnUnload code.</div><div><br></div><div>One way to handle this problem would be to go find all the places (fortunately not many) where opal_tsd_key_create is called, and then make sure there is an appropriate opal_tsd_key_destroy for the key during the MPI_Finalize procedure.  Alternately,  since this is basically a dso problem, one could define fini functions to run the destructors during the dlclose procedure.<br></div><div><br></div><div>Any thoughts?</div><div><br></div><div>Howard</div><div><br></div></div>

