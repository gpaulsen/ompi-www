<html><head><meta http-equiv="Content-Type" content="text/html charset=iso-8859-1"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;">+1 - seen it before, and you'll find warnings across many software sites about this problem. Easy to have the main program segfault by touching the wrong thing after a cancel unless all the stars are properly aligned in the various libraries.<div><br><div><br><div><br><div><div><div>On May 13, 2014, at 7:56 PM, Paul Hargrove &lt;<a href="mailto:phhargrove@lbl.gov">phhargrove@lbl.gov</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div dir="ltr">George,<div><br></div><div>Just my USD0.02:</div><div><br></div><div>With pthreads many system calls (mostly those that might block) become "cancellation points" where the implementation checks if the callinf thread has been cancelled.</div>
<div>This means that a thread making any of those calls may simply never return (calling pthread_exit() internally), unless extra work has been done to prevent this default behavior.</div><div>This makes it very hard to write code that properly cleans up its resources, including (but not limited to) file descriptors and malloc()ed memory.</div>
<div>Even if Open MPI is written very carefully, one cannot assume that all the libraries it calls (and their dependencies, etc.) are written to properly deal with cancellation.</div><div><br></div><div>-Paul</div></div><div class="gmail_extra">
<br><br><div class="gmail_quote">On Tue, May 13, 2014 at 7:32 PM, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
I heard multiple references to pthread_cancel being known to have bad<br>
side effects. Can somebody educate my on this topic please?<br>
<br>
&nbsp; Thanks,<br>
&nbsp; &nbsp; George.<br>
<br>
<br>
<br>
On Tue, May 13, 2014 at 10:25 PM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<br>
&gt; It could be a bug in the software stack, though I wouldn't count on it. Unfortunately, pthread_cancel is known to have bad side effects, and so we avoid its use.<br>
&gt;<br>
&gt; The key here is that the thread must detect that the file descriptor has closed and exit, or use some other method for detecting that it should terminate. We do this in multiple other places in the code, without using pthread_cancel and without hanging. So it is certainly doable.<br>

&gt;<br>
&gt; I don't know the specifics of why Nathan's code is having trouble exiting, but I suspect that a simple solution - not involving pthread_cancel - can be readily developed.<br>
&gt;<br>
&gt;<br>
&gt; On May 13, 2014, at 7:18 PM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@iferc.org">gilles.gouaillardet@iferc.org</a>&gt; wrote:<br>
&gt;<br>
&gt;&gt; Folks,<br>
&gt;&gt;<br>
&gt;&gt; i would like to comment on r31738 :<br>
&gt;&gt;<br>
&gt;&gt;&gt; There is no reason to cancel the listening thread. It should die<br>
&gt;&gt;&gt; automatically when the file descriptor is closed.<br>
&gt;&gt; i could not agree more<br>
&gt;&gt;&gt; It is sufficient to just wait for the thread to exit with pthread join.<br>
&gt;&gt; unfortunatly, at least in my test environment (an outdated MPSS 2.1) it<br>
&gt;&gt; is *not* :-(<br>
&gt;&gt;<br>
&gt;&gt; this is what i described in #4615<br>
&gt;&gt; <a href="https://svn.open-mpi.org/trac/ompi/ticket/4615" target="_blank">https://svn.open-mpi.org/trac/ompi/ticket/4615</a><br>
&gt;&gt; in which i attached scif_hang.c that evidences that (at least in my<br>
&gt;&gt; environment)<br>
&gt;&gt; scif_poll(...) does *not* return after scif_close(...) is closed, and<br>
&gt;&gt; hence the scif pthread never ends.<br>
&gt;&gt;<br>
&gt;&gt; this is likely a bug in MPSS and it might have been fixed in earlier<br>
&gt;&gt; release.<br>
&gt;&gt;<br>
&gt;&gt; Nathan, could you try scif_hang in your environment and report the MPSS<br>
&gt;&gt; version you are running ?<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; bottom line, and once again, in my test environment, pthread_join (...)<br>
&gt;&gt; without pthread_cancel(...)<br>
&gt;&gt; might cause a hang when the btl/scif module is released.<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; assuming the bug is in old MPSS and has been fixed in recent releases,<br>
&gt;&gt; what is the OpenMPI policy ?<br>
&gt;&gt; a) test the MPSS version and call pthread_cancel() or do *not* call<br>
&gt;&gt; pthread_join if buggy MPSS is detected ?<br>
&gt;&gt; b) display an error/warning if a buggy MPSS is detected ?<br>
&gt;&gt; c) do not call pthread_join at all ? /* SIGSEGV might occur with older<br>
&gt;&gt; MPSS, it is in MPI_Finalize() so impact is limited */<br>
&gt;&gt; d) do nothing, let the btl/scif module hang, this is *not* an OpenMPI<br>
&gt;&gt; problem after all ?<br>
&gt;&gt; e) something else ?<br>
&gt;&gt;<br>
&gt;&gt; Gilles<br>
&gt;&gt; _______________________________________________<br>
&gt;&gt; devel mailing list<br>
&gt;&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/05/14786.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14786.php</a><br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/05/14787.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14787.php</a><br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/05/14788.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14788.php</a><br>
</blockquote></div><br><br clear="all"><div><br></div>-- <br><font face="courier new, monospace"><div>Paul H. Hargrove &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div>
<div>Future Technologies Group</div><div>Computer and Data Sciences Department &nbsp; &nbsp; Tel: +1-510-495-2352</div><div>Lawrence Berkeley National Laboratory &nbsp; &nbsp; Fax: +1-510-486-6900</div></font>
</div>
_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/devel<br>Link to this post: http://www.open-mpi.org/community/lists/devel/2014/05/14790.php</blockquote></div><br></div></div></div></div></body></html>
