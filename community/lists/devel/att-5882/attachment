Hi,<br><br>Thanks Jeff and Tim for providing the details about the layered structure of <br>OpenMPI library source code. The document you sent on Xen based VM communication for HEC clusters is indeed good and covered the extensive details about the BTL components.It helped me a lot in understanding the working of BTL layer.Thanks once again :)<br>
<br>Regards<br>Pranav<br><br><div class="gmail_quote">On Sat, Apr 25, 2009 at 10:05 AM, Timothy Hayes <span dir="ltr">&lt;<a href="mailto:hayesti@tcd.ie">hayesti@tcd.ie</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<div>I uploaded it to <a href="http://www.hotshare.net/file/131218-829472246c.html" target="_blank">http://www.hotshare.net/file/131218-829472246c.html</a></div>
<div> </div>
<div>I&#39;m not sure if it&#39;s any good or even if it&#39;s 100% accurate; but if someone gets any use out of it, that would be good.</div>
<div> </div>
<div>Tim<br></div>
<div class="gmail_quote">2009/4/17 Jeff Squyres <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span><div><div></div><div class="h5"><br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0px 0px 0px 0.8ex; padding-left: 1ex;">
<div>On Apr 16, 2009, at 11:38 AM, Timothy Hayes wrote:<br><br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0px 0px 0px 0.8ex; padding-left: 1ex;">From what I understand MPI_Send will hit 3 separate layers of code before reaching the socket file descriptors you&#39;ve found. The PML (Point to Point Messaging Layer) is a layer that bridges the MPI semantics from the underlying point to point communications. The standard PML implementation is called &#39;ob1&#39; which is what indirectly calls the code you found. MPI_Send should go through pml_isend() or pml_send() which will request a BTL (Byte Transfer Layer) modules from the BML (BTL Management Layer) and invoke the BTL&#39;s btl_prepare_src() or btl_alloc() functions before calling the btl_send(). It becomes clearer when you step through it all with a debugger though ;-)<br>

<br>If you&#39;re interested, I&#39;ve recently implemented a BTL component of my own and am now writing up a report on the process. It will be ready next week, so if you think it might be useful, just let me know.<br></blockquote>

<br></div>Ooohh... that would be positively yummy!  We can even host/link to that on <a href="http://www.open-mpi.org/" target="_blank">www.open-mpi.org</a>.  :-)<br><font color="#888888"><br>-- <br>Jeff Squyres<br>Cisco Systems</font> 
<div>
<div></div>
<div><br><br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>

<br></div></div></blockquote></div></div></div><br>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></blockquote></div><br><br clear="all"><br>-- <br>Pranav Jadhav<br>Graduate Student<br>
Computer Science Department<br>Stony Brook University<br>NY-11790.<br><br>

