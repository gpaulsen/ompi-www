<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">I'm not going to commit this today - I think it would be a little quick :-)<div><br></div><div>However, I do have it all building on a Mercurial branch with the new options. It would be REALLY GOOD if people interested in thread support were to check this out prior to me bringing it to the trunk.</div><div><br></div><div>The branch can be cloned with:</div><div><br></div><div><div><pre id="clone-url-https">hg clone <a href="https://rhc@bitbucket.org/rhc/ompi-threads/">https://rhc@bitbucket.org/rhc/ompi-threads/</a></pre><div>Please let me know if you test it and what you find.</div><div><br></div><div>Thanks</div><div>Ralph</div><div><br></div><div><br></div><div>On Mar 5, 2010, at 4:18 AM, Terry Dontje wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div>A couple comments:<br>1. &nbsp;I really assume the timeout is March 5th not February.<br>2. &nbsp;As to keeping the deprecated variables I think you really need to ditch the --enable-mpi-threads because if you synonym it with --enable-mpi-thread-multiple you are not mimicing what it did before but redefining it IMHO. &nbsp;(I am ok with the ditching personally).<br><br>--td<br><br>Jeff Squyres wrote:<br><blockquote type="cite">WHAT: Rename the --enable-*-threads configure switches and ENABLE*THREAD* macros.<br></blockquote><blockquote type="cite"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(see previous RFC: <a href="http://www.open-mpi.org/community/lists/devel/2010/01/7366.php">http://www.open-mpi.org/community/lists/devel/2010/01/7366.php</a>)<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">WHY: The fact that thread safety in OPAL and ORTE requires a configure switch with "mpi" in the name is very non-intuitive. &nbsp;Additionally, MPI_THREAD_MULTIPLE support is not necessarily the same thing as OPAL thread support (MTM needs OPAL thread support, but not the other way around), and we are seeing a growing advantage/need for ORTE to utilize threads in mpirun and orted irrespective of the MPI layer's threading abilities.<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">WHERE: Mostly opal/config/opal_config_threads.m4, something new in ompi/config/*.m4, and wherever the current ENABLE*THREAD* macros are currently used in the current code base.<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">WHEN: Next Friday COB<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">TIMEOUT: COB, Friday, Feb 5, 2010<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">------------------------<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">More details:<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">Cisco is starting to investigate using ORTE and OPAL in various threading scenarios. &nbsp;The fact that you need to enable thread safety in ORTE/OPAL with a configure switch that has the word "mpi" in it is extremely counter-intuitive (it bit some of our engineers very badly, and they were mighty annoyed!!). &nbsp;In addition, we ran into problems where it was advantageous to have threads in ORTE, but we couldn't do it without forcing thread support into the MPI layer because the switch is universal.<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">Since this functionality actually has nothing to do with MPI (it's actually the other way around -- MPI_THREAD_MULTIPLE needs this functionality), we really should divorce MPI threading functionality from whether threading machinery is enabled in OPAL or not. <br></blockquote><blockquote type="cite">These names were proposed at the end of the previous RFC and no one objected, so I'm sending this around as a new RFC to ensure we're all on the same sheet of music:<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">--enable-opal-progress-threads: enables progress thread machinery in opal<br></blockquote><blockquote type="cite"> --&gt; this is just a renaming from --enable-progress-threads<br></blockquote><blockquote type="cite"> --&gt; the corresponding #define stays the same: OPAL_ENABLE_PROGRES_THREADS<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">--enable-opal-multi-threads: enables multi threaded machinery in opal<br></blockquote><blockquote type="cite"> --&gt; this is just a renaming from --enable-mpi-threads<br></blockquote><blockquote type="cite"> --&gt; the corresponding #define also renames; from OPAL_ENABLE_MPI_THREADS to OPAL_ENABLE_MULTI_THREADS<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">--enable-mpi-thread-multiple: enables the use of MPI_THREAD_MULTIPLE; *ONLY* affects the MPI layer<br></blockquote><blockquote type="cite"> --&gt; use of this switch explicitly implies --enable-opal-multi-threads<br></blockquote><blockquote type="cite"> --&gt; new #define: OMPI_ENABLE_THREAD_MULTIPLE<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">We can keep and deprecate the old configure options if desired:<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">--enable-mpi-threads: deprecated synonym for --enable-mpi-thread-multiple<br></blockquote><blockquote type="cite">--enable-progress-threads: deprecated synonym for --enable-opal-progress-threads<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">..although I'm somewhat inclined to ditch them unless someone has strong feelings about keeping them.<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">Doing the name change in OPAL and ORTE is fairly straightforward -- it's essentially an s/foo/bar/g kind of operation. &nbsp;It'll likely take a little more effort in the MPI layer because the places where the current #defines are used may need to switch to the new name or to the new OMPI_ENABLE_THREAD_MULTIPLE name (and maybe some new logic? &nbsp;I am not sure without looking into it closer).<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite"> &nbsp;<br></blockquote><br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>http://www.open-mpi.org/mailman/listinfo.cgi/devel<br></div></blockquote></div><br></div></body></html>
