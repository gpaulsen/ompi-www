<HTML>
<HEAD>
<TITLE>Re: [OMPI devel] RFC: Move of ompi_bitmap_t</TITLE>
</HEAD>
<BODY>
<FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:11pt'>Brian,<BR>
&nbsp;&nbsp;Can you be a bit more specific about the work you did at LANL ?<BR>
<BR>
Thanks,<BR>
Rich<BR>
<BR>
<BR>
On 2/1/09 2:20 PM, &quot;Brian Barrett&quot; &lt;<a href="brbarret@open-mpi.org">brbarret@open-mpi.org</a>&gt; wrote:<BR>
<BR>
</SPAN></FONT><BLOCKQUOTE><FONT FACE="Calibri, Verdana, Helvetica, Arial"><SPAN STYLE='font-size:11pt'>While I would love to be involved in this change, as I believe it's <BR>
critical it get done right and have some reservations based on the <BR>
work we did while a bunch of us were still at LANL, I just don't have <BR>
time for yet another weekly telecon (particularly since 2:00 MST is <BR>
the same as an existing weekly telecon).<BR>
<BR>
I still think my objections stand, however. &nbsp;A weekly telecon to <BR>
discuss the issues is no replacement for a detailed explanation of how <BR>
things are going to work, as well as some proof of concept code. &nbsp;We <BR>
should hold this change up to the same standard we hold all major <BR>
changes to -- which means a working temp branch with negligible <BR>
performance impact.<BR>
<BR>
Brian<BR>
<BR>
On Feb 1, 2009, at 12:14 PM, Graham, Richard L. wrote:<BR>
<BR>
&gt; Brian,<BR>
&gt; &nbsp;Just fyi, there is a weekly call - thursdays at 4 est where we have <BR>
&gt; been discussyng these issues.<BR>
&gt; &nbsp;Let's touch base at the forum.<BR>
&gt;<BR>
&gt; Rich<BR>
&gt;<BR>
&gt; ----- Original Message -----<BR>
&gt; From: <a href="devel-bounces@open-mpi.org">devel-bounces@open-mpi.org</a> &lt;<a href="devel-bounces@open-mpi.org">devel-bounces@open-mpi.org</a>&gt;<BR>
&gt; To: Open MPI Developers &lt;<a href="devel@open-mpi.org">devel@open-mpi.org</a>&gt;<BR>
&gt; Sent: Sun Feb 01 10:36:33 2009<BR>
&gt; Subject: Re: [OMPI devel] RFC: Move of ompi_bitmap_t<BR>
&gt;<BR>
&gt; In that case, I remove my objection to this particular RFC. &nbsp;It<BR>
&gt; remains for all other RFCs related to moving any of the BTL move code<BR>
&gt; to the trunk before the critical issues with the BTL move have been<BR>
&gt; sorted out in a temporary branch. &nbsp;This includes renaming functions<BR>
&gt; and such. &nbsp;Perhaps we should have a discussion about those issues<BR>
&gt; during the Forum in a couple weeks?<BR>
&gt;<BR>
&gt; Brian<BR>
&gt;<BR>
&gt; On Feb 1, 2009, at 5:37 AM, Jeff Squyres wrote:<BR>
&gt;<BR>
&gt;&gt; I just looked through both opal_bitmap_t and ompi_bitmap_t and I<BR>
&gt;&gt; think that the only real difference is that in the ompi version, we<BR>
&gt;&gt; check (in various places) that the size of the bitmap never grows<BR>
&gt;&gt; beyond OMPI_FORTRAN_HANDLE_MAX; the opal version doesn't do these<BR>
&gt;&gt; kind of size checks.<BR>
&gt;&gt;<BR>
&gt;&gt; I think it would be fairly straightforward to:<BR>
&gt;&gt;<BR>
&gt;&gt; - add generic checks into the opal version, perhaps by adding a new<BR>
&gt;&gt; API call (opal_bitmap_set_max_size())<BR>
&gt;&gt; - if the max size has been set, then ensure that the bitmap never<BR>
&gt;&gt; grows beyond that size, otherwise let it have the same behavior as<BR>
&gt;&gt; today (grow without bound -- assumedly until malloc() fails)<BR>
&gt;&gt;<BR>
&gt;&gt; It'll take a little care to ensure to merge the functionality<BR>
&gt;&gt; correctly, but it is possible. &nbsp;Once that is done, you can:<BR>
&gt;&gt;<BR>
&gt;&gt; - remove the ompi_bitmap_t class<BR>
&gt;&gt; - s/ompi_bitmap/opal_bitmap/g in the OMPI layer<BR>
&gt;&gt; - add new calls to opal_bitmap_set_max_size(&amp;bitmap,<BR>
&gt;&gt; OMPI_FORTRAN_HANDLE_MAX) in the OMPI layer (should only be in a few<BR>
&gt;&gt; places -- probably one for each MPI handle type...? &nbsp;It's been so<BR>
&gt;&gt; long since I've looked at that code that I don't remember offhand)<BR>
&gt;&gt;<BR>
&gt;&gt; I'd generally be in favor of this because, although this is not a<BR>
&gt;&gt; lot of repeated code, it *is* repeated code -- so cleaning it up and<BR>
&gt;&gt; consolidating the non-Fortran stuff down in opal is not a Bad Thing.<BR>
&gt;&gt;<BR>
&gt;&gt;<BR>
&gt;&gt; On Jan 30, 2009, at 4:59 PM, Ralph Castain wrote:<BR>
&gt;&gt;<BR>
&gt;&gt;&gt; The history is simple. Originally, there was one bitmap_t in orte<BR>
&gt;&gt;&gt; that was also used in ompi. Then the folks working on Fortran found<BR>
&gt;&gt;&gt; that they had to put a limit in the bitmap code to avoid getting<BR>
&gt;&gt;&gt; values outside of Fortran's range. However, this introduced a<BR>
&gt;&gt;&gt; problem - if we had the limit in the orte version, then we limited<BR>
&gt;&gt;&gt; ourselves unnecessarily, and introduced some abstraction questions<BR>
&gt;&gt;&gt; since orte knows nothing about Fortran.<BR>
&gt;&gt;&gt;<BR>
&gt;&gt;&gt; So two were created. Then the orte_bitmap_t was blown away at a<BR>
&gt;&gt;&gt; later time when we removed the GPR as George felt it wasn't<BR>
&gt;&gt;&gt; necessary (which was true). It was later reborn when we needed it<BR>
&gt;&gt;&gt; in the routed system, but this time it was done in opal as others<BR>
&gt;&gt;&gt; indicated a potential more general use for that capability.<BR>
&gt;&gt;&gt;<BR>
&gt;&gt;&gt; The problem with uniting the two is that you either have to<BR>
&gt;&gt;&gt; introduce Fortran-based limits into opal (which messes up the non-<BR>
&gt;&gt;&gt; ompi uses), or deal with the Fortran limits in some other fashion.<BR>
&gt;&gt;&gt; Neither is particularly pleasant, though it could be done.<BR>
&gt;&gt;&gt;<BR>
&gt;&gt;&gt; I think it primarily is a question for the Fortran folks to address<BR>
&gt;&gt;&gt; - can they deal with Fortran limits in some other manner without<BR>
&gt;&gt;&gt; making the code unmanageable and/or taking a performance hit?<BR>
&gt;&gt;&gt;<BR>
&gt;&gt;&gt; Ralph<BR>
&gt;&gt;&gt;<BR>
&gt;&gt;&gt;<BR>
&gt;&gt;&gt; On Jan 30, 2009, at 2:40 PM, Richard Graham wrote:<BR>
&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt; This should really be viewed as a code maintenance RFC. &nbsp;The<BR>
&gt;&gt;&gt;&gt; reason this<BR>
&gt;&gt;&gt;&gt; came up in the first place is because we are investigating the btl<BR>
&gt;&gt;&gt;&gt; move, but<BR>
&gt;&gt;&gt;&gt; these are really two very distinct issues. &nbsp;There are two bits of<BR>
&gt;&gt;&gt;&gt; code that<BR>
&gt;&gt;&gt;&gt; have virtually the same functionality - they do have the same<BR>
&gt;&gt;&gt;&gt; interface I am<BR>
&gt;&gt;&gt;&gt; told. &nbsp;The question is, is there a good reason to keep two <BR>
&gt;&gt;&gt;&gt; different<BR>
&gt;&gt;&gt;&gt; versions in the repository ? &nbsp;Not knowing the history of why a<BR>
&gt;&gt;&gt;&gt; second<BR>
&gt;&gt;&gt;&gt; version was created this is an inquiry. &nbsp;Is there some performance<BR>
&gt;&gt;&gt;&gt; advantage, or some other advantage to having these two versions ?<BR>
&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt; Rich<BR>
&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt; On 1/30/09 3:23 PM, &quot;Terry D. Dontje&quot; &lt;<a href="Terry.Dontje@Sun.COM">Terry.Dontje@Sun.COM</a>&gt; wrote:<BR>
&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt; I second Brian's concern. &nbsp;So unless this is just an announcement<BR>
&gt;&gt;&gt;&gt;&gt; that<BR>
&gt;&gt;&gt;&gt;&gt; this is being done on a tmp branch only until everything is in<BR>
&gt;&gt;&gt;&gt;&gt; order I<BR>
&gt;&gt;&gt;&gt;&gt; think we need further discussions.<BR>
&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt; --td<BR>
&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt; Brian Barrett wrote:<BR>
&gt;&gt;&gt;&gt;&gt;&gt; So once again, I bring up my objection of this entire line of<BR>
&gt;&gt;&gt;&gt;&gt;&gt; moving<BR>
&gt;&gt;&gt;&gt;&gt;&gt; until such time as the entire process is properly mapped out. &nbsp;I<BR>
&gt;&gt;&gt;&gt;&gt;&gt; believe it's premature to being moving around code in<BR>
&gt;&gt;&gt;&gt;&gt;&gt; preparation for<BR>
&gt;&gt;&gt;&gt;&gt;&gt; a move that hasn't been proven viable yet. &nbsp;Until there is<BR>
&gt;&gt;&gt;&gt;&gt;&gt; concrete<BR>
&gt;&gt;&gt;&gt;&gt;&gt; evidence that such a move is possible, won't degrade application<BR>
&gt;&gt;&gt;&gt;&gt;&gt; performance, and does not make the code totally unmaintainable, I<BR>
&gt;&gt;&gt;&gt;&gt;&gt; believe that any related code changes should not be brought into<BR>
&gt;&gt;&gt;&gt;&gt;&gt; the<BR>
&gt;&gt;&gt;&gt;&gt;&gt; trunk.<BR>
&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt; Brian<BR>
&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt; On Jan 30, 2009, at 12:30 PM, Rainer Keller wrote:<BR>
&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; On behalf of Laurent Broto<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; RFC: Move of ompi_bitmap_t<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; WHAT: Move ompi_bitmap_t into opal or onet-layer<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; WHY: Remove dependency on ompi-layer.<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; WHERE: ompi/class<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; WHEN: Open MPI-1.4<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; TIMEOUT: February 3, 2009.<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; -------------------------------------<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Details:<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; WHY:<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; The ompi_bitmap_t is being used in various places within<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; opal/orte/ompi. With<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; the proposed splitting of BTLs into a separate library, we are<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; currently<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; investigating several of the differences between ompi/class/* <BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; and<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; opal/class/*<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; One of the items is the ompi_bitmap_t which is quite similar to<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; the<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; opal_bitmap_t.<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; The question is, whether we can remove favoring a solution just<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; in opal.<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; WHAT:<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; The data structures in the opal-version are the same,<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; so is the interface,<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; the implementation is *almost* the same....<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; The difference is the Fortran handles ;-]!<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Maybe we're missing something but could we have a discussion,<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; on why<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Fortran<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; sizes are playing a role here, and if this is a hard<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; requirement, how<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; we could<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; settle that into that current interface (possibly without a<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; notion of<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Fortran,<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; but rather, set some upper limit that the bitmap may grow to?)<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; With best regards,<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Laurent and Rainer<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; --<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; ------------------------------------------------------------------------<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Rainer Keller, PhD &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tel: (865) 241-6293<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Oak Ridge National Lab &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fax: (865) 241-4811<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; PO Box 2008 MS 6164 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Email: <a href="keller@ornl.gov">keller@ornl.gov</a><BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Oak Ridge, TN 37831-2008 &nbsp;&nbsp;&nbsp;AIM/Skype: rusraink<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; devel mailing list<BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; <a href="devel@open-mpi.org">devel@open-mpi.org</a><BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt;&gt; _______________________________________________<BR>
&gt;&gt;&gt;&gt;&gt; devel mailing list<BR>
&gt;&gt;&gt;&gt;&gt; <a href="devel@open-mpi.org">devel@open-mpi.org</a><BR>
&gt;&gt;&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
&gt;&gt;&gt;&gt;<BR>
&gt;&gt;&gt;&gt; _______________________________________________<BR>
&gt;&gt;&gt;&gt; devel mailing list<BR>
&gt;&gt;&gt;&gt; <a href="devel@open-mpi.org">devel@open-mpi.org</a><BR>
&gt;&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
&gt;&gt;&gt;<BR>
&gt;&gt;&gt; _______________________________________________<BR>
&gt;&gt;&gt; devel mailing list<BR>
&gt;&gt;&gt; <a href="devel@open-mpi.org">devel@open-mpi.org</a><BR>
&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
&gt;&gt;<BR>
&gt;&gt;<BR>
&gt;&gt; --<BR>
&gt;&gt; Jeff Squyres<BR>
&gt;&gt; Cisco Systems<BR>
&gt;&gt;<BR>
&gt;&gt; _______________________________________________<BR>
&gt;&gt; devel mailing list<BR>
&gt;&gt; <a href="devel@open-mpi.org">devel@open-mpi.org</a><BR>
&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
&gt;&gt;<BR>
&gt;<BR>
&gt; _______________________________________________<BR>
&gt; devel mailing list<BR>
&gt; <a href="devel@open-mpi.org">devel@open-mpi.org</a><BR>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
&gt;<BR>
&gt; _______________________________________________<BR>
&gt; devel mailing list<BR>
&gt; <a href="devel@open-mpi.org">devel@open-mpi.org</a><BR>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
&gt;<BR>
<BR>
--<BR>
&nbsp;&nbsp;&nbsp;Brian Barrett<BR>
&nbsp;&nbsp;&nbsp;Open MPI developer<BR>
&nbsp;&nbsp;&nbsp;<a href="http://www.open-mpi.org/">http://www.open-mpi.org/</a><BR>
<BR>
<BR>
_______________________________________________<BR>
devel mailing list<BR>
<a href="devel@open-mpi.org">devel@open-mpi.org</a><BR>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><BR>
<BR>
</SPAN></FONT></BLOCKQUOTE>
</BODY>
</HTML>


