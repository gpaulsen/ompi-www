<div>
            <div>
                <span>Committed in r24815.<br>
                </span>
                <span></span>
                
                <p style="color: #a0a0a0;">On Thursday, June 23, 2011 at 4:19 PM, Ralph Castain wrote:</p>
                <blockquote type="cite" style="border-left-style:solid;border-width:1px;margin-left:0px;padding-left:10px;">
                    <span><div><div><br><div><div>On Jun 23, 2011, at 2:14 PM, Wesley Bland wrote:</div><br><blockquote type="cite"><div>
            <div>
                <span>Maybe before the ORTED saw the signal, it detected a communication failure and reacted to that. </span></div></div></blockquote><div><br></div>Quite possible. However, remember that procs local to mpirun (in most environments) directly receive the ctrl-c instead of the orted getting a cmd from mpirun to kill them. Thus, they "abort_by_signal" rather than "terminate by cmd".</div><div><br></div><div>I've had this problem a lot on my Mac, in particular. The ctrl-c is seen directly by the procs, so the abort code path is totally different.</div><div><br></div><div><br><blockquote type="cite"><div><div><span>Either way, I haven't had any trouble being able to ctrl-c out of my applications. I'll go ahead and comment the code out of the HNP and if we want to put it back later, it will be there.<br></span>
                <span></span><p style="color: #a0a0a0;">On Thursday, June 23, 2011 at 4:05 PM, Ralph Castain wrote:</p><blockquote type="cite"><div>
                    <span><div><div><br><div><div>On Jun 23, 2011, at 1:59 PM, Wesley Bland wrote:</div><br><blockquote type="cite"><div>
            <div>
                <span>I don't see any code in the orted errmgr that deals with the state&nbsp;ORTE_PROC_STATE_ABORTED_BY_SIG&nbsp;however the HNP does deal with that state.</span></div></div></blockquote><div><br></div>Like I said, the orted just passes it along - as it does with all failure states.</div><div><br><blockquote type="cite"><div><div><span><div><br></div><div>The discussion Josh and I were having was whether or not to remove the code dealing with&nbsp;ORTE_PROC_STATE_ABORTED_BY_SIG from the HNP so that the processes running on that node can also be aborted by a kill signal and allow the rest of the job to run.</div></span></div></div></blockquote><div><br></div>I don't see any reason to treat that state any differently than all the other failure states. However, be careful - if someone -wants- to kill the job, then we need to ensure they can do so - i.e., if mpirun sigterms/sigkills a proc, we don't want it auto-recovering or we'll never ctrl-c out of mpirun.</div><div><br></div><div>In my branch, I have a special code for procs terminated deliberately by mpirun - pretty sure I put that code back into the trunk, but I don't believe the trunk errmgr modules know what to do with it (TERMINATED_BY_CMD).</div><div><br></div><div>You might need to add some code for that case.<br><blockquote type="cite"><div><div>
                <span></span><p style="color: #a0a0a0;">On Thursday, June 23, 2011 at 3:54 PM, Ralph Castain wrote:</p><blockquote type="cite"><div>
                    <span><div><div>I'm not entirely sure what that means. The orteds certainly detect and mark that a local proc aborted by signal - the orted errmgr just sends a note back to the HNP notifying it of the situation rather than responding to it directly.<br><br>I don't believe the HNP does anything different when responding to a local proc's abort-by-signal vs getting a message from an orted, does it?<br><br>What is it you want the HNP/orted to do? I haven't dug that deeply into your branch<br><br>On Jun 23, 2011, at 1:47 PM, Josh Hursey wrote:<br><br><blockquote type="cite"><div>I would mention this to Ralph to be sure (CC'ed). I bet that you can<br>push this change in with the rest so that mpirun hosting a failed<br>process works.<br><br>Ralph, what do you think?<br><br>-- Josh<br><br>On Thu, Jun 23, 2011 at 3:29 PM, Wesley Bland &lt;<a href="mailto:wbland@eecs.utk.edu">wbland@eecs.utk.edu</a>&gt; wrote:<br><blockquote type="cite"><div>There is still one problem that you'll notice when you run your tests. The<br>HNP errmgr catches "aborted by signal" while the orteds don't. I wasn't sure<br>if this had a purpose that I wasn't aware of so I left that in there. It's a<br>simple matter of removing the code to make the behavior the same on the HNP<br>as the orteds, but I don't want to remove something like that if it's going<br>to cause problems for someone else.<br><br>On Thursday, June 23, 2011 at 10:16 AM, Josh Hursey wrote:<br><br>So I finally got a chance to test the branch this morning. I cannot<br>get it to work. Maybe I'm doing some wrong, missing some MCA<br>parameter?<br><br>-------------------------<br>[jjhursey@smoky-login1 resilient-orte] hg summary<br>parent: 2:c550cf6ed6a2 tip<br>Newest version. Synced with trunk r24785.<br>branch: default<br>commit: 1 modified, 8097 unknown<br>update: (current)<br>-------------------------<br>(the 1 modified was the test program attached)<br><br>Attached is a modified version of the orte_abort.c program found in<br>${top}/orte/test/system. This program is ORTE only, and registers the<br>errmgr callback to trigger correct termination. You will need to<br>configure Open MPI with '--with-devel-headers' to build this. But then<br>you can compile with:<br>ortecc -g orte_abort.c -o orte_abort<br><br>These are the configure options that I used:<br>--with-devel-headers --enable-binaries --disable-io-romio<br>--enable-contrib-no-build=vt --enable-debug CC=gcc CXX=g++<br>F77=gfortran FC=gfortran<br><br><br>If the HNP has no processes on it - I get a hang:<br>-------------------------------<br>mpirun -np 4 --nolocal orte_abort<br>orte_abort: Name [[60121,1],0,0] Host: smoky13 Pid 3688 -- Initalized<br>orte_abort: Name [[60121,1],1,0] Host: smoky13 Pid 3689 -- Initalized<br>orte_abort: Name [[60121,1],2,0] Host: smoky13 Pid 3690 -- Initalized<br>orte_abort: Name [[60121,1],3,0] Host: smoky13 Pid 3691 -- Initalized<br>orte_abort: Name [[60121,1],3,0] Host: smoky13 Pid 3691 -- Calling Abort<br>mpirun: killing job...<br><br>[smoky14:04002] [[60121,0],0,0] ORTE_ERROR_LOG: Data unpack would read<br>past end of buffer in file errmgr_hnp.c at line 824<br>[smoky14:04002] [[60121,0],0,0] ORTE_ERROR_LOG: Data unpack would read<br>past end of buffer in file orted/orted_comm.c at line 1341<br>mpirun: abort is already in progress...hit ctrl-c again to forcibly<br>terminate<br><br>[jjhursey@smoky14 system] echo $?<br>1<br>-------------------------------<br><br>If the HNP has processes on it, but not the one that aborted - I get a hang:<br>-------------------------------<br>[jjhursey@smoky14 system] mpirun -np 4 --npernode 2 orte_abort<br>orte_abort: Name [[60302,1],0,0] Host: smoky14 Pid 3830 -- Initalized<br>orte_abort: Name [[60302,1],1,0] Host: smoky14 Pid 3831 -- Initalized<br>orte_abort: Name [[60302,1],2,0] Host: smoky13 Pid 3484 -- Initalized<br>orte_abort: Name [[60302,1],3,0] Host: smoky13 Pid 3485 -- Initalized<br>orte_abort: Name [[60302,1],3,0] Host: smoky13 Pid 3485 -- Calling Abort<br>mpirun: killing job...<br><br>[smoky14:03829] [[60302,0],0,0]-[[60302,1],1,0] mca_oob_tcp_msg_recv:<br>readv failed: Connection reset by peer (104)<br>[smoky14:03829] [[60302,0],0,0]-[[60302,1],0,0] mca_oob_tcp_msg_recv:<br>readv failed: Connection reset by peer (104)<br>[smoky14:03829] [[60302,0],0,0] ORTE_ERROR_LOG: Data unpack would read<br>past end of buffer in file errmgr_hnp.c at line 824<br>[smoky14:03829] [[60302,0],0,0] ORTE_ERROR_LOG: Data unpack would read<br>past end of buffer in file orted/orted_comm.c at line 1341<br>mpirun: abort is already in progress...hit ctrl-c again to forcibly<br>terminate<br><br>[jjhursey@smoky14 system] echo $?<br>1<br>--------------------------------<br><br>If the HNP has processes on it, and it is the one that aborted - I get<br>immediate return, but no callback:<br>--------------------------------<br>[jjhursey@smoky14 system] mpirun -np 4 --npernode 4 orte_abort<br>orte_abort: Name [[60292,1],0,0] Host: smoky14 Pid 3840 -- Initalized<br>orte_abort: Name [[60292,1],1,0] Host: smoky14 Pid 3841 -- Initalized<br>orte_abort: Name [[60292,1],2,0] Host: smoky14 Pid 3842 -- Initalized<br>orte_abort: Name [[60292,1],3,0] Host: smoky14 Pid 3843 -- Initalized<br>orte_abort: Name [[60292,1],3,0] Host: smoky14 Pid 3843 -- Calling Abort<br>[jjhursey@smoky14 system] echo $?<br>3<br>--------------------------------<br><br>Any ideas on what I might be doing wrong?<br><br>I tried with both calling 'orte_errmgr.abort(ORTE_PROC_MY_NAME-&gt;vpid,<br>NULL);' and 'kill(getpid(), SIGKILL);' and got the same behavior.<br><br>-- Josh<br><br><br><br>On Thu, Jun 23, 2011 at 9:58 AM, Wesley Bland &lt;<a href="mailto:wbland@eecs.utk.edu">wbland@eecs.utk.edu</a>&gt; wrote:<br><br>Last reminder (I hope). RFC goes in a COB today.<br>Wesley<br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br><br><br><br>--<br>Joshua Hursey<br>Postdoctoral Research Associate<br>Oak Ridge National Laboratory<br><a href="http://users.nccs.gov/~jjhursey">http://users.nccs.gov/~jjhursey</a><br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br><br>Attachments:<br>- orte_abort.c<br></div></blockquote><br><br><br>-- <br>Joshua Hursey<br>Postdoctoral Research Associate<br>Oak Ridge National Laboratory<br><a href="http://users.nccs.gov/~jjhursey">http://users.nccs.gov/~jjhursey</a><br></div></blockquote></div></div></span>
                
                
                
                
                </div></blockquote><div>
                    <br>
                </div>
            </div>
        </div></blockquote></div><br></div></div></span>
                
                
                
                
                </div></blockquote><div>
                    <br>
                </div>
            </div>
        </div></blockquote></div><br></div></div></span>
                
                
                
                
                </blockquote>
                
                <div>
                    <br>
                </div>
            </div>
        </div>
