In other places, initialization looks like<div>opal_mutex_t mutex = {{0}};</div><div><br></div><div>Btw, opal_condition is a standalone binary (e.g. Not part of ompi library), so I do not think uninitialized common hurts here.</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles</div><div><br><br>On Wednesday, July 1, 2015, Nathan Hjelm &lt;<a href="mailto:hjelmn@lanl.gov">hjelmn@lanl.gov</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><br>
PGI no longer suprises me with how bad it is. The lines in question look<br>
ok to me. We can fix this (and remove the common symbols) by removing<br>
the initializers and making the variables static. I will go ahead and do<br>
this.<br>
<br>
-Nathan<br>
<br>
On Wed, Jul 01, 2015 at 05:41:59AM -0700, Paul Hargrove wrote:<br>
&gt;    I find that PGI version 9, 10, 11, 12, 13 and 14 all fail &quot;make check&quot;<br>
&gt;    with last night&#39;s master tarball.  All expect 9 fail with pretty much the<br>
&gt;    same message:<br>
&gt;      CC       opal_condition.o<br>
&gt;    PGC-S-0155-Empty initializer not supported<br>
&gt;     (/scratch/scratchdirs/hargrove/OMPI/openmpi-master-linux-x86_64-pgi-14.7/openmpi-dev-2014-gc8730b5/test/threads/opal_condition.c:<br>
&gt;    48)<br>
&gt;    PGC-S-0155-Empty initializer not supported<br>
&gt;     (/scratch/scratchdirs/hargrove/OMPI/openmpi-master-linux-x86_64-pgi-14.7/openmpi-dev-2014-gc8730b5/test/threads/opal_condition.c:<br>
&gt;    49)<br>
&gt;    PGC-S-0155-Empty initializer not supported<br>
&gt;     (/scratch/scratchdirs/hargrove/OMPI/openmpi-master-linux-x86_64-pgi-14.7/openmpi-dev-2014-gc8730b5/test/threads/opal_condition.c:<br>
&gt;    50)<br>
&gt;    PGC/x86-64 Linux 14.7-0: compilation completed with severe errors<br>
&gt;    make[3]: *** [opal_condition.o] Error 2<br>
&gt;    Those lines are:<br>
&gt;    opal_mutex_t mutex = {};<br>
&gt;    opal_condition_t thr1_cond = {};<br>
&gt;    opal_condition_t thr2_cond = {};<br>
&gt;    I have no clue why pgi won&#39;t accept that when every other compiler does.<br>
&gt;    Tests were on NERSC&#39;s Hopper and Carver, where Howard should be able to<br>
&gt;    reproduce.<br>
&gt;    -Paul<br>
&gt;    --<br>
&gt;    Paul H. Hargrove                          <a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;PHHargrove@lbl.gov&#39;)">PHHargrove@lbl.gov</a><br>
&gt;    Computer Languages &amp; Systems Software (CLaSS) Group<br>
&gt;    Computer Science Department               Tel: +1-510-495-2352<br>
&gt;    Lawrence Berkeley National Laboratory     Fax: +1-510-486-6900<br>
<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;devel@open-mpi.org&#39;)">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/07/17580.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/07/17580.php</a><br>
<br>
</blockquote></div>

