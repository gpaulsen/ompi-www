<div dir="ltr"><div><br></div>Thanks, George, I got it now.<div>I had missed the fact that opal_atomic_add() is a macro that applies sizeof() to call the correct atomic function.</div><div>So, I believe that Nathan&#39;s fixes for the 64-bit atomics support detection should be the only thing needed.</div><div><br></div><div>-Paul</div></div><div class="gmail_extra"><br><div class="gmail_quote">On Tue, May 10, 2016 at 1:50 PM, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">The opal_atomic_add function contains all the possible calls to the underlying atomic functions, based on the size of the data. Thus, if we detect that 64 bits atomics are available, and if the compiler doesn&#39;t automatically remove the unnecessary code (from the switch case with a const), then we will [wrongfully] generate the stub for calling the 64 bits atomic operation.<div><br></div><div>  George.</div><div><br></div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote"><div><div class="h5">On Tue, May 10, 2016 at 3:48 PM, Paul Hargrove <span dir="ltr">&lt;<a href="mailto:phhargrove@lbl.gov" target="_blank">phhargrove@lbl.gov</a>&gt;</span> wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div class="h5"><div dir="ltr">George,<div><br></div><div>I believe that the 64-bit atomics support detection issue that you are suspecting is already covered by Nathan&#39;s PR1659 on master, and will be PRed/CMRed for v2.x after that is merged.</div><div><br></div><div>Regardless of that, however, since the field is declared as &quot;volatile int32_t&quot; the opal_list code does need to be fixed to use 32-bit operations unconditionally, right?</div><div><br></div><div>-Paul</div></div><div class="gmail_extra"><br><div class="gmail_quote"><div><div>On Tue, May 10, 2016 at 12:36 PM, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;</span> wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div><div dir="ltr">Paul,<div><br></div><div>I think the ref_count should always be manipulated with atomic operations, otherwise we can&#39;t use them for internal, thread-safe, purposes. That being said the issue at hand seems a little different. The difference in the generated code between the <span style="font-size:12.8px">opal_atomic_add and the OPAL_THREAD_ADD32, is that the macro is explicitly calling opal_atomic_add32, while the generic atomic_add has a switch inside (to select between atomics operations on different type). For the error you mention to happen our configure script must have detected that there is support for 8bytes atomic operations, thus setting OPAL_HAVE_ATOMIC_ADD_64 to 1.</span></div><div><span style="font-size:12.8px"><br></span></div><div><span style="font-size:12.8px">Can you take a look at the 64 bits atomic detection in the config.log and post here the corresponding output ?</span></div><div><span style="font-size:12.8px"><br></span></div><div><span style="font-size:12.8px">Thanks,</span></div><div><span style="font-size:12.8px">  George.</span></div><div><span style="font-size:12.8px"><br></span></div><div><span style="font-size:12.8px"><br></span></div></div><div class="gmail_extra"><br><div class="gmail_quote"><div><div>On Tue, May 10, 2016 at 1:38 PM, Paul Hargrove <span dir="ltr">&lt;<a href="mailto:phhargrove@lbl.gov" target="_blank">phhargrove@lbl.gov</a>&gt;</span> wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div><div dir="ltr">I am currently working with the v2.x branch, rather than tarballs.<div><br></div><div>While attempting to build on AIX (which is ILP32 by default), I encountered an unexpected undefined reference to __sync_add_and_fetch_8() from opal/class/opal_list.h.</div><div><br></div><div>I found that when debugging is enabled (as in almost every build I try) there is the following code:</div><div><div>#if OPAL_ENABLE_DEBUG</div><div>        /* Spot check: ensure this item is only on the list that we</div><div>           just insertted it into */</div><div><br></div><div>        (void)opal_atomic_add( &amp;(item-&gt;opal_list_item_refcount), 1 );</div><div>        assert(1 == item-&gt;opal_list_item_refcount);<br></div><div>        item-&gt;opal_list_item_belong_to = list;</div><div>#endif</div></div><div><br></div><div>I am not sure why (and it may be an AIX-specific issue), but that &quot;opal_atomic_add()&quot; is attempting a 64-bit add.</div><div>That is a problem, given that &#39;opal_list_item_refcount&#39; is 32-bits!</div><div><br></div><div>Noting that all other accesses to this field are OPAL_THREAD_ADD32(), I suggest the following (with a bonus spell-check at no additional charge):</div><div><br></div><div><div><font face="monospace, monospace">--- opal/class/opal_list.c~     2016-05-10 10:20:19.000000000 -0700</font></div><div><font face="monospace, monospace">+++ opal/class/opal_list.c      2016-05-10 10:29:14.000000000 -0700</font></div><div><font face="monospace, monospace">@@ -142,9 +142,9 @@</font></div><div><font face="monospace, monospace"><br></font></div><div><font face="monospace, monospace">  #if OPAL_ENABLE_DEBUG</font></div><div><font face="monospace, monospace">          /* Spot check: ensure this item is only on the list that we</font></div><div><font face="monospace, monospace">-            just insertted it into */</font></div><div><font face="monospace, monospace">+            just inserted it into */</font></div><div><font face="monospace, monospace"><br></font></div><div><font face="monospace, monospace">-         (void)opal_atomic_add( &amp;(item-&gt;opal_list_item_refcount), 1 );</font></div><div><font face="monospace, monospace">+         (void)OPAL_THREAD_ADD32( &amp;(item-&gt;opal_list_item_refcount), 1 );</font></div><div><font face="monospace, monospace">          assert(1 == item-&gt;opal_list_item_refcount);</font></div><div><font face="monospace, monospace">          item-&gt;opal_list_item_belong_to = list;</font></div><div><font face="monospace, monospace">  #endif</font></div></div><div><br></div><div><br></div><div><div>Source inspection shows the same mixing or opal_atomic_add() vs OPAL_THREAD_ADD32() in master.</div></div><span><font color="#888888"><div><br></div><div>-Paul</div><div><br></div><div><div><br></div>-- <br><div><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352" target="_blank">+1-510-495-2352</a></div><div>Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900" target="_blank">+1-510-486-6900</a></div></font></div></div></div>
</div></font></span></div>
<br></div></div>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18952.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/18952.php</a><br></blockquote></div><br></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></div></div>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18953.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/18953.php</a><br></blockquote></div><span><br><br clear="all"><div><br></div>-- <br><div><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352" target="_blank">+1-510-495-2352</a></div><div>Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900" target="_blank">+1-510-486-6900</a></div></font></div></div></div>
</span></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></div></div>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18954.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/18954.php</a><br></blockquote></div><br></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18955.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/18955.php</a><br></blockquote></div><br><br clear="all"><div><br></div>-- <br><div class="gmail_signature"><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: +1-510-495-2352</div><div>Lawrence Berkeley National Laboratory     Fax: +1-510-486-6900</div></font></div></div></div>
</div>

