Good idea :)!<span></span><br><br>среда, 7 мая 2014 г. пользователь Ralph Castain  написал:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div style="word-wrap:break-word">
Jeff actually had a useful suggestion (gasp!).He proposed that we separate the PMI-1 and PMI-2 codes into separate components so you could select them at runtime. Thus, we would build both (assuming both PMI-1 and 2 libs are found), default to PMI-1, but users could select to try PMI-2. If the PMI-2 component failed, we would emit a show_help indicating that they probably have a broken PMI-2 version and should try PMI-1.<div>
<br></div><div>Make sense?</div><div>Ralph</div><div><br><div><div>On May 7, 2014, at 8:00 AM, Ralph Castain &lt;<a>rhc@open-mpi.org</a>&gt; wrote:</div><br><blockquote type="cite"><div style="word-wrap:break-word"><br><div>
<div>On May 7, 2014, at 7:56 AM, Joshua Ladd &lt;<a>jladd.mlnx@gmail.com</a>&gt; wrote:</div><br><blockquote type="cite"><div dir="ltr">Ah, I see. Sorry for the reactionary comment - but this feature falls squarely within my &quot;jurisdiction&quot;, and we&#39;ve invested a lot in improving OMPI jobstart under srun. <br>
<br>That being said (now that I&#39;ve taken some deep breaths and carefully read your original email :)), what you&#39;re proposing isn&#39;t a bad idea. I think it would be good to maybe add a &quot;--with-pmi2&quot; flag to configure since &quot;--with-pmi&quot; automagically uses PMI2 if it finds the header and lib. This way, we could experiment with PMI1/PMI2 without having to rebuild SLURM or hack the installation. <br>
</div></blockquote><div><br></div>That would be a much simpler solution than what Artem proposed (off-list) where we would try PMI2 and then if it didn&#39;t work try to figure out how to fall back to PMI1. I&#39;ll add this for now, and if Artem wants to try his more automagic solution and can make it work, then we can reconsider that option.</div>
<div><br></div><div>Thanks</div><div>Ralph</div><div><br><blockquote type="cite"><div dir="ltr"><div>
<br></div>Josh  <br></div><div><br><br><div>On Wed, May 7, 2014 at 10:45 AM, Ralph Castain <span dir="ltr">&lt;<a>rhc@open-mpi.org</a>&gt;</span> wrote:<br>
<blockquote style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div style="word-wrap:break-word">Okay, then we&#39;ll just have to develop a workaround for all those Slurm releases where PMI-2 is borked :-(<div>

<br></div><div>FWIW: I think people misunderstood my statement. I specifically did *not* propose to *lose* PMI-2 support. I suggested that we change it to &quot;on-by-request&quot; instead of the current &quot;on-by-default&quot; so we wouldn&#39;t keep getting asked about PMI-2 bugs in Slurm. Once the Slurm implementation stabilized, then we could reverse that policy.</div>

<div><br></div><div>However, given that both you and Chris appear to prefer to keep it &quot;on-by-default&quot;, we&#39;ll see if we can find a way to detect that PMI-2 is broken and then fall back to PMI-1.</div><div><br>

</div><div><br><div><div><div><div>On May 7, 2014, at 7:39 AM, Joshua Ladd &lt;<a>jladd.mlnx@gmail.com</a>&gt; wrote:</div><br></div></div><blockquote type="cite">
<div><div><div dir="ltr"><div><div><div><div>Just saw this thread, and I second Chris&#39; observations: at scale we are seeing huge gains in jobstart performance with PMI2 over PMI1. We <b>CANNOT</b> loose this functionality. For competitive reasons, I cannot provide exact numbers, but let&#39;s say the difference is in the ballpark of a full order-of-magnitude on 20K ranks versus PMI1. PMI1 is completely unacceptable/unusable at scale. Certainly PMI2 still has scaling issues, but there is no contest between PMI1 and PMI2.  We (MLNX) are actively working to resolve some of the scalability issues in PMI2. <br>


<br></div>Josh<br><br></div><div>Joshua S. Ladd<br></div>Staff Engineer, HPC Software<br></div>Mellanox Technologies<br><br></div>Email: <a>joshual@mellanox.com</a><br></div>
<div>
<br><br><div>On Wed, May 7, 2014 at 4:00 AM, Ralph Castain <span dir="ltr">&lt;<a>rhc@open-mpi.org</a>&gt;</span> wrote:<br><blockquote style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">

Interesting - how many nodes were involved? As I said, the bad scaling becomes more evident at a fairly high node count.<br>
<div><br>
On May 7, 2014, at 12:07 AM, Christopher Samuel &lt;<a>samuel@unimelb.edu.au</a>&gt; wrote:<br>
<br>
&gt; -----BEGIN PGP SIGNED MESSAGE-----<br>
&gt; Hash: SHA1<br>
&gt;<br>
&gt; Hiya Ralph,<br>
&gt;<br>
&gt; On 07/05/14 14:49, Ralph Castain wrote:<br>
&gt;<br>
&gt;&gt; I should have looked closer to see the numbers you posted, Chris -<br>
&gt;&gt; those include time for MPI wireup. So what you are seeing is that<br>
&gt;&gt; mpirun is much more efficient at exchanging the MPI endpoint info<br>
&gt;&gt; than PMI. I suspect that PMI2 is not much better as the primary<br>
&gt;&gt; reason for the difference is that mpriun sends blobs, while PMI<br>
&gt;&gt; requires that everything b</div></blockquote></div></div></div></div></blockquote></div></div></div></blockquote></div></div></blockquote></div></div></blockquote></div></div></div></blockquote><br><br>-- <br>С Уважением, Поляков Артем Юрьевич<br>
Best regards, Artem Y. Polyakov<br>

