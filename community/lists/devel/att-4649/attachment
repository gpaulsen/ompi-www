<p>I am running mtt test on our &nbsp;cluster and I found error for IBM&nbsp;reduce_scatter_in_place&nbsp; test for np&gt;8</p><p>/home/USERS/lenny/OMPI_1_3_TRUNK/bin/mpirun -np 10 -H witch2 ./reduce_scatter_in_place</p><p>**WARNING**]: MPI_COMM_WORLD rank 4, file reduce_scatter_in_place.c:80:<br>
bad answer (0) at index 0 of 1000 (should be 40000)<br>[**WARNING**]: MPI_COMM_WORLD rank 3, file reduce_scatter_in_place.c:80:<br>[**WARNING**]: MPI_COMM_WORLD rank 2, file reduce_scatter_in_place.c:80:<br>bad answer (20916) at index 0 of 1000 (should be 20000)<br>
bad answer (0) at index 0 of 1000 (should be 30000)<br>[**WARNING**]: MPI_COMM_WORLD rank 5, file reduce_scatter_in_place.c:80:<br>bad answer (0) at index 0 of 1000 (should be 50000)<br>[**WARNING**]: MPI_COMM_WORLD rank 6, file reduce_scatter_in_place.c:80:<br>
bad answer (0) at index 0 of 1000 (should be 60000)<br>[**WARNING**]: MPI_COMM_WORLD rank 7, file reduce_scatter_in_place.c:80:<br>[**WARNING**]: MPI_COMM_WORLD rank 8, file reduce_scatter_in_place.c:80:<br>bad answer (0) at index 0 of 1000 (should be 80000)<br>
bad answer (0) at index 0 of 1000 (should be 70000)<br>[**WARNING**]: MPI_COMM_WORLD rank 9, file reduce_scatter_in_place.c:80:<br>bad answer (0) at index 0 of 1000 (should be 90000)<br>[**WARNING**]: MPI_COMM_WORLD rank 0, file reduce_scatter_in_place.c:80:<br>
bad answer (-516024720) at index 0 of 1000 (should be 0)<br>[**WARNING**]: MPI_COMM_WORLD rank 1, file reduce_scatter_in_place.c:80:<br>bad answer (28112) at index 0 of 1000 (should be 10000)<br><br>I think that the error is in the test itself.</p>
<p>--- sources/test_get__ibm/ibm/collective/reduce_scatter_in_place.c      2005-09-28 18:11:37.000000000 +0300<br>+++ installs/LKcC/tests/ibm/ibm/collective/reduce_scatter_in_place.c    2008-09-16 19:32:48.000000000 +0300<br>
@@ -64,7 +64,7 @@ int main(int argc, char **argv)<br>&nbsp;       ompitest_error(__FILE__, __LINE__, &quot;Doh!  Rank %d was not able to allocate enough memory.  MPI test aborted!\n&quot;, myself);<br>&nbsp;   }<br><br>-   for (j = 1; j &lt;= MAXLEN;  j *= 10)  {<br>
+   for (j = 1; j &lt; MAXLEN;  j *= 10)  {<br>&nbsp;       for (i = 0; i &lt; tasks; i++) {<br>&nbsp;           recvcounts[i] = j;<br>&nbsp;       }<br><br></p><p>I am not sure if this is right fix and who can review/commit it to the test trunk.</p>
<p></p><p>Best regards</p><p>Lenny.</p><p></p>

