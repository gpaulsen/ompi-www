<html><head><meta http-equiv="Content-Type" content="text/html charset=utf-8"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class="">Apologies - didn’t mean to make it sound that way. Just wanted to inform a new person on the recommended procedures in case they were unaware of them.<div class=""><br class=""></div><div class=""><br class=""><div><blockquote type="cite" class=""><div class="">On Apr 7, 2016, at 11:07 AM, George Bosilca &lt;<a href="mailto:bosilca@icl.utk.edu" class="">bosilca@icl.utk.edu</a>&gt; wrote:</div><br class="Apple-interchange-newline"><div class=""><div dir="ltr" class="">Let's not blown this out of proportion, it was nothing more than a typo pinpointed and fixed in a matter of seconds.<div class=""><br class=""></div><div class="">&nbsp; George.</div><div class=""><br class=""></div></div><div class="gmail_extra"><br class=""><div class="gmail_quote">On Thu, Apr 7, 2016 at 1:58 PM, Ralph Castain <span dir="ltr" class="">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank" class="">rhc@open-mpi.org</a>&gt;</span> wrote:<br class=""><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Just as a suggestion: please express such changes in the form of a Pull Request instead of a direct commit to avoid getting such mistakes into the code base.<br class="">
<br class="">
I’m not advocating it for truly trivial stuff - but changing the thread_unlock to an OB1 call probably should be given a chance for comment<br class="">
<div class=""><div class="h5"><br class="">
&gt; On Apr 7, 2016, at 10:45 AM, Nathan Hjelm &lt;<a href="mailto:hjelmn@lanl.gov" class="">hjelmn@lanl.gov</a>&gt; wrote:<br class="">
&gt;<br class="">
&gt;<br class="">
&gt; Hah, just caught that as well. Commented on the commit on<br class="">
&gt; github. Definitely looks wrong.<br class="">
&gt;<br class="">
&gt; -Nathan<br class="">
&gt;<br class="">
&gt; On Thu, Apr 07, 2016 at 05:43:17PM +0000, Dave Goodell (dgoodell) wrote:<br class="">
&gt;&gt; [inline]<br class="">
&gt;&gt;<br class="">
&gt;&gt; On Apr 7, 2016, at 12:53 PM, <a href="mailto:gitdub@crest.iu.edu" class="">gitdub@crest.iu.edu</a> wrote:<br class="">
&gt;&gt;&gt;<br class="">
&gt;&gt;&gt; This is an automated email from the git hooks/post-receive script. It was<br class="">
&gt;&gt;&gt; generated because a ref change was pushed to the repository containing<br class="">
&gt;&gt;&gt; the project "open-mpi/ompi".<br class="">
&gt;&gt;&gt;<br class="">
&gt;&gt;&gt; The branch, master has been updated<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; &nbsp; via&nbsp; 92290b94e0584271d6459a6ab5923a04125e23be (commit)<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; &nbsp;from&nbsp; 7cdf50533cf940258072f70231a4a456fa73d2f8 (commit)<br class="">
&gt;&gt;&gt;<br class="">
&gt;&gt;&gt; Those revisions listed above that are new to this repository have<br class="">
&gt;&gt;&gt; not appeared on any other notification email; so we list those<br class="">
&gt;&gt;&gt; revisions in full, below.<br class="">
&gt;&gt;&gt;<br class="">
&gt;&gt;&gt; - Log -----------------------------------------------------------------<br class="">
&gt;&gt;&gt; <a href="https://github.com/open-mpi/ompi/commit/92290b94e0584271d6459a6ab5923a04125e23be" rel="noreferrer" target="_blank" class="">https://github.com/open-mpi/ompi/commit/92290b94e0584271d6459a6ab5923a04125e23be</a><br class="">
&gt;&gt;&gt;<br class="">
&gt;&gt;&gt; commit 92290b94e0584271d6459a6ab5923a04125e23be<br class="">
&gt;&gt;&gt; Author: Thananon Patinyasakdikul &lt;<a href="mailto:tpatinya@utk.edu" class="">tpatinya@utk.edu</a>&gt;<br class="">
&gt;&gt;&gt; Date:&nbsp; &nbsp;Wed Apr 6 14:26:04 2016 -0400<br class="">
&gt;&gt;&gt;<br class="">
&gt;&gt;&gt;&nbsp; &nbsp;Fixed Coverity reports 1358014-1358018 (DEADCODE and CHECK_RETURN)<br class="">
&gt;&gt;&gt;<br class="">
&gt;&gt;&gt; diff --git a/ompi/mca/pml/ob1/pml_ob1_recvreq.c b/ompi/mca/pml/ob1/pml_ob1_recvreq.c<br class="">
&gt;&gt;&gt; index 9d1d402..a912bc3 100644<br class="">
&gt;&gt;&gt; --- a/ompi/mca/pml/ob1/pml_ob1_recvreq.c<br class="">
&gt;&gt;&gt; +++ b/ompi/mca/pml/ob1/pml_ob1_recvreq.c<br class="">
&gt;&gt;&gt; @@ -106,7 +106,7 @@ static int mca_pml_ob1_recv_request_cancel(struct ompi_request_t* ompi_request,<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; /* The rest should be protected behind the match logic lock */<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; OB1_MATCHING_LOCK(&amp;ob1_comm-&gt;matching_lock);<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; if( true == request-&gt;req_match_received ) { /* way to late to cancel this one */<br class="">
&gt;&gt;&gt; -&nbsp; &nbsp; &nbsp; &nbsp; OPAL_THREAD_UNLOCK(&amp;ob1_comm-&gt;matching_lock);<br class="">
&gt;&gt;&gt; +&nbsp; &nbsp; &nbsp; &nbsp; OB1_MATCHING_LOCK(&amp;ob1_comm-&gt;matching_lock);<br class="">
&gt;&gt;<br class="">
&gt;&gt; I've only taken a cursory look, but this looks very wrong to me.&nbsp; Shouldn't you be using the "OB1_MATCHING_UNLOCK" macro instead?&nbsp; Doubly locking the lock will almost certainly lead to sadness.<br class="">
&gt;&gt;<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; &nbsp; &nbsp; assert( OMPI_ANY_TAG != ompi_request-&gt;req_status.MPI_TAG ); /* not matched isn't it */<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; &nbsp; &nbsp; return OMPI_SUCCESS;<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; }<br class="">
&gt;&gt;&gt; diff --git a/opal/mca/btl/tcp/btl_tcp.h b/opal/mca/btl/tcp/btl_tcp.h<br class="">
&gt;&gt;&gt; index f2c8917..7e9d726 100644<br class="">
&gt;&gt;&gt; --- a/opal/mca/btl/tcp/btl_tcp.h<br class="">
&gt;&gt;&gt; +++ b/opal/mca/btl/tcp/btl_tcp.h<br class="">
&gt;&gt;&gt; @@ -96,7 +96,7 @@ extern int mca_btl_tcp_progress_thread_trigger;<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; do {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; &nbsp; &nbsp; if(0 &lt; mca_btl_tcp_progress_thread_trigger) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\<br class="">
&gt;&gt;&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; opal_event_t* _event = (opal_event_t*)(event);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \<br class="">
&gt;&gt;&gt; -&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; opal_fd_write( mca_btl_tcp_pipe_to_progress[1], sizeof(opal_event_t*), \<br class="">
&gt;&gt;&gt; +&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (void) opal_fd_write( mca_btl_tcp_pipe_to_progress[1], sizeof(opal_event_t*), \<br class="">
&gt;&gt;<br class="">
&gt;&gt; Seems better to capture the return value and at least put an assert() on it if it fails, though admittedly things are very screwed up if you overrun the pipe.<br class="">
&gt;&gt;<br class="">
&gt;&gt; -Dave<br class="">
&gt;&gt;<br class="">
&gt;&gt; _______________________________________________<br class="">
&gt;&gt; devel mailing list<br class="">
&gt;&gt; <a href="mailto:devel@open-mpi.org" class="">devel@open-mpi.org</a><br class="">
&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">
&gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/04/18739.php" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/04/18739.php</a><br class="">
&gt; _______________________________________________<br class="">
&gt; devel mailing list<br class="">
&gt; <a href="mailto:devel@open-mpi.org" class="">devel@open-mpi.org</a><br class="">
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">
</div></div>&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/04/18740.php" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/04/18740.php</a><br class="">
<span class=""><br class="">
_______________________________________________<br class="">
devel mailing list<br class="">
<a href="mailto:devel@open-mpi.org" class="">devel@open-mpi.org</a><br class="">
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">
</span>Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/04/18741.php" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/04/18741.php</a></blockquote></div><br class=""></div>
_______________________________________________<br class="">devel mailing list<br class=""><a href="mailto:devel@open-mpi.org" class="">devel@open-mpi.org</a><br class="">Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/devel<br class="">Link to this post: http://www.open-mpi.org/community/lists/devel/2016/04/18742.php</div></blockquote></div><br class=""></div></body></html>
