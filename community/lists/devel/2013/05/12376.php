<?
$subject_val = "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk";
include("../../include/msg-header.inc");
?>
<!-- received="Tue May  7 15:33:15 2013" -->
<!-- isoreceived="20130507193315" -->
<!-- sent="Tue, 7 May 2013 12:33:07 -0700" -->
<!-- isosent="20130507193307" -->
<!-- name="Ralph Castain" -->
<!-- email="rhc_at_[hidden]" -->
<!-- subject="Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk" -->
<!-- id="CEE2F7C0-11EE-43E8-8ABE-A69E326492C3_at_open-mpi.org" -->
<!-- charset="us-ascii" -->
<!-- inreplyto="alpine.OSX.2.01.1305071356390.5512_at_tigger.ornl.gov" -->
<!-- expires="-1" -->
<div class="center">
<table border="2" width="100%" class="links">
<tr>
<th><a href="date.php">Date view</a></th>
<th><a href="index.php">Thread view</a></th>
<th><a href="subject.php">Subject view</a></th>
<th><a href="author.php">Author view</a></th>
</tr>
</table>
</div>
<p class="headers">
<strong>Subject:</strong> Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk<br>
<strong>From:</strong> Ralph Castain (<em>rhc_at_[hidden]</em>)<br>
<strong>Date:</strong> 2013-05-07 15:33:07
</p>
<ul class="links">
<!-- next="start" -->
<li><strong>Next message:</strong> <a href="12377.php">Thomas Naughton: "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk"</a>
<li><strong>Previous message:</strong> <a href="12375.php">Larry Baker: "Re: [OMPI devel] June OMPI developer's meeting"</a>
<li><strong>In reply to:</strong> <a href="12371.php">Thomas Naughton: "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk"</a>
<!-- nextthread="start" -->
<li><strong>Next in thread:</strong> <a href="12377.php">Thomas Naughton: "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk"</a>
<li><strong>Reply:</strong> <a href="12377.php">Thomas Naughton: "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk"</a>
<!-- reply="end" -->
</ul>
<hr>
<!-- body="start" -->
<p>
On May 7, 2013, at 11:34 AM, Thomas Naughton &lt;naughtont_at_[hidden]&gt; wrote:
<br>
<p><span class="quotelev1">&gt; Hi,
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Briefly, I'm Thomas.  I work at ORNL.  I changed autogen.pl on my
</span><br>
<span class="quotelev1">&gt; first commit to OMPI trunk. (Insert rookie joke here.  :-D)
</span><br>
<p>Welcome!
<br>
<p><span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; The changes in r28456 for autogen.pl were pretty basic/minor.  I
</span><br>
<span class="quotelev1">&gt; apologize for not sending a follow-up email to devel mailing list
</span><br>
<span class="quotelev1">&gt; outlining the changes -- poor netiquette on my part. :-/
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; There were four changes included in the patch.  They related
</span><br>
<span class="quotelev1">&gt; mainly to the recent changes for MCA frameworks.  I'll give a little
</span><br>
<span class="quotelev1">&gt; more description below.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Ralph, I also included your feedback and a response for #2.  Let me
</span><br>
<span class="quotelev1">&gt; know if this makes sense as I think it provides the &quot;right&quot; behavior
</span><br>
<span class="quotelev1">&gt; but want to double check.  Thanks.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 1) Add ifdef guard to project's autogenerated &quot;frameworks.h&quot; header
</span><br>
<span class="quotelev2">&gt;&gt;    file, e.g., &quot;opal/inlude/opal/frameworks.h&quot; would have
</span><br>
<span class="quotelev2">&gt;&gt;    &quot;OPAL_FRAMEWORKS_H&quot;.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; This one simply adds and ifdef to top of auto-generated file, so if code
</span><br>
<span class="quotelev1">&gt; includes the &quot;framework.h&quot; file you avoid multiple includes of same file.
</span><br>
<span class="quotelev1">&gt; This is generic to the given project so the &quot;opal/&quot; project would generate
</span><br>
<span class="quotelev1">&gt; something like:
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt;  $ cat opal/include/opal/frameworks.h
</span><br>
<span class="quotelev1">&gt;  /*
</span><br>
<span class="quotelev1">&gt;   * This file is autogenerated by autogen.pl. Do not edit this file by hand.
</span><br>
<span class="quotelev1">&gt;   */
</span><br>
<span class="quotelev1">&gt;  #ifndef OPAL_FRAMEWORKS_H
</span><br>
<span class="quotelev1">&gt;  #define OPAL_FRAMEWORKS_H
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt;  #include &lt;opal/mca/base/mca_base_framework.h&gt;
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt;  extern mca_base_framework_t opal_backtrace_base_framework;
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt;     ...&lt;snip&gt;...
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt;  #endif /* OPAL_FRAMEWORKS_H */
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; This would also be done for &quot;ompi/&quot; and &quot;orte/&quot; project directories.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<p>No issues from anyone that I heard.
<br>
<p><span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 2) Avoid adding &quot;ignored&quot; frameworks to the autogenerated &quot;frameworks.h&quot;
</span><br>
<span class="quotelev2">&gt;&gt;    header file.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; This simply applies the same ignored() function that is used elsewhere in
</span><br>
<span class="quotelev1">&gt; the autogen.pl script for omitting &quot;ignored&quot; MCA directories from the
</span><br>
<span class="quotelev1">&gt; processing.  This just picks up the &quot;.ompi_ignore&quot; (and/or &quot;.ompi_unignore) files.   The intent being that if you ignore a component (subdir) that will
</span><br>
<span class="quotelev1">&gt; be removed from the list, but you could also remove an entire framework if
</span><br>
<span class="quotelev1">&gt; you put the ignore file in the top-level of the framework.
</span><br>
<p>That is new - I would suggest not doing that as it behaves differently than you might expect. The .ompi_ignore in a component prevents that component from building at all, so it won't ever be opened etc. However, the framework *must* build the base code no matter what - and that means the framework will be opened, selected, and closed at the minimum.
<br>
<p>I would prefer we keep ompi_ignore cleanly defined. You can ignore all components by simply putting --enable-mca-no-build=&lt;framework&gt; on your configure line.
<br>
<p><span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; The intent being that if for whatever reason you ignore a framework in the
</span><br>
<span class="quotelev1">&gt; &quot;${project}/mca/&quot; space, you will not have it automatically show up in the
</span><br>
<span class="quotelev1">&gt; project's &quot;frameworks.h&quot; file.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; On Tue, 7 May 2013, Ralph Castain wrote:
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev3">&gt;&gt;&gt; We use the frameworks.h file to &quot;discover&quot; the frameworks in
</span><br>
<span class="quotelev3">&gt;&gt;&gt; ompi_info.  Even if no components are built for that framework,
</span><br>
<span class="quotelev3">&gt;&gt;&gt; there still are MCA params relating to the base of that framework.
</span><br>
<span class="quotelev3">&gt;&gt;&gt; Sounds silly, I know - but there may be reasons to access those
</span><br>
<span class="quotelev3">&gt;&gt;&gt; params - e.g., to set verbosity to verify that no components are
</span><br>
<span class="quotelev3">&gt;&gt;&gt; being selected.
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev3">&gt;&gt;&gt; I think we need those frameworks to be listed...
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Ok, I didn't realize the 'ompi_info' aspect.  Good to know.
</span><br>
<span class="quotelev1">&gt; However, I think honouring the ignore behavior is good in this case
</span><br>
<span class="quotelev1">&gt; b/c if you drop an ignore file in a framework, you won't get any
</span><br>
<span class="quotelev1">&gt; other autogen touches (i.e., no Makefile's are autogenerated).  So
</span><br>
<span class="quotelev1">&gt; it seems that having no Makefiles but including the framework in the
</span><br>
<span class="quotelev1">&gt; &quot;framework.h&quot; would break regardless.  Again, this is more of a
</span><br>
<span class="quotelev1">&gt; safety guard.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<p>Actually, I disagree. As stated above, the framework will *always* build the base code and be opened, selected, and closed - so you at least need access to the verbosity parameter so you can verify those operations. Keeping it in ompi_info is of value.
<br>
<p><span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 3) Avoid adding non-MCA projects to the autogenerated
</span><br>
<span class="quotelev2">&gt;&gt; 'mca_project_list', which maintains existing support for &quot;projects&quot; with new MCA framework enhancements.  Moves this down to mca_run_global().
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; This was just a bit of shifting code and didn't sound like there was
</span><br>
<span class="quotelev1">&gt; any discussion on this point.  This is a &quot;do no harm&quot; factor to
</span><br>
<span class="quotelev1">&gt; support pre-existing functionality.  The gist is that if you have a
</span><br>
<span class="quotelev1">&gt; &quot;project&quot; in the build directory that doesn't have an MCA directory structure, just avoid adding it to the list of MCA projects.
</span><br>
<p>No objections
<br>
<p><span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 4) Add small loop at end to add projects with a &quot;config/&quot; subdir
</span><br>
<span class="quotelev2">&gt;&gt;   to the list of includes for 'autoreconf'.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; This again is a &quot;do no harm&quot; factor to support pre-exising
</span><br>
<span class="quotelev1">&gt; functionality.  If you have a &quot;${project}/config/&quot; directory.  This
</span><br>
<span class="quotelev1">&gt; appends  the &quot;-I ${project}/config/&quot; to the autoreconf list.
</span><br>
<span class="quotelev1">&gt; If you do not have a &quot;${project}/config/&quot; dir, there is no change.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<p>No objections - I only flagged it because it made the patch appear to be derived from an old version of the trunk.
<br>
<p><span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; Again, I hope that gives more context/description to the changes
</span><br>
<span class="quotelev1">&gt; included in the autogen.pl patch.  In the future, I'll try to do
</span><br>
<span class="quotelev1">&gt; a better job of sending a heads up to the devel list.
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<p>Appreciated the details!
<br>
Ralph
<br>
<p><p><span class="quotelev1">&gt; Thanks,
</span><br>
<span class="quotelev1">&gt; --tjn
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; _________________________________________________________________________
</span><br>
<span class="quotelev1">&gt;  Thomas Naughton                                      naughtont_at_[hidden]
</span><br>
<span class="quotelev1">&gt;  Research Associate                                   (865) 576-4184
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev1">&gt; On Tue, 7 May 2013, Ralph Castain wrote:
</span><br>
<span class="quotelev1">&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; Crud - it just struck me that you don't want to do one thing in that patch.
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev3">&gt;&gt;&gt; + Avoid adding &quot;ignored&quot; frameworks to the autogenerated &quot;frameworks.h&quot;
</span><br>
<span class="quotelev3">&gt;&gt;&gt; header file.
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; We use the frameworks.h file to &quot;discover&quot; the frameworks in ompi_info. Even if no components are built for that framework, there still are MCA params relating to the base of that framework. Sounds silly, I know - but there may be reasons to access those params - e.g., to set verbosity to verify that no components are being selected.
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; I think we need those frameworks to be listed...
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; On May 7, 2013, at 6:49 AM, Ralph Castain &lt;rhc_at_[hidden]&gt; wrote:
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev3">&gt;&gt;&gt; On May 7, 2013, at 6:19 AM, Jeff Squyres (jsquyres) &lt;jsquyres_at_[hidden]&gt; wrote:
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; On May 6, 2013, at 10:39 PM, Ralph Castain &lt;rhc_at_[hidden]&gt; wrote:
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev1">&gt;&gt;&gt;&gt;&gt; Could someone help me out a bit here:
</span><br>
<span class="quotelev1">&gt;&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev1">&gt;&gt;&gt;&gt;&gt; * I'm unaware of any mechanism for &quot;ignoring&quot; an entire framework. Was something added for that purpose?
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; It's been in autogen.pl for a while -- check out the end of mca_process_framework() in autogen.pl.
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev3">&gt;&gt;&gt; I see - you didn't mean &quot;ignore the framework&quot;, you meant &quot;ignore all components in this framework&quot;. The two are not the same thing. Ignoring the framework would mean that we were somehow going to skip the base as well, which couldn't possibly work. We've talked about that before and never could figure out how to null-out all the framework level functions.
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev1">&gt;&gt;&gt;&gt;&gt; * What &quot;non-MCA&quot; projects are in our repository? Everything appears to be based on MCA plugins.
</span><br>
<span class="quotelev1">&gt;&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev1">&gt;&gt;&gt;&gt;&gt; * Looking at Trac, we eliminated all project/config directories when we did the OMPI-RTE abstraction. So what are we looping across at the end of autogen?
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; Yes, we did.  ORNL specifically asked me/Nathan off-list if they could add this loop in, because they have some off-trunk repos (e.g., STCI) that both still use the config/ directory stuff and have non-MCA projects.  I didn't see any harm in these things; e.g., the loop only adds -I if the directory exists.  I.e., I saw it as being an attempt to be friendly to those who are trying to use our lower laters (ORTE and/or OPAL) with non-OMPI projects.  I thought this fit in well with the move-the-BTLs-down-to-OPAL philosophy.
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; That being said, if others disagree -- e.g., Ralph has a valid point: this is to help projects that are outside of our trunk -- let's discuss.  This will probably be a useful topic to discuss today on the teleconf.
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev3">&gt;&gt;&gt; I don't object to it being there as it is a &quot;no-op&quot; for us - there was just no explanation given as to why this was being done. So it looked like a patch based on an old version of the trunk.
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; --
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; Jeff Squyres
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; jsquyres_at_[hidden]
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/">http://www.cisco.com/web/about/doing_business/legal/cri/</a>
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; 
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; _______________________________________________
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; devel mailing list
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; devel_at_[hidden]
</span><br>
<span class="quotelev4">&gt;&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a>
</span><br>
<span class="quotelev3">&gt;&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev2">&gt;&gt; _______________________________________________
</span><br>
<span class="quotelev2">&gt;&gt; devel mailing list
</span><br>
<span class="quotelev2">&gt;&gt; devel_at_[hidden]
</span><br>
<span class="quotelev2">&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a>
</span><br>
<span class="quotelev2">&gt;&gt; 
</span><br>
<span class="quotelev1">&gt; _______________________________________________
</span><br>
<span class="quotelev1">&gt; devel mailing list
</span><br>
<span class="quotelev1">&gt; devel_at_[hidden]
</span><br>
<span class="quotelev1">&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a>
</span><br>
<!-- body="end" -->
<hr>
<ul class="links">
<!-- next="start" -->
<li><strong>Next message:</strong> <a href="12377.php">Thomas Naughton: "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk"</a>
<li><strong>Previous message:</strong> <a href="12375.php">Larry Baker: "Re: [OMPI devel] June OMPI developer's meeting"</a>
<li><strong>In reply to:</strong> <a href="12371.php">Thomas Naughton: "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk"</a>
<!-- nextthread="start" -->
<li><strong>Next in thread:</strong> <a href="12377.php">Thomas Naughton: "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk"</a>
<li><strong>Reply:</strong> <a href="12377.php">Thomas Naughton: "Re: [OMPI devel] [OMPI svn] svn:open-mpi r28456 - trunk"</a>
<!-- reply="end" -->
</ul>
<div class="center">
<table border="2" width="100%" class="links">
<tr>
<th><a href="date.php">Date view</a></th>
<th><a href="index.php">Thread view</a></th>
<th><a href="subject.php">Subject view</a></th>
<th><a href="author.php">Author view</a></th>
</tr>
</table>
</div>
<!-- trailer="footer" -->
<? include("../../include/msg-footer.inc") ?>
