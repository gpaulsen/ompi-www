<div dir="ltr"><div>Let me know if Nadia can help here, Ralph.<br><br></div>Josh<br></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Fri, Sep 12, 2014 at 9:31 AM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div style="word-wrap:break-word"><br><div><span class=""><div>On Sep 12, 2014, at 5:45 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@gmail.com" target="_blank">gilles.gouaillardet@gmail.com</a>&gt; wrote:</div><br><blockquote type="cite"><div style="font-family:Helvetica;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px"><div dir="ltr">Ralph,<br><div class="gmail_extra"><br><div class="gmail_quote">On Fri, Sep 12, 2014 at 10:54 AM, Ralph Castain<span> </span><span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span><span> </span>wrote:<br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">The design is supposed to be that each node knows precisely how many daemons are involved in each collective, and who is going to talk to them.</blockquote><div><br></div><div>ok, but in the design does not ensure that things will happen in the right order :</div><div>- enter the allgather</div><div>- receive data from the daemon at distance 1</div><div>- receive data from the daemon at distance 2</div><div>- and so on</div><div><br></div><div>with current implementation when 2 daemons are involved, if a daemon enters the allgather after it received data from the peer, then the mpi processes local to this daemon will hang</div><div><br></div><div>with 4 nodes, it got trickier :</div><div>0 enter allgather and send a message to 1</div><div>1 receive the message and send to 2 but with data from 0 only</div><div>/* 1 did not enter the allgather, so its data cannot be sent to 2 */</div></div></div></div></div></blockquote><div><br></div></span>It&#39;s just a bug in the rcd logic, Gilles. I&#39;ll take a look and get it fixed - just don&#39;t have time right now</div><div><br><blockquote type="cite"><div style="font-family:Helvetica;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px"><div><div class="h5"><div dir="ltr"><div class="gmail_extra"><div class="gmail_quote"><div><br></div><div>this issue did not occur before the persistent receive :</div><div>no receive was posted if the daemon did not enter the allgather </div><div><br></div><div><br></div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">The signature contains the info required to ensure the receiver knows which collective this message relates to, and just happens to also allow them to lookup the number of daemons involved (the base function takes care of that for them).<br><br></blockquote><div> </div><div>ok too, this issue was solved with the persistent receive</div><div><br></div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">So there is no need for a &quot;pending&quot; list - if you receive a message about a collective you don&#39;t yet know about, you just put it on the ongoing collective list. You should only receive it if you are going to be involved - i.e., you have local procs that are going to participate. So you wait until your local procs participate, and then pass your collected bucket along.<br><br></blockquote><div>ok, i did something similar</div><div>(e.g. pass all the available data)</div><div>some data might be passed twice, but that might not be an issue</div><div> </div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">I suspect the link to the local procs isn&#39;t being correctly dealt with, else you couldn&#39;t be hanging. Or the rcd isn&#39;t correctly passing incoming messages to the base functions to register the collective.<br><br>I&#39;ll look at it over the weekend and can resolve it then.<br><div><div><br></div></div></blockquote><div><br></div><div> the attached patch is an illustration of what i was trying to explain.</div><div>coll-&gt;nreported is used by rcd as a bitmask of the received messages</div><div>(bit 0 is for the local daemon, bit n for the daemon at distance n)</div><div><br></div><div>i was still debugging a race condition :</div><div>if daemons 2 and 3 enter the allgather at the send time, they will sent a message to each other at the same time and rml fails establishing the connection.  i could not find whether this is linked to my changes...</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles</div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div><div><br>On Sep 11, 2014, at 5:23 PM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@iferc.org" target="_blank">gilles.gouaillardet@iferc.org</a>&gt; wrote:<br><br>&gt; Ralph,<br>&gt;<br>&gt; you are right, this was definetly not the right fix (at least with 4<br>&gt; nodes or more)<br>&gt;<br>&gt; i finally understood what is going wrong here :<br>&gt; to make it simple, the allgather recursive doubling algo is not<br>&gt; implemented with<br>&gt; MPI_Recv(...,peer,...) like functions but with<br>&gt; MPI_Recv(...,MPI_ANY_SOURCE,...) like functions<br>&gt; and that makes things slightly more complicated :<br>&gt; right now :<br>&gt; - with two nodes : if node 1 is late, it gets stuck in the allgather<br>&gt; - with four nodes : if node 0 is first, then node 2 and 3 while node 1<br>&gt; is still late, then node 0<br>&gt; will likely leaves the allgather though it did not receive anything<br>&gt; from  node 1<br>&gt; - and so on<br>&gt;<br>&gt; i think i can fix that from now<br>&gt;<br>&gt; Cheers,<br>&gt;<br>&gt; Gilles<br>&gt;<br>&gt; On 2014/09/11 23:47, Ralph Castain wrote:<br>&gt;&gt; Yeah, that&#39;s not the right fix, I&#39;m afraid. I&#39;ve made the direct component the default again until I have time to dig into this deeper.<br>&gt;&gt;<br>&gt;&gt; On Sep 11, 2014, at 4:02 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@iferc.org" target="_blank">gilles.gouaillardet@iferc.org</a>&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Ralph,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; the root cause is when the second orted/mpirun runs rcd_finalize_coll,<br>&gt;&gt;&gt; it does not invoke pmix_server_release<br>&gt;&gt;&gt; because allgather_stub was not previously invoked since the the fence<br>&gt;&gt;&gt; was not yet entered.<br>&gt;&gt;&gt; /* in rcd_finalize_coll, coll-&gt;cbfunc is NULL */<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; the attached patch is likely not the right fix, it was very lightly<br>&gt;&gt;&gt; tested, but so far, it works for me ...<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Gilles<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On 2014/09/11 16:11, Gilles Gouaillardet wrote:<br>&gt;&gt;&gt;&gt; Ralph,<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; things got worst indeed :-(<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; now a simple hello world involving two hosts hang in mpi_init.<br>&gt;&gt;&gt;&gt; there is still a race condition : if a tasks a call fence long after task b,<br>&gt;&gt;&gt;&gt; then task b will never leave the fence<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; i ll try to debug this ...<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Gilles<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; On 2014/09/11 2:36, Ralph Castain wrote:<br>&gt;&gt;&gt;&gt;&gt; I think I now have this fixed - let me know what you see.<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; On Sep 9, 2014, at 6:15 AM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; Yeah, that&#39;s not the correct fix. The right way to fix it is for all three components to have their own RML tag, and for each of them to establish a persistent receive. They then can use the signature to tell which collective the incoming message belongs to.<br>&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; I&#39;ll fix it, but it won&#39;t be until tomorrow I&#39;m afraid as today is shot.<br>&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; On Sep 9, 2014, at 3:10 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@iferc.org" target="_blank">gilles.gouaillardet@iferc.org</a>&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Folks,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Since r32672 (trunk), grpcomm/rcd is the default module.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; the attached spawn.c test program is a trimmed version of the<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; spawn_with_env_vars.c test case<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; from the ibm test suite.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; when invoked on two nodes :<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; - the program hangs with -np 2<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; - the program can crash with np &gt; 2<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; error message is<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; [node0:30701] [[42913,0],0] TWO RECEIVES WITH SAME PEER [[42913,0],1]<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; AND TAG -33 - ABORTING<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; here is my full command line (from node0) :<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; mpirun -host node0,node1 -np 2 --oversubscribe --mca btl tcp,self --mca<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; coll ^ml ./spawn<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; a simple workaround is to add the following extra parameter to the<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; mpirun command line :<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; --mca grpcomm_rcd_priority 0<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; my understanding it that the race condition occurs when all the<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; processes call MPI_Finalize()<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; internally, the pmix module will have mpirun/orted issue two ALLGATHER<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; involving mpirun and orted<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; (one job 1 aka the parent, and one for job 2 aka the spawned tasks)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; the error message is very explicit : this is not (currently) supported<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; i wrote the attached rml.patch which is really a workaround and not a fix :<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; in this case, each job will invoke an ALLGATHER but with a different tag<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; /* that works for a limited number of jobs only */<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; i did not commit this patch since this is not a fix, could someone<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; (Ralph ?) please review the issue and comment ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Gilles<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &lt;spawn.c&gt;&lt;rml.patch&gt;_______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; devel mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<span> </span><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15780.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15780.php</a><br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; devel mailing list<br>&gt;&gt;&gt;&gt;&gt;<span> </span><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>&gt;&gt;&gt;&gt;&gt; Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>&gt;&gt;&gt;&gt;&gt; Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15794.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15794.php</a><br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; devel mailing list<br>&gt;&gt;&gt;&gt;<span> </span><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>&gt;&gt;&gt;&gt; Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>&gt;&gt;&gt;&gt; Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15804.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15804.php</a><br>&gt;&gt;&gt; &lt;rml2.patch&gt;_______________________________________________<br>&gt;&gt;&gt; devel mailing list<br>&gt;&gt;&gt;<span> </span><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>&gt;&gt;&gt; Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>&gt;&gt;&gt; Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15805.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15805.php</a><br>&gt;&gt; _______________________________________________<br>&gt;&gt; devel mailing list<br>&gt;&gt;<span> </span><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>&gt;&gt; Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>&gt;&gt; Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15810.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15810.php</a><br>&gt;<br>&gt; _______________________________________________<br>&gt; devel mailing list<br>&gt;<span> </span><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>&gt; Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>&gt; Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15814.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15814.php</a><br><br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></div></div>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15815.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15815.php</a><br></blockquote></div><br></div></div></div></div><span>&lt;rml3.patch&gt;</span>_______________________________________________<span class=""><br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></span>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15816.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15816.php</a></div></blockquote></div><br></div><br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/09/15817.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/09/15817.php</a><br></blockquote></div><br></div>

