<html><head><meta http-equiv="Content-Type" content="text/html charset=windows-1252"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;">Odd - I'm pretty sure it does indeed build the -L argument...and indeed, it does:<div><br></div><div><div>&nbsp; &nbsp; for (nnode=0; nnode &lt; map-&gt;nodes-&gt;size; nnode++) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (NULL == (node = (orte_node_t*)opal_pointer_array_get_item(map-&gt;nodes, nnode))) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; /* if the daemon already exists on this node, then</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* don't include it</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (ORTE_FLAG_TEST(node, ORTE_NODE_FLAG_DAEMON_LAUNCHED)) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; /* otherwise, add it to the list of nodes upon which</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* we need to launch a daemon</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; &nbsp; &nbsp; opal_argv_append(&amp;nodelist_argc, &amp;nodelist_argv, node-&gt;name);</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; if (0 == opal_argv_count(nodelist_argv)) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; orte_show_help("help-plm-alps.txt", "no-hosts-in-list", true);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; rc = ORTE_ERR_FAILED_TO_START;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; goto cleanup;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; nodelist_flat = opal_argv_join(nodelist_argv, ',');</div><div>&nbsp; &nbsp; opal_argv_free(nodelist_argv);</div><div><br></div><div>&nbsp; &nbsp; /* if we are using all allocated nodes, then alps</div><div>&nbsp; &nbsp; &nbsp;* doesn't need a nodelist</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; if (map-&gt;num_new_daemons &lt; orte_num_allocated_nodes) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; opal_argv_append(&amp;argc, &amp;argv, "-L");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; opal_argv_append(&amp;argc, &amp;argv, nodelist_flat);</div><div>&nbsp; &nbsp; }</div><div><br></div><div><br></div><div>So maybe the --host option isn't working right for this environment? You could look at the setup_virtual_machine function in orte/mca/plm/base/plm_base_launch_support.c</div><div><br></div><div>Set "-mca plm_base_verbose 100 -mca ras_base_verbose 100" and it should tell you something about how it processed the allocation to define the VM.</div><div><br></div><div>There is also some oddball stuff Nathan inserted to redefine node location - maybe that is getting confused when running on partial allocations? It's in the same file, in the&nbsp;orte_plm_base_daemon_callback routine. Could be that the daemons actually are running on the nodes you specified, but think they are somewhere else.</div><div><br></div><div><br></div><div><div>On Sep 12, 2014, at 11:13 AM, Pritchard Jr., Howard &lt;<a href="mailto:howardp@lanl.gov">howardp@lanl.gov</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div lang="EN-US" link="blue" vlink="purple" style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><div class="WordSection1" style="page: WordSection1;"><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">Hi Folks,<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">So, I’ve got a testbed cray system with no batch scheduler, just use the native<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">alps both as the resource manager and as the job launcher for the orte daemons.<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">What I’m noticing is that the mpirun command and –host option, or otherwise<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">trying to specify via an mpirun way, the nodes to run the app on is ignored.<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">In this sort of environment, ORTE is going to need to figure out how to load up<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">the aprun –L list_of_nids argument, but apparently doesn’t do that.<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">Is this intended behavior?<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">Example:<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">crayadm@buffy:~/hpp&gt; mpirun -np 2 -N 1&nbsp; --debug-daemons --host nid00022,nid00021 ./my_script.sh<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">plm:alps aprun -n 2 -N 1 -cc none orted -mca orte_debug_daemons 1 -mca orte_ess_jobid 337444864 -mca orte_ess_vpid 1 -mca orte_ess_num_procs 3 -mca orte_hnp_uri 337444864.0;<a href="tcp://10.128.0.3:39190" style="color: purple; text-decoration: underline;">tcp://10.128.0.3:39190</a><o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">Daemon [[5149,0],1] checking in as pid 7398 on host 20<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">Daemon [[5149,0],1] checking in as pid 6540 on host 21<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">What’s happening is that alps is just doing its default thing of grabbing the first set of nodes it can, which on<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">my little machine starts at nid00020.<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">What I’d prefer to see with ORTE and alps is that ORTE always build the explicit –L list_of_nids<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">so that a user can control the way the orte’s are being launched, just as with using aprun directly<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">one can do either within a non alps managed batch environment and when a batch scheduler<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">is managing things and telling alps where to launch the job.<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">I had to use this –L feature a lot when debugging large customer system problems.<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">Can I assume LANL owns the alps pml component?<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;">Howard<o:p></o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><span style="font-size: 10pt; font-family: Arial, sans-serif;">-------------------------------------------------<o:p></o:p></span></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><span style="font-size: 10pt; font-family: Arial, sans-serif;">Howard Pritchard<o:p></o:p></span></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><span style="font-size: 10pt; font-family: Arial, sans-serif;">HPC-5<o:p></o:p></span></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><span style="font-size: 10pt; font-family: Arial, sans-serif;">Los Alamos National Laboratory<o:p></o:p></span></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div><div style="margin: 0in 0in 0.0001pt; font-size: 11pt; font-family: Calibri, sans-serif;"><o:p>&nbsp;</o:p></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org" style="color: purple; text-decoration: underline;">devel@open-mpi.org</a><br>Subscription:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" style="color: purple; text-decoration: underline;">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>Link to this post:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/community/lists/devel/2014/09/15820.php" style="color: purple; text-decoration: underline;">http://www.open-mpi.org/community/lists/devel/2014/09/15820.php</a></div></blockquote></div><br></div></body></html>
