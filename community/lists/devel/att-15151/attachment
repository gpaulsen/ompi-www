<div dir="ltr">these are two separate issues:<div><br></div><div>1. -x var=val (or -<span class="" id=":2df.1" tabindex="-1">mca</span> opal_base_<span class="" id=":2df.2" tabindex="-1">envlist</span> var=val) will work in the same way</div>
<div>opal_base_<span class="" id=":2df.3" tabindex="-1">envlist</span> does the same as &quot;-x&quot; and can be used in the very same fashion as -x</div><div><br></div><div>2. When list of vars is passed with help of opal_base_<span class="" id=":2df.4" tabindex="-1">envlist</span>, the escaping is possible but escaped char should differ from delimiter char.</div>
<div><br></div><div>I think -x should stay as shotrt-form alias for -<span class="" id=":2df.5" tabindex="-1">mca</span> opal_base_<span class="" id=":2df.6" tabindex="-1">envlist</span> var=val and -<span class="" id=":2df.7" tabindex="-1">mca</span> opal_base_<span class="" id=":2df.8" tabindex="-1">envlist</span> var.</div>
<div>on <span class="" id=":2df.9" tabindex="-1">dev</span> meeting it was decided to deprecate it as some point.</div><div><br></div><div><br></div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Jul 15, 2014 at 8:14 PM, Dave Goodell (dgoodell) <span dir="ltr">&lt;<a href="mailto:dgoodell@cisco.com" target="_blank">dgoodell@cisco.com</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">This commit (and the subsequent amendments to the feature) doesn&#39;t appear to support escaping the separator.  A later commit allows you to change the separator character, which helps, but AFAICS you still can&#39;t actually escape the separator itself.  That seems like a real deficiency to me...<br>

<br>
Furthermore, I really like the &quot;-x&quot; argument and I&#39;m sad to see that it&#39;s being deprecated in favor of a much clunkier syntax.  Is there a good reason we can&#39;t keep the &quot;-x&quot; syntax and only complain when there is a conflict with the mca_base_env_list variable?<br>

<br>
-Dave<br>
<br>
On Jul 8, 2014, at 7:38 PM, <a href="mailto:svn-commit-mailer@open-mpi.org">svn-commit-mailer@open-mpi.org</a> wrote:<br>
<br>
&gt; Author: jladd (Joshua Ladd)<br>
&gt; Date: 2014-07-08 20:38:25 EDT (Tue, 08 Jul 2014)<br>
&gt; New Revision: 32163<br>
&gt; URL: <a href="https://svn.open-mpi.org/trac/ompi/changeset/32163" target="_blank">https://svn.open-mpi.org/trac/ompi/changeset/32163</a><br>
&gt;<br>
&gt; Log:<br>
&gt; Opal: add a new MCA parameter that allows the user to specify a list of environment variables. This parameter will become the standard mechanism by which environment variables are set for OMPI applications replacing the -x option.<br>

&gt;<br>
&gt; mpirun ... -x env_foo1=val1 -x env_foo2 -x env_foo3=val3  should now be expressed as<br>
&gt;<br>
&gt; mpirun ... -mca mca_base_env_list env_foo1=val1+env_foo2+env_foo3=val3.<br>
&gt;<br>
&gt; The motivation for doing this is so that a list of environment variables may be set via standard MCA mechanisms such as mca parameter files, amca lists, etc.<br>
&gt;<br>
&gt; This feature was developed by Elena Shipunova and was reviewed by Josh Ladd.<br>
&gt;<br>
&gt; Text files modified:<br>
&gt;   trunk/opal/mca/base/help-mca-var.txt      |    11 ++++++++<br>
&gt;   trunk/opal/mca/base/mca_base_var.c        |    52 ++++++++++++++++++++++++++++++++++++++++<br>
&gt;   trunk/orte/tools/orterun/help-orterun.txt |    13 +++++++++<br>
&gt;   trunk/orte/tools/orterun/orterun.c        |     7 +++++<br>
&gt;   4 files changed, 82 insertions(+), 1 deletions(-)<br>
&gt;<br>
&gt; Modified: trunk/opal/mca/base/help-mca-var.txt<br>
&gt; ==============================================================================<br>
&gt; --- trunk/opal/mca/base/help-mca-var.txt      Tue Jul  8 20:10:04 2014        (r32162)<br>
&gt; +++ trunk/opal/mca/base/help-mca-var.txt      2014-07-08 20:38:25 EDT (Tue, 08 Jul 2014)      (r32163)<br>
&gt; @@ -121,3 +121,14 @@<br>
&gt;<br>
&gt;   Value:      %s<br>
&gt;   Source:     %s<br>
&gt; +#<br>
&gt; +[incorrect-env-list-param]<br>
&gt; +WARNING: The format of MCA parameter &quot;mca_base_env_list&quot; is a plus-sign (+) delimited<br>
&gt; +list of VAR=VAL and/or VAR instances, e.g.: -mca mca_base_env_list VAR1=VAL1+VAR2+VAR3=VAL3;...<br>
&gt; +If a variable, VAR, is listed but not explicitly assigned a value in the command line, VAR will<br>
&gt; +be assigned the value set in the executing environment.<br>
&gt; +<br>
&gt; +The following environment variable was listed unassigned in &quot;mca_base_env_list&quot;, but was<br>
&gt; +not found in your environment:<br>
&gt; +  Variable:             %s<br>
&gt; +  MCA variable value:   %s<br>
&gt;<br>
&gt; Modified: trunk/opal/mca/base/mca_base_var.c<br>
&gt; ==============================================================================<br>
&gt; --- trunk/opal/mca/base/mca_base_var.c        Tue Jul  8 20:10:04 2014        (r32162)<br>
&gt; +++ trunk/opal/mca/base/mca_base_var.c        2014-07-08 20:38:25 EDT (Tue, 08 Jul 2014)      (r32163)<br>
&gt; @@ -62,6 +62,7 @@<br>
&gt; static char *mca_base_var_override_file = NULL;<br>
&gt; static char *mca_base_var_file_prefix = NULL;<br>
&gt; static char *mca_base_param_file_path = NULL;<br>
&gt; +static char *mca_base_env_list = NULL;<br>
&gt; static bool mca_base_var_suppress_override_warning = false;<br>
&gt; static opal_list_t mca_base_var_file_values;<br>
&gt; static opal_list_t mca_base_var_override_values;<br>
&gt; @@ -123,6 +124,7 @@<br>
&gt; static int var_set_initial (mca_base_var_t *var);<br>
&gt; static int var_get (int vari, mca_base_var_t **var_out, bool original);<br>
&gt; static int var_value_string (mca_base_var_t *var, char **value_string);<br>
&gt; +static int mca_base_var_process_env_list(void);<br>
&gt;<br>
&gt; /*<br>
&gt;  * classes<br>
&gt; @@ -255,11 +257,61 @@<br>
&gt;         mca_base_var_initialized = true;<br>
&gt;<br>
&gt;         mca_base_var_cache_files(false);<br>
&gt; +<br>
&gt; +        /* set nesessary env variables for external usage */<br>
&gt; +        mca_base_var_process_env_list();<br>
&gt;     }<br>
&gt;<br>
&gt;     return OPAL_SUCCESS;<br>
&gt; }<br>
&gt;<br>
&gt; +static int mca_base_var_process_env_list(void)<br>
&gt; +{<br>
&gt; +    int i, ret;<br>
&gt; +    char** tokens;<br>
&gt; +    char* ptr;<br>
&gt; +    char* param, *value;<br>
&gt; +    ret = mca_base_var_register (&quot;opal&quot;, &quot;mca&quot;, &quot;base&quot;, &quot;env_list&quot;,<br>
&gt; +                                 &quot;Set SHELL env variables&quot;,<br>
&gt; +                                 MCA_BASE_VAR_TYPE_STRING, NULL, 0, 0, OPAL_INFO_LVL_3,<br>
&gt; +                                 MCA_BASE_VAR_SCOPE_READONLY, &amp;mca_base_env_list);<br>
&gt; +    if ((0 &gt; ret) || (NULL == mca_base_env_list)) {<br>
&gt; +        return OPAL_SUCCESS;<br>
&gt; +    }<br>
&gt; +    tokens = opal_argv_split(mca_base_env_list, &#39;+&#39;);<br>
&gt; +    if (NULL != tokens) {<br>
&gt; +        for (i = 0; NULL != tokens[i]; i++) {<br>
&gt; +            if (NULL == (ptr = strchr(tokens[i], &#39;=&#39;))) {<br>
&gt; +                value = getenv(tokens[i]);<br>
&gt; +                if (NULL != value) {<br>
&gt; +                    if (NULL != strchr(value, &#39;=&#39;)) {<br>
&gt; +                        param = strdup(value);<br>
&gt; +                        value = strchr(param, &#39;=&#39;);<br>
&gt; +                        *value = &#39;\0&#39;;<br>
&gt; +                        value++;<br>
&gt; +                        opal_setenv(param, value, true, &amp;environ);<br>
&gt; +                        free(param);<br>
&gt; +                    } else {<br>
&gt; +                        opal_setenv(tokens[i], value, true, &amp;environ);<br>
&gt; +                    }<br>
&gt; +                } else {<br>
&gt; +                    opal_show_help(&quot;help-mca-var.txt&quot;, &quot;incorrect-env-list-param&quot;,<br>
&gt; +                            true, tokens[i], mca_base_env_list);<br>
&gt; +                }<br>
&gt; +            } else {<br>
&gt; +                param = strdup(tokens[i]);<br>
&gt; +                value = strchr(param, &#39;=&#39;);<br>
&gt; +                *value = &#39;\0&#39;;<br>
&gt; +                value++;<br>
&gt; +                opal_setenv(param, value, true, &amp;environ);<br>
&gt; +                free(param);<br>
&gt; +            }<br>
&gt; +        }<br>
&gt; +        opal_argv_free(tokens);<br>
&gt; +    }<br>
&gt; +    return OPAL_SUCCESS;<br>
&gt; +}<br>
&gt; +<br>
&gt; static int mca_base_var_cache_files(bool rel_path_search)<br>
&gt; {<br>
&gt;     char *tmp;<br>
&gt;<br>
&gt; Modified: trunk/orte/tools/orterun/help-orterun.txt<br>
&gt; ==============================================================================<br>
&gt; --- trunk/orte/tools/orterun/help-orterun.txt Tue Jul  8 20:10:04 2014        (r32162)<br>
&gt; +++ trunk/orte/tools/orterun/help-orterun.txt 2014-07-08 20:38:25 EDT (Tue, 08 Jul 2014)      (r32163)<br>
&gt; @@ -649,4 +649,15 @@<br>
&gt; The job will now be aborted. Please check your code and/or<br>
&gt; adjust/remove the job execution time limit (as specified<br>
&gt; by MPIEXEC_TIMEOUT in your environment).<br>
&gt; -<br>
&gt; +#<br>
&gt; +[orterun:deprecated-env-set]<br>
&gt; +WARNING: The mechanism by which environment variables are passed to OMPI is changing!!<br>
&gt; +Specifically, beginning in the 1.9.x/2.0.x series, using &quot;-x&quot; to set environment<br>
&gt; +variables is deprecated. Please use the &quot;mca_base_env_list&quot; MCA parameter. With this new<br>
&gt; +mechanism, mpirun ... -x env_foo1=bar1 -x env_foo2=bar2 -x env_foo3 ...<br>
&gt; +becomes: mpirun ... -mca mca_base_env_list env_foo1=bar1+env_foo2=bar2+env_foo3 ...<br>
&gt; +#<br>
&gt; +[orterun:conflict-env-set]<br>
&gt; +ERROR: You have attempted to pass environment variables to OMPI with both the &quot;-x&quot; method (deprecated starting<br>
&gt; +in the 1.9.x/2.0.x series) and by setting the MCA parameter &quot;mca_base_env_list&quot;. OMPI does not support mixing<br>
&gt; +these two methods. Please choose one method and try launching your job again. You job will now abort.<br>
&gt;<br>
&gt; Modified: trunk/orte/tools/orterun/orterun.c<br>
&gt; ==============================================================================<br>
&gt; --- trunk/orte/tools/orterun/orterun.c        Tue Jul  8 20:10:04 2014        (r32162)<br>
&gt; +++ trunk/orte/tools/orterun/orterun.c        2014-07-08 20:38:25 EDT (Tue, 08 Jul 2014)      (r32163)<br>
&gt; @@ -1722,6 +1722,13 @@<br>
&gt;<br>
&gt;     /* Did the user request to export any environment variables on the cmd line? */<br>
&gt;     if (opal_cmd_line_is_taken(&amp;cmd_line, &quot;x&quot;)) {<br>
&gt; +        char* env_set_flag = getenv(&quot;OMPI_MCA_mca_base_env_list&quot;);<br>
&gt; +        if (NULL != env_set_flag) {<br>
&gt; +            orte_show_help(&quot;help-orterun.txt&quot;, &quot;orterun:conflict-env-set&quot;, false);<br>
&gt; +            return ORTE_ERR_FATAL;<br>
&gt; +        } else {<br>
&gt; +            orte_show_help(&quot;help-orterun.txt&quot;, &quot;orterun:deprecated-env-set&quot;, false);<br>
&gt; +        }<br>
&gt;         j = opal_cmd_line_get_ninsts(&amp;cmd_line, &quot;x&quot;);<br>
&gt;         for (i = 0; i &lt; j; ++i) {<br>
&gt;             param = opal_cmd_line_get_param(&amp;cmd_line, &quot;x&quot;, i, 0);<br>
&gt; _______________________________________________<br>
&gt; svn mailing list<br>
&gt; <a href="mailto:svn@open-mpi.org">svn@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/svn" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/svn</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/07/15148.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/07/15148.php</a><br>
</blockquote></div><br></div>

