<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">It isn't necessary. The orted already will open and use the local plm if you simply set OMPI_MCA_plm=foo in its environment. The rsh, tm, and slurm plm modules already do this so that they can execute a tree-like spawn (for rsh) and because I needed ssh on the backend nodes to locally launch "slaves" on RoadRunner and other machines.<div><br></div><div>The required code (already in those modules) is:</div><div><br></div><div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; color: rgb(10, 135, 0); "><span style="color: #000000">&nbsp;&nbsp; &nbsp;</span>/* enable local launch by the orteds */</div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; ">&nbsp; &nbsp; var = mca_base_param_environ_variable(<span style="color: #cb1e21">"plm"</span>, <span style="color: #b70ea3">NULL</span>, <span style="color: #b70ea3">NULL</span>);</div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; ">&nbsp; &nbsp; opal_setenv(var, <span style="color: #cb1e21">"rsh"</span>, true, &amp;env);</div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; ">&nbsp; &nbsp; free(var);</div><div><font class="Apple-style-span" face="Menlo" size="3"><span class="Apple-style-span" style="font-size: 11px;"><br></span></font></div><div><font class="Apple-style-span" face="Menlo" size="3"><span class="Apple-style-span" style="font-size: 11px;"><br></span></font></div></div><div>You don't want the orted using the hnp ess module as it will then try to track its own launches and totally forget that it is a remote orted with slightly different responsibilities.</div><div><br></div><div>If you need it to execute a different plm on the backend, please let me know - it is a trivial change to allow specification of remote launch agents, and we should do it for them all if we do.</div><div><br></div><div>Ralph</div><div><br></div><div><div><div>On Dec 18, 2009, at 7:43 AM, Damien Guinier wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div>Hi Ralph<br><br>On Openmpi, I working on a new little feature: hnp_always_use_plm.<br>- To create final application , mpirun use on remote "orted via plm: Process lifecycle managment module" or localy "fork()". So the first compute node haven't the same methode than other compute node. Some debug tools(padb ...) and management tools (squeus -s ...) are impacted by this difference.<br>To simplify this cluster tools usage, I propose to add the possibility to use "orted via plm" on remote and localy.<br><br>I make a patch to add the parameter "OMPI_MCA_ess_hnp_always_use_plm", to use the "plm" module everywhere. On my patch , by default nothing is changed ( no impact).<br><br>Can you say to me , if this feature( and the patch) is good ?<br><br>thank you<br><br>Damien<br><br>diff orte/mca/ess/hnp/ess_hnp.h<br>--- a/orte/mca/ess/hnp/ess_hnp.h &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tue Dec 15 15:31:24 2009 +0100<br>+++ b/orte/mca/ess/hnp/ess_hnp.h &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tue Dec 15 18:19:18 2009 +0100<br>@@ -27,7 +27,7 @@<br>int orte_ess_hnp_component_open(void);<br>int orte_ess_hnp_component_close(void);<br>int orte_ess_hnp_component_query(mca_base_module_t **module, int *priority);<br>-<br>+extern int mca_ess_hnp_always_use_plm;<br><br>ORTE_MODULE_DECLSPEC extern orte_ess_base_component_t mca_ess_hnp_component;<br><br>diff orte/mca/ess/hnp/ess_hnp_component.c<br>--- a/orte/mca/ess/hnp/ess_hnp_component.c &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tue Dec 15 15:31:24 2009 +0100<br>+++ b/orte/mca/ess/hnp/ess_hnp_component.c &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tue Dec 15 18:19:18 2009 +0100<br>@@ -33,6 +33,7 @@<br>#include "orte/mca/ess/hnp/ess_hnp.h"<br><br>extern orte_ess_base_module_t orte_ess_hnp_module;<br>+int mca_ess_hnp_always_use_plm = 0;<br><br>/*<br> * Instantiate the public struct with all of our public information<br>@@ -63,6 +64,10 @@<br>int<br>orte_ess_hnp_component_open(void)<br>{<br>+ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mca_base_param_reg_int(&amp;mca_ess_hnp_component.base_version,<br>+ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"always_use_plm",<br>+ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Used to force plm on all machine",<br>+ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;false,false, mca_ess_hnp_always_use_plm ,&amp;mca_ess_hnp_always_use_plm);<br> &nbsp;&nbsp;&nbsp;return ORTE_SUCCESS;<br>}<br><br>diff orte/mca/ess/hnp/ess_hnp_module.c<br>--- a/orte/mca/ess/hnp/ess_hnp_module.c Tue Dec 15 15:31:24 2009 +0100<br>+++ b/orte/mca/ess/hnp/ess_hnp_module.c Tue Dec 15 18:19:18 2009 +0100<br>@@ -442,9 +442,12 @@<br> &nbsp;&nbsp;&nbsp;&nbsp;* node object<br> &nbsp;&nbsp;&nbsp;&nbsp;*/<br> &nbsp;&nbsp;&nbsp;OBJ_RETAIN(proc); &nbsp;&nbsp;/* keep accounting straight */<br>+ &nbsp;&nbsp;&nbsp;if(mca_ess_hnp_always_use_plm==0)<br>+ &nbsp;&nbsp;&nbsp;{<br> &nbsp;&nbsp;&nbsp;node-&gt;daemon = proc;<br> &nbsp;&nbsp;&nbsp;node-&gt;daemon_launched = true;<br> &nbsp;&nbsp;&nbsp;node-&gt;state = ORTE_NODE_STATE_UP;<br>+ &nbsp;&nbsp;&nbsp;}<br><br> &nbsp;&nbsp;&nbsp;/* record that the daemon job is running */<br> &nbsp;&nbsp;&nbsp;jdata-&gt;num_procs = 1;<br><br></div></blockquote></div><br></div></body></html>
