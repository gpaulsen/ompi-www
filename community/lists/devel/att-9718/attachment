<tt><font size=2>devel-bounces@open-mpi.org wrote on 08/29/2011 05:57:59
PM:<br>
<br>
&gt; De : Ralph Castain &lt;rhc@open-mpi.org&gt;</font></tt>
<br><tt><font size=2>&gt; A : Open MPI Developers &lt;devel@open-mpi.org&gt;</font></tt>
<br><tt><font size=2>&gt; Date : 08/29/2011 05:58 PM</font></tt>
<br><tt><font size=2>&gt; Objet : Re: [OMPI devel] known limitation or
bug in hwloc?</font></tt>
<br><tt><font size=2>&gt; Envoyé par : devel-bounces@open-mpi.org</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; On Aug 29, 2011, at 8:35 AM, nadia.derbey@bull.net wrote:</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; <br>
&gt; devel-bounces@open-mpi.org wrote on 08/29/2011 04:20:30 PM:<br>
&gt; <br>
&gt; &gt; De : Ralph Castain &lt;rhc@open-mpi.org&gt; <br>
&gt; &gt; A : Open MPI Developers &lt;devel@open-mpi.org&gt; <br>
&gt; &gt; Date : 08/29/2011 04:26 PM <br>
&gt; &gt; Objet : Re: [OMPI devel] known limitation or bug in hwloc? <br>
&gt; &gt; Envoyé par : devel-bounces@open-mpi.org <br>
&gt; &gt; <br>
&gt; &gt; Actually, I'll eat those words. I was looking at the wrong place.<br>
&gt; &gt; <br>
&gt; &gt; Yes, that is a bug in hwloc. It needs to loop over CPU_MAX for
those<br>
&gt; &gt; cases where the bit mask extends over multiple words. <br>
&gt; <br>
&gt; But I'm afraid the fix won't be trivial at all: hwloc in itself is
<br>
&gt; coherent: it loops overs NUM_BITS, but it uses masks that are <br>
&gt; NUM_BITS wide (hwloc_bitmap_t set)... </font></tt>
<br><tt><font size=2>&gt; <br>
&gt; I guess I'm missing that - I just did a search and cannot find any
<br>
&gt; reference to OPAL_PAFFINITY_BITMASK_T_NUM_BITS anywhere in <br>
&gt; paffinity/hwloc after the last change.</font></tt>
<br><tt><font size=2>&gt; <br>
&gt; Can you point me to where you believe a problem exists? Or feel free<br>
&gt; to submit a patch to fix it :-) &nbsp;We can push it upstream to the
<br>
&gt; hwloc folks for their consideration.</font></tt>
<br>
<br><tt><font size=2>file: opal/mca/paffinity/hwloc/paffinity_hwloc_module.c</font></tt>
<br><tt><font size=2>routine: module_set()</font></tt>
<br>
<br><tt><font size=2>You hae a reference to OPAL_PAFFINITY_BITMASK_T_NUM_BITS
both in the trunk and in v1.5</font></tt>
<br>
<br><tt><font size=2>But may be this issue has been fixed already?</font></tt>
<br>
<br><tt><font size=2>Regards,</font></tt>
<br><tt><font size=2>Nadia</font></tt>
<br>
<br><tt><font size=2>&gt; <br>
&gt; <br>
&gt; Regards, <br>
&gt; Nadia<br>
&gt; &gt; <br>
&gt; &gt; <br>
&gt; &gt; On Aug 29, 2011, at 7:16 AM, Ralph Castain wrote:<br>
&gt; &gt; <br>
&gt; &gt; &gt; Actually, if you look closely at the definition of those
two <br>
&gt; &gt; values, you'll see that it really doesn't matter which one we
loop <br>
&gt; &gt; over. The NUM_BITS value defines the actual total number of bits
in <br>
&gt; &gt; the mask. The CPU_MAX is the total number of cpus we can support,
<br>
&gt; &gt; which was set to a value such that the two are equal (i.e., it's
a <br>
&gt; &gt; power of two that happens to be an integer multiple of 64).<br>
&gt; &gt; &gt; <br>
&gt; &gt; &gt; I believe the original intent was to allow CPU_MAX to be
<br>
&gt; &gt; independent of address-alignment questions, so NUM_BITS could
<br>
&gt; &gt; technically be greater than CPU_MAX. Even if this happens, though,
<br>
&gt; &gt; all that would do is cause the loop to run across more bits than
required.<br>
&gt; &gt; &gt; <br>
&gt; &gt; &gt; So it doesn't introduce a limitation at all. In hindsight,
we <br>
&gt; &gt; could simplify things by eliminating one of those values and
just <br>
&gt; &gt; putting a requirement on the number that it be a multiple of
64 so <br>
&gt; &gt; it aligns with a memory address.<br>
&gt; &gt; &gt; <br>
&gt; &gt; &gt; <br>
&gt; &gt; &gt; On Aug 29, 2011, at 7:05 AM, Kenneth Lloyd wrote:<br>
&gt; &gt; &gt; <br>
&gt; &gt; &gt;&gt; Nadia,<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; Interesting. I haven't tried pushing this to levels
above 8 on <br>
&gt; a particular<br>
&gt; &gt; &gt;&gt; machine. Do you think that the cpuset / paffinity /
hwloc only applies at<br>
&gt; &gt; &gt;&gt; the machine level, at which time you need to employ
a graph with carto?<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; Regards,<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; Ken<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; -----Original Message-----<br>
&gt; &gt; &gt;&gt; From: devel-bounces@open-mpi.org [</font></tt><a href="mailto:devel-bounces@open-mpi.org"><tt><font size=2>mailto:devel-bounces@open-mpi.org</font></tt></a><tt><font size=2>]
On<br>
&gt; &gt; &gt;&gt; Behalf Of nadia.derbey<br>
&gt; &gt; &gt;&gt; Sent: Monday, August 29, 2011 5:45 AM<br>
&gt; &gt; &gt;&gt; To: Open MPI Developers<br>
&gt; &gt; &gt;&gt; Subject: [OMPI devel] known limitation or bug in hwloc?<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; Hi list,<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; I'm hitting a limitation with paffinity/hwloc with cpu
numbers &gt;= 64.<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; In opal/mca/paffinity/hwloc/paffinity_hwloc_module.c,
module_set() is<br>
&gt; &gt; &gt;&gt; the routine that sets the calling process affinity to
the mask given as<br>
&gt; &gt; &gt;&gt; parameter. Note that &quot;mask&quot; is a opal_paffinity_base_cpu_set_t
(so we<br>
&gt; &gt; &gt;&gt; allow the cpus to be potentially numbered up to<br>
&gt; &gt; &gt;&gt; OPAL_PAFFINITY_BITMASK_CPU_MAX - 1).<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; The problem with module_set() is that is loops over<br>
&gt; &gt; &gt;&gt; OPAL_PAFFINITY_BITMASK_T_NUM_BITS bits to check if these
bits are set in<br>
&gt; &gt; &gt;&gt; the mask:<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; for (i = 0; ((unsigned int) i) &lt; OPAL_PAFFINITY_BITMASK_T_NUM_BITS;
++i)<br>
&gt; &gt; &gt;&gt; {<br>
&gt; &gt; &gt;&gt; &nbsp; &nbsp; &nbsp; if (OPAL_PAFFINITY_CPU_ISSET(i,
mask)) {<br>
&gt; &gt; &gt;&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; hwloc_bitmap_set(set,
i);<br>
&gt; &gt; &gt;&gt; &nbsp; &nbsp; &nbsp; }<br>
&gt; &gt; &gt;&gt; &nbsp; }<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; Given &quot;mask&quot;'s type, I think module_set()
should instead loop over<br>
&gt; &gt; &gt;&gt; OPAL_PAFFINITY_BITMASK_CPU_MAX bits.<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; Note that module_set() uses a type for its internal
mask that is<br>
&gt; &gt; &gt;&gt; coherent with OPAL_PAFFINITY_BITMASK_T_NUM_BITS (hwloc_bitmap_t).<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; So I'm wondering whether this is a known limitation
I've never heard of<br>
&gt; &gt; &gt;&gt; or an actual bug?<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; Regards,<br>
&gt; &gt; &gt;&gt; Nadia<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; _______________________________________________<br>
&gt; &gt; &gt;&gt; devel mailing list<br>
&gt; &gt; &gt;&gt; devel@open-mpi.org<br>
&gt; &gt; &gt;&gt; </font></tt><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel"><tt><font size=2>http://www.open-mpi.org/mailman/listinfo.cgi/devel</font></tt></a><tt><font size=2><br>
&gt; &gt; &gt;&gt; -----<br>
&gt; &gt; &gt;&gt; No virus found in this message.<br>
&gt; &gt; &gt;&gt; Checked by AVG - </font></tt><a href=www.avg.com><tt><font size=2>www.avg.com</font></tt></a><tt><font size=2><br>
&gt; &gt; &gt;&gt; Version: 10.0.1392 / Virus Database: 1520/3864 - Release
Date: 08/28/11<br>
&gt; &gt; &gt;&gt; <br>
&gt; &gt; &gt;&gt; _______________________________________________<br>
&gt; &gt; &gt;&gt; devel mailing list<br>
&gt; &gt; &gt;&gt; devel@open-mpi.org<br>
&gt; &gt; &gt;&gt; </font></tt><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel"><tt><font size=2>http://www.open-mpi.org/mailman/listinfo.cgi/devel</font></tt></a><tt><font size=2><br>
&gt; &gt; &gt; <br>
&gt; &gt; <br>
&gt; &gt; <br>
&gt; &gt; _______________________________________________<br>
&gt; &gt; devel mailing list<br>
&gt; &gt; devel@open-mpi.org<br>
&gt; &gt; </font></tt><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel"><tt><font size=2>http://www.open-mpi.org/mailman/listinfo.cgi/devel</font></tt></a><tt><font size=2><br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; devel@open-mpi.org<br>
&gt; </font></tt><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel"><tt><font size=2>http://www.open-mpi.org/mailman/listinfo.cgi/devel</font></tt></a>
<br><tt><font size=2>&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; devel@open-mpi.org<br>
&gt; </font></tt><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel"><tt><font size=2>http://www.open-mpi.org/mailman/listinfo.cgi/devel</font></tt></a>
