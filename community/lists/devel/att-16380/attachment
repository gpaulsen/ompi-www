<div dir="ltr">Hi ompi developers,<div><br></div><div>If you always configure ompi with --disable-dlopen you can delete this</div><div>message now.</div><div><br></div><div>There has been some discussion of end case situations with use of dlopen<br>in the ompi mca framework that can lead to unresolved symbols when</div><div>subsequent shared libraries are dlopen&#39;d that might needs symbols from</div><div>a library that had been opened previously.  Yes these libraries should be</div><div>doing something like a second dlopen of the lib they are dependent on,</div><div>but that&#39;s a different story involving other software projects outside of</div><div>ompi.</div><div><br></div><div>The default with the mca framework dlopen&#39;ing of component libraries</div><div>is not to use RTLD_GLOBAL, and there does not currently appear to be a way</div><div>to change this behavior at runtime.</div><div><br></div><div>Is there a reason for avoiding use of RTLD_GLOBAL in libltdl&#39;s use of dlopen?</div><div>Would it be okay to add RTLD_GLOBAL to the default module_flags used</div><div>in the vm_open - modulo detection of the definition of RTLD_GLOBAL at</div><div>compile time.  Perhaps adding a way with an env. or config option to not</div><div>enable RTLD_GLOBAL by default?</div><div><br></div><div>Thanks,</div><div><br></div><div>Howard</div><div><br></div><div><br></div><div><br></div></div>

