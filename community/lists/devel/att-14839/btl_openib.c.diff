Index: ompi/mca/btl/openib/btl_openib.c
===================================================================
--- ompi/mca/btl/openib/btl_openib.c	(revision 31888)
+++ ompi/mca/btl/openib/btl_openib.c	(working copy)
@@ -1128,7 +1128,7 @@
         struct ompi_proc_t **procs,
         struct mca_btl_base_endpoint_t ** peers)
 {
-    int i,ep_index;
+    int i, ep_index;
     mca_btl_openib_module_t* openib_btl = (mca_btl_openib_module_t*) btl;
     mca_btl_openib_endpoint_t* endpoint;
 
@@ -1144,8 +1144,19 @@
                 continue;
             }
             if (endpoint == del_endpoint) {
+                int j;
                 BTL_VERBOSE(("in del_procs %d, setting another endpoint to null",
                              ep_index));
+                /* remove the endpoint from eager_rdma_buffers */
+                for (j=0; j<openib_btl->device->eager_rdma_buffers_count; j++) {
+                    if (openib_btl->device->eager_rdma_buffers[j] == endpoint) {
+                        /* should it be obj_reference_count == 2 ? */
+                        assert(((opal_object_t*)endpoint)->obj_reference_count > 1);
+                        OBJ_RELEASE(endpoint);
+                        openib_btl->device->eager_rdma_buffers[j] = NULL;
+                        /* can we simply break and leave the for loop ? */
+                    }
+                }
                 opal_pointer_array_set_item(openib_btl->device->endpoints,
                         ep_index, NULL);
                 assert(((opal_object_t*)endpoint)->obj_reference_count == 1);
