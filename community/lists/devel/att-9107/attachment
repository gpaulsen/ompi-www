Hello @ll.<div><br></div><div>I&#39;m having a problem when i try to access to data-&gt;procs-&gt;addr[vpid] when the vpid belong to a recently killed process. I&#39;m sending here a piece of my code. The problem is that the execution is always entering in the last if clause maybe because the information of the dead process is no longer available, or maybe i&#39;m doing something wrong when accessing.</div>
<div><br></div><div>Any help will be apreciated.</div><meta http-equiv="content-type" content="text/html; charset=utf-8"><div><br></div><div><div>                                        <b>command = ORTE_DAEMON_REPORT_JOB_INFO_CMD;</b></div>
<div><b>                                        buffer = OBJ_NEW(opal_buffer_t);</b></div><div><b>                                        if (ORTE_SUCCESS != (rc = opal_dss.pack(buffer, &amp;command, 1, ORTE_DAEMON_CMD))) {</b></div>
<div><b>                                            ORTE_ERROR_LOG(rc);</b></div><div><b>                                            OBJ_RELEASE(buffer);</b></div><div><b>                                            return rc;</b></div>
<div><b>                                        }</b></div><div><b>                                        if (ORTE_SUCCESS != (rc = opal_dss.pack(buffer, &amp;proc-&gt;jobid, 1, ORTE_JOBID))) {</b></div><div><b>                                            ORTE_ERROR_LOG(rc);</b></div>
<div><b>                                            OBJ_RELEASE(buffer);</b></div><div><b>                                            return rc;</b></div><div><b>                                        }</b></div><div><b>                                        /* do the send */</b></div>
<div><b>                                        if (0 &gt; (rc = orte_rml.send_buffer(ORTE_PROC_MY_HNP, buffer, ORTE_RML_TAG_DAEMON, 0))) {</b></div><div><b>                                            ORTE_ERROR_LOG(rc);</b></div>
<div><b>                                            OBJ_RELEASE(buffer);</b></div><div><b>                                            return rc;</b></div><div><b>                                        }</b></div><div><b>                                        OBJ_RELEASE(buffer);</b></div>
<div><b>                                        buffer = OBJ_NEW(opal_buffer_t);</b></div><div><b><br></b></div><div><b>                                        orte_rml.recv_buffer(ORTE_NAME_WILDCARD, buffer, ORTE_RML_TAG_TOOL, 0);</b></div>
<div><b>                                        </b></div><div><b>                                        opal_dss.unpack(buffer, &amp;response, &amp;n, OPAL_INT32);</b></div><div><b><br></b></div><div><b>                                        if(response==0){</b></div>
<div><b>                                            OPAL_OUTPUT_VERBOSE((5, orte_errmgr_base.output,&quot;NO ESCRIBÍ AL HNP\n &quot;));</b></div><div><b>                                        }else{</b></div><div><b>                                            opal_dss.unpack(buffer, &amp;jdata, &amp;n, ORTE_JOB);</b></div>
<div><b>                                        }</b></div><div><b><br></b></div><div><b>                                        procs = (orte_proc_t**)jdata-&gt;procs-&gt;addr;</b></div><div><b>                                        if(procs==NULL){</b></div>
<div><b>                                            OPAL_OUTPUT_VERBOSE((5, orte_errmgr_base.output, &quot;grave: procs==null&quot;));</b></div><div><b>                                        }</b></div><div><b><br></b></div>
<div><b>                                        command = ORTE_DAEMON_UPDATE_STATE_CMD;</b></div><div><b><br></b></div><div><b>                                        OBJ_RELEASE(buffer);</b></div><div><b>                                        buffer = OBJ_NEW(opal_buffer_t);</b></div>
<div><b>                                        </b></div><div><b>                                        if (ORTE_SUCCESS != (rc = opal_dss.pack(buffer, &amp;command, 1, ORTE_DAEMON_CMD))) {</b></div><div><b>                                            ORTE_ERROR_LOG(rc);</b></div>
<div><b>                                            OBJ_RELEASE(buffer);</b></div><div><b>                                            goto CLEANUP;</b></div><div><b>                                        }</b></div><div>
<b><br></b></div><div><b>                                        orte_proc_state_t state = ORTE_PROC_STATE_FAULT;</b></div><div><b>                                        /* Pack the faulty vpid */</b></div><div><b>                                        if (ORTE_SUCCESS != (rc = opal_dss.pack(buffer, &amp;proc, 1, ORTE_NAME))) {</b></div>
<div><b>                                            ORTE_ERROR_LOG(rc);</b></div><div><b>                                            goto CLEANUP;</b></div><div><b>                                        }</b></div><div><b><br>
</b></div><div><b>                                        /* Pack the state */</b></div><div><b>                                        if (ORTE_SUCCESS != (rc = opal_dss.pack(buffer, &amp;state, 1, OPAL_UINT16))) {</b></div>
<div><b>                                            ORTE_ERROR_LOG(rc);</b></div><div><b>                                            goto CLEANUP;</b></div><div><b>                                        }</b></div><div><b><br>
</b></div><div><b>                                        if (NULL == procs[proc-&gt;vpid] || NULL == procs[proc-&gt;vpid]-&gt;node) {</b></div><div><b>                                            OPAL_OUTPUT_VERBOSE((5, orte_errmgr_base.output, &quot;PROBLEM: procs[proc.vpid]==null&quot;));</b></div>
<div><b>                                        }</b></div></div><div><b><br></b></div><div>Thanks a lot.</div><div><br></div><div>Hugo Meyer</div>
