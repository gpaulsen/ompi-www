<div dir="ltr"><div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">Hi,</span></div><div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">We observe crash during shmem_finalize()  (in trunk) with new MCA framework.</span></div>
<div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">After investigation, found that  MCA tears-down process can access previously released memory. (reproduced with oshmem_hello_c.c test)</span></div>
<div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"><br></span></div><div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"><br></span></div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"><div>
<span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"><br></span></div>0 0x00007fffed3d51d0 in ?? ()</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">#1 &lt;signal handler called&gt;</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/2" class="" title="ibnet (Closed)" style="color:rgb(153,153,153);text-decoration:line-through;font-family:Verdana,sans-serif;font-size:12px">#2</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x00007ffff710e21e in var_destructor (var=0x6fa7e0) at mca_base_var.c:1605</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/3" class="" title="shmem_put is not true single sided operation and requires receiver to enter library for new value... (Closed)" style="color:rgb(153,153,153);text-decoration:line-through;font-family:Verdana,sans-serif;font-size:12px">#3</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x00007ffff710ae99 in opal_obj_run_destructors (object=0x6fa7e0) at ../../../opal/class/opal_object.h:448</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">#4 0x00007ffff710ca18 in mca_base_var_finalize () at mca_base_var.c:954</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/5" class="" title="memcpy in yoda_put() (Closed)" style="color:rgb(153,153,153);text-decoration:line-through;font-family:Verdana,sans-serif;font-size:12px">#5</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x00007ffff710a7e2 in mca_base_param_finalize () at mca_base_param.c:643</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/6" class="" title="oshmem source cleanup &amp; cut&amp;paste removal (Closed)" style="color:rgb(153,153,153);text-decoration:line-through;font-family:Verdana,sans-serif;font-size:12px">#6</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x00007ffff70e08e2 in opal_finalize_util () at runtime/opal_finalize.c:77</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/7" class="" title="shmem with --enable-debug cores (Closed)" style="color:rgb(153,153,153);text-decoration:line-through;font-family:Verdana,sans-serif;font-size:12px">#7</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x00007ffff7aa5319 in ompi_mpi_finalize () at runtime/ompi_mpi_finalize.c:407</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/8" class="" title="make shmem to use its own descriptor infrastructure (New)" style="color:rgb(42,86,133);text-decoration:none;font-family:Verdana,sans-serif;font-size:12px">#8</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x00007ffff7d900cc in oshmem_shmem_finalize () at runtime/oshmem_shmem_finalize.c:75</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/9" class="" title="remove OSHMEM ifdefs from btl.  (Closed)" style="color:rgb(153,153,153);text-decoration:line-through;font-family:Verdana,sans-serif;font-size:12px">#9</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x00007ffff7d91119 in shmem_finalize () at shmem_finalize.c:24</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/10" class="" title="yoda_put/get: big data support (Closed)" style="color:rgb(153,153,153);text-decoration:line-through;font-family:Verdana,sans-serif;font-size:12px">#10</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x00007ffff7d89b8f in __do_global_dtors_aux () from /install/lib/libshmem.so.0</span><br style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">
<a href="http://bgate.mellanox.com/redmine/issues/11" class="" title="shmem_put_bw performance @ 1024 k (New)" style="color:rgb(42,86,133);text-decoration:none;font-family:Verdana,sans-serif;font-size:12px">#11</a><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"> 0x0000000000000000 in ?? ()</span><br>
<div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"><br></span></div><div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px">The crash can be resolved by following patch:</span></div>
<div><span style="color:rgb(72,72,72);font-family:Verdana,sans-serif;font-size:12px"><div><br></div><div>diff --git a/opal/mca/base/mca_base_var.c b/opal/mca/base/mca_base_var.c</div><div>index 9966627..48028d8 100644</div>
<div>--- a/opal/mca/base/mca_base_var.c</div><div>+++ b/opal/mca/base/mca_base_var.c</div><div>@@ -773,7 +773,7 @@ static int var_find_by_name (const char *full_name, int *index, bool invalidok)</div><div> </div><div>     (void) var_get ((int)(uintptr_t) tmp, &amp;var, false);</div>
<div> </div><div>-    if (invalidok || VAR_IS_VALID(var[0])) {</div><div>+    if (VAR_IS_VALID(var[0])) {</div><div>         *index = (int)(uintptr_t) tmp;</div><div>         return OPAL_SUCCESS;</div><div>     }</div><div>
<br></div><div><br></div><div>I`m not sure we understand yet why it fixes the problem and what is a race.</div><div>Could some` with knowledge of MCA flows look at it and comment?</div><div>The &quot;invalidok&quot; was introduced by Jeff`s commit.</div>
<div><br></div><div>Thanks</div><div><br></div><div>M</div><div><br></div><div><br></div><div><br></div></span></div></div>

