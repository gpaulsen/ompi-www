<div dir="ltr">Why do you want to add new versions? This will lead to having two, almost identical, sets of atomics that are conceptually equivalent but different in terms of code. And we will have to maintained both!<div>
<br></div><div>I did a similar change in a fork of OPAL in another project but instead of adding another flavor of atomics, I completely replaced the available ones with a set returning the old value. I can bring the code over.</div>
<div><br></div><div>  George.</div><div><br></div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Tue, Jul 29, 2014 at 5:29 PM, Paul Hargrove <span dir="ltr">&lt;<a href="mailto:phhargrove@lbl.gov" target="_blank">phhargrove@lbl.gov</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div class="gmail_extra"><div class=""><br><div class="gmail_quote">On Tue, Jul 29, 2014 at 2:10 PM, Nathan Hjelm <span dir="ltr">&lt;<a href="mailto:hjelmn@lanl.gov" target="_blank">hjelmn@lanl.gov</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div style="overflow:hidden">Is there a reason why the<br>


current implementations of opal atomics (add, cmpset) do not return the<br>
old value?</div></blockquote></div><div class="gmail_extra"><br></div></div>Because some CPUs don&#39;t implement such an atomic instruction?<br><br>On any CPU one *can* certainly synthesize the desired operation with an added read before the compare-and-swap to return a value that was present at some time before a failed cmpset.  That is almost certainly sufficient for your purposes.  However, the added load makes it (marginally) more expensive on some CPUs that only have the native equivalent of gcc&#39;s __sync_bool_compare_and_swap().<span class="HOEnZb"><font color="#888888"><br>

<br>-Paul<br></font></span></div><span class="HOEnZb"><font color="#888888"><div class="gmail_extra"><div><br></div>-- <br><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div>

<div>Future Technologies Group</div><div>Computer and Data Sciences Department     Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352" target="_blank">+1-510-495-2352</a></div><div>Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900" target="_blank">+1-510-486-6900</a></div>
</font>
</div></font></span></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/07/15328.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/07/15328.php</a><br></blockquote></div><br></div>

