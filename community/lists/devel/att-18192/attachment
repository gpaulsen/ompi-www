Justin,<div><br></div><div>one more question...</div><div><br></div><div>if you want to run n&gt;1 MPI tasks per node, would you have ?</div><div>- 1 container with one orted and n MPI tasks</div><div>- n containers with one orted and one MPI task per container</div><div><br></div><div>And btw, did you configure ompi with --disable-dlopen ?</div>If not, I strongly encourage you to do so.<div><br><div>Cheers,</div><div><br></div><div>Gilles<br><br>On Friday, October 16, 2015, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Let me follow up on this...<br>
<br>
IOF is but one of the frameworks / plugins involved in launching and monitoring processes.<br>
<br>
It might actually be easier to get on a webex and give you an overview (Ralph would be the best person for this; he&#39;s the one would does most of the work in the ORTE layer); I&#39;m not sure we have good documentation for it online.<br>
<br>
Part of the problem is that in our current design, MPI processes are really not designed to be in the same process as the orted.  It *might* be possible to make that happen, but I think we have a lot of assumptions built in to the code that the orted that the process(es) that it launches will actually be separate / different OS processes.<br>
<br>
That being said, it might be an easier solution to just not have the orted.  That is, ORTE is capable of &quot;orted-less&quot; launches when the underlying runtime provides enough support for OMPI to not have to use the orteds.  This would allow you to launch the MPI process directly in your container without any dlopen/orted-process-merging tomfoolery.  This might avoid running afoul of many of the assumptions we have baked into the system.<br>
<br>
Ralph will need to give the details of how to support orted-less launching.  But the first question is: does OSv have some kind of programatic mechanism to launch a process in your containers?  I.e., can mpirun programmatically launch MPI processes in OSv containers?<br>
<br>
<br>
<br>
&gt; On Oct 16, 2015, at 6:48 AM, Justin Cinkelj &lt;<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;justin.cinkelj@xlab.si&#39;)">justin.cinkelj@xlab.si</a>&gt; wrote:<br>
&gt;<br>
&gt; Thank you. At least its clear now that for the immediate problem I have<br>
&gt; to look at IOF code.<br>
&gt;<br>
&gt;<br>
&gt; On 16. 10. 2015 03:32, Gilles Gouaillardet wrote:<br>
&gt;&gt; Justin,<br>
&gt;&gt;<br>
&gt;&gt; IOF stands for Input/Output (aka I/O) Forwarding<br>
&gt;&gt;<br>
&gt;&gt; here is a very high level overview of a quite simple case.<br>
&gt;&gt; on host A, you run<br>
&gt;&gt; mpirun -host B,C -np 2 a.out<br>
&gt;&gt; without any batch manager and TCP interconnect<br>
&gt;&gt;<br>
&gt;&gt; first, mpirun will fork&amp;exec<br>
&gt;&gt; ssh B orted ...<br>
&gt;&gt; ssh C orted ...<br>
&gt;&gt;<br>
&gt;&gt; the orted daemons will first connect back to mpirun, using TCP and<br>
&gt;&gt; ip/port passed on the orted command line.<br>
&gt;&gt;<br>
&gt;&gt; then the orted daemons will fork&amp;exec a.out<br>
&gt;&gt; a.out will contact its parent orted (iirc, TCP on v1.10 and Unix<br>
&gt;&gt; socket from v2.x) via ip/port of port from the environment<br>
&gt;&gt; when a.out want to communicate, they will connect to the remote a.out<br>
&gt;&gt; via TCP using ip/port obtained from orted.<br>
&gt;&gt;<br>
&gt;&gt; from a.out point of view :<br>
&gt;&gt; - stdin is either a pipe to orted or /dev/null<br>
&gt;&gt; - stdout is a pty with orted on the other side<br>
&gt;&gt; - stderr is a pipe to orted<br>
&gt;&gt;<br>
&gt;&gt; this is basically what happens in a quite simple case,<br>
&gt;&gt; back to your question, mpi_hello.so does not contact mpirun.<br>
&gt;&gt; orted.so contacts mpirun, and mpi_hello.so contacts orted.so,<br>
&gt;&gt; and then mpi_hello.so contact other mpi_hello.so<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; note it is also possible to use direct launch (SLURM or cray alps can<br>
&gt;&gt; do that)<br>
&gt;&gt; instead of running<br>
&gt;&gt; mpirun a.out<br>
&gt;&gt; you simply do<br>
&gt;&gt; srun a.out (or aprun a.out)<br>
&gt;&gt; in the case of slurm (i am not sure about alps) there is no orted<br>
&gt;&gt; daemons involved.<br>
&gt;&gt; instead of contacting its orted, a.out contact the slurm daemons<br>
&gt;&gt; (slurmd) so it can exchange information with remote a.out and figure<br>
&gt;&gt; out how to contact them.<br>
&gt;&gt; direct launch does not support dynamic process creation<br>
&gt;&gt; (MPI_Comm_spawn and friends)<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; you can run<br>
&gt;&gt; ompi_info --all<br>
&gt;&gt; to list all the parameters.<br>
&gt;&gt; and then you can do<br>
&gt;&gt; mpirun --mca &lt;name&gt; &lt;value&gt; ...<br>
&gt;&gt; to modify a parameter (such as timeout)<br>
&gt;&gt;<br>
&gt;&gt; that being said, i do not think that should be needed ... just make<br>
&gt;&gt; sure there is no firewall running on your system, and you should be fine.<br>
&gt;&gt; if some hosts have several interfaces, you can restrict to the one<br>
&gt;&gt; that should work (e.g. eth0) with<br>
&gt;&gt; mpirun --mca oob_tcp_if_include eth0 --mca btl_tcp_if_include eth0 ...<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; i hope this helps<br>
&gt;&gt;<br>
&gt;&gt; Gilles<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; On 10/16/2015 2:59 AM, Justin Cinkelj wrote:<br>
&gt;&gt;&gt; I&#39;m trying to run OpenMPI in OSv container<br>
&gt;&gt;&gt; (<a href="https://github.com/cloudius-systems/osv" target="_blank">https://github.com/cloudius-systems/osv</a>). It&#39;s a single process, single<br>
&gt;&gt;&gt; address space VM, without fork, exec, openpty function. With some<br>
&gt;&gt;&gt; butchering of OSv and OpenMPI I was able to compile orted.so, and run it<br>
&gt;&gt;&gt; inside OSv via mpirun (mpirun is on remote machine). The orted.so loads<br>
&gt;&gt;&gt; mpi_hello.so and executes its main() in new pthread.<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Which than aborts due to communication failure/timeout - as reported by<br>
&gt;&gt;&gt; mpirun. I assume that that mpi_hello.so should connect back to mpirun,<br>
&gt;&gt;&gt; and report &#39;something&#39; about itself. What could that be?<br>
&gt;&gt;&gt; Plus, where could I extend that timeout period - once mpirun closes,<br>
&gt;&gt;&gt; output from opal_output is not shown any more.<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Is there some highlevel overview about OpenMPI, how are modules<br>
&gt;&gt;&gt; connected, what is &#39;startup&#39; sequence etc?<br>
&gt;&gt;&gt; ompi_info lists compiled modules, but I still don&#39;t know how are they<br>
&gt;&gt;&gt; connected.<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; So basically - I lack knowledge of OpenMPI internals, and would highly<br>
&gt;&gt;&gt; appreciate links for &quot;rookie&quot; developers.<br>
&gt;&gt;&gt; Say <a href="https://github.com/open-mpi/ompi/wiki/IOFDesign" target="_blank">https://github.com/open-mpi/ompi/wiki/IOFDesign</a> tells me what IOF<br>
&gt;&gt;&gt; is, and a bit about its working. So, if someone has any list of such<br>
&gt;&gt;&gt; links - could it be shared?<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; _______________________________________________<br>
&gt;&gt;&gt; devel mailing list<br>
&gt;&gt;&gt; <a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;devel@open-mpi.org&#39;)">devel@open-mpi.org</a><br>
&gt;&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;&gt;&gt; Link to this post:<br>
&gt;&gt;&gt; <a href="http://www.open-mpi.org/community/lists/devel/2015/10/18181.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/10/18181.php</a><br>
&gt;&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; _______________________________________________<br>
&gt;&gt; devel mailing list<br>
&gt;&gt; <a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;devel@open-mpi.org&#39;)">devel@open-mpi.org</a><br>
&gt;&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;&gt; Link to this post:<br>
&gt;&gt; <a href="http://www.open-mpi.org/community/lists/devel/2015/10/18189.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/10/18189.php</a><br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;devel@open-mpi.org&#39;)">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/10/18190.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/10/18190.php</a><br>
<br>
<br>
--<br>
Jeff Squyres<br>
<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;jsquyres@cisco.com&#39;)">jsquyres@cisco.com</a><br>
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="javascript:;" onclick="_e(event, &#39;cvml&#39;, &#39;devel@open-mpi.org&#39;)">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/10/18191.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/10/18191.php</a><br>
</blockquote></div></div>

