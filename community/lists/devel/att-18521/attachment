<div dir="ltr">My concern with the runtime solution is that I fear we will suffer the death by a thousand cuts as we try to navigate our way around all the odd configurations that exist out there. What I don&#39;t want to do is get into a constant game of whack-a-mole where we are trying to only emit the warning when we should, and always emit it when we should.<div><br></div><div>Just seems to me like we are begging for a long-running search for the perfect solution.</div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Mon, Jan 25, 2016 at 2:37 PM, Jeff Squyres (jsquyres) <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">I&#39;d like to point out an offhand comment that I made earlier that seems to have gotten lost -- let me cite the README, because it cites it much better than I did earlier in this thread:<br>
<br>
-----<br>
Note that for many of Open MPI&#39;s --with-&lt;foo&gt; options, Open MPI will,<br>
by default, search for header files and/or libraries for &lt;foo&gt;.  If<br>
the relevant files are found, Open MPI will built support for &lt;foo&gt;;<br>
if they are not found, Open MPI will skip building support for &lt;foo&gt;.<br>
However, if you specify --with-&lt;foo&gt; on the configure command line and<br>
Open MPI is unable to find relevant support for &lt;foo&gt;, configure will<br>
assume that it was unable to provide a feature that was specifically<br>
requested and will abort so that a human can resolve out the issue.<br>
-----<br>
<br>
Hence, if the user had specified --with-tm (even without a path), and Open MPI&#39;s configure was not able to find TM support, configure would have aborted.<br>
<br>
This --with-&lt;foo&gt; support is uniform across all of its options.  Hence, if you want to guarantee that you have support for a specific feature, you should use --with-&lt;foo&gt;.<br>
<br>
I&#39;m almost certain that we decided on this behavior back near the beginning of the Open MPI project because of conversations exactly like this (and me/others citing that writing something out at the end of configure might end up being a losing battle)...<br>
<div><div class="h5"><br>
<br>
&gt; On Jan 25, 2016, at 5:30 PM, Howard Pritchard &lt;<a href="mailto:hppritcha@gmail.com">hppritcha@gmail.com</a>&gt; wrote:<br>
&gt;<br>
&gt; HI Folks,<br>
&gt;<br>
&gt; I like Paul&#39;s suggestion for configury summary output a lot.  It would have helped me when I was trying to deal with an oddball<br>
&gt; one-off install of the moab/torque software on one of the non-standard front ends at LANL.  The libfabric configury has<br>
&gt; such a summary output at the end of configure and it makes it much simpler (for a much smaller project) to check that<br>
&gt; you&#39;re getting what you expected.<br>
&gt;<br>
&gt; I still say updating the FAQ with something more precise is in order.  I&#39;ll work on that.<br>
&gt;<br>
&gt; Howard<br>
&gt;<br>
&gt;<br>
&gt; 2016-01-25 15:20 GMT-07:00 Paul Hargrove &lt;<a href="mailto:phhargrove@lbl.gov">phhargrove@lbl.gov</a>&gt;:<br>
&gt; Ralph,<br>
&gt;<br>
&gt; As a practical matter most users probably aren&#39;t going to know what to do with anything that scrolls off their screen.<br>
&gt; So I think dumping the ompi_info output as-is would be just &quot;noise&quot; to many folks.<br>
&gt; That is one reason I didn&#39;t just suggest doing exactly that (cross-compilation being another)<br>
&gt;<br>
&gt; However, a suitably summarized output might be just the right thing.<br>
&gt; Perhaps something compact along the lines of<br>
&gt;     MCA foo: component1 component2 component2<br>
&gt;  MCA foobar: componentA componentB<br>
&gt;   ...<br>
&gt;    Bindings: C C++ Java Fortan(mpif.h &#39;use mpi&#39;)<br>
&gt;<br>
&gt; If this could information be generated at the end of configure, rather than &quot;make install&quot;, it could save folks some time spent compiling incorrectly configured builds.<br>
&gt;<br>
&gt;<br>
&gt; Another thing one might independently want to consider is having configure warn when the required libs are present for a component but the &quot;can compile&quot; test fails.<br>
&gt; This would, for instance, catch the situation when the &quot;libfoo&quot; packages is installed but the &quot;libfoo-dev&quot; package is not.<br>
&gt; This approach, however, may require non-trivial changes to how all the configure probes are performed since I don&#39;t believe this is something autoconf has existing support for (the AC_CHECK_LIB macro is effectively a check for the &quot;libfoo-dev&quot; package only).<br>
&gt;<br>
&gt;<br>
&gt; Just my $0.02USD, of course.<br>
&gt;<br>
&gt; -Paul<br>
&gt;<br>
&gt; On Mon, Jan 25, 2016 at 1:46 PM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<br>
&gt; That makes sense, Paul - what if we output effectively the ompi_info summary of what was built at the end of the make install procedure? Then you would have immediate feedback on the result.<br>
&gt;<br>
&gt; On Mon, Jan 25, 2016 at 1:27 PM, Paul Hargrove &lt;<a href="mailto:phhargrove@lbl.gov">phhargrove@lbl.gov</a>&gt; wrote:<br>
&gt; As one who builds other people&#39;s software frequently, I have my own opinions here.<br>
&gt;<br>
&gt; Above all else, is that there is no one &quot;right&quot; answer, but that consistency with in a product is best.<br>
&gt; So (within reason) the same things that work to configure module A and B should work with C and D as well.<br>
&gt; To use an analogy from (human) languages, I dislike &quot;irregular verbs&quot;.<br>
&gt;<br>
&gt; The proposal to report (at run time) the existence of TM support on the system (but lacking in ORTE), doesn&#39;t &quot;feel&quot; consistent with existing practice.<br>
&gt; In GASNet we *do* report at runtime if a high-speed network is present and you are not using it.<br>
&gt; For instance we warn if the headers were missing at configure time but we can see the /dev entry at runtime.<br>
&gt; However, we do that uniformly across all the networks and have done this for years.<br>
&gt; So, it is a *consistent* practice in that project.<br>
&gt;<br>
&gt; Keep It Simple Stupid is also an important one.<br>
&gt; So, I agree with those who think the proposal to catch this at runtime is an unnecessary complication.<br>
&gt;<br>
&gt; I think improving the FAQ a good idea<br>
&gt;<br>
&gt; I do, however, I can think of one thing that might help the &quot;I thought I had configured X&quot; problem Jeff mentions.<br>
&gt; What about a summary output at the end of configure or make?<br>
&gt;<br>
&gt; Right now I sometimes use something like the following:<br>
&gt;   $ grep &#39;bindings\.\.\. yes&#39; configure.out<br>
&gt;   $ grep -e &#39;component .* can compile\.\.\. yes&#39; configure.log<br>
&gt; This lets me see what is going to be built.<br>
&gt; Outputing something like this a the end of configure might encourage admins to check for their feature X before typing &quot;make&quot;<br>
&gt; The existing configury goop can easily be modified to keep a list of configured components and language bindings.<br>
&gt;<br>
&gt; However, another alternative is probably easier to implement:<br>
&gt; The last step of &quot;make install&quot; could print a message like<br>
&gt;   NOTICE: Your installation is complete.<br>
&gt;   NOTICE: You can run ompi_info to verify that all expected components and language bindings have been built.<br>
&gt;<br>
&gt; -Paul<br>
&gt;<br>
&gt; On Mon, Jan 25, 2016 at 11:13 AM, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>
&gt; Haters gotta hate.  ;-)<br>
&gt;<br>
&gt; Kidding aside, ok, you make valid points.  So -- no tm &quot;addition&quot;.  We just have to rely on people using functionality like &quot;--with-tm&quot; in the configure line to force/ensure that tm (or whatever feature) will actually get built.<br>
&gt;<br>
&gt;<br>
&gt; &gt; On Jan 25, 2016, at 1:31 PM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<br>
&gt; &gt;<br>
&gt; &gt; I think we would be opening a real can of worms with this idea. There are environments, for example, that use PBSPro for one part of the system (e.g., IO nodes), but something else for the compute section.<br>
&gt; &gt;<br>
&gt; &gt; Personally, I&#39;d rather follow Howard&#39;s suggestion.<br>
&gt; &gt;<br>
&gt; &gt; On Mon, Jan 25, 2016 at 10:21 AM, Nathan Hjelm &lt;<a href="mailto:hjelmn@lanl.gov">hjelmn@lanl.gov</a>&gt; wrote:<br>
&gt; &gt; On Mon, Jan 25, 2016 at 05:55:20PM +0000, Jeff Squyres (jsquyres) wrote:<br>
&gt; &gt; &gt; Hmm.  I&#39;m of split mind here.<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; I can see what Howard is saying here -- adding complexity is usually a bad thing.<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; But we have gotten these problem reports multiple times over the years: someone *thinking* that they have built with launcher support X (e.g., TM, LSF), but then figuring out later that things aren&#39;t running as expected, and after a bunch of work, figure out that it&#39;s because they didn&#39;t build with support X.<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; Gilles idea actually sounds interesting -- if the tm module detect some of the sentinel PBS/TM env variables, emit a show_help() if we don&#39;t have full TM support compiled in.  This would actually save some users a bunch of time and frustration.<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; --&gt; Keep in mind that the SLRUM launcher is different, because it&#39;s all CLI-based (not API-based) and therefore we always build it (because we don&#39;t have to find headers and libraries).<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; FWIW, we do have precedent of having extra MCA params for users to turn off warnings that they don&#39;t want to see.<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; I guess the question here is: is there a valid use case for running in PBS/Torque and *not* wanting to use the TM launcher?<br>
&gt; &gt;<br>
&gt; &gt; Once case comes to mind. In the case of Cray systems that unfortunately<br>
&gt; &gt; run Moab/Toque we can launch using either alps or torque (Howard correct<br>
&gt; &gt; me if I am wrong). When Sam and I originally wrote the XE support we<br>
&gt; &gt; used alps instead of torque. I am not entirely sure what we do now.<br>
&gt; &gt;<br>
&gt; &gt; -Nathan<br>
&gt; &gt;<br>
&gt; &gt; _______________________________________________<br>
&gt; &gt; devel mailing list<br>
&gt; &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; &gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18509.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18509.php</a><br>
&gt; &gt;<br>
&gt; &gt; _______________________________________________<br>
&gt; &gt; devel mailing list<br>
&gt; &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; &gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18510.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18510.php</a><br>
&gt;<br>
&gt;<br>
&gt; --<br>
&gt; Jeff Squyres<br>
&gt; <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
&gt; For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" rel="noreferrer" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18511.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18511.php</a><br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; --<br>
&gt; Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov">PHHargrove@lbl.gov</a><br>
&gt; Computer Languages &amp; Systems Software (CLaSS) Group<br>
&gt; Computer Science Department               Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352">+1-510-495-2352</a><br>
&gt; Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900">+1-510-486-6900</a><br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18513.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18513.php</a><br>
&gt;<br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18514.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18514.php</a><br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; --<br>
&gt; Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov">PHHargrove@lbl.gov</a><br>
&gt; Computer Languages &amp; Systems Software (CLaSS) Group<br>
&gt; Computer Science Department               Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352">+1-510-495-2352</a><br>
&gt; Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900">+1-510-486-6900</a><br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18516.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18516.php</a><br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div>&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18518.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18518.php</a><br>
<span class=""><br>
<br>
--<br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" rel="noreferrer" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</span>Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18520.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18520.php</a><br>
</blockquote></div><br></div>

