<html><head><meta http-equiv="Content-Type" content="text/html charset=us-ascii"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div>**** NOTICE: This RFC modifies the MPI-RTE interface ****</div><div><br></div>WHAT: revise the RTE error handling to allow registration of callbacks upon RTE-detected errors<div><br></div><div>WHY: currently, the RTE aborts the process if an RTE-detected error occurs. This allows the upper layers (e.g., MPI) no chance to implement their own error response strategy, and it precludes allowing user-defined error handling.</div><div><br></div><div>TIMEOUT: &nbsp;let's go for July 19th, pending further discussion</div><div><br></div><div>George and I were talking about ORTE's error handling the other day in regards to the right way to deal with errors in the updated OOB. Specifically, it seemed a bad idea for a library such as ORTE to be aborting the job on its own prerogative. If we lose a connection or cannot send a message, then we really should just report it upwards and let the application and/or upper layers decide what to do about it.</div><div><br></div><div>The current code base only allows a single error callback to exist, which seemed unduly limiting. So, based on the conversation, I've modified the errmgr interface to provide a mechanism for registering any number of error handlers (this replaces the current "set_fault_callback" API). When an error occurs, these handlers will be called in order until one responds that the error has been "resolved" - i.e., no further action is required. The default MPI layer error handler is specified to go "last" and calls mpi_abort, so the current "abort" behavior is preserved unless other error handlers are registered.</div><div><br></div><div>In the register_callback function, I provide an "order" param so you can specify "this callback must come first" or "this callback must come last". Seemed to me that we will probably have different code areas registering callbacks, and one might require it go first (the default "abort" will always require it go last). So you can append and prepend, or go first/last.</div><div><br></div><div>The errhandler callback function passes the name of the proc involved (which can be yourself for internal errors) and the error code. This is a change from the current fault callback which returned an opal_pointer_array of process names.</div><div><br></div><div>The work is available for review in my bitbucket:</div><div><br></div><div><div><a href="https://bitbucket.org/rhc/ompi-errmgr">https://bitbucket.org/rhc/ompi-errmgr</a></div><div><br></div><div>I've attached the svn diff as well.</div><div><br></div><div>Appreciate your comments - nothing in concrete.</div></div><div>Ralph</div><div><br></div><div></div></body></html>
