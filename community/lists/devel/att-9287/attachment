<html><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div>Jeff,</div><div><br></div><div>I get the following warnings from "make" using the Intel 2011.3.174 compilers on OpenMPI 1.4.3:</div><div><div><br></div><div></div><blockquote type="cite"></blockquote></div><div><blockquote type="cite"><div>btl_openib_endpoint.c(319): warning #188: enumerated type mixed with another type</div><div><font class="Apple-style-span" color="#000000">btl_openib_async.c(411): warning #188: enumerated type mixed with another type</font></div><div><font class="Apple-style-span" color="#000000">btl_openib_async.c(454): warning #188: enumerated type mixed with another type</font></div><div><font class="Apple-style-span" color="#000000">btl_openib_async.c(472): warning #188: enumerated type mixed with another type</font></div><div><font class="Apple-style-span" color="#000000">btl_openib_async.c(510): warning #188: enumerated type mixed with another type</font></div><div><font class="Apple-style-span" color="#000000">connect/btl_openib_connect_oob.c(289): warning #188: enumerated type mixed with another type</font></div><div><font class="Apple-style-span" color="#000000">connect/btl_openib_connect_xoob.c(462): warning #188: enumerated type mixed with another type</font></div><div><font class="Apple-style-span" color="#000000">connect/btl_openib_connect_xoob.c(563): warning #188: enumerated type mixed with another type</font></div></blockquote></div><div><div><br></div></div><div>These are all warnings caused by mixing enums and ints as though they were interchangeable. &nbsp;This concerns me, because, one can mistakenly assume the only possible values of an enum data type are the range of valid enum constants. &nbsp;That can make debugging such errors very difficult. &nbsp;I do not know if you are aware of these.</div><div><br></div><div>I found the following:</div><div><br></div><div>1) ompi/mca/btl/openib/btl_openib/btl_openib_endpoint.c(319): warning #188: enumerated type mixed with another type:</div><div><br><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;ep-&gt;rem_info.rem_transport_type = (remote_proc_info-&gt;pm_port_info).transport_type;</font></div></blockquote></div><div><div><br></div></div><div>The left side is an enum&nbsp;mca_btl_openib_transport_type_t (from&nbsp;ompi/mca/btl/openib/btl_openib.h):</div><div><br><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">/**</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;* Infiniband (IB) BTL component.</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;*/</font></div><div><font class="Apple-style-span" color="#000000"><br></font></div><div><font class="Apple-style-span" color="#000000">typedef enum {</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;MCA_BTL_OPENIB_TRANSPORT_IB,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;MCA_BTL_OPENIB_TRANSPORT_IWARP,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;MCA_BTL_OPENIB_TRANSPORT_RDMAOE,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;MCA_BTL_OPENIB_TRANSPORT_UNKNOWN,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;MCA_BTL_OPENIB_TRANSPORT_SIZE</font></div><div><font class="Apple-style-span" color="#000000">} mca_btl_openib_transport_type_t;</font></div></blockquote></div><div><div><br></div></div><div><div>, while the right side is a uint8_t (also from&nbsp;ompi/mca/btl/openib/btl_openib.h):</div></div><br><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">/**</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;* Common information for all ports that is sent in the modex message</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;*/</font></div><div><font class="Apple-style-span" color="#000000">typedef struct mca_btl_openib_modex_message_t {</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;/** The subnet ID of this port */</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;uint64_t subnet_id;</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;/** LID of this port */</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;uint16_t lid;</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;/** APM LID for this port */</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;uint16_t apm_lid;</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;/** The MTU used by this port */</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;uint8_t mtu;</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;/** vendor id define device type and tuning */</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;uint32_t vendor_id;</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;/** vendor part id define device type and tuning */</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;uint32_t vendor_part_id;</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;/** Transport type of remote port */</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;uint8_t transport_type;</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;/** Dummy field used to calculate the real length */</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;uint8_t end;</font></div><div><font class="Apple-style-span" color="#000000">} mca_btl_openib_modex_message_t;</font></div></blockquote><div><div><br></div></div><div>I would think&nbsp;mca_btl_openib_modex_message_t.transport_type should be a compatible enum as well. &nbsp;At least there should be some code somewhere with asserts or validity checks in, say, a switch block when DEBUG=1, and a cast otherwise.</div><div><br></div><div>2) ompi/mca/btl/openib/btl_openib/btl_openib_async.c(411): warning #188: enumerated type mixed with another type, and</div><div>ompi/mca/btl/openib/btl_openib_async.c(454): warning #188: enumerated type mixed with another type:</div><div><div><br></div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">static ... ( ... enum ibv_qp_attr_mask *mask ... )</font></div><div><font class="Apple-style-span" color="#000000">{</font></div></blockquote>&lt;snip&gt;<br><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;*mask = IBV_QP_ALT_PATH|IBV_QP_PATH_MIG_STATE;</font></div></blockquote></div><div><div><br></div></div><div><div>ompi/mca/btl/openib/btl_openib_async.c(472): warning #188: enumerated type mixed with another type, and</div><div>ompi/mca/btl/openib/btl_openib_async.c(510): warning #188: enumerated type mixed with another type:</div></div><div><br></div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;enum ibv_qp_attr_mask mask = 0;</font></div></blockquote></div><div><div><br></div></div><div>These four warnings are all due to mixing the definition of bitfields using a C enum type (from /usr/include/infiniband/verbs.h):</div><div><br></div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">enum ibv_qp_attr_mask {</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_STATE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; &nbsp;0,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_CUR_STATE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; &nbsp;1,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_EN_SQD_ASYNC_NOTIFY &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; &nbsp;2,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_ACCESS_FLAGS &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; &nbsp;3,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_PKEY_INDEX &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; &nbsp;4,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_PORT &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; &nbsp;5,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_QKEY &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; &nbsp;6,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_AV &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; &nbsp;7,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_PATH_MTU &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; &nbsp;8,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_TIMEOUT &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; &nbsp;9,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_RETRY_CNT &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; 10,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_RNR_RETRY &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; 11,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_RQ_PSN &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; 12,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_MAX_QP_RD_ATOMIC &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; 13,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_ALT_PATH &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; 14, &nbsp; &nbsp; &nbsp;</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_MIN_RNR_TIMER &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; 15,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_SQ_PSN &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; 16,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_MAX_DEST_RD_ATOMIC &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; 17,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_PATH_MIG_STATE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; 18,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_CAP &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; 19,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_QP_DEST_QPN &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1 &lt;&lt; 20</font></div><div><font class="Apple-style-span" color="#000000">};</font></div></blockquote></div><div><div><br></div></div><div>The warning is really an error, since neither the right hand side "IBV_QP_ALT_PATH|IBV_QP_PATH_MIG_STATE" nor "0" is one of the&nbsp;enum ibv_qp_attr_mask&nbsp;values, and is therefore not a valid member of that data type. &nbsp;I'm not really sure there is a better way, since C does not guarantee the order of bitfields. &nbsp;Anyway, since C permits enums to be used wherever ints can be used, the right hand side of</div><div><br></div><div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;*mask = IBV_QP_ALT_PATH|IBV_QP_PATH_MIG_STATE;</font></div></blockquote></div><div></div></div><div><br></div><div>is equivalent to</div><div><br></div><div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;*mask = (int) IBV_QP_ALT_PATH | (int) IBV_QP_PATH_MIG_STATE;</font></div></blockquote></div><div></div></div><div apple-content-edited="true"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div><div><div><div><div><div><div><div><div></div></div></div></div></div></div></div></div></div></div></div><div><br></div><div>, which results in an int. &nbsp;(And, of course, = 0 is an int.)</div><div><div><br></div><div>The simplest fix would be to cast the result into an&nbsp;enum ibv_qp_attr_mask, with comments added that&nbsp;enum ibv_qp_attr_mask *mask&nbsp;is really the union of all the bitfields in&nbsp;enum ibv_qp_attr_mask, and that the value of *mask may not be a valid&nbsp;enum ibv_qp_attr_mask.</div><div><br></div><div>3)&nbsp;ompi/mca/btl/openib/btl_openib/connect/btl_openib_connect_oob.c(289): warning #188: enumerated type mixed with another type,</div><div><br></div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;enum ibv_mtu mtu = (openib_btl-&gt;device-&gt;mtu &lt; endpoint-&gt;rem_info.rem_mtu) ?</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;openib_btl-&gt;device-&gt;mtu : endpoint-&gt;rem_info.rem_mtu;</font></div></blockquote></div><div><div><br></div></div><div>ompi/mca/btl/openib/btl_openib/connect/btl_openib_connect_xoob.c(462): warning #188: enumerated type mixed with another type, and</div><div><br></div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;attr.path_mtu = (openib_btl-&gt;device-&gt;mtu &lt; endpoint-&gt;rem_info.rem_mtu) ?</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;openib_btl-&gt;device-&gt;mtu : rem_info-&gt;rem_mtu;</font></div></blockquote></div><div><div><br></div></div><div>ompi/mca/btl/openib/btl_openib/connect/btl_openib_connect_xoob.c(563): warning #188: enumerated type mixed with another type:</div><div><br></div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;attr.path_mtu = (openib_btl-&gt;device-&gt;mtu &lt; endpoint-&gt;rem_info.rem_mtu) ?</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;openib_btl-&gt;device-&gt;mtu : rem_info-&gt;rem_mtu;</font></div></blockquote></div><div><div><br></div></div><div>The left hand sides are encoded MTUs (enum ibv_mtu, from /usr/include/infiniband/verbs.h):</div><div><br></div><div><blockquote type="cite"></blockquote></div></div><div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">enum ibv_mtu {</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_MTU_256 &nbsp;= 1,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_MTU_512 &nbsp;= 2,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_MTU_1024 = 3,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_MTU_2048 = 4,</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;IBV_MTU_4096 = 5</font></div><div><font class="Apple-style-span" color="#000000">};</font></div></blockquote></div><div><div><br></div></div><div><div><div>, while the&nbsp;openib_btl-&gt;device-&gt;mtu and&nbsp;rem_info-&gt;rem_mtu&nbsp;on the right hand sides are uint32_t's (encoded?).</div></div></div><div><br></div><div>By the way, lines 563-564 in&nbsp;ompi/mca/btl/openib/btl_openib/connect/btl_openib_connect_xoob.c look suspicious to me:</div><div><br></div><div><blockquote type="cite"><div>ompi/mca/btl/openib/btl_openib/connect/btl_openib_connect_xoob.c(563): warning #188: enumerated type mixed with another type:</div><div><br></div><div><blockquote type="cite"><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp;attr.path_mtu = (openib_btl-&gt;device-&gt;mtu &lt; endpoint-&gt;rem_info.rem_mtu) ?</font></div><div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;openib_btl-&gt;device-&gt;mtu : rem_info-&gt;rem_mtu;</font></div></blockquote></div><div></div></blockquote></div><div><br></div><div>The test on the right hand side of the conditional is&nbsp;endpoint-&gt;rem_info.rem_mtu, while the "false" expression is&nbsp;rem_info-&gt;rem_mtu. &nbsp;I suspect one of them is not correct.</div><div><br></div><div>Larry Baker</div></div></div><div apple-content-edited="true"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div><div><div><div><div><div><div><div><div><div>US Geological Survey</div><div>650-329-5608</div><div><a href="mailto:baker@usgs.gov">baker@usgs.gov</a></div></div></div></div></div></div></div></div></div></div></div> </div><br><div><div>On 5 May 2011, at 7:15 AM, Jeff Squyres wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div>Fixed the ROMIO attribute problem properly this time -- it's in the usual place:<br><br> &nbsp;&nbsp;&nbsp;<a href="http://www.open-mpi.org/software/ompi/v1.4/">http://www.open-mpi.org/software/ompi/v1.4/</a><br><br>-- <br>Jeff Squyres<br><a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>For corporate legal information go to:<br>http://www.cisco.com/web/about/doing_business/legal/cri/<br><br><br>_______________________________________________<br>devel mailing list<br>devel@open-mpi.org<br>http://www.open-mpi.org/mailman/listinfo.cgi/devel<br></div></blockquote></div><br></body></html>
