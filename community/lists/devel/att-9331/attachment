I agree - let&#39;s not get overly complex unless we can clearly articulate a requirement to do so.<br><br><div class="gmail_quote">On Thu, Jun 9, 2011 at 10:45 AM, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@eecs.utk.edu">bosilca@eecs.utk.edu</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">This will require exactly opposite registration and de-registration order, or no de-registration at all (aka no way to unload a component). Or some even more complex code to deal with internally.<br>

<br>
If the error manager handle the callbacks it can use the registration ordering (which will be what the the approach can do), and can enforce that all callbacks will be called. I would rather prefer this approach.<br>
<font color="#888888"><br>
  george.<br>
</font><div class="im"><br>
On Jun 9, 2011, at 08:36 , Josh Hursey wrote:<br>
<br>
&gt; I would prefer returning the previous callback instead of relying on<br>
&gt; the errmgr to get the ordering right. Additionally, when I want to<br>
&gt; unregister (or replace) a call back it is easy to do that with a<br>
&gt; single interface, than introducing a new one to remove a particular<br>
&gt; callback.<br>
&gt; Register:<br>
&gt;  ompi_errmgr.set_fault_callback(my_callback, prev_callback);<br>
&gt; Deregister:<br>
&gt;  ompi_errmgr.set_fault_callback(prev_callback, old_callback);<br>
&gt; or to eliminate all callbacks (if you needed that for somme reason):<br>
&gt;  ompi_errmgr.set_fault_callback(NULL, old_callback);<br>
<br>
<br>
</div><div><div></div><div class="h5">_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br>

