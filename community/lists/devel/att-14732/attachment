<div dir="ltr"><div class="gmail_extra"><br><div class="gmail_quote">2014-05-08 7:15 GMT+07:00 Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span>:<br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">
<div style="word-wrap:break-word">Take a look in opal/mca/common/pmi - we already do a bunch of #if PMI2 stuff in there. All we are talking about doing here is:<div><br></div><div>* making those selections be runtime based on an MCA param, compiling if PMI2 is available but selected at runtime</div>
<div><br></div><div>* moving some additional functions into that code area and out of the individual components</div></div></blockquote><div><br></div><div>Ok, that is pretty clear now. And will do exactly #2.</div><div>Thank you.<br>
</div><div> </div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div style="word-wrap:break-word"><div><br>
</div><div><br><div><div><div class="h5"><div>On May 7, 2014, at 5:08 PM, Artem Polyakov &lt;<a href="mailto:artpol84@gmail.com" target="_blank">artpol84@gmail.com</a>&gt; wrote:</div><br></div></div><blockquote type="cite">
<div><div class="h5"><div dir="ltr">I like #2 too. <div>But my question was slightly different. Can we incapsulate PMI logic that OMPI use in <span style="font-family:arial,sans-serif;font-size:13px">common/pmi as #2 suggests but have 2 different implementations of this component say </span><span style="font-size:13px;font-family:arial,sans-serif">common/pmi and </span><span style="font-size:13px;font-family:arial,sans-serif">common/pmi2? I am asking because I have concerns that this kind of component is not supposed to be duplicated.</span></div>

<div><span style="font-size:13px;font-family:arial,sans-serif">In this case we could have one common MCA parameter and 2 components as it was suggested by Jeff.</span></div></div><div class="gmail_extra">
<br><br><div class="gmail_quote">2014-05-08 7:01 GMT+07:00 Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span>:<br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">

<div style="word-wrap:break-word">The desired solution is to have the ability to select pmi-1 vs pmi-2 at runtime. This can be done in two ways:<div><br></div><div>1. you could have separate pmi1 and pmi2 components in each framework. You&#39;d want to define only one common MCA param to direct the selection, however.</div>

<div><br></div><div>2. you could have a single pmi component in each framework, calling code in the appropriate common/pmi location. You would then need a runtime MCA param to select whether pmi-1 or pmi-2 was going to be used, and have the common code check before making the desired calls.</div>

<div><br></div><div>The choice of method is left up to you. They each have their negatives. If it were me, I&#39;d probably try #2 first, assuming the codes are mostly common in the individual frameworks.</div><div><br></div>

<div><br></div><div><div><div><div><div>On May 7, 2014, at 4:51 PM, Artem Polyakov &lt;<a href="mailto:artpol84@gmail.com" target="_blank">artpol84@gmail.com</a>&gt; wrote:</div><br></div></div><blockquote type="cite">
<div style="font-family:Helvetica;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px">

<div><div><div dir="ltr">Just reread your suggestions in our out-of-list discussion and found that I misunderstand it. So no parallel PMI! Take all possible code into <span style="font-family:arial,sans-serif;font-size:13px">opal/mca/common/pmi.</span><div>

<span style="font-family:arial,sans-serif;font-size:13px">To additionally clarify what is the preferred way:</span></div><div><span style="font-family:arial,sans-serif;font-size:13px">1. to create one joined PMI module having a switches to decide what functiononality to implement.</span></div>

<div><span style="font-family:arial,sans-serif;font-size:13px">2. or to have 2 separate common modules for PMI1 and one for PMI2, and does this fit </span><span style="font-family:arial,sans-serif;font-size:13px">opal/mca/common/ ideology at all</span><span style="font-family:arial,sans-serif;font-size:13px">?</span></div>

</div><div class="gmail_extra"><br><br><div class="gmail_quote">2014-05-08 6:44 GMT+07:00 Artem Polyakov<span> </span><span dir="ltr">&lt;<a href="mailto:artpol84@gmail.com" target="_blank">artpol84@gmail.com</a>&gt;</span>:<br>

<blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div dir="ltr"><div class="gmail_extra"><br><div class="gmail_quote">

2014-05-08 5:54 GMT+07:00 Ralph Castain<span> </span><span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span>:<div><br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">

<div style="word-wrap:break-word">Ummm....no, I don&#39;t think that&#39;s right. I believe we decided to instead create the separate components, default to PMI-2 if available, print nice error message if not, otherwise use PMI-1.<div>

<br></div><div>I don&#39;t want to initialize both PMIs in parallel as most installations won&#39;t support it.</div></div></blockquote><div><br></div></div><div>Ok, I agree. Beside the lack of support there can be a performance hit caused by PMI1 initialization at scale. This is not a case of SLURM PMI1 since it is quite simple and local. But I didn&#39;t consider other implementations.</div>

<div><br></div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div><div style="word-wrap:break-word">
<div><div><div>On May 7, 2014, at 3:49 PM, Artem Polyakov &lt;<a href="mailto:artpol84@gmail.com" target="_blank">artpol84@gmail.com</a>&gt; wrote:</div><br></div><blockquote type="cite"><div style="font-family:Helvetica;font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px">

<div><div dir="ltr"><div class="gmail_extra"><div>We discussed with Ralph Joshuas concerns and decided to try automatic PMI2 correctness first as it was initially intended. Here is my idea. The universal way to decide if PMI2 is correct is to compare PMI_Init(.., &amp;rank, &amp;size, ...) and PMI2_Init(.., &amp;rank, &amp;size, ...). Size and rank should be equal. In this case we proceed with PMI2 finalizing PMI1. Otherwise we finalize PMI2 and proceed with PMI1.</div>

<div>I need to clarify with SLURM guys if parallel initialization of both PMIs are legal. If not - we&#39;ll do that sequentially. </div><div>In other places we&#39;ll just use the flag saying what PMI version to use.</div>

<div>Does that sounds reasonable?</div><br><div class="gmail_quote">2014-05-07 23:10 GMT+07:00 Artem Polyakov<span> </span><span dir="ltr">&lt;<a href="mailto:artpol84@gmail.com" target="_blank">artpol84@gmail.com</a>&gt;</span>:<br>

<blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div dir="ltr">That&#39;s a good point. There is actually a bunch of modules in ompi, opal and orte that has to be duplicated.<br>

<br>среда, 7 мая 2014 г. пользователь Joshua Ladd написал:<br><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">

<div><div dir="ltr"><div>+1 Sounds like a good idea - but decoupling the two and adding all the right selection mojo might be a bit of a pain. There are several places in OMPI where the distinction between PMI1and PMI2 is made, not only in grpcomm. DB and ESS frameworks off the top of my head.<br>

<br></div>Josh<br></div></div><div class="gmail_extra"><br><br><div class="gmail_quote"><div>On Wed, May 7, 2014 at 11:48 AM, Artem Polyakov<span> </span><span dir="ltr">&lt;<a>artpol84@gmail.com</a>&gt;</span><span> </span>wrote:<br>

</div><blockquote class="gmail_quote" style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div>Good idea :)!<span></span><br><br>среда, 7 мая 2014 г. пользователь Ralph Castain написал:<div>

<br><blockquote style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div style="word-wrap:break-word">Jeff actually had a useful suggestion (gasp!).He proposed that we separate the PMI-1 and PMI-2 codes into separate components so you could select them at runtime. Thus, we would build both (assuming both PMI-1 and 2 libs are found), default to PMI-1, but users could select to try PMI-2. If the PMI-2 component failed, we would emit a show_help indicating that they probably have a broken PMI-2 version and should try PMI-1.<div>

<br></div><div>Make sense?</div><div>Ralph</div><div><br><div><div>On May 7, 2014, at 8:00 AM, Ralph Castain &lt;<a>rhc@open-mpi.org</a>&gt; wrote:</div><br><blockquote type="cite"><div style="word-wrap:break-word"><br><div>

<div>On May 7, 2014, at 7:56 AM, Joshua Ladd &lt;<a>jladd.mlnx@gmail.com</a>&gt; wrote:</div><br><blockquote type="cite"><div dir="ltr">Ah, I see. Sorry for the reactionary comment - but this feature falls squarely within my &quot;jurisdiction&quot;, and we&#39;ve invested a lot in improving OMPI jobstart under srun.<span> </span><br>

<br>That being said (now that I&#39;ve taken some deep breaths and carefully read your original email :)), what you&#39;re proposing isn&#39;t a bad idea. I think it would be good to maybe add a &quot;--with-pmi2&quot; flag to configure since &quot;--with-pmi&quot; automagically uses PMI2 if it finds the header and lib. This way, we could experiment with PMI1/PMI2 without having to rebuild SLURM or hack the installation.<span> </span><br>

</div></blockquote><div><br></div>That would be a much simpler solution than what Artem proposed (off-list) where we would try PMI2 and then if it didn&#39;t work try to figure out how to fall back to PMI1. I&#39;ll add this for now, and if Artem wants to try his more automagic solution and can make it work, then we can reconsider that option.</div>

<div><br></div><div>Thanks</div><div>Ralph</div><div><br><blockquote type="cite"><div dir="ltr"><div><br></div>Josh <span> </span><br></div><div><br><br><div>On Wed, May 7, 2014 at 10:45 AM, Ralph Castain<span> </span><span dir="ltr">&lt;<a>rhc@open-mpi.org</a>&gt;</span><span> </span>wrote:<br>

<blockquote style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div style="word-wrap:break-word">Okay, then we&#39;ll just have to develop a workaround for all those Slurm releases where PMI-2 is borked :-(<div>

<br></div><div>FWIW: I think people misunderstood my statement. I specifically did *not* propose to *lose* PMI-2 support. I suggested that we change it to &quot;on-by-request&quot; instead of the current &quot;on-by-default&quot; so we wouldn&#39;t keep getting asked about PMI-2 bugs in Slurm. Once the Slurm implementation stabilized, then we could reverse that policy.</div>

<div><br></div><div>However, given that both you and Chris appear to prefer to keep it &quot;on-by-default&quot;, we&#39;ll see if we can find a way to detect that PMI-2 is broken and then fall back to PMI-1.</div><div><br>

</div><div><br><div><div><div>On May 7, 2014, at 7:39 AM, Joshua Ladd &lt;<a>jladd.mlnx@gmail.com</a>&gt; wrote:</div><br></div><blockquote type="cite"><div dir="ltr"><div><div><div><div>Just saw this thread, and I second Chris&#39; observations: at scale we are seeing huge gains in jobstart performance with PMI2 over PMI1. We<span> </span><b>CANNOT</b><span> </span>loose this functionality. For competitive reasons, I cannot provide exact numbers, but let&#39;s say the difference is in the ballpark of a full order-of-magnitude on 20K ranks versus PMI1. PMI1 is completely unacceptable/unusable at scale. Certainly PMI2 still has scaling issues, but there is no contest between PMI1 and PMI2.  We (MLNX) are actively working to resolve some of the scalability issues in PMI2.<span> </span><br>

<br></div>Josh<br><br></div><div>Joshua S. Ladd<br></div>Staff Engineer, HPC Software<br></div>Mellanox Technologies<br><br></div>Email:<span> </span><a>joshual@mellanox.com</a><br></div><div><br><br><div>On Wed, May 7, 2014 at 4:00 AM, Ralph Castain<span> </span><span dir="ltr">&lt;<a>rhc@open-mpi.org</a>&gt;</span><span> </span>wrote:<br>

<blockquote style="margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">Interesting - how many nodes were involved? As I said, the bad scaling becomes more evident at a fairly high node count.<br>

<div><br>On May 7, 2014, at 12:07 AM, Christopher Samuel &lt;<a>samuel@unimelb.edu.au</a>&gt; wrote:<br><br>&gt; -----BEGIN PGP SIGNED MESSAGE-----<br>&gt; Hash: SHA1<br>&gt;<br>&gt; Hiya Ralph,<br>&gt;<br>&gt; On 07/05/14 14:49, Ralph Castain wrote:<br>

&gt;<br>&gt;&gt; I should have looked closer to see the numbers you posted, Chris -<br>&gt;&gt; those include time for MPI wireup. So what you are seeing is that<br>&gt;&gt; mpirun is much more efficient at exchanging the MPI endpoint info<br>

&gt;&gt; than PMI. I suspect that PMI2 is not much better as the primary<br>&gt;&gt; reason for the difference is that mpriun sends blobs, while PMI<br>&gt;&gt; requires that everything b</div></blockquote></div></div></blockquote>

</div></div></div></blockquote></div></div></blockquote></div></div></blockquote></div></div></div></blockquote></div></div>_______________________________________________<div><br>devel mailing list<br><a>devel@open-mpi.org</a><br>

Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/05/14716.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14716.php</a><br>

</div></blockquote></div><br></div></blockquote></div></blockquote></div><br><br clear="all"><div><br></div>--<span> </span><br>С Уважением, Поляков Артем Юрьевич<br>Best regards, Artem Y. Polyakov</div></div>_______________________________________________<br>

devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>

</div>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/05/14725.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14725.php</a></div></blockquote></div>
<br>
</div><br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>

</div>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/05/14726.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14726.php</a><br></blockquote></div>
<div><br><br clear="all"><div><br></div>--<span> </span><br>С Уважением, Поляков Артем Юрьевич<br>Best regards, Artem Y. Polyakov</div></div></div></blockquote></div><br><br clear="all"><div><br></div>--<span> </span><br>

С Уважением, Поляков Артем Юрьевич<br>Best regards, Artem Y. Polyakov</div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>

Subscription:<span> </span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></div></div>Link to this post:<span> </span><a href="http://www.open-mpi.org/community/lists/devel/2014/05/14728.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14728.php</a></div>

</blockquote></div><br></div></div><br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/05/14729.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14729.php</a><br></blockquote></div><br><br clear="all"><div>

<br></div>-- <br>С Уважением, Поляков Артем Юрьевич<br>Best regards, Artem Y. Polyakov
</div>
_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div>Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/05/14730.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14730.php</a></blockquote></div><br></div></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2014/05/14731.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2014/05/14731.php</a><br></blockquote></div><br><br clear="all"><div>
<br></div>-- <br>С Уважением, Поляков Артем Юрьевич<br>Best regards, Artem Y. Polyakov
</div></div>

