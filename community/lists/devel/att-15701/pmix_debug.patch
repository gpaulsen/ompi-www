Index: opal/mca/pmix/native/pmix_native.c
===================================================================
--- opal/mca/pmix/native/pmix_native.c	(revision 32594)
+++ opal/mca/pmix/native/pmix_native.c	(working copy)
@@ -390,9 +390,17 @@
     size_t i;
     uint32_t np;
 
-    opal_output_verbose(2, opal_pmix_base_framework.framework_output,
+    if (2 == nprocs) {
+        opal_output_verbose(2, opal_pmix_base_framework.framework_output,
+                        "%s pmix:native executing fence on %u procs %s and %s",
+                        OPAL_NAME_PRINT(OPAL_PROC_MY_NAME), (unsigned int)nprocs,
+                        OPAL_NAME_PRINT(procs[0]),
+                        OPAL_NAME_PRINT(procs[1]));
+    } else {
+        opal_output_verbose(2, opal_pmix_base_framework.framework_output,
                         "%s pmix:native executing fence on %u procs",
                         OPAL_NAME_PRINT(OPAL_PROC_MY_NAME), (unsigned int)nprocs);
+    }
 
     if (NULL == mca_pmix_native_component.uri) {
         /* no server available, so just return */
@@ -545,9 +553,17 @@
 
     OBJ_RELEASE(cb);
 
-    opal_output_verbose(2, opal_pmix_base_framework.framework_output,
-                        "%s pmix:native fence released",
-                        OPAL_NAME_PRINT(OPAL_PROC_MY_NAME));
+    if (2 == nprocs) {
+        opal_output_verbose(2, opal_pmix_base_framework.framework_output,
+                        "%s pmix:native fence released on %u procs %s and %s",
+                        OPAL_NAME_PRINT(OPAL_PROC_MY_NAME), (unsigned int)nprocs,
+                        OPAL_NAME_PRINT(procs[0]),
+                        OPAL_NAME_PRINT(procs[1]));
+    } else {
+        opal_output_verbose(2, opal_pmix_base_framework.framework_output,
+                        "%s pmix:native fence released on %u procs",
+                        OPAL_NAME_PRINT(OPAL_PROC_MY_NAME), (unsigned int)nprocs);
+    }
 
     return OPAL_SUCCESS;
 }

