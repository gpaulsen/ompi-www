<div dir="ltr"><div><div><div>George<br><br></div>Thanks for your help. But what should the progress function return, so that the event is signalled? Right now I am returning a 1 when data has been transmitted and 0 otherwise, but that does not seem to work. Also, please keep in mind that the transport I am working on supports unreliable datagrams only, so there is no ack from the recipient to wait for.<br><br></div>Thanks again<br></div>Durga<br></div><div class="gmail_extra"><br clear="all"><div><div class="gmail_signature"><div dir="ltr"><div><div dir="ltr">The surgeon general advises you to eat right, exercise regularly and quit ageing.</div></div></div></div></div>
<br><div class="gmail_quote">On Thu, May 5, 2016 at 11:33 PM, George Bosilca <span dir="ltr">&lt;<a href="mailto:bosilca@icl.utk.edu" target="_blank">bosilca@icl.utk.edu</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Durga,<div><br></div><div>TCP doesn&#39;t need a specialized progress function because we are tied directly with libevent. In your case you should provide a BTL progress function, function that will be called at the end of libevent base loop regularly.</div><div><br></div><div>  George.</div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote"><div><div class="h5">On Thu, May 5, 2016 at 11:30 PM, dpchoudh . <span dir="ltr">&lt;<a href="mailto:dpchoudh@gmail.com" target="_blank">dpchoudh@gmail.com</a>&gt;</span> wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div class="h5"><div dir="ltr"><div><div><div><div><div><div><div><div><div>Hi all<br><br></div>Apologies for a 101 level question again, but here it is:<br><br></div>A new BTL layer I am implementing hangs in MPI_Send(). Please keep in mind that at this stage, I am simply desperate to make MPI data move through this fabric in any way possible, so I have thrown all good programming practice out of the window and in the process might have added bugs.<br><br></div>The test code basically has a single call to MPI_Send() with 8 bytes of data, the smallest amount the HCA can DMA. I have a very simple mca_btl_component_progress() method that returns 0 if called before mca_btl_endpoint_send() and returns 1 if called after. I use a static variable to keep track whether endpoint_send() has been called.<br><br></div>With this, the MPI process hangs with the following stack:<br><br><span style="font-family:monospace,monospace">(gdb) bt<br>#0  0x00007f7518c60b7d in poll () from /lib64/libc.so.6<br>#1  0x00007f75183e79f6 in poll_dispatch (base=0x19cf480, tv=0x7f75177efe80) at poll.c:165<br>#2  0x00007f75183df690 in opal_libevent2022_event_base_loop (base=0x19cf480, flags=1) at event.c:1630<br>#3  0x00007f75183613d4 in progress_engine (obj=0x19cedd8) at runtime/opal_progress_threads.c:105<br>#4  0x00007f7518f3ddf5 in start_thread () from /lib64/libpthread.so.0<br>#5  0x00007f7518c6b1ad in clone () from /lib64/libc.so.6</span><br><br></div>I am using code from master branch for this work.<br><br></div>Obviously I am not doing the progress handling right, and I don&#39;t even understand how it should work, as the TCP btl does not even provide a component progress function.<br><br></div>Any relevant pointer on how this should be done is highly appreciated.<br><br></div>Thanks<br></div>Durga<br><div><div><div><div><div><div><div><br><br clear="all"><div><div><div><div><div><div><div dir="ltr"><div><div dir="ltr">The surgeon general advises you to eat right, exercise regularly and quit ageing.</div></div></div></div></div>
</div></div></div></div></div></div></div></div></div></div></div></div>
<br></div></div>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18919.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/18919.php</a><br></blockquote></div><br></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18920.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/18920.php</a><br></blockquote></div><br></div>

