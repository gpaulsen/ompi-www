I hope you&#39;ll understand if I don&#39;t run that test while on the road...one battery yank per week is my limit :-)<div><br><br><div class="gmail_quote">On Fri, Sep 24, 2010 at 4:40 AM, Jeff Squyres (jsquyres) <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;"><div bgcolor="#FFFFFF"><div>Also to clarify:</div><div><br></div><div>- did autogen set am-jobs to 2 in your case?  (it should do that if lstopo is not found - it also limits itself to 4 at max)</div>
<div><br></div><div>- in the same scenario, what happens if you manually set am-jobs to 1 and run autogen?  Ie do you get the same heat/sluggishness?  I have experienced vms causing this kind of behavior just because they are running - causing CPU and memory pressure. </div>
<div><br>Sent from my PDA.<span> No type good. </span></div><div><div></div><div class="h5"><div><br>On Sep 24, 2010, at 12:49 AM, &quot;Ralph Castain&quot; &lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt; wrote:<br>
<br></div><div></div><blockquote type="cite"><div>Sent to both for reference (see below)<div><br></div><div>Just to clarify. It wasn&#39;t a deadlock situation, but rather that the machine was overloaded and running so hard that the response to keystrokes was multiple seconds. Thus, there was no way to shut it down from the keyboard or screen. Even a ctrl-c was just getting ignored for a very long time due to the overload.</div>

<div><br></div><div>I was running vmware on my machine, and doing a heavy compile/build in it. On top of this, I had email, editor, and browsers running - and then kicked off a fresh build in a terminal window. With Jeff&#39;s default settings, this latter build thought it would be running alone on the machine, and promptly generated a number of threads equal to all the processors. Since they were already loaded, this drove the machine into the ground.</div>

<div><br></div><div>My point is just that it is unwise to assume that the OMPI build can utilize all available processors. I&#39;m sure it&#39;s fine for the MTT runs, especially on Jeff&#39;s machines as they are dedicated to that purpose - just not a good general assumption.<br>

<div><br></div><div><br></div><div>HTH</div><div>Ralph</div><div><br></div><div>====================================</div><div>Output of &quot;perl -V&quot;:</div><div><br></div><div><div>Summary of my perl5 (revision 5 version 8 subversion 9) configuration:</div>

<div>  Platform:</div><div>    osname=darwin, osvers=10.2.0, archname=darwin-2level</div><div>    uname=&#39;darwin <a href="http://sjc-rcastain-87111.cisco.com" target="_blank"></a><a href="http://sjc-rcastain-87111.cisco.com" target="_blank">sjc-rcastain-87111.cisco.com</a> 10.2.0 darwin kernel version 10.2.0: tue nov 3 10:37:10 pst 2009; root:xnu-1486.2.11~1release_i386 i386 &#39;</div>

<div>    config_args=&#39;-des -D prefix=/opt/local -D scriptdir=/opt/local/bin -D cppflags=-I/opt/local/include -D ccflags=-O2 -arch x86_64 -D ldflags=-L/opt/local/lib -D vendorprefix=/opt/local -D man1ext=1pm -D man3ext=3pm -D cc=/usr/bin/gcc-4.2 -D ld=/usr/bin/gcc-4.2 -D man1dir=/opt/local/share/man/man1p -D man3dir=/opt/local/share/man/man3p -D siteman1dir=/opt/local/share/man/man1 -D siteman3dir=/opt/local/share/man/man3 -D vendorman1dir=/opt/local/share/man/man1 -D vendorman3dir=/opt/local/share/man/man3 -D inc_version_list=5.8.8 5.8.8/darwin-2level -U i_bind -U i_gdbm -U i_db&#39;</div>

<div>    hint=recommended, useposix=true, d_sigaction=define</div><div>    usethreads=undef use5005threads=undef useithreads=undef usemultiplicity=undef</div><div>    useperlio=define d_sfio=undef uselargefiles=define usesocks=undef</div>

<div>    use64bitint=define use64bitall=define uselongdouble=undef</div><div>    usemymalloc=n, bincompat5005=undef</div><div>  Compiler:</div><div>    cc=&#39;/usr/bin/gcc-4.2&#39;, ccflags =&#39;-O2 -arch x86_64 -fno-common -DPERL_DARWIN -I/opt/local/include -no-cpp-precomp -fno-strict-aliasing -pipe -I/usr/local/include -I/opt/local/include&#39;,</div>

<div>    optimize=&#39;-O3&#39;,</div><div>    cppflags=&#39;-I/opt/local/include -no-cpp-precomp -O2 -arch x86_64 -fno-common -DPERL_DARWIN -I/opt/local/include -no-cpp-precomp -fno-strict-aliasing -pipe -I/usr/local/include -I/opt/local/include&#39;</div>

<div>    ccversion=&#39;&#39;, gccversion=&#39;4.2.1 (Apple Inc. build 5646) (dot 1)&#39;, gccosandvers=&#39;&#39;</div><div>    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678</div><div>    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16</div>

<div>    ivtype=&#39;long&#39;, ivsize=8, nvtype=&#39;double&#39;, nvsize=8, Off_t=&#39;off_t&#39;, lseeksize=8</div><div>    alignbytes=8, prototype=define</div><div>  Linker and Libraries:</div><div>    ld=&#39;env MACOSX_DEPLOYMENT_TARGET=10.3 /usr/bin/gcc-4.2&#39;, ldflags =&#39;-L/opt/local/lib -L/usr/local/lib&#39;</div>

<div>    libpth=/usr/local/lib /opt/local/lib /usr/lib</div><div>    libs=-ldbm -ldl -lm -lutil -lc</div><div>    perllibs=-ldl -lm -lutil -lc</div><div>    libc=/usr/lib/libc.dylib, so=dylib, useshrplib=false, libperl=libperl.a</div>

<div>    gnulibc_version=&#39;&#39;</div><div>  Dynamic Linking:</div><div>    dlsrc=dl_dlopen.xs, dlext=bundle, d_dlsymun=undef, ccdlflags=&#39; &#39;</div><div>    cccdlflags=&#39; &#39;, lddlflags=&#39;-L/opt/local/lib -bundle -undefined dynamic_lookup -L/usr/local/lib&#39;</div>

<div><br></div><div><br></div><div>Characteristics of this binary (from libperl): </div><div>  Compile-time options: PERL_MALLOC_WRAP USE_64_BIT_ALL USE_64_BIT_INT</div><div>                        USE_FAST_STDIO USE_LARGE_FILES USE_PERLIO</div>

<div>  Built under darwin</div><div>  Compiled at Feb 13 2010 13:19:33</div><div>  @INC:</div><div>    /opt/local/lib/perl5/site_perl/5.8.9/darwin-2level</div><div>    /opt/local/lib/perl5/site_perl/5.8.9</div><div>    /opt/local/lib/perl5/site_perl</div>

<div>    /opt/local/lib/perl5/vendor_perl/5.8.9/darwin-2level</div><div>    /opt/local/lib/perl5/vendor_perl/5.8.9</div><div>    /opt/local/lib/perl5/vendor_perl</div><div>    /opt/local/lib/perl5/5.8.9/darwin-2level</div>

<div>    /opt/local/lib/perl5/5.8.9</div><div>    .</div><div><br></div><div class="gmail_quote">On Thu, Sep 23, 2010 at 10:26 PM, Ralf Wildenhues <span dir="ltr">&lt;<a href="mailto:Ralf.Wildenhues@gmx.de" target="_blank"></a><a href="mailto:Ralf.Wildenhues@gmx.de" target="_blank">Ralf.Wildenhues@gmx.de</a>&gt;</span> wrote:<br>

<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hello Ralph,<br>
<br>
wow, that&#39;s not good to hear.  I knew the perl ithreads implementation<br>
wasn&#39;t all that efficient, but causing a deadlock sounds like you have<br>
more trouble than just perl; at least I hope so.  For reference, can<br>
you send &#39;perl -V&#39; output (if you like, to the bug-automake at <a href="http://gnu.org" target="_blank"></a><a href="http://gnu.org" target="_blank">gnu.org</a><br>
list).<br>
<br>
Thanks,<br>
Ralf<br>
<br>
* Ralph Castain wrote on Fri, Sep 24, 2010 at 03:12:16AM CEST:<br>
<div><div></div><div>&gt; I found one major negative to this change - it assumes that my build is<br>
&gt; being done in exclusion of anything else on my computer. Unfortunately, this<br>
&gt; is never true.<br>
&gt;<br>
&gt; So my laptop hemorrhaged itself into frozen silence, overheated to the point<br>
&gt; of being burning hot, and had to have its battery yanked to stop the runaway<br>
&gt; behavior. Not a really good thing.<br>
&gt;<br>
&gt; I would suggest you default this &quot;heuristic&quot; out, and let someone set it to<br>
&gt; use multiple runs if-and-only-if they want it. Hate to cite the lowest<br>
&gt; common denominator, but this was a very nasty surprise.<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; On Wed, Sep 22, 2010 at 7:50 AM, Jeff Squyres &lt;<a href="mailto:jsquyres@cisco.com" target="_blank"></a><a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt; wrote:<br>
&gt;<br>
&gt; &gt; Some of you may be unaware that recent versions of automake can run in<br>
&gt; &gt; parallel.  That is, automake will run in parallel with a degree of (at most)<br>
&gt; &gt; $AUTOMAKE_JOBS.  This can speed up the execution time of <a href="http://autogen.pl" target="_blank">autogen.pl</a> quite<br>
&gt; &gt; a bit on some platforms.  On my cluster at cisco, here&#39;s a few quick timings<br>
&gt; &gt; of the entire <a href="http://autogen.pl" target="_blank">autogen.pl</a> process (of which, automake is the bottleneck):<br>
&gt; &gt;<br>
&gt; &gt; $AUTOMAKE_JOBS           Total wall time<br>
&gt; &gt; value                    of <a href="http://autogen.pl" target="_blank">autogen.pl</a><br>
&gt; &gt; 8                        3:01.46<br>
&gt; &gt; 4                        2:55.57<br>
&gt; &gt; 2                        3:28.09<br>
&gt; &gt; 1                        4:38.44<br>
&gt; &gt;<br>
&gt; &gt; This is an older Xeon machine with 2 sockets, each with 2 cores.<br>
&gt; &gt;<br>
&gt; &gt; There&#39;s a nice performance jump from 1 to 2, and a smaller jump from 2 to<br>
&gt; &gt; 4.  4 and 8 are close enough to not matter.  YMMV.<br>
&gt; &gt;<br>
&gt; &gt; I just committed a heuristic to <a href="http://autogen.pl" target="_blank">autogen.pl</a> to setenv AUTOMAKE_JOBS if it<br>
&gt; &gt; is not already set (<a href="https://svn.open-mpi.org/trac/ompi/changeset/23788" target="_blank"></a><a href="https://svn.open-mpi.org/trac/ompi/changeset/23788" target="_blank">https://svn.open-mpi.org/trac/ompi/changeset/23788</a>):<br>

&gt; &gt;<br>
&gt; &gt; - If lstopo is found in your $PATH, runs it and count how many PU&#39;s<br>
&gt; &gt; (processing units) you have.  It&#39;ll set AUTOMAKE_JOBS to that number, or a<br>
&gt; &gt; maximum of 4 (which is admittedly a further heuristic).<br>
&gt; &gt; - If lstopo is not found, it just sets AUTOMAKE_JOBS to 2.<br>
&gt; &gt;<br>
&gt; &gt; Enjoy.<br>
&gt; &gt;<br>
&gt; &gt; --<br>
&gt; &gt; Jeff Squyres<br>
&gt; &gt; <a href="mailto:jsquyres@cisco.com" target="_blank"></a><a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a><br>
&gt; &gt; For corporate legal information go to:<br>
&gt; &gt; <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank"></a><a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>

_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank"></a><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank"></a><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br></div></div>
</div></blockquote><blockquote type="cite"><div><span>_______________________________________________</span><br><span>devel mailing list</span><br><span><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a></span><br>
<span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></span></div></blockquote></div></div></div><br>_______________________________________________<br>

devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></blockquote></div><br></div>

