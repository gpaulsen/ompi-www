<div dir="ltr">This patch looks good to me. Let me look at some of the others.</div><div class="gmail_extra"><br><br><div class="gmail_quote">On Fri, Dec 6, 2013 at 7:14 AM, Jeff Squyres (jsquyres) <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Let&#39;s see what Josh says (he said he&#39;d review the patches today).  I&#39;m guessing he&#39;ll be ok with this one, but let&#39;s see.<br>

<div class="HOEnZb"><div class="h5"><br>
<br>
On Dec 6, 2013, at 6:25 AM, Adrian Reber &lt;<a href="mailto:adrian@lisas.de">adrian@lisas.de</a>&gt; wrote:<br>
<br>
&gt; Thanks for your reviews. Will you apply this patch as it is or should I<br>
&gt; include it again in my upcoming rework of the other patches?<br>
&gt;<br>
&gt;               Adrian<br>
&gt;<br>
&gt;<br>
&gt; On Wed, Dec 04, 2013 at 03:58:49PM +0000, Jeff Squyres (jsquyres) wrote:<br>
&gt;&gt; +1 on this patch.<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; On Nov 25, 2013, at 9:59 AM, Adrian Reber &lt;<a href="mailto:adrian@lisas.de">adrian@lisas.de</a>&gt; wrote:<br>
&gt;&gt;<br>
&gt;&gt;&gt; From: Adrian Reber &lt;<a href="mailto:adrian.reber@hs-esslingen.de">adrian.reber@hs-esslingen.de</a>&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; This patch fixes<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; error: void value not ignored as it ought to be<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; in the C/R code by ignoring the return value of functions which<br>
&gt;&gt;&gt; no longer return a value (only void).<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Signed-off-by: Adrian Reber &lt;<a href="mailto:adrian.reber@hs-esslingen.de">adrian.reber@hs-esslingen.de</a>&gt;<br>
&gt;&gt;&gt; ---<br>
&gt;&gt;&gt; orte/mca/errmgr/base/errmgr_base_tool.c         |  8 +-----<br>
&gt;&gt;&gt; orte/mca/rml/ftrm/rml_ftrm.h                    |  6 ++---<br>
&gt;&gt;&gt; orte/mca/rml/ftrm/rml_ftrm_module.c             | 32 +++++------------------<br>
&gt;&gt;&gt; orte/mca/snapc/full/snapc_full_global.c         | 34 ++++++-------------------<br>
&gt;&gt;&gt; orte/mca/snapc/full/snapc_full_local.c          | 32 +++++------------------<br>
&gt;&gt;&gt; orte/mca/sstore/central/sstore_central_global.c | 13 ++--------<br>
&gt;&gt;&gt; orte/mca/sstore/central/sstore_central_local.c  | 13 ++--------<br>
&gt;&gt;&gt; orte/mca/sstore/stage/sstore_stage_global.c     | 13 ++--------<br>
&gt;&gt;&gt; orte/mca/sstore/stage/sstore_stage_local.c      | 14 ++--------<br>
&gt;&gt;&gt; orte/tools/orte-checkpoint/orte-checkpoint.c    | 14 +++-------<br>
&gt;&gt;&gt; orte/tools/orte-migrate/orte-migrate.c          | 14 +++-------<br>
&gt;&gt;&gt; 11 files changed, 40 insertions(+), 153 deletions(-)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; diff --git a/orte/mca/errmgr/base/errmgr_base_tool.c b/orte/mca/errmgr/base/errmgr_base_tool.c<br>
&gt;&gt;&gt; index a030faf..20d76e5 100644<br>
&gt;&gt;&gt; --- a/orte/mca/errmgr/base/errmgr_base_tool.c<br>
&gt;&gt;&gt; +++ b/orte/mca/errmgr/base/errmgr_base_tool.c<br>
&gt;&gt;&gt; @@ -290,16 +290,10 @@ static int errmgr_base_tool_stop_cmdline_listener(void)<br>
&gt;&gt;&gt;    OPAL_OUTPUT_VERBOSE((5, orte_errmgr_base_framework.framework_output,<br>
&gt;&gt;&gt;                         &quot;errmgr:base:tool: Shutdown Command Line Channel&quot;));<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_MIGRATE))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_MIGRATE);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    errmgr_cmdline_recv_issued = false;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt;    return exit_status;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; diff --git a/orte/mca/rml/ftrm/rml_ftrm.h b/orte/mca/rml/ftrm/rml_ftrm.h<br>
&gt;&gt;&gt; index 82a80e8..a1bd48a 100644<br>
&gt;&gt;&gt; --- a/orte/mca/rml/ftrm/rml_ftrm.h<br>
&gt;&gt;&gt; +++ b/orte/mca/rml/ftrm/rml_ftrm.h<br>
&gt;&gt;&gt; @@ -63,7 +63,7 @@ BEGIN_C_DECLS<br>
&gt;&gt;&gt;    /*<br>
&gt;&gt;&gt;     * Set URI<br>
&gt;&gt;&gt;     */<br>
&gt;&gt;&gt; -    int orte_rml_ftrm_set_contact_info(const char* uri);<br>
&gt;&gt;&gt; +    void orte_rml_ftrm_set_contact_info(const char* uri);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    /*<br>
&gt;&gt;&gt;     * Ping<br>
&gt;&gt;&gt; @@ -148,7 +148,7 @@ BEGIN_C_DECLS<br>
&gt;&gt;&gt;    /*<br>
&gt;&gt;&gt;     * Recv Cancel<br>
&gt;&gt;&gt;     */<br>
&gt;&gt;&gt; -    int orte_rml_ftrm_recv_cancel(orte_process_name_t* peer, orte_rml_tag_t tag);<br>
&gt;&gt;&gt; +    void orte_rml_ftrm_recv_cancel(orte_process_name_t* peer, orte_rml_tag_t tag);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    /*<br>
&gt;&gt;&gt;     * Register a callback on loss of connection<br>
&gt;&gt;&gt; @@ -161,7 +161,7 @@ BEGIN_C_DECLS<br>
&gt;&gt;&gt;     */<br>
&gt;&gt;&gt;    int orte_rml_ftrm_ft_event(int state);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; -    int orte_rml_ftrm_purge(orte_process_name_t *peer);<br>
&gt;&gt;&gt; +    void orte_rml_ftrm_purge(orte_process_name_t *peer);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; END_C_DECLS<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; diff --git a/orte/mca/rml/ftrm/rml_ftrm_module.c b/orte/mca/rml/ftrm/rml_ftrm_module.c<br>
&gt;&gt;&gt; index 76f9064..85b288e 100644<br>
&gt;&gt;&gt; --- a/orte/mca/rml/ftrm/rml_ftrm_module.c<br>
&gt;&gt;&gt; +++ b/orte/mca/rml/ftrm/rml_ftrm_module.c<br>
&gt;&gt;&gt; @@ -94,20 +94,14 @@ char * orte_rml_ftrm_get_contact_info(void)<br>
&gt;&gt;&gt; /*<br>
&gt;&gt;&gt; * Set CONTACT_INFO<br>
&gt;&gt;&gt; */<br>
&gt;&gt;&gt; -int orte_rml_ftrm_set_contact_info(const char* contact_info)<br>
&gt;&gt;&gt; +void orte_rml_ftrm_set_contact_info(const char* contact_info)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    opal_output_verbose(20, rml_ftrm_output_handle,<br>
&gt;&gt;&gt;                        &quot;orte_rml_ftrm: set_contact_info()&quot;);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    if( NULL != orte_rml_ftrm_wrapped_module.set_contact_info ) {<br>
&gt;&gt;&gt; -        if( ORTE_SUCCESS != (ret = orte_rml_ftrm_wrapped_module.set_contact_info(contact_info) ) ) {<br>
&gt;&gt;&gt; -            return ret;<br>
&gt;&gt;&gt; -        }<br>
&gt;&gt;&gt; +        orte_rml_ftrm_wrapped_module.set_contact_info(contact_info);<br>
&gt;&gt;&gt;    }<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; @@ -330,20 +324,14 @@ int orte_rml_ftrm_recv_buffer_nb(orte_process_name_t* peer,<br>
&gt;&gt;&gt; /*<br>
&gt;&gt;&gt; * Recv Cancel<br>
&gt;&gt;&gt; */<br>
&gt;&gt;&gt; -int orte_rml_ftrm_recv_cancel(orte_process_name_t* peer, orte_rml_tag_t tag)<br>
&gt;&gt;&gt; +void orte_rml_ftrm_recv_cancel(orte_process_name_t* peer, orte_rml_tag_t tag)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    opal_output_verbose(20, rml_ftrm_output_handle,<br>
&gt;&gt;&gt;                        &quot;orte_rml_ftrm: recv_cancel()&quot;);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    if( NULL != orte_rml_ftrm_wrapped_module.recv_cancel ) {<br>
&gt;&gt;&gt; -        if( ORTE_SUCCESS != (ret = orte_rml_ftrm_wrapped_module.recv_cancel(peer, tag) ) ) {<br>
&gt;&gt;&gt; -            return ret;<br>
&gt;&gt;&gt; -        }<br>
&gt;&gt;&gt; +        orte_rml_ftrm_wrapped_module.recv_cancel(peer, tag);<br>
&gt;&gt;&gt;    }<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; @@ -436,18 +424,12 @@ int orte_rml_ftrm_ft_event(int state)<br>
&gt;&gt;&gt;    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; -int orte_rml_ftrm_purge(orte_process_name_t *peer)<br>
&gt;&gt;&gt; +void orte_rml_ftrm_purge(orte_process_name_t *peer)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    opal_output_verbose(20, rml_ftrm_output_handle,<br>
&gt;&gt;&gt;                        &quot;orte_rml_ftrm: purge()&quot;);<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; +<br>
&gt;&gt;&gt;    if( NULL != orte_rml_ftrm_wrapped_module.purge ) {<br>
&gt;&gt;&gt; -        if( ORTE_SUCCESS != (ret = orte_rml_ftrm_wrapped_module.purge(peer) ) ) {<br>
&gt;&gt;&gt; -            return ret;<br>
&gt;&gt;&gt; -        }<br>
&gt;&gt;&gt; +        orte_rml_ftrm_wrapped_module.purge(peer);<br>
&gt;&gt;&gt;    }<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt; diff --git a/orte/mca/snapc/full/snapc_full_global.c b/orte/mca/snapc/full/snapc_full_global.c<br>
&gt;&gt;&gt; index 8f1317b..c88c6db 100644<br>
&gt;&gt;&gt; --- a/orte/mca/snapc/full/snapc_full_global.c<br>
&gt;&gt;&gt; +++ b/orte/mca/snapc/full/snapc_full_global.c<br>
&gt;&gt;&gt; @@ -905,26 +905,17 @@ static int snapc_full_global_start_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int snapc_full_global_stop_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    if (!snapc_orted_recv_issued &amp;&amp; ORTE_PROC_IS_HNP) {<br>
&gt;&gt;&gt;        return ORTE_SUCCESS;<br>
&gt;&gt;&gt;    }<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; +<br>
&gt;&gt;&gt;    OPAL_OUTPUT_VERBOSE((5, mca_snapc_full_component.super.output_handle,<br>
&gt;&gt;&gt;                         &quot;Global) Shutdown Coordinator Channel&quot;));<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_SNAPC_FULL))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_SNAPC_FULL);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    snapc_orted_recv_issued = false;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int snapc_full_global_start_cmdline_listener(void)<br>
&gt;&gt;&gt; @@ -959,26 +950,17 @@ static int snapc_full_global_start_cmdline_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int snapc_full_global_stop_cmdline_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    if (!snapc_cmdline_recv_issued &amp;&amp; ORTE_PROC_IS_HNP) {<br>
&gt;&gt;&gt;        return ORTE_SUCCESS;<br>
&gt;&gt;&gt;    }<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; +<br>
&gt;&gt;&gt;    OPAL_OUTPUT_VERBOSE((5, mca_snapc_full_component.super.output_handle,<br>
&gt;&gt;&gt;                         &quot;Global) Shutdown Command Line Channel&quot;));<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_CKPT))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_CKPT);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    snapc_cmdline_recv_issued = false;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; /*****************<br>
&gt;&gt;&gt; diff --git a/orte/mca/snapc/full/snapc_full_local.c b/orte/mca/snapc/full/snapc_full_local.c<br>
&gt;&gt;&gt; index 0975d77..c0b168a 100644<br>
&gt;&gt;&gt; --- a/orte/mca/snapc/full/snapc_full_local.c<br>
&gt;&gt;&gt; +++ b/orte/mca/snapc/full/snapc_full_local.c<br>
&gt;&gt;&gt; @@ -378,8 +378,6 @@ static int snapc_full_local_start_hnp_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int snapc_full_local_stop_hnp_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    /*<br>
&gt;&gt;&gt;     * Global Coordinator: Does not register a Local listener<br>
&gt;&gt;&gt;     */<br>
&gt;&gt;&gt; @@ -393,18 +391,11 @@ static int snapc_full_local_stop_hnp_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    OPAL_OUTPUT_VERBOSE((5, mca_snapc_full_component.super.output_handle,<br>
&gt;&gt;&gt;                         &quot;Local) Shutdown Coordinator Channel&quot;));<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_SNAPC_FULL))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_SNAPC_FULL);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    snapc_local_hnp_recv_issued = false;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int snapc_full_local_start_app_listener(void)<br>
&gt;&gt;&gt; @@ -439,26 +430,17 @@ static int snapc_full_local_start_app_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int snapc_full_local_stop_app_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    if (!snapc_local_app_recv_issued ) {<br>
&gt;&gt;&gt;        return ORTE_SUCCESS;<br>
&gt;&gt;&gt;    }<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; +<br>
&gt;&gt;&gt;    OPAL_OUTPUT_VERBOSE((5, mca_snapc_full_component.super.output_handle,<br>
&gt;&gt;&gt;                         &quot;Local) Shutdown Application State Channel&quot;));<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_SNAPC))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_SNAPC);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    snapc_local_app_recv_issued = false;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; /******************<br>
&gt;&gt;&gt; diff --git a/orte/mca/sstore/central/sstore_central_global.c b/orte/mca/sstore/central/sstore_central_global.c<br>
&gt;&gt;&gt; index cd41aef..935b6fe 100644<br>
&gt;&gt;&gt; --- a/orte/mca/sstore/central/sstore_central_global.c<br>
&gt;&gt;&gt; +++ b/orte/mca/sstore/central/sstore_central_global.c<br>
&gt;&gt;&gt; @@ -824,19 +824,10 @@ static int sstore_central_global_start_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int sstore_central_global_stop_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_SSTORE_INTERNAL))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_SSTORE_INTERNAL);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    is_global_listener_active = false;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static void sstore_central_global_recv(int status,<br>
&gt;&gt;&gt; diff --git a/orte/mca/sstore/central/sstore_central_local.c b/orte/mca/sstore/central/sstore_central_local.c<br>
&gt;&gt;&gt; index 0442dd0..35ef518 100644<br>
&gt;&gt;&gt; --- a/orte/mca/sstore/central/sstore_central_local.c<br>
&gt;&gt;&gt; +++ b/orte/mca/sstore/central/sstore_central_local.c<br>
&gt;&gt;&gt; @@ -643,19 +643,10 @@ static int sstore_central_local_start_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int sstore_central_local_stop_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_SSTORE_INTERNAL))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_SSTORE_INTERNAL);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    is_global_listener_active = false;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int process_global_pull(orte_process_name_t* peer, opal_buffer_t* buffer, orte_sstore_central_local_snapshot_info_t *handle_info)<br>
&gt;&gt;&gt; diff --git a/orte/mca/sstore/stage/sstore_stage_global.c b/orte/mca/sstore/stage/sstore_stage_global.c<br>
&gt;&gt;&gt; index c79bfb9..1c8847a 100644<br>
&gt;&gt;&gt; --- a/orte/mca/sstore/stage/sstore_stage_global.c<br>
&gt;&gt;&gt; +++ b/orte/mca/sstore/stage/sstore_stage_global.c<br>
&gt;&gt;&gt; @@ -1016,19 +1016,10 @@ static int sstore_stage_global_start_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int sstore_stage_global_stop_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_SSTORE_INTERNAL))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_SSTORE_INTERNAL);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    is_global_listener_active = false;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static void sstore_stage_global_recv(int status,<br>
&gt;&gt;&gt; diff --git a/orte/mca/sstore/stage/sstore_stage_local.c b/orte/mca/sstore/stage/sstore_stage_local.c<br>
&gt;&gt;&gt; index e3667ba..792c1a2 100644<br>
&gt;&gt;&gt; --- a/orte/mca/sstore/stage/sstore_stage_local.c<br>
&gt;&gt;&gt; +++ b/orte/mca/sstore/stage/sstore_stage_local.c<br>
&gt;&gt;&gt; @@ -1067,19 +1067,9 @@ static int sstore_stage_local_start_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int sstore_stage_local_stop_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_SSTORE_INTERNAL))) {<br>
&gt;&gt;&gt; -        ORTE_ERROR_LOG(ret);<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_SSTORE_INTERNAL);<br>
&gt;&gt;&gt;    is_global_listener_active = false;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static void sstore_stage_local_recv(int status,<br>
&gt;&gt;&gt; diff --git a/orte/tools/orte-checkpoint/orte-checkpoint.c b/orte/tools/orte-checkpoint/orte-checkpoint.c<br>
&gt;&gt;&gt; index 9f2e716..caa5949 100644<br>
&gt;&gt;&gt; --- a/orte/tools/orte-checkpoint/orte-checkpoint.c<br>
&gt;&gt;&gt; +++ b/orte/tools/orte-checkpoint/orte-checkpoint.c<br>
&gt;&gt;&gt; @@ -671,22 +671,14 @@ static int start_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int stop_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    if( !listener_started ) {<br>
&gt;&gt;&gt; -        exit_status = ORTE_ERROR;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; +        return ORTE_ERROR;<br>
&gt;&gt;&gt;    }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_CKPT))) {<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_CKPT);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    listener_started = false;<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static void hnp_receiver(int status,<br>
&gt;&gt;&gt; diff --git a/orte/tools/orte-migrate/orte-migrate.c b/orte/tools/orte-migrate/orte-migrate.c<br>
&gt;&gt;&gt; index b1de924..7ba2074 100644<br>
&gt;&gt;&gt; --- a/orte/tools/orte-migrate/orte-migrate.c<br>
&gt;&gt;&gt; +++ b/orte/tools/orte-migrate/orte-migrate.c<br>
&gt;&gt;&gt; @@ -532,22 +532,14 @@ static int start_listener(void)<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static int stop_listener(void)<br>
&gt;&gt;&gt; {<br>
&gt;&gt;&gt; -    int ret, exit_status = ORTE_SUCCESS;<br>
&gt;&gt;&gt; -<br>
&gt;&gt;&gt;    if( !listener_started ) {<br>
&gt;&gt;&gt; -        exit_status = ORTE_ERROR;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; +        return ORTE_ERROR;<br>
&gt;&gt;&gt;    }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; -    if (ORTE_SUCCESS != (ret = orte_rml.recv_cancel(ORTE_NAME_WILDCARD,<br>
&gt;&gt;&gt; -                                                    ORTE_RML_TAG_MIGRATE))) {<br>
&gt;&gt;&gt; -        exit_status = ret;<br>
&gt;&gt;&gt; -        goto cleanup;<br>
&gt;&gt;&gt; -    }<br>
&gt;&gt;&gt; +    orte_rml.recv_cancel(ORTE_NAME_WILDCARD, ORTE_RML_TAG_MIGRATE);<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;    listener_started = false;<br>
&gt;&gt;&gt; - cleanup:<br>
&gt;&gt;&gt; -    return exit_status;<br>
&gt;&gt;&gt; +    return ORTE_SUCCESS;<br>
&gt;&gt;&gt; }<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; static void hnp_receiver(int status,<br>
&gt;&gt;&gt; --<br>
&gt;&gt;&gt; 1.8.3.1<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; _______________________________________________<br>
&gt;&gt;&gt; devel mailing list<br>
&gt;&gt;&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; --<br>
&gt;&gt; Jeff Squyres<br>
&gt;&gt; <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
&gt;&gt; For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
<br>
<br>
--<br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br><br clear="all"><div><br></div>-- <br>Joshua Hursey<br>Assistant Professor of Computer Science<br>University of Wisconsin-La Crosse<br><a href="http://cs.uwlax.edu/~jjhursey" target="_blank">http://cs.uwlax.edu/~jjhursey</a>
</div>

