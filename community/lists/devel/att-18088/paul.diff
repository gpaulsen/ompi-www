diff --git a/opal/mca/pmix/pmix1xx/pmix/src/server/pmix_server_listener.c b/opal/mca/pmix/pmix1xx/pmix/src/server/pmix_server_listener.c
index 3c3c418..30cd98a 100644
--- a/opal/mca/pmix/pmix1xx/pmix/src/server/pmix_server_listener.c
+++ b/opal/mca/pmix/pmix1xx/pmix/src/server/pmix_server_listener.c
@@ -511,6 +511,9 @@ static void connection_handler(int sd, short flags, void* cbdata)
                         "connection_handler: new connection: %d",
                         pnd->sd);
 
+    /* ensure the socket is in blocking mode */
+    pmix_usock_set_blocking(pnd->sd);
+
     /* receive identifier info from the client and authenticate it - the
      * function will lookup and return the peer object if the connection
      * is successfully authenticated */
diff --git a/opal/mca/pmix/pmix1xx/pmix/src/usock/usock.c b/opal/mca/pmix/pmix1xx/pmix/src/usock/usock.c
index fc3b506..d6b3fe0 100644
--- a/opal/mca/pmix/pmix1xx/pmix/src/usock/usock.c
+++ b/opal/mca/pmix/pmix1xx/pmix/src/usock/usock.c
@@ -127,7 +127,8 @@ pmix_status_t pmix_usock_send_blocking(int sd, char *ptr, size_t size)
         retval = send(sd, (char*)ptr+cnt, size-cnt, 0);
         if (retval < 0) {
             if (EAGAIN == pmix_socket_errno ||
-                EWOULDBLOCK == pmix_socket_errno) {
+                EWOULDBLOCK == pmix_socket_errno ||
+                ENOBUFS == pmix_socket_errno) {
                 /* just cycle and let it try again */
                 pmix_output_verbose(8, pmix_globals.debug_output,
                                     "blocking_send received error %d:%s from remote - cycling",
@@ -135,7 +136,8 @@ pmix_status_t pmix_usock_send_blocking(int sd, char *ptr, size_t size)
                 continue;
             }
             if (pmix_socket_errno != EINTR) {
-                pmix_output(8, "usock_peer_send_blocking: send() to socket %d failed: %s (%d)\n",
+                pmix_output(8, pmix_globals.debug_output,
+                            "usock_peer_send_blocking: send() to socket %d failed: %s (%d)\n",
                             sd, strerror(pmix_socket_errno),
                             pmix_socket_errno);
                 return PMIX_ERR_UNREACH;

