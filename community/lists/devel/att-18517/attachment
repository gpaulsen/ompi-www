<div dir="ltr">Ah, Nathan read my mind!<div>This is (more or less) what I suggest in the post I was typing when Nathan&#39;s post arrived.<br><div><br></div><div>-Paul</div></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Mon, Jan 25, 2016 at 2:13 PM, Nathan Hjelm <span dir="ltr">&lt;<a href="mailto:hjelmn@lanl.gov" target="_blank">hjelmn@lanl.gov</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><br>
Another thing that might be useful is at the end of configure print out<br>
a list of each framework with a list of components and some build info<br>
(static vs dynamic, etc). Something like:<br>
<br>
plm:<br>
  alps (dynamic)<br>
  rsh (dynamic)<br>
  tm (dynamic)<br>
<br>
-Nathan<br>
<div><div class="h5"><br>
On Mon, Jan 25, 2016 at 01:46:44PM -0800, Ralph Castain wrote:<br>
&gt;    That makes sense, Paul - what if we output effectively the ompi_info<br>
&gt;    summary of what was built at the end of the make install procedure? Then<br>
&gt;    you would have immediate feedback on the result.<br>
&gt;    On Mon, Jan 25, 2016 at 1:27 PM, Paul Hargrove &lt;<a href="mailto:phhargrove@lbl.gov">phhargrove@lbl.gov</a>&gt; wrote:<br>
&gt;<br>
&gt;      As one who builds other people&#39;s software frequently, I have my own<br>
&gt;      opinions here.<br>
&gt;      Above all else, is that there is no one &quot;right&quot; answer, but that<br>
&gt;      consistency with in a product is best.<br>
&gt;      So (within reason) the same things that work to configure module A and B<br>
&gt;      should work with C and D as well.<br>
&gt;      To use an analogy from (human) languages, I dislike &quot;irregular verbs&quot;.<br>
&gt;      The proposal to report (at run time) the existence of TM support on the<br>
&gt;      system (but lacking in ORTE), doesn&#39;t &quot;feel&quot; consistent with existing<br>
&gt;      practice.<br>
&gt;      In GASNet we *do* report at runtime if a high-speed network is present<br>
&gt;      and you are not using it.<br>
&gt;      For instance we warn if the headers were missing at configure time but<br>
&gt;      we can see the /dev entry at runtime.<br>
&gt;      However, we do that uniformly across all the networks and have done this<br>
&gt;      for years.<br>
&gt;      So, it is a *consistent* practice in that project.<br>
&gt;      Keep It Simple Stupid is also an important one.<br>
&gt;      So, I agree with those who think the proposal to catch this at runtime<br>
&gt;      is an unnecessary complication.<br>
&gt;      I think improving the FAQ a good idea<br>
&gt;      I do, however, I can think of one thing that might help the &quot;I thought I<br>
&gt;      had configured X&quot; problem Jeff mentions.<br>
&gt;      What about a summary output at the end of configure or make?<br>
&gt;      Right now I sometimes use something like the following:<br>
&gt;        $ grep &#39;bindings\.\.\. yes&#39; configure.out<br>
&gt;        $ grep -e &#39;component .* can compile\.\.\. yes&#39; configure.log<br>
&gt;      This lets me see what is going to be built.<br>
&gt;      Outputing something like this a the end of configure might encourage<br>
&gt;      admins to check for their feature X before typing &quot;make&quot;<br>
&gt;      The existing configury goop can easily be modified to keep a list of<br>
&gt;      configured components and language bindings.<br>
&gt;      However, another alternative is probably easier to implement:<br>
&gt;      The last step of &quot;make install&quot; could print a message like<br>
&gt;        NOTICE: Your installation is complete.<br>
&gt;        NOTICE: You can run ompi_info to verify that all expected components<br>
&gt;      and language bindings have been built.<br>
&gt;      -Paul<br>
&gt;      On Mon, Jan 25, 2016 at 11:13 AM, Jeff Squyres (jsquyres)<br>
&gt;      &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>
&gt;<br>
&gt;        Haters gotta hate.  ;-)<br>
&gt;<br>
&gt;        Kidding aside, ok, you make valid points.  So -- no tm &quot;addition&quot;.  We<br>
&gt;        just have to rely on people using functionality like &quot;--with-tm&quot; in<br>
&gt;        the configure line to force/ensure that tm (or whatever feature) will<br>
&gt;        actually get built.<br>
&gt;<br>
&gt;        &gt; On Jan 25, 2016, at 1:31 PM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<br>
&gt;        &gt;<br>
&gt;        &gt; I think we would be opening a real can of worms with this idea.<br>
&gt;        There are environments, for example, that use PBSPro for one part of<br>
&gt;        the system (e.g., IO nodes), but something else for the compute<br>
&gt;        section.<br>
&gt;        &gt;<br>
&gt;        &gt; Personally, I&#39;d rather follow Howard&#39;s suggestion.<br>
&gt;        &gt;<br>
&gt;        &gt; On Mon, Jan 25, 2016 at 10:21 AM, Nathan Hjelm &lt;<a href="mailto:hjelmn@lanl.gov">hjelmn@lanl.gov</a>&gt;<br>
&gt;        wrote:<br>
&gt;        &gt; On Mon, Jan 25, 2016 at 05:55:20PM +0000, Jeff Squyres (jsquyres)<br>
&gt;        wrote:<br>
&gt;        &gt; &gt; Hmm.  I&#39;m of split mind here.<br>
&gt;        &gt; &gt;<br>
&gt;        &gt; &gt; I can see what Howard is saying here -- adding complexity is<br>
&gt;        usually a bad thing.<br>
&gt;        &gt; &gt;<br>
&gt;        &gt; &gt; But we have gotten these problem reports multiple times over the<br>
&gt;        years: someone *thinking* that they have built with launcher support X<br>
&gt;        (e.g., TM, LSF), but then figuring out later that things aren&#39;t<br>
&gt;        running as expected, and after a bunch of work, figure out that it&#39;s<br>
&gt;        because they didn&#39;t build with support X.<br>
&gt;        &gt; &gt;<br>
&gt;        &gt; &gt; Gilles idea actually sounds interesting -- if the tm module detect<br>
&gt;        some of the sentinel PBS/TM env variables, emit a show_help() if we<br>
&gt;        don&#39;t have full TM support compiled in.  This would actually save some<br>
&gt;        users a bunch of time and frustration.<br>
&gt;        &gt; &gt;<br>
&gt;        &gt; &gt; --&gt; Keep in mind that the SLRUM launcher is different, because<br>
&gt;        it&#39;s all CLI-based (not API-based) and therefore we always build it<br>
&gt;        (because we don&#39;t have to find headers and libraries).<br>
&gt;        &gt; &gt;<br>
&gt;        &gt; &gt; FWIW, we do have precedent of having extra MCA params for users to<br>
&gt;        turn off warnings that they don&#39;t want to see.<br>
&gt;        &gt; &gt;<br>
&gt;        &gt; &gt; I guess the question here is: is there a valid use case for<br>
&gt;        running in PBS/Torque and *not* wanting to use the TM launcher?<br>
&gt;        &gt;<br>
&gt;        &gt; Once case comes to mind. In the case of Cray systems that<br>
&gt;        unfortunately<br>
&gt;        &gt; run Moab/Toque we can launch using either alps or torque (Howard<br>
&gt;        correct<br>
&gt;        &gt; me if I am wrong). When Sam and I originally wrote the XE support we<br>
&gt;        &gt; used alps instead of torque. I am not entirely sure what we do now.<br>
&gt;        &gt;<br>
&gt;        &gt; -Nathan<br>
&gt;        &gt;<br>
&gt;        &gt; _______________________________________________<br>
&gt;        &gt; devel mailing list<br>
&gt;        &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;        &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;        &gt; Link to this post:<br>
&gt;        <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18509.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18509.php</a><br>
&gt;        &gt;<br>
&gt;        &gt; _______________________________________________<br>
&gt;        &gt; devel mailing list<br>
&gt;        &gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;        &gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;        &gt; Link to this post:<br>
&gt;        <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18510.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18510.php</a><br>
&gt;<br>
&gt;        --<br>
&gt;        Jeff Squyres<br>
&gt;        <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
&gt;        For corporate legal information go to:<br>
&gt;        <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" rel="noreferrer" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
&gt;<br>
&gt;        _______________________________________________<br>
&gt;        devel mailing list<br>
&gt;        <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;        Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;        Link to this post:<br>
&gt;        <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18511.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18511.php</a><br>
&gt;<br>
&gt;      --<br>
&gt;      Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov">PHHargrove@lbl.gov</a><br>
&gt;      Computer Languages &amp; Systems Software (CLaSS) Group<br>
&gt;      Computer Science Department               Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352">+1-510-495-2352</a><br>
&gt;      Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900">+1-510-486-6900</a><br>
&gt;      _______________________________________________<br>
&gt;      devel mailing list<br>
&gt;      <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt;      Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;      Link to this post:<br>
&gt;      <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18513.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18513.php</a><br>
<br>
&gt; _______________________________________________<br>
&gt; devel mailing list<br>
&gt; <a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
&gt; Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div>&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18514.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18514.php</a><br>
<br>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/01/18515.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/01/18515.php</a><br></blockquote></div><br><br clear="all"><div><br></div>-- <br><div class="gmail_signature"><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: +1-510-495-2352</div><div>Lawrence Berkeley National Laboratory     Fax: +1-510-486-6900</div></font></div></div></div>
</div>

