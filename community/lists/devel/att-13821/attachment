<div dir="ltr">If it is the application, then there is probably a barrier in the app_coord_init() to make sure all the applications are up and running. After this point then the global coordinator knows that the application can be checkpointed.<div>
<br></div><div>I don&#39;t think orte-checkpoint should be calling a barrier - from what I recall.</div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Mon, Jan 20, 2014 at 4:46 PM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div style="word-wrap:break-word">Is it orte-checkpoint that is hanging, or the app you are trying to checkpoint?<div><br>
</div><div><br><div><div><div class="h5"><div>On Jan 20, 2014, at 2:10 PM, Adrian Reber &lt;<a href="mailto:adrian@lisas.de" target="_blank">adrian@lisas.de</a>&gt; wrote:</div><br></div></div><blockquote type="cite"><div style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px">
<div><div class="h5">Thanks for your help. I tried initializing the barrier correctly (see<br>attached patch) but now, instead of crashing, it just hangs on the<br>barrier while running orte-checkpoint<br><br>[dcbz:20150] [[41665,0],0] grpcomm:bad entering barrier<br>
[dcbz:20150] [[41665,0],0] ACTIVATING GRCPCOMM OP 0 at ../../../../../orte/mca/grpcomm/bad/grpcomm_bad_module.c:206<br><br>#0  0x00007ffff69befa0 in __nanosleep_nocancel () at ../sysdeps/unix/syscall-template.S:81<br>#1  0x00007ffff7b456ba in app_coord_init () at ../../../../../orte/mca/snapc/full/snapc_full_app.c:207<br>
#2  0x00007ffff7b3a582 in orte_snapc_full_module_init (seed=false, app=true) at ../../../../../orte/mca/snapc/full/snapc_full_module.c:207<br><br>it hangs looping at ORTE_WAIT_FOR_COMPLETION(coll-&gt;active);<br><br>I do not understand on what the barrier here is actually waiting for. Where<br>
do I need to look to find the place the barrier is waiting for?<br><br>I also tried initializing the collective id&#39;s in<br>orte/mca/plm/base/plm_base_launch_support.c but that code is never<br>used running the orte-checkpoint tool<br>
<br><span style="white-space:pre-wrap">	</span><span style="white-space:pre-wrap">	</span>Adrian<br><br>On Sat, Jan 11, 2014 at 11:46:42AM -0800, Ralph Castain wrote:<br><blockquote type="cite">I took a look at this, and I&#39;m afraid you have some work to do in the orte/mca/snapc code base:<br>
<br>1. you must use dynamically allocated buffers for rml.send_buffer_nb. See r30261 for an example of the changes that need to be made - I did some, but can&#39;t swear to catching them all. It was enough to at least get a proc past the initial snapc registration<br>
<br>2. you are reusing collective id&#39;s to execute several orte_grpcomm.barrier calls - those ids are used elsewhere during MPI_Init. This is not allowed - a collective id can only be used *once*. What you need to do is go into orte/mca/plm/base/plm_base_launch_support.c and (when cr is configured) add cr-specific collective id&#39;s for this purpose. I don&#39;t know how many places in the cr code create their own barriers, but they each need a collective id.<br>
<br>If you prefer and have the time, you are welcome to extend the collective code to allow id reuse. This would require that each daemon and app &quot;reset&quot; the collective fields when a collective is declared complete. It isn&#39;t that hard to do - just never had a reason to do it. I can take a shot at it when time permits (may have some time this weekend)<br>
<br>3. when you post the non-blocking recv in the snapc/full code, it looks to me like you need to block until you get the answer. I don&#39;t know where in the code flow this is occurring - if you are not in an event, then it is okay to block using ORTE_WAIT_FOR_COMPLETION. Look in orte/mca/routed/base/routed_base_fns.c starting at line 252 for an example.<br>
<br>HTH<br>Ralph<br><br>On Jan 10, 2014, at 12:55 PM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt; wrote:<br><br><blockquote type="cite"><br>On Jan 10, 2014, at 12:45 PM, Adrian Reber &lt;<a href="mailto:adrian@lisas.de" target="_blank">adrian@lisas.de</a>&gt; wrote:<br>
<br><blockquote type="cite">On Fri, Jan 10, 2014 at 09:48:14AM -0800, Ralph Castain wrote:<br><blockquote type="cite"><br>On Jan 10, 2014, at 8:02 AM, Adrian Reber &lt;<a href="mailto:adrian@lisas.de" target="_blank">adrian@lisas.de</a>&gt; wrote:<br>
<br><blockquote type="cite">I am currently trying to understand how callbacks are working. Right now<br>I am looking at orte/mca/rml/base/rml_base_receive.c<br>orte_rml_base_comm_start() which does<span> </span><br><br> orte_rml.recv_buffer_nb(ORTE_NAME_WILDCARD,<br>
                         ORTE_RML_TAG_RML_INFO_UPDATE,<br>                         ORTE_RML_PERSISTENT,<br>                         orte_rml_base_recv,<br>                         NULL);<br><br>As far as I understand it orte_rml_base_recv() is the callback function.<br>
At which point should this function run? When the data is actually<br>received?<br></blockquote><br>Not precisely. When data is received by the OOB, it pushes the data into an event. When that event gets serviced, it calls the orte_rml_base_receive function which processes the data to find the matching tag, and then uses that to execute the callback to the user code.<br>
<br><blockquote type="cite"><br>The same for send_buffer_nb() functions. I do not see the callback<br>functions actually running. How can I verify that the callback functions<br>are running. Especially for the send case it sounds pretty obvious how<br>
it should work but I never see the callback function running. At least<br>in my setup.<br></blockquote><br>The data is not immediately sent. It gets pushed into an event. When that event gets serviced, it calls the orte_oob_base_send function which then passes the data to each active OOB component until one of them says it can send it. The data is then pushed into another event to get it into the event base for that component&#39;s active module - when that event gets serviced, the data is sent. Once the data is sent, an event is created that, when serviced, executes the callback to the user code.<br>
<br>If you aren&#39;t seeing callbacks, the most likely cause is that the orte progress thread isn&#39;t running. Without it, none of this will work.<br></blockquote><br>Thanks. Running configure without &#39;--with-ft=cr&#39; I can run a program and<br>
use orte-top. In orterun I can see that the callback is running and<br>orte-top displays the retrieved information. I can also see in orte-top<br>that the callbacks are working.<br></blockquote><br>Actually, I&#39;m rather impressed - I hadn&#39;t tested orte-top and didn&#39;t honestly know if it would work any more! Glad to hear it does :-)<br>
<br><blockquote type="cite">Doing the same with &#39;--with-ft=cr&#39;<br>enabled orte-top crashes as well as orte-checkpoint and both (-top and<br>-checkpoint) seem to no longer have working callbacks and that is why<br>
they are probably crashing. So some code which is enabled by &#39;--with-ft=cr&#39;<br>seems to break callbacks in orte-top as well as in orte-checkpoint.<br>orterun handles callbacks no matter if configured with or without<br>
&#39;--with-ft=cr&#39;.<br></blockquote><br>I can take a look this weekend - probably something silly<br><br><blockquote type="cite"><br><span style="white-space:pre-wrap">	</span><span style="white-space:pre-wrap">	</span>Adrian<br>
</blockquote></blockquote></blockquote></div></div><span>&lt;grpcomm.txt&gt;</span>_______________________________________________<div class="im"><br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></div></div></blockquote></div><br></div></div><br>_______________________________________________<br>

devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></blockquote></div><br><br clear="all"><div><br></div>-- <br>Joshua Hursey<br>Assistant Professor of Computer Science<br>
University of Wisconsin-La Crosse<br><a href="http://cs.uwlax.edu/~jjhursey" target="_blank">http://cs.uwlax.edu/~jjhursey</a>
</div>

