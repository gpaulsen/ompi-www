<div dir="ltr">Alexey,<div><br></div><div>This is not necessarily the fix for all cases. Most of the internal uses of the free_list can easily accommodate to the fact that no more elements are available. Based on your description of the problem I would assume you encounter this problem once the MCA_PML_OB1_RECV_REQUEST_ALLOC is called. In this particular case the problem is that fact that we call OMPI_FREE_LIST_GET_MT and that the upper level is unable to correctly deal with the case where the returned item is NULL. In this particular case the real fix is to use the blocking version of the free_list accessor (similar to the case for send) OMPI_FREE_LIST_WAIT_MT.</div><div><br></div><div><br></div><div>It is also possible that I misunderstood your problem. IF the solution above doesn&#39;t work can you describe exactly where the NULL return of the OMPI_FREE_LIST_GET_MT is creating an issue?</div><div><br></div><div>George.</div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Wed, Sep 16, 2015 at 9:03 AM, Алексей Рыжих <span dir="ltr">&lt;<a href="mailto:avryzhikh@compcenter.org" target="_blank">avryzhikh@compcenter.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div lang="RU" link="blue" vlink="purple"><div><p class="MsoNormal"><span lang="EN-US">Hi all,</span></p><p class="MsoNormal"><span lang="EN-US">We experimented with MPI+OpenMP hybrid application (MPI_THREAD_MULTIPLE support level)  where several threads submits a lot of MPI_Irecv() requests simultaneously and encountered an intermittent bug OMPI_ERR_TEMP_OUT_OF_RESOURCE after MCA_PML_OB1_RECV_REQUEST_ALLOC()  because  OMPI_FREE_LIST_GET_MT()  returned NULL.  Investigating this bug we found that sometimes the thread calling ompi_free_list_grow()  don’t have any free items in LIFO list at exit because other threads  retrieved  all new items at opal_atomic_lifo_pop()  </span></p><p class="MsoNormal"><span lang="EN-US">So we suggest to change OMPI_FREE_LIST_GET_MT() as below:</span></p><p class="MsoNormal"><span lang="EN-US"> </span></p><p class="MsoNormal"><span lang="EN-US">#define OMPI_FREE_LIST_GET_MT(fl, item)                                                                \</span></p><p class="MsoNormal"><span lang="EN-US">    {                                                                                             \</span></p><p class="MsoNormal"><span lang="EN-US">        item = (ompi_free_list_item_t*) opal_atomic_lifo_pop(&amp;((fl)-&gt;super));             \</span></p><p class="MsoNormal"><span lang="EN-US">        if( OPAL_UNLIKELY(NULL == item) ) {                                               \</span></p><p class="MsoNormal"><span lang="EN-US">            if(opal_using_threads()) {                                                    \</span></p><p class="MsoNormal"><span lang="EN-US">                int rc;                                                                   \</span></p><p class="MsoNormal"><span lang="EN-US">                opal_mutex_lock(&amp;((fl)-&gt;fl_lock));                                        \</span></p><p class="MsoNormal"><span lang="EN-US">                do                                                                        \</span></p><p class="MsoNormal"><span lang="EN-US">                {                                                                         \</span></p><p class="MsoNormal"><span lang="EN-US">                    rc = ompi_free_list_grow((fl), (fl)-&gt;fl_num_per_alloc);               \</span></p><p class="MsoNormal"><span lang="EN-US">                    if( OPAL_UNLIKELY(rc != OMPI_SUCCESS)) break;                         \</span></p><p class="MsoNormal"><span lang="EN-US">                                                                                          \</span></p><p class="MsoNormal"><span lang="EN-US">                    item = (ompi_free_list_item_t*) opal_atomic_lifo_pop(&amp;((fl)-&gt;super)); \</span></p><p class="MsoNormal"><span lang="EN-US">                                                                                          \</span></p><p class="MsoNormal"><span lang="EN-US">                } while (!item);                                                          \</span></p><p class="MsoNormal"><span lang="EN-US">                opal_mutex_unlock(&amp;((fl)-&gt;fl_lock));                                      \</span></p><p class="MsoNormal"><span lang="EN-US">            } else {                                                                      \</span></p><p class="MsoNormal"><span lang="EN-US">                ompi_free_list_grow((fl), (fl)-&gt;fl_num_per_alloc);                        \</span></p><p class="MsoNormal"><span lang="EN-US">                item = (ompi_free_list_item_t*) opal_atomic_lifo_pop(&amp;((fl)-&gt;super));     \</span></p><p class="MsoNormal"><span lang="EN-US">            } /* opal_using_threads() */                                                  \</span></p><p class="MsoNormal"><span lang="EN-US">        } /* NULL == item */                                                              \</span></p><p class="MsoNormal"><span lang="EN-US">    }</span></p><p class="MsoNormal"><span lang="EN-US"> </span></p><p class="MsoNormal"><span lang="EN-US"> </span></p><p class="MsoNormal"><span lang="EN-US">Another workaround is to increase the value of  pml_ob1_free_list_inc parameter.</span></p><p class="MsoNormal"><span lang="EN-US"> </span></p><p class="MsoNormal"><span lang="EN-US">Regards,</span></p><p class="MsoNormal"><span lang="EN-US">Alexey</span></p><p class="MsoNormal"><span lang="EN-US"> </span></p></div></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/09/18039.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/09/18039.php</a><br></blockquote></div><br></div>
