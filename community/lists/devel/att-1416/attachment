Hi,<br><br>&nbsp; Pooja and I are actually working on this course project where we our main aim is <br>schedule MPI and non MPI calls... giving more priority to the MPI calls over the non <br>MPI ones.<br><br>To make things simple, we are making this scheduling static to some extent... by 
<br>static I mean.. we know that our clusters use Infiniband for MPI ( from our study of <br>the openmpi source code this precisely uses the &#39;mca_btl_openib_send()&#39; from <br>the ompi/mca/btl/openib/btl_openib.c file) ... so all the non MPI communication can 
<br>be assumed to be TCP communication using the &#39;mca_btl_tcp_send()&#39; from the <br>ompi/mca/btl/tcp/btl_tcp.c file. <br><br><br>To implement this we plan to implement the foll. simple algorithm:<br><br>- before calling the &#39;mca_btl_openib_send()&#39; lock0(X);
<br>- before calling the &#39;mca_btl_tcp_send()&#39; lock1(X);<br>
<br>Algo:<br><br>1. Allow Lock0(x) -&gt; Lock0(x);.. meaning Lock0(x) is followed by Lock0(x).<br>2. Allow Lock1(x) -&gt; Lock1(x);<br>3. Do not allow Lock0(x) -&gt; Lock1(x);<br>4. If Lock1(x) -&gt; Lock0(x).... since MPI calls are to be higher priority over the non 
<br>MPI ones.. in this case the non MPI communication should be paused and all the <br>related data off course needs to be put into a queue(meaning the status of this <br>should be saved in a queue). All other non MPI communications newer than this 
<br>should also be added to this same queue. Now the MPI process trying to <br>perform Lock0(x) should be allowed to complete and only when all the MPI <br>communications are complete should the non MPI communication be allowed.
<br><br>Currently we are working on a simple scheduling algorithm without giving any <br>priorities to the &#39;MPI_send&#39; calls.<br><br>However to implement the project fully, we have the following queries :(<br>-Can we abort or pause the non-MPI/TCP communication in  any way???
<br>-Given the assumption that the non-MPI communication is TCP, can we <br>make use of the built in structures (i mean the buffer already used) in <br>mca_btl_tcp_send() for the implementation of pt.4&nbsp; in the above mentioned 
<br>algorithm??? and more importantly how?<br><br>Regards,<br>Chaitali<br>

