<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html;charset=ISO-8859-1" http-equiv="Content-Type">
</head>
<body bgcolor="#ffffff" text="#000000">
Jeff Squyres wrote:
<blockquote cite="mid:1D0C14CA-D526-4C39-A115-FB9E930A2D8E@cisco.com"
 type="cite">
  <pre wrap="">Just chatted with Ralph about this on the phone and he came up with a slightly better compromise...

He points out that we really don't need *all* of the hwloc API (there's a bajillion tiny little accessor functions).  We could provide a steady, OPAL/ORTE/OMPI-specific API (probably down in opal/util or somesuch) with a dozen or two (or whatever) functions that we really need.  These functions can either call their back-end hwloc counterparts or they could do something safe if hwloc is not present / not supported / etc.

That would alleviate the need to put #if OPAL_HAVE_HWLOC elsewhere in the code base.  But the code calling opal_hwloc_&lt;foo&gt;() needs to be able to gracefully handle the failure case where it returns OPAL_ERR_NOT_SUPPORTED (etc.).


  </pre>
</blockquote>
The above sounds like you are replacing the whole paffinity framework
with hwloc.&nbsp; Is that true?&nbsp; Or is the hwloc accessors you are talking
about non-paffinity related?<br>
<br>
--td<br>
<blockquote cite="mid:1D0C14CA-D526-4C39-A115-FB9E930A2D8E@cisco.com"
 type="cite">
  <pre wrap="">
On May 17, 2010, at 8:25 PM, Jeff Squyres (jsquyres) wrote:

  </pre>
  <blockquote type="cite">
    <pre wrap="">On May 17, 2010, at 7:59 PM, Barrett, Brian W wrote:

    </pre>
    <blockquote type="cite">
      <pre wrap="">HWLOC could be extended to support Red Storm, probably, but we don't have the need or time to do such an implementation. 
      </pre>
    </blockquote>
    <pre wrap="">Fair enough.

    </pre>
    <blockquote type="cite">
      <pre wrap="">Given that, I'm not really picky about what the method of not breaking an existing supported platform is, but I think having HAVE_HWLOC defines everywhere is a bad idea...
      </pre>
    </blockquote>
    <pre wrap="">We need a mechanism to have hwloc *not* be there, particularly for embedded environments -- where hwloc would add no value.  This is apparently just like Red Storm, but even worse because we need to keep the memory footprint down as much as possible (libhwloc.so.0.0 on linux is 104KB -- libhwloc.a is 139KB -- both are big numbers when you only have a few MB of usable RAM).  So even leaving stubs doesn't seem like a good idea -- they'll take up space, too.  And the hwloc API is fairly large -- maintaining stubs for all the API functions could be a daunting task.

I think embedding is the main reason I can't think of any better idea than #if OPAL_HAVE_HWLOC.

I anticipate that hwloc usage would be fairly localized in the OMPI code base:

int btl_sm_setup_stuff(...)
{
#if OPAL_HAVE_HWLOC
     ...do interesting hwloc things...
     ...setup stuff on btl_sm_component...
     btl_sm_component.have_hwloc = 1;
#else
     btl_sm_component.have_hwloc = 0;
#endif
}

int btl_sm_other_stuff(...)
{
    if (btl_sm_component.have_hwloc) {
        ...use the hwloc info...
    }
}

But I'm certainly open to other ideas -- got any?

--
Jeff Squyres
<a class="moz-txt-link-abbreviated" href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>
For corporate legal information go to:
<a class="moz-txt-link-freetext" href="http://www.cisco.com/web/about/doing_business/legal/cri/">http://www.cisco.com/web/about/doing_business/legal/cri/</a>


_______________________________________________
devel mailing list
<a class="moz-txt-link-abbreviated" href="mailto:devel@open-mpi.org">devel@open-mpi.org</a>
<a class="moz-txt-link-freetext" href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a>

    </pre>
  </blockquote>
  <pre wrap=""><!---->

  </pre>
</blockquote>
<br>
<br>
<div class="moz-signature">-- <br>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title></title>
<img moz-do-not-send="false"
 src="cid:part1.03080403.04080200@oracle.com" alt="Oracle"><br>
<div class="moz-signature">
<div class="moz-signature">
<div class="moz-signature">
<div class="moz-signature">Terry D. Dontje | Principal Software Engineer<br>
<div class="moz-signature"><font color="#666666" face="Verdana" size="2">Developer
Tools
Engineering | +1.650.633.7054<br>
</font>
<font color="#ff0000" face="Verdana" size="2">Oracle
</font><font color="#666666" face="Verdana" size="2"><b> - Performance
Technologies</b></font><br>
<font color="#666666" face="Verdana" size="2">
95 Network Drive, Burlington, MA 01803<br>
Email <a href="mailto:terry.dontje@oracle.com">terry.dontje@oracle.com</a><br>
</font><br>
</div>
</div>
</div>
</div>
</div>
</div>
</body>
</html>

