<html><head><meta http-equiv="Content-Type" content="text/html charset=us-ascii"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;"><br><div><div>On May 28, 2014, at 7:34 AM, George Bosilca &lt;<a href="mailto:bosilca@icl.utk.edu">bosilca@icl.utk.edu</a>&gt; wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite">Calling MPI_Comm_free is not enough from MPI perspective to clean up<br>all knowledge about remote processes, nor to sever the links between<br>the local and remote groups. One MUST call MPI_Comm_disconnect in<br>order to achieve this.<br><br>Look at the code in ompi/mpi/c and see the difference between<br>MPI_Comm_free and MPI_Comm_disconnect. In addition to the barrier only<br>disconnect calls into the DPM framework, giving a chance to further<br>cleanup.<br></blockquote><div><br></div>Good point - however, that doesn't fix it. Changing the Comm_free calls to Comm_disconnect results in the same error messages when the parent finalizes:</div><div><br></div><div>Parent:</div><div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp;&nbsp;MPI_Init( &amp;argc, &amp;argv);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156); min-height: 13px;"><br></div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; for (iter = 0; iter &lt; 100; ++iter) {</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; &nbsp; &nbsp; MPI_Comm_spawn(EXE_TEST, NULL, 1, MPI_INFO_NULL,</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0, MPI_COMM_WORLD, &amp;comm, &amp;err);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; &nbsp; &nbsp; printf("parent: MPI_Comm_spawn #%d return : %d\n", iter, err);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156); min-height: 13px;"><br></div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; &nbsp; &nbsp; MPI_Intercomm_merge(comm, 0, &amp;merged);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; &nbsp; &nbsp; MPI_Comm_rank(merged, &amp;rank);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; &nbsp; &nbsp; MPI_Comm_size(merged, &amp;size);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; &nbsp; &nbsp; printf("parent: MPI_Comm_spawn #%d rank %d, size %d\n",&nbsp;</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iter, rank, size);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; &nbsp; &nbsp; MPI_Comm_disconnect(&amp;merged);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; }</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156); min-height: 13px;"><br></div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; MPI_Finalize();</div><div><br></div><div><br></div><div>Child:</div><div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp;&nbsp;MPI_Init(&amp;argc, &amp;argv);&nbsp; &nbsp;</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; printf("Child: launch\n");</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; MPI_Comm_get_parent(&amp;parent);&nbsp; &nbsp;</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; MPI_Intercomm_merge(parent, 1, &amp;merged);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; MPI_Comm_rank(merged, &amp;rank);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; MPI_Comm_size(merged, &amp;size);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; printf("Child merged rank = %d, size = %d\n", rank, size);</div><p style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156); min-height: 13px;">&nbsp; &nbsp;<br class="webkit-block-placeholder"></p><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; MPI_Comm_disconnect(&amp;merged);</div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">&nbsp; &nbsp; MPI_Finalize();</div></div><div><br></div><div><br></div><div>Upon parent calling finalize:</div><div><br></div><div><div style="margin: 0px; font-size: 11px; font-family: Menlo; background-color: rgb(254, 244, 156);">dpm_base_disconnect_init: error -12 in isend to process 0</div></div><div><br></div><div><br></div><div><br></div><blockquote type="cite"><br> &nbsp;George.<br><br><br>On Wed, May 28, 2014 at 10:10 AM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<br><blockquote type="cite"><br>On May 28, 2014, at 6:41 AM, Gilles Gouaillardet<br>&lt;<a href="mailto:gilles.gouaillardet@gmail.com">gilles.gouaillardet@gmail.com</a>&gt; wrote:<br><br>Ralph,<br><br><br>On Wed, May 28, 2014 at 9:33 PM, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<br><blockquote type="cite"><br>This is definetly what happens : only some tasks call MPI_Comm_free()<br><br><br>Really? I don't see how that can happen in loop_spawn - every process is<br>clearly calling comm_free. Or are you referring to the intercomm_create<br>test?<br><br></blockquote>yes, i am referring intercomm_create test<br><br><br>kewl - thanks<br><br><br>about loop_spawn, i could not get any error on my single host single socket<br>VM.<br>(i tried --mca btl tcp,sm,self and --mca btl tcp,self)<br><br>MPI_Finalize will end up calling ompi_dpm_dyn_finalize which causes the<br>error message on the parent of intercomm_create.<br>a necessary condition is ompi_comm_num_dyncomm &gt; 1<br>/* which by the way sounds odd to me, should it be 0 ? */<br><br><br>That does sound odd<br><br>which imho cannot happen if all communicators have been freed<br><br>can you detail your full mpirun command line, the number of servers you are<br>using, the btl involved and the ompi release that can be used to reproduce<br>the issue ?<br><br><br>Running on only one server, using the current head of the svn repo. My<br>cluster only has Ethernet, and I let it freely choose the BTLs (so I imagine<br>the candidates are sm,self,tcp,vader). The cmd line is really trivial:<br><br>mpirun -n 1 ./loop_spawn<br><br>I modified loop_spawn to only run 100 iterations as I am not patient enough<br>to wait for 1000, and the number of iters isn't a factor so long as it is<br>greater than 1. When the parent calls finalize, I get one of the following<br>emitted for every iteration that was done:<br><br>dpm_base_disconnect_init: error -12 in isend to process 0<br><br>So in other words, the parent is attempting to isend to every child that was<br>spawned during the test - it thinks that every comm_spawn'd process remains<br>connected to it.<br><br>I'm wondering if the issue is that the parent and child are calling<br>comm_free, but neither side called comm_disconnect. So unless comm_free is<br>calling disconnect under-the-covers, it might explain why the parent thinks<br>all the children are still present.<br><br><br><br>i will try to reproduce this myself<br><br>Cheers,<br><br>Gilles<br><br><br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/devel<br>Link to this post:<br>http://www.open-mpi.org/community/lists/devel/2014/05/14890.php<br><br><br><br>_______________________________________________<br>devel mailing list<br>devel@open-mpi.org<br>Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/devel<br>Link to this post:<br>http://www.open-mpi.org/community/lists/devel/2014/05/14891.php<br></blockquote>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/devel<br>Link to this post: http://www.open-mpi.org/community/lists/devel/2014/05/14892.php<br></blockquote></div><br></body></html>
