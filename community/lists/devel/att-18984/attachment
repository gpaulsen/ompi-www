<html><head><meta http-equiv="Content-Type" content="text/html charset=us-ascii"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class="">Sounds like something has been broken - what Jeff describes is the intended behavior<div class=""><br class=""><div><blockquote type="cite" class=""><div class="">On May 16, 2016, at 8:00 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@gmail.com" class="">gilles.gouaillardet@gmail.com</a>&gt; wrote:</div><br class="Apple-interchange-newline"><div class="">Jeff,<div class=""><br class=""></div><div class="">this is not what I observed</div><div class="">(tcp btl, 2 to 4 nodes with one task per node, cutoff=0)</div><div class="">the add_procs of the tcp btl is invoked once with the 4 tasks.</div><div class="">I checked the sources and found cutoff only controls if the modex is invoked once for all at init, or on demand.</div><div class=""><br class=""></div><div class="">Cheers,</div><div class=""><br class=""></div><div class="">Gilles<br class=""><br class="">On Monday, May 16, 2016, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com" class="">jsquyres@cisco.com</a>&gt; wrote:<br class=""><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">We changed the way BTL add_procs is invoked on master and v2.x for scalability reasons.<br class="">
<br class="">
In short: add_procs is only invoked the first time you talk to a given peer.&nbsp; The cutoff switch is an override to that -- if the sizeof COMM_WORLD is less than the cutoff, we revert to the old behavior of calling add_procs for all procs.<br class="">
<br class="">
As for why one BTL would be chosen over another, be sure to look at not only the priority of the component/module, but also the exclusivity level.&nbsp; In short, only BTLs with the same exclusivity level will be considered (e.g., this is how we exclude TCP when using HPC-class networks), and then the BTL modules with the highest priority will be used for a given peer.<br class="">
<br class="">
<br class="">
&gt; On May 16, 2016, at 7:19 AM, Gilles Gouaillardet &lt;<a href="javascript:;" onclick="_e(event, 'cvml', 'gilles.gouaillardet@gmail.com')" class="">gilles.gouaillardet@gmail.com</a>&gt; wrote:<br class="">
&gt;<br class="">
&gt; it seems I misunderstood some things ...<br class="">
&gt;<br class="">
&gt; add_procs is always invoked, regardless the cutoff value.<br class="">
&gt; cutoff is used to retrieve processes info via the modex "on demand" vs at init time.<br class="">
&gt;<br class="">
&gt; Please someone correct me and/or elaborate if needed<br class="">
&gt;<br class="">
&gt; Cheers,<br class="">
&gt;<br class="">
&gt; Gilles<br class="">
&gt;<br class="">
&gt; On Monday, May 16, 2016, Gilles Gouaillardet &lt;<a href="javascript:;" onclick="_e(event, 'cvml', 'gilles@rist.or.jp')" class="">gilles@rist.or.jp</a>&gt; wrote:<br class="">
&gt; i cannot reproduce this behavior.<br class="">
&gt;<br class="">
&gt; note mca_btl_tcp_add_procs is invoked once per tcp component (e.g. once per physical NIC)<br class="">
&gt;<br class="">
&gt; so you might want to explicitly select one nic<br class="">
&gt;<br class="">
&gt; mpirun --mca btl_tcp_if_include xxx ...<br class="">
&gt;<br class="">
&gt; my printf output are the same and regardless the mpi_add_procs_cutoff value<br class="">
&gt;<br class="">
&gt;<br class="">
&gt; Cheers,<br class="">
&gt;<br class="">
&gt;<br class="">
&gt; Gilles<br class="">
&gt; On 5/16/2016 12:22 AM, dpchoudh . wrote:<br class="">
&gt;&gt; Sorry, I accidentally pressed 'Send' before I was done writing the last mail. What I wanted to ask was what is the parameter mpi_add_procs_cutoff and why adding it seems to make a difference in the code path but not in the end result of the program? How would it help me debug my problem?<br class="">
&gt;&gt;<br class="">
&gt;&gt; Thank you<br class="">
&gt;&gt; Durga<br class="">
&gt;&gt;<br class="">
&gt;&gt; The surgeon general advises you to eat right, exercise regularly and quit ageing.<br class="">
&gt;&gt;<br class="">
&gt;&gt; On Sun, May 15, 2016 at 11:17 AM, dpchoudh . &lt;<a href="javascript:;" onclick="_e(event, 'cvml', 'dpchoudh@gmail.com')" class="">dpchoudh@gmail.com</a>&gt; wrote:<br class="">
&gt;&gt; Hello Gilles<br class="">
&gt;&gt;<br class="">
&gt;&gt; Setting -mca mpi_add_procs_cutoff 1024 indeed makes a difference to the output, as follows:<br class="">
&gt;&gt;<br class="">
&gt;&gt; With -mca mpi_add_procs_cutoff 1024:<br class="">
&gt;&gt; reachable =&nbsp; &nbsp; &nbsp;0x1<br class="">
&gt;&gt; (Note that add_procs was called once and the value of 'reachable is correct')<br class="">
&gt;&gt;<br class="">
&gt;&gt; Without -mca mpi_add_procs_cutoff 1024<br class="">
&gt;&gt; reachable =&nbsp; &nbsp; &nbsp;0x0<br class="">
&gt;&gt; reachable = NULL<br class="">
&gt;&gt; reachable = NULL<br class="">
&gt;&gt; (Note that add_procs() was caklled three times and the value of 'reachable' seems wrong.<br class="">
&gt;&gt;<br class="">
&gt;&gt; The program does run correctly in either case. The program listing is as below (note that I have removed output from the program itself in the above reporting.)<br class="">
&gt;&gt;<br class="">
&gt;&gt; The code that prints 'reachable' is as follows:<br class="">
&gt;&gt;<br class="">
&gt;&gt; if (reachable == NULL)<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;printf("reachable = NULL\n");<br class="">
&gt;&gt; else<br class="">
&gt;&gt; {<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;int i;<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;printf("reachable = ");<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;for (i = 0; i &lt; reachable-&gt;array_size; i++)<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;printf("\t0x%llu", reachable-&gt;bitmap[i]);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;printf("\n\n");<br class="">
&gt;&gt; }<br class="">
&gt;&gt; return OPAL_SUCCESS;<br class="">
&gt;&gt;<br class="">
&gt;&gt; And the code for the test program is as follows:<br class="">
&gt;&gt;<br class="">
&gt;&gt; #include &lt;mpi.h&gt;<br class="">
&gt;&gt; #include &lt;stdio.h&gt;<br class="">
&gt;&gt; #include &lt;string.h&gt;<br class="">
&gt;&gt; #include &lt;stdlib.h&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt; int main(int argc, char *argv[])<br class="">
&gt;&gt; {<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;int world_size, world_rank, name_len;<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;char hostname[MPI_MAX_PROCESSOR_NAME], buf[8];<br class="">
&gt;&gt;<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;MPI_Init(&amp;argc, &amp;argv);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;MPI_Comm_size(MPI_COMM_WORLD, &amp;world_size);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;MPI_Comm_rank(MPI_COMM_WORLD, &amp;world_rank);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;MPI_Get_processor_name(hostname, &amp;name_len);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;printf("Hello world from processor %s, rank %d out of %d processors\n", hostname, world_rank, world_size);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;if (world_rank == 1)<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;{<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;MPI_Recv(buf, 6, MPI_CHAR, 0, 99, MPI_COMM_WORLD, MPI_STATUS_IGNORE);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;printf("%s received %s, rank %d\n", hostname, buf, world_rank);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;}<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;else<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;{<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;strcpy(buf, "haha!");<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;MPI_Send(buf, 6, MPI_CHAR, 1, 99, MPI_COMM_WORLD);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;printf("%s sent %s, rank %d\n", hostname, buf, world_rank);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;}<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;MPI_Barrier(MPI_COMM_WORLD);<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;MPI_Finalize();<br class="">
&gt;&gt;&nbsp; &nbsp; &nbsp;return 0;<br class="">
&gt;&gt; }<br class="">
&gt;&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt; The surgeon general advises you to eat right, exercise regularly and quit ageing.<br class="">
&gt;&gt;<br class="">
&gt;&gt; On Sun, May 15, 2016 at 10:49 AM, Gilles Gouaillardet &lt;<a href="javascript:;" onclick="_e(event, 'cvml', 'gilles.gouaillardet@gmail.com')" class="">gilles.gouaillardet@gmail.com</a>&gt; wrote:<br class="">
&gt;&gt; At first glance, that seems a bit odd...<br class="">
&gt;&gt; are you sure you correctly print the reachable bitmap ?<br class="">
&gt;&gt; I would suggest you add some instrumentation to understand what happens<br class="">
&gt;&gt; (e.g., printf before opal_bitmap_set_bit() and other places that prevent this from happening)<br class="">
&gt;&gt;<br class="">
&gt;&gt; one more thing ...<br class="">
&gt;&gt; now, master default behavior is<br class="">
&gt;&gt; mpirun --mca mpi_add_procs_cutoff 0 ...<br class="">
&gt;&gt; you might want to try<br class="">
&gt;&gt; mpirun --mca mpi_add_procs_cutoff 1024 ...<br class="">
&gt;&gt; and see if things make more sense.<br class="">
&gt;&gt; if it helps, and iirc, there is a parameter so a btl can report it does not support cutoff.<br class="">
&gt;&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt; Cheers,<br class="">
&gt;&gt;<br class="">
&gt;&gt; Gilles<br class="">
&gt;&gt;<br class="">
&gt;&gt; On Sunday, May 15, 2016, dpchoudh . &lt;<a href="javascript:;" onclick="_e(event, 'cvml', 'dpchoudh@gmail.com')" class="">dpchoudh@gmail.com</a>&gt; wrote:<br class="">
&gt;&gt; Hello Gilles<br class="">
&gt;&gt;<br class="">
&gt;&gt; Thanks for jumping in to help again. Actually, I had already tried some of your suggestions before asking for help.<br class="">
&gt;&gt;<br class="">
&gt;&gt; I have several interconnects that can run both openib and tcp BTL. To simplify things, I explicitly mentioned TCP:<br class="">
&gt;&gt;<br class="">
&gt;&gt; mpirun -np 2 -hostfile ~/hostfile -mca pml ob1 -mca btl self.tcp ./mpitest<br class="">
&gt;&gt;<br class="">
&gt;&gt; where mpitest is a small program that does MPI_Send()/MPI_Recv() on a small string, and then does an MPI_Barrier(). The program does work as expected.<br class="">
&gt;&gt;<br class="">
&gt;&gt; I put a printf on the last line of mca_tcp_add_procs() to print the value of 'reachable'. What I saw was that the value was always 0 when it was invoked for Send()/Recv() and the pointer itself was NULL when invoked for Barrier()<br class="">
&gt;&gt;<br class="">
&gt;&gt; Next I looked at pml_ob1_add_procs(), where the call chain starts, and found that it initializes and passes an opal_bitmap_t reachable down the call chain, but the resulting value is not used later in the code (the memory is simply freed later).<br class="">
&gt;&gt;<br class="">
&gt;&gt; That, coupled with the fact that I am trying to imitate what the other BTL implementations are doing, yet in mca_bml_r2_endpoint_add_btl() by BTL is not being picked up, left me puzzled. Please note that the interconnect that I am developing for is on a different cluster (than where I ran the above test for TCP BTL.)<br class="">
&gt;&gt;<br class="">
&gt;&gt; Thanks again<br class="">
&gt;&gt; Durga<br class="">
&gt;&gt;<br class="">
&gt;&gt; The surgeon general advises you to eat right, exercise regularly and quit ageing.<br class="">
&gt;&gt;<br class="">
&gt;&gt; On Sun, May 15, 2016 at 10:20 AM, Gilles Gouaillardet &lt;<a href="javascript:;" onclick="_e(event, 'cvml', 'gilles.gouaillardet@gmail.com')" class="">gilles.gouaillardet@gmail.com</a>&gt; wrote:<br class="">
&gt;&gt; did you check the add_procs callbacks ?<br class="">
&gt;&gt; (e.g. mca_btl_tcp_add_procs() for the tcp btl)<br class="">
&gt;&gt; this is where the reachable bitmap is set, and I guess this is what you are looking for.<br class="">
&gt;&gt;<br class="">
&gt;&gt; keep in mind that if several btl can be used, the one with the higher exclusivity is used<br class="">
&gt;&gt; (e.g. tcp is never used if openib is available)<br class="">
&gt;&gt; you can simply force your btl and self, and the ob1 pml, so you do not have to worry about other btl exclusivity.<br class="">
&gt;&gt;<br class="">
&gt;&gt; Cheers,<br class="">
&gt;&gt;<br class="">
&gt;&gt; Gilles<br class="">
&gt;&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt; On Sunday, May 15, 2016, dpchoudh . &lt;<a href="javascript:;" onclick="_e(event, 'cvml', 'dpchoudh@gmail.com')" class="">dpchoudh@gmail.com</a>&gt; wrote:<br class="">
&gt;&gt; Hello all<br class="">
&gt;&gt;<br class="">
&gt;&gt; I have been struggling with this issue for a while and figured it might be a good idea to ask for help.<br class="">
&gt;&gt;<br class="">
&gt;&gt; Where (in the code path) is the connectivity map created?<br class="">
&gt;&gt;<br class="">
&gt;&gt; I can see that it is *used* in mca_bml_r2_endpoint_add_btl(), but obviously I am not setting it up right, because this routine is not finding the BTL corresponding to my interconnect.<br class="">
&gt;&gt;<br class="">
&gt;&gt; Thanks in advance<br class="">
&gt;&gt; Durga<br class="">
&gt;&gt;<br class="">
&gt;&gt; The surgeon general advises you to eat right, exercise regularly and quit ageing.<br class="">
&gt;&gt;<br class="">
&gt;&gt; _______________________________________________<br class="">
&gt;&gt; devel mailing list<br class="">
&gt;&gt; <a href="javascript:;" onclick="_e(event, 'cvml', 'devel@open-mpi.org')" class="">devel@open-mpi.org</a><br class="">
&gt;&gt; Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank" class="">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">
&gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18975.php" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/05/18975.php</a><br class="">
&gt;&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt; _______________________________________________<br class="">
&gt;&gt; devel mailing list<br class="">
&gt;&gt; <a href="javascript:;" onclick="_e(event, 'cvml', 'devel@open-mpi.org')" class="">devel@open-mpi.org</a><br class="">
&gt;&gt; Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank" class="">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">
&gt;&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18977.php" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/05/18977.php</a><br class="">
&gt;&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt;<br class="">
&gt;&gt; _______________________________________________<br class="">
&gt;&gt; devel mailing list<br class="">
&gt;&gt;<br class="">
&gt;&gt; <a href="javascript:;" onclick="_e(event, 'cvml', 'devel@open-mpi.org')" class="">devel@open-mpi.org</a><br class="">
&gt;&gt;<br class="">
&gt;&gt; Subscription:<br class="">
&gt;&gt; <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank" class="">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">
&gt;&gt;<br class="">
&gt;&gt; Link to this post:<br class="">
&gt;&gt; <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18979.php" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/05/18979.php</a><br class="">
&gt;<br class="">
&gt; _______________________________________________<br class="">
&gt; devel mailing list<br class="">
&gt; <a href="javascript:;" onclick="_e(event, 'cvml', 'devel@open-mpi.org')" class="">devel@open-mpi.org</a><br class="">
&gt; Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank" class="">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">
&gt; Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18981.php" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/05/18981.php</a><br class="">
<br class="">
<br class="">
--<br class="">
Jeff Squyres<br class="">
<a href="javascript:;" onclick="_e(event, 'cvml', 'jsquyres@cisco.com')" class="">jsquyres@cisco.com</a><br class="">
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank" class="">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br class="">
<br class="">
_______________________________________________<br class="">
devel mailing list<br class="">
<a href="javascript:;" onclick="_e(event, 'cvml', 'devel@open-mpi.org')" class="">devel@open-mpi.org</a><br class="">
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank" class="">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/18982.php" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/05/18982.php</a><br class="">
</blockquote></div>
_______________________________________________<br class="">devel mailing list<br class=""><a href="mailto:devel@open-mpi.org" class="">devel@open-mpi.org</a><br class="">Subscription: https://www.open-mpi.org/mailman/listinfo.cgi/devel<br class="">Link to this post: http://www.open-mpi.org/community/lists/devel/2016/05/18983.php</div></blockquote></div><br class=""></div></body></html>
