<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 TRANSITIONAL//EN">
<HTML>
<HEAD>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=UTF-8">
  <META NAME="GENERATOR" CONTENT="GtkHTML/3.0.10">
</HEAD>
<BODY>
Did a little digging into this last night, and finally figured out what you were getting at in your comments here. Yeah, I think an &quot;affinity&quot; framework would definitely be the best approach - can handle both cpu and memory, I&nbsp; imagine. Isn't clear how pressing that is as it is mostly an optimization issue, but you're welcome to create the framework if you like.<BR>
<BR>
<BR>
On Sun, 2005-07-17 at 09:13, Jeff Squyres wrote:
<BLOCKQUOTE TYPE=CITE>
<PRE><FONT COLOR="#0000ff"><I>It needs to be done in the launched process itself.  So we'd either 
have to extend rmaps (from my understanding of rmaps, that doesn't seem 
like a good idea), or do something different.

Perhaps the easiest thing to do is to add this to the LANL meeting 
agenda...?  Then we can have a whiteboard to discuss.  :-)



On Jul 17, 2005, at 10:26 AM, Ralph Castain wrote:

&gt; Wouldn't it belong in the rmaps framework? That's where we tell the
&gt; launcher where to put each process - seems like a natural fit.
&gt;
&gt;
&gt; On Jul 17, 2005, at 6:45 AM, Jeff Squyres wrote:
&gt;
&gt;&gt; I'm thinking that we should add some processor affinity code to OMPI 
&gt;&gt; --
&gt;&gt; possibly in the orte layer (ORTE is the interface to the back-end
&gt;&gt; launcher, after all).  This will really help on systems like opterons
&gt;&gt; (and others) to prevent processes from bouncing between processors, 
&gt;&gt; and
&gt;&gt; potentially getting located far from &quot;their&quot; RAM.
&gt;&gt;
&gt;&gt; This has the potential to help even micro-benchmark results (e.g.,
&gt;&gt; ping-pong).  It's going to be quite relevant for my shared memory
&gt;&gt; collective work on mauve.
&gt;&gt;
&gt;&gt;
&gt;&gt; General scheme:
&gt;&gt; ---------------
&gt;&gt;
&gt;&gt; I think that somewhere in ORTE, we should actively set processor
&gt;&gt; affinity when:
&gt;&gt;    - Supported by the OS
&gt;&gt;    - Not disabled by the user (via MCA param)
&gt;&gt;    - The node is not over-subscribed with processes from this job
&gt;&gt;
&gt;&gt; Generally speaking, if you launch &lt;=N processes in a job on a node
&gt;&gt; (where N == number of CPUs on that node), then we set processor
&gt;&gt; affinity.  We set each process's affinity to the CPU number according
&gt;&gt; to the VPID ordering of the procs in that job on that node.  So if you
&gt;&gt; launch VPIDs 5, 6, 7, 8 on a node, 5 would go to processor 0, 6 would
&gt;&gt; go to processor 1, etc. (it's an easy, locally-determined ordering).
&gt;&gt;
&gt;&gt; Someday, we might want to make this scheme universe-aware (i.e., see 
&gt;&gt; if
&gt;&gt; any other ORTE jobs are running on that node, and not schedule on any
&gt;&gt; processors that are already claimed by the processes on that(those)
&gt;&gt; job(s)), but I think single-job awareness is sufficient for the 
&gt;&gt; moment.
&gt;&gt;
&gt;&gt;
&gt;&gt; Implementation:
&gt;&gt; ---------------
&gt;&gt;
&gt;&gt; We'll need relevant configure tests to figure out if the target system
&gt;&gt; as CPU affinity system calls.  Those are simple to add.
&gt;&gt;
&gt;&gt; We could use simply #if statements for the affinity stuff or make it a
&gt;&gt; real framework.  Since it's only 1 function call to set the affinity, 
&gt;&gt; I
&gt;&gt; tend to lean towards the [simpler] #if solution, but could probably be
&gt;&gt; pretty easily convinced that a framework is the Right solution.  I'm 
&gt;&gt; on
&gt;&gt; the fence (and if someone convinces me, I'd volunteer for the extra
&gt;&gt; work to setup the framework).
&gt;&gt;
&gt;&gt; I'm not super-familiar with the processor-affinity stuff (e.g., for
&gt;&gt; best effect, should it be done after the fork and before the exec?), 
&gt;&gt; so
&gt;&gt; I'm not sure exactly where this would go in ORTE.  Potentially either
&gt;&gt; before new processes are exec'd (where we only have control of that in
&gt;&gt; some kinds of systems, like rsh/ssh) or right up very very near the 
&gt;&gt; top
&gt;&gt; of orte_init().
&gt;&gt;
&gt;&gt; Comments?
&gt;&gt;
&gt;&gt; -- 
&gt;&gt; {+} Jeff Squyres
&gt;&gt; {+} The Open MPI Project
&gt;&gt; {+} <A HREF="http://www.open-mpi.org/"><U>http://www.open-mpi.org/</U></A>
&gt;&gt;
&gt;&gt; _______________________________________________
&gt;&gt; devel mailing list
&gt;&gt; devel@open-mpi.org
&gt;&gt; <A HREF="http://www.open-mpi.org/mailman/listinfo.cgi/devel"><U>http://www.open-mpi.org/mailman/listinfo.cgi/devel</U></A>
&gt;&gt;
&gt;
&gt; _______________________________________________
&gt; devel mailing list
&gt; devel@open-mpi.org
&gt; <A HREF="http://www.open-mpi.org/mailman/listinfo.cgi/devel"><U>http://www.open-mpi.org/mailman/listinfo.cgi/devel</U></A>
&gt;</I></FONT></PRE>
</BLOCKQUOTE>
</BODY>
</HTML>

