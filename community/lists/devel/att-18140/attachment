<html><body><div style="color:#000; background-color:#fff; font-family:HelveticaNeue, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;font-size:18px"><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span id="yui_3_16_0_1_1444139471746_3408">Thanks, Gilles. Some more questions:</span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span><br></span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span id="yui_3_16_0_1_1444139471746_3320">1. how does Open MPI &nbsp;define the priorities of the different collective components? what criteria is based on?</span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span><br></span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span id="yui_3_16_0_1_1444139471746_3568">2. how does a MPI collective function (MPI_Barrier for example) choose the exact algorithm it use? based on message size, and communicator size? any other factors?&nbsp;</span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span><br></span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr">3. when does MPI_Barrier choose the algorithm? &nbsp;in ompi_mpi_init? or &nbsp;every time the API program calls the MPI_barrier?&nbsp;</div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr">&nbsp;</div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr">4. all the MPI collective functions follow the same procedure to choose algorithms in the API program?</div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span><br></span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span id="yui_3_16_0_1_1444139471746_4105">It would be great if you can point out some main OMPI files and functions that are involved in the process.</span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span><br></span></div><div id="yui_3_16_0_1_1444139471746_3296" dir="ltr"><span>Dahai</span></div>  <br><div class="qtdSeparateBR"><br><br></div><div class="yahoo_quoted" style="display: block;"> <div style="font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif; font-size: 18px;"> <div style="font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif; font-size: 16px;"> <div dir="ltr"> <font size="2" face="Arial"> On Tuesday, October 6, 2015 1:08 AM, Gilles Gouaillardet &lt;gilles.gouaillardet@gmail.com&gt; wrote:<br> </font> </div>  <br><br> <div class="y_msg_container">at first, you can check the priorities of the various coll modules<br clear="none">with ompi_info<br clear="none"><br clear="none">$ ompi_info --all | grep \"coll_ | grep priority<br clear="none">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MCA coll: parameter "coll_basic_priority" (current<br clear="none">value: "10", data source: default, level: 9 dev/all, type: int)<br clear="none">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MCA coll: parameter "coll_inter_priority" (current<br clear="none">value: "40", data source: default, level: 9 dev/all, type: int)<br clear="none">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MCA coll: parameter "coll_libnbc_priority" (current<br clear="none">value: "10", data source: default, level: 9 dev/all, type: int)<br clear="none">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MCA coll: parameter "coll_ml_priority" (current value:<br clear="none">"0", data source: default, level: 9 dev/all, type: int)<br clear="none">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MCA coll: parameter "coll_self_priority" (current<br clear="none">value: "75", data source: default, level: 9 dev/all, type: int)<br clear="none">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MCA coll: parameter "coll_sm_priority" (current value:<br clear="none">"0", data source: default, level: 9 dev/all, type: int)<br clear="none">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MCA coll: parameter "coll_tuned_priority" (current<br clear="none">value: "30", data source: default, level: 6 tuner/all, type: int)<br clear="none"><br clear="none"><br clear="none">coll_tuned_priority likely the collective module you will be using.<br clear="none">then you can check the various ompi_coll_tuned_*_intra_dec_fixed functions in<br clear="none">ompi/mca/coll/tuned/coll_tuned_decision_fixed.c<br clear="none">this is how the tuned collective module selects algorithms based on<br clear="none">communicator size and message size.<br clear="none"><br clear="none">Cheers,<br clear="none"><br clear="none">Gilles<br clear="none"><br clear="none">On Sun, Oct 4, 2015 at 11:12 AM, Dahai Guo &lt;<a shape="rect" ymailto="mailto:dahaiguo2004@yahoo.com" href="mailto:dahaiguo2004@yahoo.com">dahaiguo2004@yahoo.com</a>&gt; wrote:<br clear="none">&gt; Thanks, Jeff. I am trying to understand in detail how Open MPI works in the<br clear="none">&gt; run time. What main functions does it call to select and initialize the coll<br clear="none">&gt; components? Using the "helloworld" as an example,&nbsp; how does it select and<br clear="none">&gt; initialize the MPI_Barrier algorithm?&nbsp; which C functions are involved and<br clear="none">&gt; used in the process?<br clear="none">&gt;<br clear="none">&gt; Dahai<br clear="none">&gt;<br clear="none">&gt;<br clear="none">&gt;<br clear="none">&gt; On Friday, October 2, 2015 7:50 PM, Jeff Squyres (jsquyres)<br clear="none">&gt; &lt;<a shape="rect" ymailto="mailto:jsquyres@cisco.com" href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br clear="none">&gt;<br clear="none">&gt;<br clear="none">&gt; On Oct 2, 2015, at 2:21 PM, Dahai Guo &lt;<a shape="rect" ymailto="mailto:dahaiguo2004@yahoo.com" href="mailto:dahaiguo2004@yahoo.com">dahaiguo2004@yahoo.com</a>&gt; wrote:<br clear="none">&gt;&gt;<br clear="none">&gt;&gt; Is there any way to trace open mpi internal function calls in a MPI user<br clear="none">&gt;&gt; program?<br clear="none">&gt;<br clear="none">&gt; Unfortunately, not easily -- other than using a debugger, for example.<br clear="none">&gt;<br clear="none">&gt;&gt; If so, can any one explain it with an example? such as helloworld?&nbsp; I<br clear="none">&gt;&gt; build open MPI with the VampirTrace options, and compile the following<br clear="none">&gt;&gt; program with picc-vt,. but I didn't get any tracing info.<br clear="none">&gt;<br clear="none">&gt; Open MPI is a giant state machine -- MPI_INIT, for example, invokes slightly<br clear="none">&gt; fewer than a bazillion functions (e.g., it initializes every framework and<br clear="none">&gt; many components/plugins).<br clear="none">&gt;<br clear="none">&gt; Is there something in particular that you're looking for / want to know<br clear="none">&gt; about?<br clear="none">&gt;<br clear="none">&gt;&gt; Thanks<br clear="none">&gt;&gt;<br clear="none">&gt;&gt; D. G.<br clear="none">&gt;&gt;<br clear="none">&gt;&gt; #include &lt;stdio.h&gt;<br clear="none">&gt;&gt; #include &lt;mpi.h&gt;<br clear="none">&gt;&gt;<br clear="none">&gt;&gt;<br clear="none">&gt;&gt; int main (int argc, char **argv)<br clear="none">&gt;&gt; {<br clear="none">&gt;&gt;&nbsp; int rank, size;<br clear="none">&gt;&gt;<br clear="none">&gt;&gt;&nbsp; MPI_Init (&amp;argc, &amp;argv);<br clear="none">&gt;&gt;&nbsp; MPI_Comm_rank (MPI_COMM_WORLD, &amp;rank);<br clear="none">&gt;&gt;&nbsp; MPI_Comm_size (MPI_COMM_WORLD, &amp;size);<br clear="none">&gt;&gt;&nbsp; printf( "Hello world from process %d of %d\n", rank, size );<br clear="none">&gt;&gt;&nbsp; MPI_Barrier(MPI_COMM_WORLD);<br clear="none">&gt;&gt;&nbsp; MPI_Finalize();<br clear="none">&gt;&gt;&nbsp; return 0;<br clear="none">&gt;&gt; }<br clear="none">&gt;&gt;<br clear="none">&gt;&gt; _______________________________________________<br clear="none">&gt;&gt; devel mailing list<br clear="none">&gt;&gt; <a shape="rect" ymailto="mailto:devel@open-mpi.org" href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br clear="none">&gt;&gt; Subscription: <a shape="rect" href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br clear="none">&gt;&gt; Link to this post:<br clear="none">&gt;&gt; <a shape="rect" href="http://www.open-mpi.org/community/lists/devel/2015/10/18125.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/10/18125.php</a><br clear="none">&gt;<br clear="none">&gt;<br clear="none">&gt; --<br clear="none">&gt; Jeff Squyres<br clear="none">&gt; <a shape="rect" ymailto="mailto:jsquyres@cisco.com" href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br clear="none">&gt; For corporate legal information go to:<br clear="none">&gt; <a shape="rect" href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><div class="yqt2828420560" id="yqtfd45797"><br clear="none">&gt;<br clear="none">&gt;<br clear="none">&gt;<br clear="none">&gt; _______________________________________________<br clear="none">&gt; devel mailing list<br clear="none">&gt; <a shape="rect" ymailto="mailto:devel@open-mpi.org" href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br clear="none">&gt; Subscription: <a shape="rect" href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br clear="none">&gt; Link to this post:</div><br clear="none">&gt; <a shape="rect" href="http://www.open-mpi.org/community/lists/devel/2015/10/18138.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/10/18138.php</a><div class="yqt2828420560" id="yqtfd77870"><br clear="none"></div><br><br></div>  </div> </div>  </div></div></body></html>
