<div dir="ltr">Nathan,<div>Could you please comment on the Igor`s observations?</div><div><br></div><div>Thanks</div></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Wed, Dec 4, 2013 at 4:44 PM, Igor Ivanov <span dir="ltr">&lt;<a href="mailto:igor.ivanov@itseez.com" target="_blank">igor.ivanov@itseez.com</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div class="im">On 04.12.2013 17:56, Jeff Squyres (jsquyres) wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
On Dec 4, 2013, at 2:52 AM, Igor Ivanov &lt;<a href="mailto:Igor.Ivanov@itseez.com" target="_blank">Igor.Ivanov@itseez.com</a>&gt; wrote:<br>
<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
It is the first mca variable with type as string from btl/openib as &#39;device_param_files&#39;. Actually you can disable it and get failure on the second.<br>
<br>
Description of case we see:<br>
1. openib mca variables are registered during startup as stage at select component phase;<br>
2. but a winner is cm component and openib mca variables are deregistered as part of mca group;<br>
3. mca variables are not removed from global mca array but they marked as invalid and memory for string is freed;<br>
4. shmem needs openib for yoda and does bml initialization;<br>
5. openib mca variables are registered againusing light mode as searching itself in global array and refreshing their fields again;<br>
</blockquote>
Can you explain what you mean by step 5?  I.e., what does &quot;using light mode&quot; mean?  Is the openib component register function invoked again?<br>
</blockquote></div>
It is correct, it is called twice. &quot;light mode&quot; means that mca_base_var_register() does not allocate mca variable object again, it seeks this variable in global array and finding it updates fields in mca_base_var_t structure (at least mbv_storage).<div class="im">
<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
6. for unknown reason bml finalization does not clean these vars as it is done in step 2;<br>
7. mca_btl_openib.so is unloaded;<br>
8. opal_finalize() destroys mca variables form global array, observes openib`s variable, try destroy using non accessed address;<br>
<br>
So a code that is under discussion fixes step 6.<br>
</blockquote>
Nathan: it sounds like an MCA var (and entire group) is registered, unregistered, and then registered again. Does the MCA var system get confused here when it tries to unregister the group a 2nd time?<br>
</blockquote></div>
Probably issue relates incorrect recognition if variable valid/invalid during second call of mca_base_var_deregister().<div class="HOEnZb"><div class="h5"><br>
<br>
______________________________<u></u>_________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/<u></u>mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br></div>

