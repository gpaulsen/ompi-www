<div>I was wondering if someone might be able to shed some light on a couple of questions I have.</div>
<div> </div>
<div>When you receive a fragment/base_descriptor in a BTL module, is the raw data allowed to be fragmented when you invoke the callback function? By that I mean, I&#39;m using a circular buffer in each endpoint so sometimes data loops back around. Currently I&#39;m doing a two step copy: from my socket to the circular buffer and then from the circular buffer to the fragment. This actually effects my total throughput quite a bit, it would be much nicer to just point to the buffer instead. When I tried using two base_segments to point to the start and end of buffer I got some pretty strange errors. I&#39;m just wondering if someone could confirm or deny that you can or can&#39;t do this, maybe those errors were down to human error instead.</div>

<div> </div>
<div>My other question is about the BTL failover system. Would someone be able to briefly explain how it works or maybe point me to some docs? I&#39;m actually expecting the file descriptors in my module to fail a certain point during an Open MPI job and I&#39;d like my BTL module to fail gracefully and allow the TCP module to take over in its place. I&#39;m not sure how to explicitly make the the BTL module say to the rest of Open MPI &quot;don&#39;t use my anymore&quot; though.</div>

<div> </div>
<div>Happy Easter</div>
<div>Tim</div>
<div> </div>

