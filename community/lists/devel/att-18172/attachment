<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">The INTEGER*n, LOGICAL*n, REAL*n, etc., syntax has never been legal Fortran. &nbsp;Fortran originally had only INTEGER, REAL, DOUBLE PRECISION, and COMPLEX numeric types. &nbsp;Fortran 90 added the notion of a KIND of numeric, but left unspecified the mapping of numeric KINDs to processor-specific storage. &nbsp;KIND can be thought of as an opaque identifier. &nbsp;There is no requirement, for example that KIND n means a variable occupies n bytes of storage, though this is commonly done. &nbsp;(As is the association of KIND=1 to REAL and KIND=2 to DOUBLE PRECISION.) &nbsp;Instead, the language provides portable means of specifying the desired behavior of an available KIND, such as digits of precision. &nbsp;Unfortunately, when marshalling data for interchange, bits matter—the number and their meaning. &nbsp;High-level languages don't support such concepts very well. Starting &nbsp;with C99 (Section 7.18.1), C forces the compiler implementation to define macros for supported integer widths (in bits). &nbsp;However, like Fortran, there is no requirement that any exact number of bits be supported (Section 7.18.1.1); the standard only requires integer types with a&nbsp;minimum&nbsp;of 8, 16, 32, and 64 bits (Section 7.18.1.2). &nbsp;Nothing is said at all about floating-point data types and the correspondence with the integer types. &nbsp;This is what APIs like OpenMPI have to struggle with in the real world.<div><br><div>
<span class="Apple-style-span" style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'Helvetica Neue'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; ">Larry Baker<br>US Geological Survey<br>650-329-5608<br><a href="mailto:baker@usgs.gov">baker@usgs.gov</a><br><br><br></span>
</div>
<br><div><div>On 14 Oct 2015, at 3:38 PM, Jeff Squyres (jsquyres) wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div>On Oct 14, 2015, at 5:53 PM, Vladimír Fuka &lt;<a href="mailto:vladimir.fuka@gmail.com">vladimir.fuka@gmail.com</a>&gt; wrote:<br><blockquote type="cite"><br></blockquote><blockquote type="cite"><blockquote type="cite">As that ticket notes if REAL*16 &lt;&gt; long double Open MPI should be<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">disabling redutions on MPI_REAL16. I can take a look and see if I can<br></blockquote></blockquote><blockquote type="cite"><blockquote type="cite">determine why that is not working as expected.<br></blockquote></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">Does it really need to be just disabled when the `real(real128)` is<br></blockquote><blockquote type="cite">actually equivalent to c_long_double? Wouldn't making the explicit<br></blockquote><blockquote type="cite">interfaces to MPI_Send and others to accept `real(real128)` make more<br></blockquote><blockquote type="cite">sense? As I wrote in the stackoverflow post, the MPI standard (3.1,<br></blockquote><blockquote type="cite">pages 628 and 674) is not very clear if MPI_REAL16 corresponds to<br></blockquote><blockquote type="cite">real*16 or real(real128) if these differ, but making it correspond to<br></blockquote><blockquote type="cite">real(real128) might be reasonable.<br></blockquote><br>As I understand it, real*16 is not a real type -- it's a commonly-used type and supported by many (all?) compilers, but it's not actually defined in the Fortran spec.<br><br>-- <br>Jeff Squyres<br><a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>For corporate legal information go to: http://www.cisco.com/web/about/doing_business/legal/cri/<br><br>_______________________________________________<br>devel mailing list<br>devel@open-mpi.org<br>Subscription: http://www.open-mpi.org/mailman/listinfo.cgi/devel<br>Link to this post: http://www.open-mpi.org/community/lists/devel/2015/10/18170.php</div></blockquote></div><br></div></body></html>
