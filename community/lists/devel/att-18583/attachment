<html><head><meta http-equiv="Content-Type" content="text/html charset=utf-8"></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;" class="">I canâ€™t speak to the packing question, but I can say that we have indeed confirmed the lack of maintenance on OMPI for Debian/Ubuntu and are working to resolve the problem.<div class=""><br class=""><div><blockquote type="cite" class=""><div class="">On Feb 11, 2016, at 1:16 AM, Gilles Gouaillardet &lt;<a href="mailto:gilles.gouaillardet@gmail.com" class="">gilles.gouaillardet@gmail.com</a>&gt; wrote:</div><br class="Apple-interchange-newline"><div class=""><span style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; display: inline !important;" class="">Michael,</span><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><br class=""></div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">MPI_Pack_external must convert data to big endian, so it can be dumped into a file, and be read correctly on big and little endianness arch, and with any MPI flavor.</div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><br class=""></div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">if you use only one MPI library on one arch, or if data is never read/written from/to a file,&nbsp;then it is more efficient to MPI_Pack.</div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><br class=""></div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">openmpi is optimized and the data is swapped only when needed.</div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">so if your cluster is little endian only, MPI_Send and MPI_Recv will never byte swap data internally.</div><span style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; display: inline !important;" class="">if both ends have different endianness, data is sent in big endian format and byte swapped when received only if needed.</span><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">generally speaking, a send/recv requires zero or one byte swap.</div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><br class=""></div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">fwiw, we previously had a claim that debian nor Ubuntu have a maintainer for openmpi, which would explain why an obsolete version is shipped. I made a few researchs and could not find any evidence openmpi is no more maintained.</div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><br class=""></div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">Cheers,</div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><br class=""></div><div style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">Gilles<br class=""><div class=""><br class=""></div><div class=""><br class=""><div class=""><br class="">On Thursday, February 11, 2016, Michael Rezny &lt;<a href="mailto:michael.rezny@monash.edu" class="">michael.rezny@monash.edu</a>&gt; wrote:<br class=""><blockquote class="gmail_quote" style="margin: 0px 0px 0px 0.8ex; border-left-width: 1px; border-left-color: rgb(204, 204, 204); border-left-style: solid; padding-left: 1ex;"><div style="word-wrap: break-word;" class="">Hi Gilles,<div class="">thanks for thinking about this in more detail.</div><div class=""><div class=""><br class=""></div><div class="">I understand what you are saying, but your comments raise some questions in my mind:</div><div class=""><br class=""></div><div class="">If one is in a homogeneous cluster, is it important that, in the case of little-endian, that the data be</div><div class="">converted to extern32 format (big-endian), only to be always converted at the receiving rank</div><div class="">back to little-endian?</div><div class=""><br class=""></div><div class="">This would seem to be inefficient, especially if the site has no need for external MPI access.</div><div class=""><br class=""></div><div class="">So, does --enable-heterogeneous do more than put MPI routines using "extern32" into straight pass-through?</div><div class=""><br class=""></div><div class="">Back in the old days of PVM, all messages were converted into network order. This had severe performance impacts</div><div class="">on little-endian clusters.</div><div class=""><br class=""></div><div class="">So much so that a clever way of getting around this was an implementation of "receiver makes right" in which</div><div class="">all data was sent in the native format of the sending rank. The receiving rank analysed the message to determine if</div><div class="">a conversion was necessary. In those days with Cray format data, it could be more complicated than just byte swapping.</div><div class=""><br class=""></div><div class="">So in essence, how is a balance struck between supporting heterogenous architectures and maximum performance</div><div class="">with codes where message passing performance is critical?</div><div class=""><br class=""></div><div class="">As a follow up, since I am now at home, this same problem also exists with the Ubuntu 15.10 OpenMP packages</div><div class="">which surprisingly are still at 1.6.5, same as 14.04.</div><div class=""><br class=""></div><div class="">Again, downloading, building, and using the latest stable version of OpenMP solved the problem.</div><div class=""><br class=""></div><div class="">kindest regards</div><div class="">Mike</div><div class=""><br class=""></div><div class=""><br class=""></div><div class=""><div class=""><div class="">On 11/02/2016, at 7:31 PM, Gilles Gouaillardet wrote:</div><br class=""><blockquote type="cite" class="">Michael,<div class=""><br class=""></div><div class="">I think it is worst than that ...</div><div class=""><br class=""></div><div class="">without --enable-heterogeneous, it seems the data is not correctly packed</div><div class="">(e.g. it is not converted to big endian), at least on a x86_64 arch.</div><div class="">unpack looks broken too, but pack followed by unpack does work.</div><div class="">that means if you are reading data correctly written in external32e format,</div><div class="">it will not be correctly unpacked.</div><div class=""><br class=""></div><div class="">with --enable-heterogeneous, it is only half broken</div><div class="">(I&nbsp;do not know yet whether pack or unpack is broken ...)</div><div class="">and pack followed by unpack does not work.</div><div class=""><br class=""></div><div class="">I will double check that tomorrow</div><div class=""><br class=""></div><div class="">Cheers,</div><div class=""><br class=""></div><div class="">Gilles<br class=""><br class="">On Thursday, February 11, 2016, Michael Rezny &lt;<a target="_blank" class="">michael.rezny@monash.edu</a>&gt; wrote:<br class=""><blockquote class="gmail_quote" style="margin: 0px 0px 0px 0.8ex; border-left-width: 1px; border-left-color: rgb(204, 204, 204); border-left-style: solid; padding-left: 1ex;"><div dir="ltr" class=""><div class=""><div class=""><div class=""><div class=""><div class=""><div class=""><div class=""><div class=""><div class="">Hi Ralph,<br class=""></div>you are indeed correct. However, many of our users<br class=""></div>have workstations such as me, with OpenMPI provided by installing a package.<br class=""></div><div class="">So we don't know what has been configured.<br class=""></div><div class=""><br class=""></div>Then we have failures, since, for instance, Ubuntu 14.04 by default appears to have been built<br class=""></div>with heterogeneous support! The other (working) machine is a large HPC, and it seems OpenMPI was built<br class=""></div><div class="">without heterogeneous support.<br class=""></div><div class=""><br class=""></div>Currently we work around the problem for packing and unpacking by having a compiler switch<br class=""></div>that will switch between calls to pack/unpack_external and pac/unpack.<br class=""><br class=""></div>It is only now we started to track down what the problem actually is.<br class=""><br class=""></div>kindest regards<br class=""></div>Mike<br class=""></div><div class="gmail_extra"><br class=""><div class="gmail_quote">On 11 February 2016 at 15:54, Ralph Castain<span class="Apple-converted-space">&nbsp;</span><span dir="ltr" class="">&lt;<a class="">rhc@open-mpi.org</a>&gt;</span><span class="Apple-converted-space">&nbsp;</span>wrote:<br class=""><blockquote class="gmail_quote" style="margin: 0px 0px 0px 0.8ex; border-left-width: 1px; border-left-color: rgb(204, 204, 204); border-left-style: solid; padding-left: 1ex;"><div style="word-wrap: break-word;" class="">Out of curiosity: if both systems are Intel, they why are you enabling hetero? You donâ€™t need it in that scenario.<div class=""><br class=""></div><div class="">Admittedly, we do need to fix the bug - just trying to understand why you are configuring that way.</div><div class=""><br class=""></div><div class=""><br class=""><div class=""><blockquote type="cite" class=""><div class="">On Feb 10, 2016, at 8:46 PM, Michael Rezny &lt;<a class="">michael.rezny@monash.edu</a>&gt; wrote:</div><br class=""><div class=""><div dir="ltr" class=""><div class=""><div class=""><div class=""><div class=""><div class=""><div class="">Hi Gilles,<br class=""></div>I can confirm that with a fresh download and build from source for OpenMPI 1.10.2<br class=""></div><div class="">with --enable-heterogeneous<br class=""></div>the unpacked ints are the wrong endian.<br class=""><br class=""></div>However, without --enable-heterogeneous, the unpacked ints are correct.<br class=""><br class=""></div>So, this problem still exists in heterogeneous builds with OpenMPI version 1.10.2.<br class=""><br class=""></div>kindest regards<br class=""></div>Mike<br class=""></div><div class="gmail_extra"><br class=""><div class="gmail_quote">On 11 February 2016 at 14:48, Gilles Gouaillardet<span class="Apple-converted-space">&nbsp;</span><span dir="ltr" class="">&lt;<a class="">gilles.gouaillardet@gmail.com</a>&gt;</span><span class="Apple-converted-space">&nbsp;</span>wrote:<br class=""><blockquote class="gmail_quote" style="margin: 0px 0px 0px 0.8ex; border-left-width: 1px; border-left-color: rgb(204, 204, 204); border-left-style: solid; padding-left: 1ex;">Michael,<div class=""><br class=""></div><div class="">does your two systems have the same endianness ?</div><div class=""><br class=""></div><div class="">do you know how openmpi was configure'd on both systems ?</div><div class="">(is --enable-heterogeneous enabled or disabled on both systems ?)</div><div class=""><br class=""></div><div class="">fwiw, openmpi 1.6.5 is old now and no more maintained.</div><div class="">I strongly encourage you to use openmpi 1.10.2</div><div class=""><br class=""></div><div class="">Cheers,</div><div class=""><br class=""></div><div class="">Gilles</div><div class=""><br class="">On Thursday, February 11, 2016, Michael Rezny &lt;<a class="">michael.rezny@monash.edu</a>&gt; wrote:<br class=""><blockquote class="gmail_quote" style="margin: 0px 0px 0px 0.8ex; border-left-width: 1px; border-left-color: rgb(204, 204, 204); border-left-style: solid; padding-left: 1ex;"><div dir="ltr" class=""><div class=""><div class=""><div class=""><div class=""><div class=""><div class="">Hi,<br class=""></div>I am running Ubuntu 14.04 LTS with OpenMPI 1.6.5 and gcc 4.8.4<br class=""><br class=""></div>On a single rank program which just packs and unpacks two ints using MPI_Pack_external and MPI_Unpack_external<br class=""></div>the unpacked ints are in the wrong endian order.<br class=""><br class=""></div>However, on a HPC, (not Ubuntu), using OpenMPI 1.6.5 and gcc 4.8.4 the unpacked ints are correct.<br class=""><br class=""></div><div class="">Is it possible to get some assistance to track down what is going on?<br class=""></div><div class=""><br class=""></div>Here is the output from the program:<br class=""><br class="">&nbsp;<span style="font-family: monospace, monospace;" class="">~/tests/mpi/Pack test1<br class="">send data 000004d2 0000162e<span class="Apple-converted-space">&nbsp;</span><br class="">MPI_Pack_external: 0<br class="">buffer size: 8<br class="">MPI_unpack_external: 0<br class="">recv data d2040000 2e160000<span class="Apple-converted-space">&nbsp;</span></span><br class=""><br class=""></div>And here is the source code:<br class=""><br class=""><span style="font-family: monospace, monospace;" class="">#include &lt;stdio.h&gt;<br class="">#include &lt;mpi.h&gt;<br class=""><br class="">int main(int argc, char *argv[]) {<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>int numRanks, myRank, error;<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>int send_data[2] = {1234, 5678};<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>int recv_data[2];<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>MPI_Aint buffer_size = 1000;<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>char buffer[buffer_size];<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>MPI_Init(&amp;argc, &amp;argv);<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>MPI_Comm_size(MPI_COMM_WORLD, &amp;numRanks);<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>MPI_Comm_rank(MPI_COMM_WORLD, &amp;myRank);<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>printf("send data %08x %08x \n", send_data[0], send_data[1]);<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>MPI_Aint position = 0;<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>error = MPI_Pack_external("external32", (void*) send_data, 2, MPI_INT,<br class="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Apple-converted-space">&nbsp;</span>buffer, buffer_size, &amp;position);<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>printf("MPI_Pack_external: %d\n", error);<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>printf("buffer size: %d\n", (int) position);<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>position = 0;<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>error = MPI_Unpack_external("external32", buffer, buffer_size, &amp;position,<br class="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Apple-converted-space">&nbsp;</span>recv_data, 2, MPI_INT);<br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>printf("MPI_unpack_external: %d\n", error);<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>printf("recv data %08x %08x \n", recv_data[0], recv_data[1]);<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>MPI_Finalize();<br class=""><br class="">&nbsp;<span class="Apple-converted-space">&nbsp;</span>return 0;<br class="">}<br class=""></span><br class=""><br class=""></div></blockquote></div><br class="">_______________________________________________<br class="">devel mailing list<br class=""><a class="">devel@open-mpi.org</a><br class="">Subscription:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">Link to this post:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/community/lists/devel/2016/02/18573.php" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/02/18573.php</a><br class=""></blockquote></div><br class=""></div>_______________________________________________<br class="">devel mailing list<br class=""><a class="">devel@open-mpi.org</a><br class="">Subscription:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank" class="">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">Link to this post:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/community/lists/devel/2016/02/18575.php" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/02/18575.php</a></div></blockquote></div><br class=""></div></div><br class="">_______________________________________________<br class="">devel mailing list<br class=""><a class="">devel@open-mpi.org</a><br class="">Subscription:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">Link to this post:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/community/lists/devel/2016/02/18576.php" rel="noreferrer" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/02/18576.php</a><br class=""></blockquote></div><br class=""></div></blockquote></div>_______________________________________________<br class="">devel mailing list<br class=""><a target="_blank" class="">devel@open-mpi.org</a><br class="">Subscription:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank" class="">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br class="">Link to this post:<span class="Apple-converted-space">&nbsp;</span><a href="http://www.open-mpi.org/community/lists/devel/2016/02/18579.php" target="_blank" class="">http://www.open-mpi.org/community/lists/devel/2016/02/18579.php</a></blockquote></div><br class=""></div></div></div></blockquote></div></div></div><span style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; display: inline !important;" class="">_______________________________________________</span><br style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><span style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; display: inline !important;" class="">devel mailing list</span><br style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><span style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; display: inline !important;" class=""><a href="mailto:devel@open-mpi.org" class="">devel@open-mpi.org</a></span><br style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><span style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; display: inline !important;" class="">Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" class="">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></span><br style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class=""><span style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; display: inline !important;" class="">Link to this post:<span class="Apple-converted-space">&nbsp;</span></span><a href="http://www.open-mpi.org/community/lists/devel/2016/02/18582.php" style="font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;" class="">http://www.open-mpi.org/community/lists/devel/2016/02/18582.php</a></div></blockquote></div><br class=""></div></body></html>
