I think Paul concern was about cross compilation<div>(e.g. no AC_TRY_RUN ...)</div><div><br></div><div>fwiw, fortran bindings cannot be built &quot;as is&quot; when cross compiling ompi</div><div><br></div><div>Cheers,</div><div><br></div><div>Gilles<br><br>On Wednesday, July 1, 2015, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Given the description, I suspect that any MPI application should be sufficient to test it - it appears that PGI is adding some OpenMP-specific code checks.<div><br></div><div>I&#39;m not saying it is isolated solely to PGI, nor am I pointing fingers at them - I&#39;m only saying that is the only compiler for which we&#39;ve heard there is a problem. We don&#39;t see problems under GCC (which is what I normally use) or Intel (which I also checked, though I don&#39;t typically use it). Likewise, we haven&#39;t seen any issues reported by any other MTT tester, including Absoft. So this doesn&#39;t seem to be a pervasive issue.</div><div><br></div><div>I&#39;d be interested in your results, and would appreciate your input. I haven&#39;t yet decided on the best configure logic to use here - in a perfect world, one could test for OMP_PROC_BIND, and indeed we may try something like that with an AC_TRY_RUN to see if it will catch it. A little tricky to test for an issue with a particular envar, so if we can isolate that it is a specific compiler or compiler version that is the source of the problem, that would be easier to resolve.</div><div><br></div><div>Ralph</div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Wed, Jul 1, 2015 at 3:02 AM, Paul Hargrove <span dir="ltr">&lt;<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;phhargrove@lbl.gov&#39;);" target="_blank">phhargrove@lbl.gov</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div class="gmail_extra"><br><div class="gmail_quote">On Wed, Jul 1, 2015 at 12:05 AM, Ralph Castain <span dir="ltr">&lt;<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;rhc@open-mpi.org&#39;);" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:</div><div class="gmail_quote">[...]<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Now that we know there is an issue with one compiler, and it is isolated to just that compiler, we can easily use configure.m4 to protect against it. I&#39;ll add that protection here shortly.</blockquote><div>[...]</div><div><br></div><div>Ralph,</div><div><br></div><div>One cannot possibly know for certain that &quot;it is isolated to just that one compiler&quot; unless one has tried *every* compiler.  So, I hope the configure-based solution is &quot;stronger&quot; than black-listing PGI.</div><div><br></div><div>Since we are told the PGI problem occurs at runtime, not compile time, I am curious just what solution you have in mind for the PGI compilers targeting Cray compute nodes (or cross-compilation in general) where you can&#39;t expect to test the runtime behavior.</div><div><br></div><div>When I have a moment in the next couple days, I can try master on many versions of PGI, and some XLC, PathScale and Open64 compilers that are probably not covered by MTT (though I&#39;ve not looked) as well as Sun, Intel, Gnu and Clang compilers.  Absent any other instructions, I am going to assume, based on Howard&#39;s emails, that examples/ring_c.c is sufficient to reproduce using pgi-12.9 on NERSC&#39;s Carver.  I would, however, appreciate somebody first confirming for me that such testing is helpful in some way.  I am not going to bother if the data I collect is going to be discarded.</div><span><font color="#888888"><div><br></div><div>-Paul</div></font></span></div><span><font color="#888888"><br><br><br clear="all"><div><br></div>-- <br><div><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;PHHargrove@lbl.gov&#39;);" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: <a href="tel:%2B1-510-495-2352" value="+15104952352" target="_blank">+1-510-495-2352</a></div><div>Lawrence Berkeley National Laboratory     Fax: <a href="tel:%2B1-510-486-6900" value="+15104866900" target="_blank">+1-510-486-6900</a></div></font></div></div></div>
</font></span></div></div>
<br>_______________________________________________<br>
devel mailing list<br>
<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;devel@open-mpi.org&#39;);" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/07/17575.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/07/17575.php</a><br></blockquote></div><br></div>
</blockquote></div>

