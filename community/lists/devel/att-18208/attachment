<div dir="ltr">I looked quickly over the quoted emails and didn&#39;t see something I had hoped/expected to.<div><br></div><div>In addition to the &quot;dimensions&quot; of type, api and pml I think users may also be concerned about the &quot;port&quot; dimension (or device if you prefer).</div><div>So, it might be worth including that in the discussion of the high-level-thing-for-end-users.</div><div><br></div><div>As an example, I might have two ethernet cards, one of which is a Cisco VNIC.</div><div>I would want be able to control which BTL or MTL is used on those NICs independently, including the option to disable use of one or the other.</div><div>I do not want to learn distinct include/exclude MCA params for every BTL and MTL to accomplish that.</div><div><br></div><div>-Paul</div></div><div class="gmail_extra"><br><div class="gmail_quote">On Tue, Oct 20, 2015 at 12:42 PM, Jeff Squyres (jsquyres) <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">We talked about this on the call last week.<br>
<br>
I&#39;m guessing we&#39;ll talk about this at the Feb dev meeting, but we need to think about this a bit before hand.  Here&#39;s a little more fuel for the fire: let&#39;s at least specify the problem space a bit more precisely...<br>
<br>
(this item is on the agenda for the Feb dev meeting, but we all need to think about this a little before then; it&#39;s a complicated set of issues)<br>
<br>
One (not-even-half-baked) idea that was raised on the call last week was the idea of 3 levels of specifying networks:<br>
<br>
1. Automatic selection.  &quot;mpirun a.out&quot; -- OMPI does all the selection for the user.<br>
2. High-level abstraction.  &quot;mpirun &lt;SOME NICE EASY-TO-UNDERSTAND CLI OPTIONS&gt; a.out&quot;<br>
3. Low-level specification.  &quot;mpirun --mca btl usnic,sm,self a.out&quot;<br>
<br>
#1 and #3 already exist today: #1 is for most users, #3 is for OMPI experts.<br>
<br>
#2 is the new thing.  It&#39;s intended for those who have a clue about what they want, but they aren&#39;t necessarily OMPI or networking experts.  The trick is defining what &lt;SOME NICE EASY-TO-UNDERSTAND CLI OPTIONS&gt; is.<br>
<br>
The selection space is complicated -- it has (at least?) three dimensions:<br>
<br>
1. First, we have network types:<br>
<br>
a. Ethernet<br>
b. InfiniBand<br>
c. uGNI<br>
d. InfiniPath<br>
e. OmniScale<br>
f. Shared memory<br>
g. SCIF<br>
<br>
2. Second, we have network APIs:<br>
<br>
a. TCP<br>
b. usNIC (via libfabric)<br>
c. Verbs<br>
d. MXM<br>
e. uGNI<br>
f. PSM<br>
g. PSM2<br>
h. POSIX shared memory segments<br>
i. xpmem<br>
j. knem<br>
k. Linux CMA<br>
l. SCIF<br>
<br>
3. Third, we have Open MPI networking layers:<br>
<br>
a. PML OB1 (and associated BTLs)<br>
b. PML CM (and associated MTL)<br>
c. PML BFO<br>
d. PML crcpw<br>
e. PML v<br>
f. PML Yalla<br>
g. PML UCX (soon)<br>
<br>
These three spaces can be combined in specific ways (E.g., Ethernet / TCP / PML OB1 + BTLs).<br>
BTLs have the added complication that multiple can be used in a single job.<br>
Some network types can be accessed through multiple combinations.<br>
Obviously, not all combinations are sensible (e.g., uGNI / PSM2 / PML Yalla).<br>
<br>
The Big Issues here are:<br>
<br>
- the user generally only knows about the first dimension: network type.<br>
- the OMPI networking layer names are generally not meaningful unless you&#39;re an OMPI expert.<br>
<br>
So how do we present a &quot;simple&quot; / &quot;higher-level abstraction&quot; for the average user?<br>
<br>
<br>
<br>
&gt; On Oct 12, 2015, at 11:47 AM, Jeff Squyres (jsquyres) &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>
&gt;<br>
&gt; Rolf: can you add this to the agenda?<br>
&gt;<br>
&gt; We&#39;re now adding multiple ways to get to the same underlying network transport, and it&#39;s getting confusing for users (I&#39;ve fielded several off-list questions from users about this issue).<br>
&gt;<br>
&gt; - MXM: can be accessed via Yalla, the MXM MTL, (soon) UCX, and (soon) libfabric<br>
&gt; - PSM: can be accessed via the PSM MTL and libfabric<br>
&gt; - verbs: can be accessed via the openib BTL and libfabric<br>
&gt; - PSM2: ditto<br>
&gt; - uGNI: can be accessed via the uGNI BTL, portals(4?), and (soon) UCX<br>
&gt; - shared memory: can be accessed via sm, vader, and (soon) UCX<br>
&gt;<br>
&gt; But you can also look at this from a different perspective:<br>
&gt;<br>
&gt; - IB: can be used via Yalla, MXM MTL, UCX, libfabric (multiple ways)<br>
&gt; - RoCE: can be used via ^^some (or all? I&#39;m not sure) of these<br>
&gt; - Cray: can be used via the uGNI BTL, portals(4?), and (soon) UCX<br>
&gt;<br>
&gt; ...what&#39;s a user supposed to use?<br>
&gt;<br>
&gt; And more specifically, how can a user enable or disable a specific type of network?  Or API?<br>
&gt;<br>
&gt; A recent (off list) example I had was a user who was frustrated trying to figure out how to disable all forms of MXM (note: this is a larger issue than just MXM).<br>
&gt;<br>
&gt; Bottom line: underlying networks can be accessed through multiple upper-layer APIs, and it creates both a mapping problem for the MPI implementation, and a usability issue for users trying to be specific about which network(s) they want the MPI implementation to use.<br>
&gt;<br>
&gt; I don&#39;t have a solution (or even a proposal) here.  This is something we need to think / talk about.<br>
<span class="HOEnZb"><font color="#888888">&gt;<br>
&gt; --<br>
&gt; Jeff Squyres<br>
&gt; <a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
&gt; For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" rel="noreferrer" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<br>
<br>
--<br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" rel="noreferrer" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<br>
_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/10/18207.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/10/18207.php</a><br>
</font></span></blockquote></div><br><br clear="all"><div><br></div>-- <br><div class="gmail_signature"><div dir="ltr"><div><font face="courier new, monospace"><div>Paul H. Hargrove                          <a href="mailto:PHHargrove@lbl.gov" target="_blank">PHHargrove@lbl.gov</a></div><div>Computer Languages &amp; Systems Software (CLaSS) Group</div><div>Computer Science Department               Tel: +1-510-495-2352</div><div>Lawrence Berkeley National Laboratory     Fax: +1-510-486-6900</div></font></div></div></div>
</div>

