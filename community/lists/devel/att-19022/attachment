<div dir="ltr"><div><div><div>Hello Ralph and all<br><br></div>Please ignore this mail. It is indeed due to a syntax error in my code. Sorry for the noise; I&#39;ll be more careful with my homework from now on.<br><br></div>Best regards<br></div>Durga<br></div><div class="gmail_extra"><br clear="all"><div><div class="gmail_signature"><div dir="ltr"><div><div dir="ltr"><div><div dir="ltr">We learn from history that we never learn from history.<br></div></div></div></div></div></div></div>
<br><div class="gmail_quote">On Mon, May 23, 2016 at 2:13 AM, dpchoudh . <span dir="ltr">&lt;<a href="mailto:dpchoudh@gmail.com" target="_blank">dpchoudh@gmail.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr"><div><div><div><div><div>Hello Ralph<br><br></div>Thanks for your input. The routine that does the send is this:<br><br><span style="font-family:monospace,monospace">static int btl_lf_modex_send(lfgroup lfgroup)<br>{<br>    char *grp_name = lf_get_group_name(lfgroup, NULL, 0);<br>    btl_lf_modex_t lf_modex;<br>    int rc;<br>    strncpy(lf_modex.grp_name, grp_name, GRP_NAME_MAX_LEN);<br>    OPAL_MODEX_SEND(rc, OPAL_PMIX_GLOBAL,<br>                    &amp;mca_btl_lf_component.super.</span><span style="font-family:monospace,monospace">btl_version,<br>                    (char *)&amp;lf_modex, sizeof(lf_modex));<br>    return rc;<br>}<br></span><br></div>This routine is called from the component init routine (mca_btl_lf_component_init()). I have verified that the values in the modex (lf_modex) are correct.<br><br></div>The receive happens in proc_create, and I call it like this:<br><span style="font-family:monospace,monospace">OPAL_MODEX_RECV(rc, &amp;mca_btl_lf_component.super.btl_version,<br>               &amp;opal_proc-&gt;proc_name, (uint8_t **)&amp;module_proc-&gt;proc_modex, &amp;size);</span><br><br></div>In here, I get junk value in proc_modex. If I pass a buffer that was malloc()&#39;ed in place of <span style="font-family:monospace,monospace">module_proc-&gt;proc_modex, I still get bad data.</span><br><br><br></div><div>Thanks again for your help.<br><br></div><div>Durga<br></div></div><div class="gmail_extra"><span class=""><br clear="all"><div><div><div dir="ltr"><div><div dir="ltr"><div><div dir="ltr">We learn from history that we never learn from history.<br></div></div></div></div></div></div></div>
<br></span><div class="gmail_quote"><div><div class="h5">On Sat, May 21, 2016 at 8:38 PM, Ralph Castain <span dir="ltr">&lt;<a href="mailto:rhc@open-mpi.org" target="_blank">rhc@open-mpi.org</a>&gt;</span> wrote:<br></div></div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div><div class="h5"><div style="word-wrap:break-word">Please provide the exact code used for both send/recv - you likely have an error in the syntax<div><br></div><div><br><div><blockquote type="cite"><div>On May 20, 2016, at 9:36 PM, dpchoudh . &lt;<a href="mailto:dpchoudh@gmail.com" target="_blank">dpchoudh@gmail.com</a>&gt; wrote:</div><br><div><div dir="ltr"><div><div><div><div><div><div><div><div><div><div>Hello all<br><br></div>I have a naive question:<br><br></div>My &#39;cluster&#39; consists of two nodes, connected back to back with a proprietary link as well as GbE (over a switch).<br></div>I am calling OPAL_MODEX_SEND() and the modex consists of just this:<br><br></div><span style="font-family:monospace,monospace">struct modex<br></span></div><span style="font-family:monospace,monospace">{char name[20], unsigned mtu};</span><br><br></div>The mtu field is not currently being used. I bzero() the struct and have verified that the value being written to the &#39;name&#39; field (this is similar to a PKEY for infiniband; the driver will translate this to a unique integer) is correct at the sending end.<br><br></div>When I do a OPAL_MODEX_RECV(), the value is completely corrupted. However, the size of the modex message is still correct (24 bytes)<br></div>What could I be doing wrong? (Both nodes are little endian x86_64 machines)<br><br></div>Thanks in advance<br></div>Durga<br><div><div><div><br clear="all"><div><div><div><div><div><div><div><div><div><div><div><div><div dir="ltr"><div><div dir="ltr"><div><div dir="ltr">We learn from history that we never learn from history.<br></div></div></div></div></div></div></div>
</div></div></div></div></div></div></div></div></div></div></div></div></div></div>
_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/19012.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/19012.php</a></div></blockquote></div><br></div></div><br>_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="https://www.open-mpi.org/mailman/listinfo.cgi/devel" rel="noreferrer" target="_blank">https://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></div></div>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2016/05/19019.php" rel="noreferrer" target="_blank">http://www.open-mpi.org/community/lists/devel/2016/05/19019.php</a><br></blockquote></div><br></div>
</blockquote></div><br></div>

