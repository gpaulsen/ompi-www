<div dir="ltr"><div>I reverted this changeset from the trunk as it incorrectly re-added the local coprocessor data to the HNP&#39;s hash table. This is already being done in the ess/hnp module, and there is no value in duplicating it again every time a daemon calls back.<br>
<br></div>As noted in the revert comment, if we want host daemons to retain their coprocessor info in a hash table, then we need to do that somewhere else, not where this was done. At this time, I don&#39;t see the daemons using that info anywhere.<br>
<br></div><div class="gmail_extra"><br><br><div class="gmail_quote">On Wed, Oct 23, 2013 at 8:56 AM,  <span dir="ltr">&lt;<a href="mailto:svn-commit-mailer@open-mpi.org" target="_blank">svn-commit-mailer@open-mpi.org</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Author: hjelmn (Nathan Hjelm)<br>
Date: 2013-10-23 11:56:23 EDT (Wed, 23 Oct 2013)<br>
New Revision: 29489<br>
URL: <a href="https://svn.open-mpi.org/trac/ompi/changeset/29489" target="_blank">https://svn.open-mpi.org/trac/ompi/changeset/29489</a><br>
<br>
Log:<br>
Fix coprocessor detection by always adding the local daemon&#39;s co-processors<br>
to the hash table.<br>
<br>
Tested and working on a system with 2 Xeon Phi co-processors.<br>
<br>
cmr=v1.7.4:ticket=3847:reviewer=ompi-rm1.7<br>
<br>
Text files modified:<br>
   trunk/orte/mca/plm/base/plm_base_launch_support.c |    40 +++++++++++++++++++++++++++++++++++++---<br>
   1 files changed, 37 insertions(+), 3 deletions(-)<br>
<br>
Modified: trunk/orte/mca/plm/base/plm_base_launch_support.c<br>
==============================================================================<br>
--- trunk/orte/mca/plm/base/plm_base_launch_support.c   Wed Oct 23 11:52:05 2013        (r29488)<br>
+++ trunk/orte/mca/plm/base/plm_base_launch_support.c   2013-10-23 11:56:23 EDT (Wed, 23 Oct 2013)      (r29489)<br>
@@ -1,3 +1,4 @@<br>
+/* -*- Mode: C; c-basic-offset:4 ; indent-tabs-mode:nil -*- */<br>
 /*<br>
  * Copyright (c) 2004-2010 The Trustees of Indiana University and Indiana<br>
  *                         University Research and Technology<br>
@@ -12,7 +13,8 @@<br>
  * Copyright (c) 2007-2011 Cisco Systems, Inc.  All rights reserved.<br>
  * Copyright (c) 2009      Institut National de Recherche en Informatique<br>
  *                         et Automatique. All rights reserved.<br>
- * Copyright (c) 2011-2012 Los Alamos National Security, LLC.<br>
+ * Copyright (c) 2011-2013 Los Alamos National Security, LLC. All rights<br>
+ *                         reserved.<br>
  * Copyright (c) 2013      Intel, Inc. All rights reserved.<br>
  * $COPYRIGHT$<br>
  *<br>
@@ -677,6 +679,38 @@<br>
         jdatorted = orte_get_job_data_object(ORTE_PROC_MY_NAME-&gt;jobid);<br>
     }<br>
<br>
+#if OPAL_HAVE_HWLOC<br>
+    {<br>
+        char *coprocessors, **sns;<br>
+<br>
+        /* detect and add any of my coprocessors to the hash table */<br>
+        coprocessors = opal_hwloc_base_find_coprocessors(opal_hwloc_topology);<br>
+<br>
+        if (NULL != coprocessors) {<br>
+            /* init the hash table, if necessary */<br>
+            if (NULL == orte_coprocessors) {<br>
+                orte_coprocessors = OBJ_NEW(opal_hash_table_t);<br>
+                opal_hash_table_init(orte_coprocessors, orte_process_info.num_procs);<br>
+            }<br>
+            /* separate the serial numbers of the coprocessors<br>
+             * on this host<br>
+             */<br>
+            sns = opal_argv_split(coprocessors, &#39;,&#39;);<br>
+            for (int idx = 0 ; NULL != sns[idx] ; ++idx) {<br>
+                uint32_t h;<br>
+<br>
+                /* compute the hash */<br>
+                OPAL_HASH_STR(sns[idx], h);<br>
+                /* mark that this coprocessor is hosted by this daemon */<br>
+                opal_hash_table_set_value_uint32(orte_coprocessors, h, (void*)&amp;ORTE_PROC_MY_NAME-&gt;vpid);<br>
+            }<br>
+            opal_argv_free(sns);<br>
+            free(coprocessors);<br>
+            orte_coprocessors_detected = true;<br>
+        }<br>
+    }<br>
+#endif<br>
+<br>
     /* multiple daemons could be in this buffer, so unpack until we exhaust the data */<br>
     idx = 1;<br>
     while (OPAL_SUCCESS == (rc = opal_dss.unpack(buffer, &amp;dname, &amp;idx, ORTE_NAME))) {<br>
@@ -1271,7 +1305,7 @@<br>
             /* check for duplicate */<br>
             ignore = false;<br>
             for (j=0; j &lt; *argc; j++) {<br>
-             if (0 == strcmp((*argv)[j], orted_cmd_line[i+1])) {<br>
+              if (0 == strcmp((*argv)[j], orted_cmd_line[i+1])) {<br>
                     ignore = true;<br>
                     break;<br>
                 }<br>
@@ -1589,7 +1623,7 @@<br>
         OBJ_DESTRUCT(&amp;nodes);<br>
         /* mark that the daemons have reported so we can proceed */<br>
         daemons-&gt;state = ORTE_JOB_STATE_DAEMONS_REPORTED;<br>
-       daemons-&gt;updated = false;<br>
+        daemons-&gt;updated = false;<br>
         return ORTE_SUCCESS;<br>
     }<br>
<br>
_______________________________________________<br>
svn mailing list<br>
<a href="mailto:svn@open-mpi.org">svn@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/svn" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/svn</a><br>
</blockquote></div><br></div>

