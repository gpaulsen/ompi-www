<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Ralph don't swallow your message yet... Both jobs are not running over the same mpirun. There are two instances of mpirun in which one runs with "-report-uri ../contact.txt" and the other receives its contact info using "-ompi-server file:../contact.txt". And yes, both processes are running with plm_base_verbose activated. When a deactivate the plm_base_verbose the error is practically the same:<div><br></div><div><div>[aopclf:54106] receiver: sending SIGUSR1 &lt;30&gt; to RADIC Event Logger &lt;[[47640,1],0]&gt;</div><div>[aopclf:54106] *** Process received signal ***</div><div>[aopclf:54106] Signal: Segmentation fault (11)</div><div>[aopclf:54106] Signal code: Address not mapped (1)</div><div>[aopclf:54106] Failing at address: 0x0</div><div>[aopclf:54106] [ 0] 2 &nbsp; libSystem.B.dylib &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0x00007fff83a6eeaa _sigtramp + 26</div><div>[aopclf:54106] [ 1] 3 &nbsp; libSystem.B.dylib &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0x00007fff83a210b7 snprintf + 496</div><div>[aopclf:54106] [ 2] 4 &nbsp; mca_vprotocol_receiver.so &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0x000000010065ba0a mca_vprotocol_receiver_send + 177</div><div>[aopclf:54106] [ 3] 5 &nbsp; libmpi.0.dylib &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0x0000000100077d44 MPI_Send + 734</div><div>[aopclf:54106] [ 4] 6 &nbsp; ping &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0x0000000100000a97 main + 431</div><div>[aopclf:54106] [ 5] 7 &nbsp; ping &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0x00000001000008e0 start + 52</div><div>[aopclf:54106] *** End of error message ***</div><div><br></div><div>Leonardo</div></div><div><br><div><div>On Mar 17, 2010, at 5:43 AM, Ralph Castain wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">I'm going to have to eat my last message. It slipped past me that your other job was started via comm_spawn. Since both "jobs" are running under the same mpirun, there shouldn't be a problem sending a signal between them.<div><br></div><div>I don't know why this would be crashing. Are you sure it is &nbsp;crashing in signal_job? Your trace indicates it is crashing in a print statement, yet there is no print statement in signal_job. Or did you run this with plm_base_verbose set so that the verbose prints are trying to run (could be we have a bug in one of them)?</div><div><br></div><div><div><div>On Mar 16, 2010, at 6:59 PM, Leonardo Fialho wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Well, thank you anyway :)<div><br></div><div><div><div>On Mar 17, 2010, at 1:54 AM, Ralph Castain wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Yeah, that probably won't work. The current code isn't intended to cross jobs like that - I'm sure nobody ever tested it for that idea, and I'm pretty sure it won't support it.<div><br></div><div>I don't currently know any way to do what you are trying to do. We could extend the signal code to handle it, I would think...but I'm not sure how soon that might happen.</div><div><br></div><div><br><div><div>On Mar 16, 2010, at 6:47 PM, Leonardo Fialho wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Yes... but something wrong is going on... maybe the problem is that the jobid is different than the process' jobid, I don't know.<div><br></div><div>I'm trying to send a signal to other process running under a another job. The other process jump into an accept_connect to the MPI comm. So i did a code like this (I removed verification code and comments, this is just a summary for a happy execution):</div><div><br></div><div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; ">ompi_dpm.parse_port(port, &amp;hnp_uri, &amp;rml_uri, &amp;el_tag);</div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; ">orte_rml_base_parse_uris(rml_uri, &amp;el_proc, <span style="color: #cd00a3">NULL</span>);</div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; ">ompi_dpm.route_to_port(hnp_uri, &amp;el_proc);</div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; ">orte_plm.signal_job(el_proc.jobid, SIGUSR1);</div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; ">ompi_dpm.connect_accept(MPI_COMM_SELF, <span style="color: #2700dc">0</span>, port, true, el_comm);</div><div style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; font: normal normal normal 11px/normal Menlo; "><br></div></div><div>el_proc is defined as orte_process_name_t, not a pointer to this. And signal.h has been included for SIGUSR1's sake. But when the code enter in signal_job function it crashes. I'm trying to debug it just now... the crash is the following:</div><div><br></div><div><div>[Fialho-2.local:51377] receiver: looking for: radic_eventlog[0]</div><div>[Fialho-2.local:51377] receiver: found port &lt;784793600.0;tcp://192.168.1.200:54071+784793601.0;tcp://192.168.1.200:54072:300&gt;</div><div>[Fialho-2.local:51377] receiver: HNP URI &lt;784793600.0;tcp://192.168.1.200:54071&gt;, RML URI &lt;784793601.0;tcp://192.168.1.200:54072&gt;, TAG &lt;300&gt;</div><div>[Fialho-2.local:51377] receiver: sending SIGUSR1 &lt;30&gt; to RADIC Event Logger &lt;[[11975,1],0]&gt;</div><div>[Fialho-2:51377] *** Process received signal ***</div><div>[Fialho-2:51377] Signal: Segmentation fault (11)</div><div>[Fialho-2:51377] Signal code: Address not mapped (1)</div><div>[Fialho-2:51377] Failing at address: 0x0</div><div>[Fialho-2:51377] [ 0] 2 &nbsp; libSystem.B.dylib &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0x00007fff83a6eeaa _sigtramp + 26</div><div>[Fialho-2:51377] [ 1] 3 &nbsp; libSystem.B.dylib &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0x00007fff83a210b7 snprintf + 496</div><div>[Fialho-2:51377] [ 2] 4 &nbsp; mca_vprotocol_receiver.so &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0x000000010065ba0a mca_vprotocol_receiver_send + 177</div><div>[Fialho-2:51377] [ 3] 5 &nbsp; libmpi.0.dylib &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0x0000000100077d44 MPI_Send + 734</div><div>[Fialho-2:51377] [ 4] 6 &nbsp; ping &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0x0000000100000a97 main + 431</div><div>[Fialho-2:51377] [ 5] 7 &nbsp; ping &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0x00000001000008e0 start + 52</div><div>[Fialho-2:51377] [ 6] 8 &nbsp; ??? &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0x0000000000000003 0x0 + 3</div><div>[Fialho-2:51377] *** End of error message ***</div><div><br></div><div>With exception to the signal_job the code works, I have tested it forcing an accept on the other process, and avoiding the signal_job. But I want to send the signal to wake-up the other side and to be able to manage multiple connect/accept.</div><div><br></div><div>Thanks,</div><div>Leonardo</div><div><br></div><div><div>On Mar 17, 2010, at 1:33 AM, Ralph Castain wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Sure! So long as you add the include, you are okay as the ORTE layer is "below" the OMPI one.<div><br><div><div>On Mar 16, 2010, at 6:29 PM, Leonardo Fialho wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Thanks Ralph, the last question... it orte_plm.signal_job exposed/available to be called by a PML component? Yes, I have the orte/mca/plm/plm.h include line.<br><div><div><br></div><div>Leonardo</div><div><br></div><div>On Mar 16, 2010, at 11:59 PM, Ralph Castain wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">It's just the orte_process_name_t jobid field. So if you have an orte_process_name_t *pname, then it would just be<div><br></div><div>orte_plm.signal_job(pname-&gt;jobid, sig)</div><div><br></div><div><br><div><div>On Mar 16, 2010, at 3:23 PM, Leonardo Fialho wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Hum.... and to signal a job probably the function is&nbsp;<span class="Apple-style-span" style="font-family: Menlo; font-size: 11px; ">orte_plm.signal_job(jobid, signal);&nbsp;<span class="Apple-style-span" style="font-family: Helvetica; font-size: medium; ">right?</span></span><div><br></div><div><span class="Apple-style-span" style="font-family: Menlo; font-size: 11px; "><span class="Apple-style-span" style="font-family: Helvetica; font-size: medium; "></span></span>Now my dummy question is how to obtain the jobid part from an orte_proc_name_t variable? Is there any magical function in the names_fns.h?</div><div><br></div><div>Thanks,<br><div><div>Leonardo</div><div><br></div><div>On Mar 16, 2010, at 10:12 PM, Ralph Castain wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div>Afraid not - you can signal a job, but not a specific process. We used to have such an API, but nobody ever used it. Easy to restore if someone has a need.<br><br>On Mar 16, 2010, at 2:45 PM, Leonardo Fialho wrote:<br><br><blockquote type="cite">Hi,<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">Is there any function in Open MPI's frameworks to send a signal to other ORTE proc?<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">For example, the ORTE process [[1234,1],1] want to &nbsp;send a signal to process [[1234,1,4] locate in other node. I'm looking for this kind of functions but I just found functions to send signal to all procs in a node.<br></blockquote><blockquote type="cite"><br></blockquote><blockquote type="cite">Thanks,<br></blockquote><blockquote type="cite">Leonardo<br></blockquote><blockquote type="cite">_______________________________________________<br></blockquote><blockquote type="cite">devel mailing list<br></blockquote><blockquote type="cite"><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br></blockquote><blockquote type="cite"><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></blockquote><br><br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br></div></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></div>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>http://www.open-mpi.org/mailman/listinfo.cgi/devel</blockquote></div><br></div></body></html>
