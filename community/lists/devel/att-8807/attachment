<html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Are you using ompi-server for pub/sub, or just letting it default to mpirun?<div><br></div><div>You might want to output the return value from lookup_name and publish_name to see if they match. If they are different, then you will definitely hang.</div><div><br></div><div><br><div><div>On Dec 21, 2010, at 6:41 AM, Suraj Prabhakaran wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite">
<div bgcolor="#ffffff" text="#000000">
    <div class="moz-text-html" lang="x-western">Hello,<br>
      <br>
      This is basically a repost of my previous mail regarding problems
      with connect/accept and disconnect (*<b>this is not related to
        spawning, parent/child</b>*). <br>
      I *sometimes* find processes blocking indefinitely at
      Connect/Accept calls or at Disconnect calls. I have an example
      below.<br>
      <br>
      Process A<br>
      {<br>
      &nbsp;&nbsp;&nbsp; MPI_Open_port(...);<br>
      &nbsp;&nbsp;&nbsp; MPI_Publish_name(...);<br>
      &nbsp;&nbsp;&nbsp; MPI_Comm_accept(... &amp;b_comm);&nbsp; // -----&gt; (1)<br>
      &nbsp;&nbsp;&nbsp; // Do something1<br>
      &nbsp;&nbsp;&nbsp; MPI_Comm_disconnect(&amp;b_comm);&nbsp; // ------&gt; (2)<br>
      &nbsp;&nbsp;&nbsp; // Do something2<br>
      <br>
      }<br>
      <br>
      Process B<br>
      {<br>
      &nbsp;&nbsp;&nbsp; MPI_Lookup_name(...);<br>
      &nbsp;&nbsp;&nbsp; MPI_Comm_connect(... &amp;a_comm); // -----&gt; (1)<br>
      &nbsp;&nbsp;&nbsp; // Do something1<br>
      &nbsp;&nbsp;&nbsp; MPI_Comm_disconnect(&amp;a_comm); // ------&gt; (2)<br>
      &nbsp;&nbsp;&nbsp; // Do something2<br>
      }<br>
      <br>
      In the above scenario, in a perfect case where A reaches (1)
      without any problems, *<b>sometimes</b>* B blocks at its (1)
      indefinitely. All arguments passed to both the functions are
      perfect.<br>
      Again, *<b>sometimes</b>* one of them block infinitely at (2)
      while the other goes on to do the something2. This could only be a
      problem at the application level only if the one that blocks
      indefinitely is always the same but it is not so. Sometimes A
      blocks and B is busy doing something2 or A is busy doing its
      something2 while B blocks. <br>
      <br>
      Is this a known issue? or am I the only person experiencing this
      and is clean for others who frequently use
      connect/accept/disconnect calls?<br>
      <br>
      Thanks,<br>
      Suraj<br>
    </div>
  </div>

_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a></blockquote></div><br></div></body></html>
