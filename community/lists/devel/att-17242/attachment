Ralph,<div><br></div><div>right now, I am using ssh</div><div><br></div><div>one way to go is to extend the machine file syntax</div><div>instead of</div><div>user@host</div><div>we could have</div><div>user@host:port//prefix<br><br>an other way would be to do this on the command line :</div><div>mpirun --host host1 --prefix prefix1 a.out : -- host host2 --prefix prefix2 b.out</div><div><br></div><div>an other really nice feature would be to have a suffix per arch, intel MPI is doing this for mic :</div><div>mpirun --host cpu,mic a.out </div><div>a.out runs on the Xeon and a.out.mic runs on the Xeon phi</div><div><br></div>for the time being, I use a very cheap hack :<div>replace orted with a shell scripts that exec the right binary,</div><div>and replace a.out with a wrapper that</div><div>1. sets LD_LIBRARY_PATH according to the right arch</div><div>since open MPI sets this for the arch on which mpirun is invoked, which might not be the expected one</div><div>2. invoke the right binary for this arch</div><div><br></div><div>an other really nice feature would be to have mpirun invoke this wrapper &quot;under the hood&quot; :</div><div><br></div><div>mpirun --wrapper wrapper.sh a.out</div><div>would invoke</div><div>wrapper.sh a.out</div><div>on all the nodes, and in this script, I can manually execs a.out from the right path (e.g. one path per arch)</div><div><br></div>an alternative to extending the machine file syntax would be to invoke an other wrapper for orted :<div>mpirun --orted-wrapper ortedwrapper.sh --wrapper binwrapper.sh a.out</div><div>that would allow the end user to &quot;implement&quot; self discovery</div><div><br></div><div>cheers,</div><div><br></div><div>Gilles </div><div><br><div><div>On Friday, April 17, 2015, Ralph Castain &lt;<a href="mailto:rhc@open-mpi.org">rhc@open-mpi.org</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir="ltr">Hi Gilles<div><br></div><div>What launch environment? We don&#39;t currently have a simple way of doing this outside of ensuring the paths on those nodes point to the correct default place (i.e., you can&#39;t use prefix). However, it might be possible to add such support if we knew which nodes were what type. Unfortunately, we would need to know that prior to launching the daemons, so we can&#39;t self-discover it.</div><div><br></div></div><div class="gmail_extra"><br><div class="gmail_quote">On Fri, Apr 17, 2015 at 2:32 AM, Gilles Gouaillardet <span dir="ltr">&lt;<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;gilles@rist.or.jp&#39;);" target="_blank">gilles@rist.or.jp</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Folks,<br>
<br>
i am trying to run heterogeneous Open MPI.<br>
all my nodes use NFS everything is shared, so i need to manually specify<br>
x86_64 nodes must use /.../ompi-x86_64 and sparcv9 nodes must use /.../ompi-sparcv9<br>
<br>
is there a simple way to achieve this ?<br>
<br>
Cheers,<br>
<br>
Gilles<br>
_______________________________________________<br>
devel mailing list<br>
<a href="javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;devel@open-mpi.org&#39;);" target="_blank">devel@open-mpi.org</a><br>
Subscription: <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
Link to this post: <a href="http://www.open-mpi.org/community/lists/devel/2015/04/17237.php" target="_blank">http://www.open-mpi.org/community/lists/devel/2015/04/17237.php</a><br>
</blockquote></div><br></div>
</blockquote></div></div></div>

