<div dir="ltr">Is this Python 2.x or 3.x? I ask because they are not 100% compatible due to changes in the language syntax. Meaning not all 2.x compilant Python programs work with a 3.x interpreter. IIRC there is a way to write a 2.x compliant Python program so that it is also 3.x compliant, but my Python knowledge does not go deep enough to tell you exactly how to do that.<div>
<br></div><div>If we are going to require Python in the build path, we should be specific on this point and check in the configure script.<div><br></div><div style>-- Josh </div></div></div><div class="gmail_extra"><br><br>
<div class="gmail_quote">On Wed, May 22, 2013 at 11:03 AM, Jeff Squyres (jsquyres) <span dir="ltr">&lt;<a href="mailto:jsquyres@cisco.com" target="_blank">jsquyres@cisco.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
<div class="im">On May 22, 2013, at 10:00 AM, &quot;Barrett, Brian W&quot; &lt;<a href="mailto:bwbarre@sandia.gov">bwbarre@sandia.gov</a>&gt; wrote:<br>
<br>
&gt;&gt; Hmmm...the issue is that perl usually is included in the distro, but<br>
&gt;&gt; python often is not - you have to add that module.<br>
<br>
</div>This seems to be a key argument, but I&#39;m not sure it&#39;s still true.<br>
<br>
I&#39;m a RHEL guy; I see that RHEL has installed python by default since RHEL4 (i.e., many, many years ago).  Are there other Linux distros that really don&#39;t install Python by default?  This would surprise me.<br>
<br>
I see python on my OS X Lion, and apparently in every OS X since (at least) Leopard (Tony at Absoft checked for me).<br>
<br>
I don&#39;t know about Python+Solaris, but I don&#39;t know if we (OMPI) care, either.<br>
<div class="im"><br>
&gt;&gt; IIRC, that was the<br>
&gt;&gt; rationale for allowing perl. Others (e.g., me) had played with using<br>
&gt;&gt; python before, but switched to perl (a) for the prior rationale, and (b)<br>
&gt;&gt; to avoid proliferating language requirements.<br>
&gt;&gt;<br>
&gt;&gt; I happen to like python myself, but believe there is some value in<br>
&gt;&gt; avoiding adding yet another language to our list of requirements.<br>
&gt;<br>
&gt; I (strongly) agree with Ralph.  We made a decision (way back in the 1.0<br>
&gt; timeframe) that we would use perl for a scripting language when absolutely<br>
&gt; necessary.  And even at that, I believe we only require Perl for developer<br>
&gt; builds or distribution builds where an assembly file doesn&#39;t already exist<br>
&gt; for that compiler.<br>
<br>
</div>I believe that that is still true -- that&#39;s one of the reasons I sent around this RFC (because introducing python at end-user &quot;make&quot; time is a Big Change).<br>
<div class="im"><br>
&gt; I have no problem with the change to generated bindings from a single<br>
&gt; configuration file/set of files, a bit of a problem with that happening at<br>
&gt; at configure / build time on a release distribution (we don&#39;t require<br>
&gt; anything other than /bin/sh at configure / build time right now),<br>
<br>
</div>FWIW: the current Bourne shell scripts that generate the use mpi bindings are pretty... horrible.  We have no intention of continuing to use Bourne shell scripts for future code generation.<br>
<br>
A little more rationale for scripting/generating at &quot;make&quot; time in general: the problem is that Fortran compiler support is literally all over the map; it&#39;s really not feasible to maintain a single .F90 file with preprocessor macros to cover all the differences, because some differences require different coding approaches (e.g., inline in a module vs. separate/individual .F90 files -- the contents of these two are quite different).<br>

<br>
That being said, we *could* pre-generate all possibilities and ship them all in a tarball (i.e., only invoke a generator script at developer/make dist time).  Note that that would lead to a bit more complexity, and could lead to even more than 7 copies in the tarball (7 is pretty much the minimum -- and that&#39;s with very heavy use of preprocessor macros).<br>

<br>
Hence, in a perfect world, we could generate at &quot;make&quot; time only exactly what the user&#39;s Fortran compiler needed.<br>
<div class="im"><br>
&gt; and a<br>
&gt; strong problem with using Python instead of the Perl that we&#39;ve previously<br>
&gt; agreed we&#39;d use when all other options are unavoidable.<br>
<br>
</div>I&#39;m asking because:<br>
<br>
- the contributor (Craig) has been around for years; he has a proven track record of maintaining what he has contributed<br>
- the contributor wants to fundamentally advance our Fortran support<br>
- the contributor has a strong preference for Python<br>
- from my anecdotal evidence, Python is pretty ubiquitous these days (is that wrong?)<br>
<div class="im HOEnZb"><br>
--<br>
Jeff Squyres<br>
<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a><br>
For corporate legal information go to: <a href="http://www.cisco.com/web/about/doing_business/legal/cri/" target="_blank">http://www.cisco.com/web/about/doing_business/legal/cri/</a><br>
<br>
<br>
</div><div class="HOEnZb"><div class="h5">_______________________________________________<br>
devel mailing list<br>
<a href="mailto:devel@open-mpi.org">devel@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br></div><br clear="all"><div><br></div>-- <br>Joshua Hursey<br>Assistant Professor of Computer Science<br>University of Wisconsin-La Crosse<br><a href="http://cs.uwlax.edu/~jjhursey" target="_blank">http://cs.uwlax.edu/~jjhursey</a>

