<div dir="ltr"><div>George,<br></div>I think the strings in the two opal_output() calls should also<br>be updated from &quot;open&quot; to &quot;init&quot;:  &quot;<span class="">mca_pml_ob1_component_init: ...&quot;</span><div class="gmail_extra">
<br><br><div class="gmail_quote">On Tue, May 20, 2014 at 3:34 PM,  <span dir="ltr">&lt;<a href="mailto:svn-commit-mailer@open-mpi.org" target="_blank">svn-commit-mailer@open-mpi.org</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
Author: bosilca (George Bosilca)<br>
Date: 2014-05-20 15:34:18 EDT (Tue, 20 May 2014)<br>
New Revision: 31838<br>
URL: <a href="https://svn.open-mpi.org/trac/ompi/changeset/31838" target="_blank">https://svn.open-mpi.org/trac/ompi/changeset/31838</a><br>
<br>
Log:<br>
Move the allocator initialization from open to init. This clean<br>
a memory leak. Similar changes shuld be applied to all the<br>
other PML that are copies of OB1. This patch is related to<br>
#4653.<br>
<br>
Text files modified:<br>
   trunk/ompi/mca/pml/ob1/pml_ob1_component.c |    32 ++++++++++++++++----------------<br>
   1 files changed, 16 insertions(+), 16 deletions(-)<br>
<br>
Modified: trunk/ompi/mca/pml/ob1/pml_ob1_component.c<br>
==============================================================================<br>
--- trunk/ompi/mca/pml/ob1/pml_ob1_component.c  Tue May 20 12:32:41 2014        (r31837)<br>
+++ trunk/ompi/mca/pml/ob1/pml_ob1_component.c  2014-05-20 15:34:18 EDT (Tue, 20 May 2014)      (r31838)<br>
@@ -217,25 +217,9 @@<br>
<br>
 static int mca_pml_ob1_component_open(void)<br>
 {<br>
-    mca_allocator_base_component_t* allocator_component;<br>
-<br>
     mca_pml_ob1_output = opal_output_open(NULL);<br>
     opal_output_set_verbosity(mca_pml_ob1_output, mca_pml_ob1_verbose);<br>
<br>
-    allocator_component = mca_allocator_component_lookup( mca_pml_ob1.allocator_name );<br>
-    if(NULL == allocator_component) {<br>
-        opal_output(0, &quot;mca_pml_ob1_component_open: can&#39;t find allocator: %s\n&quot;, mca_pml_ob1.allocator_name);<br>
-        return OMPI_ERROR;<br>
-    }<br>
-<br>
-    mca_pml_ob1.allocator = allocator_component-&gt;allocator_init(true,<br>
-                                                                mca_pml_ob1_seg_alloc,<br>
-                                                                mca_pml_ob1_seg_free, NULL);<br>
-    if(NULL == mca_pml_ob1.allocator) {<br>
-        opal_output(0, &quot;mca_pml_ob1_component_open: unable to initialize allocator\n&quot;);<br>
-        return OMPI_ERROR;<br>
-    }<br>
-<br>
     mca_pml_ob1.enabled = false;<br>
     return mca_base_framework_open(&amp;ompi_bml_base_framework, 0);<br>
 }<br>
@@ -259,6 +243,8 @@<br>
                             bool enable_progress_threads,<br>
                             bool enable_mpi_threads )<br>
 {<br>
+    mca_allocator_base_component_t* allocator_component;<br>
+<br>
     opal_output_verbose( 10, mca_pml_ob1_output,<br>
                          &quot;in ob1, my priority is %d\n&quot;, mca_pml_ob1.priority);<br>
<br>
@@ -268,6 +254,20 @@<br>
     }<br>
     *priority = mca_pml_ob1.priority;<br>
<br>
+    allocator_component = mca_allocator_component_lookup( mca_pml_ob1.allocator_name );<br>
+    if(NULL == allocator_component) {<br>
+        opal_output(0, &quot;mca_pml_ob1_component_open: can&#39;t find allocator: %s\n&quot;, mca_pml_ob1.allocator_name);<br>
+        return NULL;<br>
+    }<br>
+<br>
+    mca_pml_ob1.allocator = allocator_component-&gt;allocator_init(true,<br>
+                                                                mca_pml_ob1_seg_alloc,<br>
+                                                                mca_pml_ob1_seg_free, NULL);<br>
+    if(NULL == mca_pml_ob1.allocator) {<br>
+        opal_output(0, &quot;mca_pml_ob1_component_open: unable to initialize allocator\n&quot;);<br>
+        return NULL;<br>
+    }<br>
+<br>
     if(OMPI_SUCCESS != mca_bml_base_init( enable_progress_threads,<br>
                                           enable_mpi_threads)) {<br>
         return NULL;<br>
_______________________________________________<br>
svn-full mailing list<br>
<a href="mailto:svn-full@open-mpi.org">svn-full@open-mpi.org</a><br>
<a href="http://www.open-mpi.org/mailman/listinfo.cgi/svn-full" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/svn-full</a><br>
</blockquote></div><br><br clear="all"><br>-- <br>Tim Mattox, Ph.D. - <a href="mailto:tmattox@gmail.com" target="_blank">tmattox@gmail.com</a>
</div></div>

