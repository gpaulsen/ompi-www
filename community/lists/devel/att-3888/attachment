<div>Hi,</div>
<div>I tried r 18423 with rank_file component and got seqfault</div>
<div>( I increase priority of the component if rmaps_rank_file_path exist)</div>
<div>&nbsp;</div>
<div>&nbsp;</div>
<div>/home/USERS/lenny/OMPI_ORTE_SMD/bin/mpirun -np 4 -hostfile hostfile_ompi -mca rmaps_rank_file_path rankfile -mca paffinity_base_verbose 5 ./mpi_p_SMD -t bw -output 1 -order 1<br>[witch1:25456] mca:base:select: Querying component [linux]<br>
[witch1:25456] mca:base:select: Query of component [linux] set priority to 10<br>[witch1:25456] mca:base:select: Selected component [linux]<br>[witch1:25456] *** Process received signal ***<br>[witch1:25456] Signal: Segmentation fault (11)<br>
[witch1:25456] Signal code: Invalid permissions (2)<br>[witch1:25456] Failing at address: 0x2b2875530030<br>[witch1:25456] [ 0] /lib64/libpthread.so.0 [0x2b28759dfc10]<br>[witch1:25456] [ 1] /home/USERS/lenny/OMPI_ORTE_SMD/lib/libopen-pal.so.0 [0x2b28753e2bb6]<br>
[witch1:25456] [ 2] /home/USERS/lenny/OMPI_ORTE_SMD/lib/libopen-pal.so.0 [0x2b28753e23b6]<br>[witch1:25456] [ 3] /home/USERS/lenny/OMPI_ORTE_SMD/lib/libopen-pal.so.0 [0x2b28753e22fd]<br>[witch1:25456] [ 4] /home/USERS/lenny/OMPI_ORTE_SMD/lib/libopen-rte.so.0(orte_util_encode_pidmap+0x2f4) [0x2b287527f412]<br>
[witch1:25456] [ 5] /home/USERS/lenny/OMPI_ORTE_SMD/lib/libopen-rte.so.0(orte_odls_base_default_get_add_procs_data+0x989) [0x2b28752934f5]<br>[witch1:25456] [ 6] /home/USERS/lenny/OMPI_ORTE_SMD/lib/libopen-rte.so.0(orte_plm_base_launch_apps+0x1a3) [0x2b287529e60b]<br>
[witch1:25456] [ 7] /home/USERS/lenny/OMPI_ORTE_SMD/lib/openmpi/mca_plm_rsh.so [0x2b287612f788]<br>[witch1:25456] [ 8] /home/USERS/lenny/OMPI_ORTE_SMD/bin/mpirun [0x4032bf]<br>[witch1:25456] [ 9] /home/USERS/lenny/OMPI_ORTE_SMD/bin/mpirun [0x402b53]<br>
[witch1:25456] [10] /lib64/libc.so.6(__libc_start_main+0xf4) [0x2b2875b06154]<br>[witch1:25456] [11] /home/USERS/lenny/OMPI_ORTE_SMD/bin/mpirun [0x402aa9]<br>[witch1:25456] *** End of error message ***<br>Segmentation fault<br>
</div>
<div>&nbsp;</div>
<div><br><br>&nbsp;</div>
<div class="gmail_quote">On Tue, May 6, 2008 at 9:09 PM, Josh Hursey &lt;<a href="mailto:jjhursey@open-mpi.org" target="_blank">jjhursey@open-mpi.org</a>&gt; wrote:<br>
<blockquote class="gmail_quote" style="PADDING-LEFT: 1ex; MARGIN: 0px 0px 0px 0.8ex; BORDER-LEFT: #ccc 1px solid">This has been committed in r18381<br><br>Please let me know if you have any problems with this commit.<br>
<br>Cheers,<br><font color="#888888">Josh<br></font>
<div>
<div></div>
<div><br>On May 5, 2008, at 10:41 AM, Josh Hursey wrote:<br><br>&gt; Awesome.<br>&gt;<br>&gt; The branch is updated to the latest trunk head. I encourage folks to<br>&gt; check out this repository and make sure that it builds on their<br>
&gt; system. A normal build of the branch should be enough to find out if<br>&gt; there are any cut-n-paste problems (though I tried to be careful,<br>&gt; mistakes do happen).<br>&gt;<br>&gt; I haven&#39;t heard any problems so this is looking like it will come in<br>
&gt; tomorrow after the teleconf. I&#39;ll ask again there to see if there are<br>&gt; any voices of concern.<br>&gt;<br>&gt; Cheers,<br>&gt; Josh<br>&gt;<br>&gt; On May 5, 2008, at 9:58 AM, Jeff Squyres wrote:<br>&gt;<br>
&gt;&gt; This all sounds good to me!<br>&gt;&gt;<br>&gt;&gt; On Apr 29, 2008, at 6:35 PM, Josh Hursey wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; What: &nbsp;Add mca_base_select() and adjust frameworks &amp; components to<br>&gt;&gt;&gt; use<br>
&gt;&gt;&gt; it.<br>&gt;&gt;&gt; Why: &nbsp; Consolidation of code for general goodness.<br>&gt;&gt;&gt; Where: <a href="https://svn.open-mpi.org/svn/ompi/tmp-public/jjh-mca-play" target="_blank">https://svn.open-mpi.org/svn/ompi/tmp-public/jjh-mca-play</a><br>
&gt;&gt;&gt; When: &nbsp;Code ready now. Documentation ready soon.<br>&gt;&gt;&gt; Timeout: May 6, 2008 (After teleconf) [1 week]<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Discussion:<br>&gt;&gt;&gt; -----------<br>&gt;&gt;&gt; For a number of years a few developers have been talking about<br>
&gt;&gt;&gt; creating a MCA base component selection function. For various<br>&gt;&gt;&gt; reasons<br>&gt;&gt;&gt; this was never implemented. Recently I decided to give it a try.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; A base select function will allow Open MPI to provide completely<br>
&gt;&gt;&gt; consistent selection behavior for many of its frameworks (18 of 31<br>&gt;&gt;&gt; to<br>&gt;&gt;&gt; be exact at the moment). The primary goal of this work is to<br>&gt;&gt;&gt; improving<br>&gt;&gt;&gt; code maintainability through code reuse. Other benefits also result<br>
&gt;&gt;&gt; such as a slightly smaller memory footprint.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; The mca_base_select() function represented the most commonly used<br>&gt;&gt;&gt; logic for component selection: Select the one component with the<br>
&gt;&gt;&gt; highest priority and close all of the not selected components. This<br>&gt;&gt;&gt; function can be found at the path below in the branch:<br>&gt;&gt;&gt; opal/mca/base/mca_base_components_select.c<br>&gt;&gt;&gt;<br>
&gt;&gt;&gt; To support this I had to formalize a query() function in the<br>&gt;&gt;&gt; mca_base_component_t of the form:<br>&gt;&gt;&gt; int mca_base_query_component_fn(mca_base_module_t **module, int<br>&gt;&gt;&gt; *priority);<br>
&gt;&gt;&gt;<br>&gt;&gt;&gt; This function is specified after the open and close component<br>&gt;&gt;&gt; functions in this structure as to allow compatibility with<br>&gt;&gt;&gt; frameworks<br>&gt;&gt;&gt; that do not use the base selection logic. Frameworks that do *not*<br>
&gt;&gt;&gt; use<br>&gt;&gt;&gt; this function are *not* effected by this commit. However, every<br>&gt;&gt;&gt; component in the frameworks that use the mca_base_select function<br>&gt;&gt;&gt; must<br>&gt;&gt;&gt; adjust their component query function to fit that specified above.<br>
&gt;&gt;&gt;<br>&gt;&gt;&gt; 18 frameworks in Open MPI have been changed. I have updated all of<br>&gt;&gt;&gt; the<br>&gt;&gt;&gt; components in the 18 frameworks available in the trunk on my branch.<br>&gt;&gt;&gt; The effected frameworks are:<br>
&gt;&gt;&gt; - OPAL Carto<br>&gt;&gt;&gt; - OPAL crs<br>&gt;&gt;&gt; - OPAL maffinity<br>&gt;&gt;&gt; - OPAL memchecker<br>&gt;&gt;&gt; - OPAL paffinity<br>&gt;&gt;&gt; - ORTE errmgr<br>&gt;&gt;&gt; - ORTE ess<br>&gt;&gt;&gt; - ORTE Filem<br>
&gt;&gt;&gt; - ORTE grpcomm<br>&gt;&gt;&gt; - ORTE odls<br>&gt;&gt;&gt; - ORTE pml<br>&gt;&gt;&gt; - ORTE ras<br>&gt;&gt;&gt; - ORTE rmaps<br>&gt;&gt;&gt; - ORTE routed<br>&gt;&gt;&gt; - ORTE snapc<br>&gt;&gt;&gt; - OMPI crcp<br>
&gt;&gt;&gt; - OMPI dpm<br>&gt;&gt;&gt; - OMPI pubsub<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; There was a question of the memory footprint change as a result of<br>&gt;&gt;&gt; this commit. I used &#39;pmap&#39; to determine process memory footprint<br>
&gt;&gt;&gt; of a<br>&gt;&gt;&gt; hello world MPI program. Static and Shared build numbers are below<br>&gt;&gt;&gt; along with variations on launching locally and to a single node<br>&gt;&gt;&gt; allocated by SLURM. All of this was on Indiana University&#39;s Odin<br>
&gt;&gt;&gt; machine. We compare against the trunk (r18276) representing the last<br>&gt;&gt;&gt; SVN sync point of the branch.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; &nbsp;Process(shared)| Trunk &nbsp; &nbsp;| Branch &nbsp;| Diff (Improvement)<br>
&gt;&gt;&gt; &nbsp;---------------+----------+---------+-------<br>&gt;&gt;&gt; &nbsp;mpirun (orted) | &nbsp; 39976K | &nbsp;36828K | 3148K<br>&gt;&gt;&gt; &nbsp;hello (0) &nbsp; &nbsp; &nbsp;| &nbsp;229288K | 229268K | &nbsp; 20K<br>&gt;&gt;&gt; &nbsp;hello (1) &nbsp; &nbsp; &nbsp;| &nbsp;229288K | 229268K | &nbsp; 20K<br>
&gt;&gt;&gt; &nbsp;---------------+----------+---------+-------<br>&gt;&gt;&gt; &nbsp;mpirun &nbsp; &nbsp; &nbsp; &nbsp; | &nbsp; 40032K | &nbsp;37924K | 2108K<br>&gt;&gt;&gt; &nbsp;orted &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| &nbsp; 34720K | &nbsp;34660K | &nbsp; 60K<br>&gt;&gt;&gt; &nbsp;hello (0) &nbsp; &nbsp; &nbsp;| &nbsp;228404K | 228384K | &nbsp; 20K<br>
&gt;&gt;&gt; &nbsp;hello (1) &nbsp; &nbsp; &nbsp;| &nbsp;228404K | 228384K | &nbsp; 20K<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; &nbsp;Process(static)| Trunk &nbsp; &nbsp;| Branch &nbsp;| Diff (Improvement)<br>&gt;&gt;&gt; &nbsp;---------------+----------+---------+-------<br>&gt;&gt;&gt; &nbsp;mpirun (orted) | &nbsp; 21384K | &nbsp;21372K | &nbsp;12K<br>
&gt;&gt;&gt; &nbsp;hello (0) &nbsp; &nbsp; &nbsp;| &nbsp;194000K | 193980K | &nbsp;20K<br>&gt;&gt;&gt; &nbsp;hello (1) &nbsp; &nbsp; &nbsp;| &nbsp;194000K | 193980K | &nbsp;20K<br>&gt;&gt;&gt; &nbsp;---------------+----------+---------+-------<br>&gt;&gt;&gt; &nbsp;mpirun &nbsp; &nbsp; &nbsp; &nbsp; | &nbsp; 21384K | &nbsp;21372K | &nbsp;12K<br>
&gt;&gt;&gt; &nbsp;orted &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| &nbsp; 21208K | &nbsp;21196K | &nbsp;12K<br>&gt;&gt;&gt; &nbsp;hello (0) &nbsp; &nbsp; &nbsp;| &nbsp;193116K | 193096K | &nbsp;20K<br>&gt;&gt;&gt; &nbsp;hello (1) &nbsp; &nbsp; &nbsp;| &nbsp;193116K | 193096K | &nbsp;20K<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; As you can see there are some small memory footprint improvements on<br>
&gt;&gt;&gt; my branch that result from this work. The size of the Open MPI<br>&gt;&gt;&gt; project<br>&gt;&gt;&gt; shrinks a bit as well. This commit cuts between 3,500 and 2,000<br>&gt;&gt;&gt; lines<br>&gt;&gt;&gt; of code (depending on how you count) so about a ~1% code shrink.<br>
&gt;&gt;&gt;<br>&gt;&gt;&gt; The branch is stable in all of the testing I have done, but there<br>&gt;&gt;&gt; are<br>&gt;&gt;&gt; some platforms on which I cannot test. So please give this branch a<br>&gt;&gt;&gt; try and let me know if you find any problems.<br>
&gt;&gt;&gt;<br>&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt; Josh<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; devel mailing list<br>&gt;&gt;&gt; <a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>
&gt;&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; Jeff Squyres<br>&gt;&gt; Cisco Systems<br>
&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; devel mailing list<br>&gt;&gt; <a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>&gt;&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
&gt;<br>&gt; _______________________________________________<br>&gt; devel mailing list<br>&gt; <a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br>&gt; <a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
<br>_______________________________________________<br>devel mailing list<br><a href="mailto:devel@open-mpi.org" target="_blank">devel@open-mpi.org</a><br><a href="http://www.open-mpi.org/mailman/listinfo.cgi/devel" target="_blank">http://www.open-mpi.org/mailman/listinfo.cgi/devel</a><br>
</div></div></blockquote></div><br>

