It&#39;s not just copying the value from one to the other.<div><br></div><div>The value is initialized on the first line. The proc_name is passed into the function where the jobid and vpid are used (not the epoch). The function returns a new (the correct) value for the epoch based on the passed in jobid and vpid which is assigned to the process name.</div>

<div><br></div><div>This is the same thing as initializing the value to NULL. We do that all the time to avoid compiler warnings. I just can&#39;t do that here because this isn&#39;t a pointer. If it would make the code look better I can move the first assignment to the top of the function where the other initializations are.</div>

<div><br><div class="gmail_quote">On Mon, Aug 8, 2011 at 11:41 AM, Barrett, Brian W <span dir="ltr">&lt;<a href="mailto:bwbarre@sandia.gov">bwbarre@sandia.gov</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">

<div class="im">On 8/8/11 9:34 AM, &quot;Jeff Squyres&quot; &lt;<a href="mailto:jsquyres@cisco.com">jsquyres@cisco.com</a>&gt; wrote:<br>
<br>
&gt;On Aug 8, 2011, at 11:30 AM, Wesley Bland wrote:<br>
&gt;<br>
&gt;&gt; The reason is because valgrind was complaining about uninitialized<br>
&gt;&gt;values that were passed into proc_get_epoch. I saw the same warnings<br>
&gt;&gt;from valgrind when I ran it. I added the code to initialize the values<br>
&gt;&gt;to what really should be the default value and the warnings went away.<br>
&gt;&gt;Since the process_name_t struct isn&#39;t an object, it doesn&#39;t have an<br>
&gt;&gt;initialization function like so many of the other objects in the code.<br>
&gt;&gt;This is what we have.<br>
&gt;<br>
&gt;Ah, I see -- you are passing peer_name into proc_get_epoch().  I missed<br>
&gt;that.<br>
&gt;<br>
&gt;Thanks!<br>
&gt;<br>
&gt;&gt;     peer_name.jobid  = ORTE_PROC_MY_NAME-&gt;jobid;<br>
&gt;&gt;     peer_name.vpid   = peer_idx;<br>
&gt;&gt; +    peer_name.epoch  = ORTE_EPOCH_INVALID;<br>
&gt;&gt;     peer_name.epoch  = orte_ess.proc_get_epoch(&amp;peer_name);<br>
<br>
</div>I&#39;m still not convinced this is a rational coding style.  It seems to me<br>
that if you&#39;re just going to copy the epoch from peer_name to peer_name,<br>
just assign the epoch to INVALID and be done with it.  There&#39;s no need for<br>
both the assignment added in this patch and the line after it.<br>
<br>
Now, normally I&#39;d say that this is fixing a bug and having to fix other<br>
people&#39;s bad code shouldn&#39;t be your problem.  But since you wrote both<br>
lines, fixing it to make sense seems reasonable to me ;).<br>
<br>
Brian<br>
<font color="#888888"><br>
--<br>
  Brian W. Barrett<br>
  Dept. 1423: Scalable System Software<br>
  Sandia National Laboratories<br>
<br>
<br>
<br>
<br>
<br>
</font></blockquote></div><br></div>

